%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.3 841.9 0 1 19 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /Helvetica FMFONTDEFINE
6 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "i" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
113.4 694.5 544.26 739.85 R
7 X
0 0 0 1 0 0 0 K
V
0 18 Q
0 X
(Study of P) 113.4 699.54 T
(erf) 193.05 699.54 T
(ormance of TDF-Based Thr) 214.57 699.54 T
(eaded Systems) 427.73 699.54 T
255.13 433.71 544.26 473.39 R
7 X
V
1 10 Q
0 X
(The status of this document is \322W) 255.13 466.73 T
(ORKING\323 if signed only by its) 389.89 466.73 T
(author\050s\051; it is \322ISSUED\323 if signed by the W) 255.13 454.73 T
(orkpac) 433.65 454.73 T
(ka) 461.22 454.73 T
(g) 470.56 454.73 T
(e Mana) 475.46 454.73 T
(g) 505.63 454.73 T
(er; it) 510.53 454.73 T
(is \322DELIVERED\323 if signed by the Pr) 255.13 442.73 T
(oject Dir) 404.68 442.73 T
(ector) 440.14 442.73 T
(.) 459.58 442.73 T
255.13 615.12 544.26 657.65 R
7 X
V
2 12 Q
0 X
(T) 255.13 649.65 T
(on) 261.5 649.65 T
(y Mann, Rod Mo) 273.32 649.65 T
(yse,) 355.87 649.65 T
(Simon Green, Robert Mathe) 255.13 635.65 T
(ws) 390.81 635.65 T
(Harlequin Ltd.) 255.13 621.65 T
(________________________) 396.86 621.65 T
255.13 547.09 544.26 586.78 R
7 X
V
0 X
(Peter Edw) 255.13 578.78 T
(ards) 304.66 578.78 T
(________________________) 396.86 578.78 T
(DRA) 255.13 564.78 T
255.13 501.74 544.26 530.09 R
7 X
V
0 X
(Gianluigi Castelli) 255.13 522.09 T
(________________________) 396.86 522.09 T
(Project Director) 255.13 508.09 T
113.4 629.3 226.78 657.65 R
7 X
V
0 F
0 X
(Written by:) 113.4 649.65 T
113.4 558.43 226.78 586.78 R
7 X
V
0 X
(Issued by:) 113.4 578.78 T
113.4 501.74 226.78 530.09 R
7 X
V
0 X
(Deli) 113.4 522.09 T
(v) 133.94 522.09 T
(er) 139.82 522.09 T
(ed by:) 150.26 522.09 T
113.4 388.36 226.78 416.7 R
7 X
V
0 X
-0.07 (Pr) 113.4 408.7 P
-0.07 (oject deli) 125.84 408.7 P
-0.07 (v) 171.97 408.7 P
-0.07 (erable id:) 177.85 408.7 P
255.13 388.36 544.26 416.7 R
7 X
V
2 F
0 X
(TR5.7.2-01) 255.13 408.7 T
113.4 331.66 226.78 360.01 R
7 X
V
0 F
0 X
(Document code:) 113.4 352.01 T
113.4 274.97 226.78 303.32 R
7 X
V
0 X
(Date of \336rst issue:) 113.4 295.32 T
(Date of last issue:) 113.4 281.32 T
113.4 218.28 226.78 246.62 R
7 X
V
0 X
(A) 113.4 238.62 T
(v) 120.86 238.62 T
(ailability:) 126.74 238.62 T
255.13 331.66 544.26 360.01 R
7 X
V
2 F
0 X
(Harlequin GLUE5.7.2 - 01) 255.13 352.01 T
255.13 274.97 544.26 303.32 R
7 X
V
0 X
(1995-09-01) 255.13 295.32 T
(1995-09-01) 255.13 281.32 T
255.13 218.28 544.26 246.62 R
7 X
V
0 X
(Con\336dential) 255.13 238.62 T
255.13 155.91 544.26 189.93 R
7 X
V
1 10 Q
0 X
-0.12 (The contents of this document ar) 255.13 183.26 P
-0.12 (e con\336dential and subject to copyrights) 384.99 183.26 P
(pr) 255.13 171.26 T
(otection. Any infring) 263.57 171.26 T
(ement will be pr) 345.97 171.26 T
(osecuted by law) 410.24 171.26 T
(.) 473.38 171.26 T
198.43 59.54 544.26 133.24 R
7 X
V
1 0 1 0 0 1 0 K
0 93 Q
0 X
1 0 1 0 0 1 0 K
(omi/glue) 198.43 71.24 T
0 0 0 1 0 0 0 K
5.68 19.85 102.06 813.55 R
3 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
113.4 751.19 544.26 790.87 R
7 X
V
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
0 36 Q
0 X
(ESPRIT PR) 116.53 736.07 T
(OJECT 6062) 302.47 736.07 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "i" 1
%%Page: "ii" 2
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "ii" 2
%%Page: "iii" 3
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
297.65 753.95 531.65 771.95 R
7 X
V
0 X
(Stud) 297.65 766.62 T
(y of P) 315.3 766.62 T
(erf) 336.85 766.62 T
(ormance of TDF-Based Threaded Systems) 346.91 766.62 T
0 12 Q
(CHANGE HIST) 63.65 736.95 T
(OR) 147.78 736.95 T
(Y) 165.36 736.95 T
(This is the \336rst v) 63.65 696.95 T
(ersion.) 148.87 696.95 T
FMENDPAGE
%%EndPage: "iii" 3
%%Page: "iv" 4
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
297.65 753.95 531.65 771.95 R
7 X
V
0 X
(Stud) 297.65 766.62 T
(y of P) 315.3 766.62 T
(erf) 336.85 766.62 T
(ormance of TDF-Based Threaded Systems) 346.91 766.62 T
FMENDPAGE
%%EndPage: "iv" 4
%%Page: "v" 5
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10 Q
(v) 526.09 84.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(Stud) 297.65 766.62 T
(y of P) 315.3 766.62 T
(erf) 336.85 766.62 T
(ormance of TDF-Based Threaded Systems) 346.91 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(1.) 63.65 736.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pur) 90.65 736.95 T
(pose) 109.86 736.95 T
(1) 144.53 736.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.) 63.65 716.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Executi) 90.65 716.95 T
(v) 129.19 716.95 T
(e Summary) 135.07 716.95 T
(1) 206.06 716.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.) 63.65 696.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Simple Dylan Thr) 90.65 696.95 T
(eads Library) 182.45 696.95 T
(4) 260.78 696.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.1) 90.65 683.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Introduction) 117.65 683.62 T
(4) 183.03 683.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2) 90.65 670.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Multi-thread Semantics) 117.65 670.62 T
(4) 232.22 670.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(3.2.1) 117.65 658.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Implicit Synchronization) 144.65 658.29 T
(4) 254.37 658.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.2) 117.65 646.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Explicit Synchronization) 144.65 646.29 T
(4) 254.37 646.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.3) 117.65 634.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Conditional Update) 144.65 634.29 T
(5) 233.26 634.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.4) 117.65 622.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dynamic En) 144.65 622.29 T
(vironment) 194.52 622.29 T
(5) 245.63 622.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.5) 117.65 610.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Fluid Binding) 144.65 610.29 T
(6) 210.5 610.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.3) 90.65 597.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Threads-Related Class Hierarch) 117.65 597.62 T
(y) 258.11 597.62 T
(7) 274.61 597.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4) 90.65 584.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Library Reference) 117.65 584.62 T
(8) 208.97 584.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(3.4.1) 117.65 572.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<thread>) 144.65 572.29 T
(8) 190.92 572.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4.2) 117.65 560.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<synchronization>) 144.65 560.29 T
(10) 229.81 560.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4.3) 117.65 548.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<lock>) 144.65 548.29 T
(12) 183.15 548.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4.4) 117.65 536.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<noti\336cation>) 144.65 536.29 T
(16) 211.49 536.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4.5) 117.65 524.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144.65 524.29 T
(imers) 150.41 524.29 T
(18) 182.63 524.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4.6) 117.65 512.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Conditional Update) 144.65 512.29 T
(18) 233.26 512.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.4.7) 117.65 500.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Fluid Binding) 144.65 500.29 T
(21) 210.5 500.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.5) 90.65 487.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread Safety in Other Libraries) 117.65 487.62 T
(22) 272.22 487.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(3.5.1) 117.65 475.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(General Requirements) 144.65 475.29 T
(22) 244.35 475.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.5.2) 117.65 463.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Dylan Library) 144.65 463.29 T
(22) 229.63 463.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(4.) 63.65 443.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(P) 90.65 443.95 T
(ortability Support f) 97.74 443.95 T
(or Dylan Thr) 197.45 443.95 T
(eads) 265.24 443.95 T
(23) 299.9 443.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.1) 90.65 430.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dylan Portability Interf) 117.65 430.62 T
(ace) 220.81 430.62 T
(23) 246.46 430.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(4.1.1) 117.65 418.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Portability and Runtime Layers) 144.65 418.29 T
(23) 280.48 418.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.1.2) 117.65 406.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dylan T) 144.65 406.29 T
(ypes for Threads Portability) 176.9 406.29 T
(24) 298.83 406.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.2) 90.65 393.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Compiler Support for the Portability Interf) 117.65 393.62 T
(ace) 304.83 393.62 T
(25) 330.49 393.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(4.2.1) 117.65 381.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Compiler Flo) 144.65 381.29 T
(w Graph) 216.07 381.29 T
(25) 260.78 381.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.2.2) 117.65 369.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Compiler Support for Atomic and Fluid V) 144.65 369.29 T
(ariables) 312.43 369.29 T
(26) 353.53 369.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.2.3) 117.65 357.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Compiler Support for Primiti) 144.65 357.29 T
(v) 260.8 357.29 T
(es) 265.65 357.29 T
(26) 283.98 357.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.3) 90.65 344.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Primiti) 117.65 344.62 T
(v) 147.94 344.62 T
(e Functions of the Portability Interf) 153.28 344.62 T
(ace) 308.68 344.62 T
(27) 334.34 344.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(4.3.1) 117.65 332.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Threads) 144.65 332.29 T
(27) 186.86 332.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3.2) 117.65 320.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Simple Locks) 144.65 320.29 T
(29) 209.93 320.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3.3) 117.65 308.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Recursi) 144.65 308.29 T
(v) 174.95 308.29 T
(e Locks) 179.8 308.29 T
(31) 221.18 308.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3.4) 117.65 296.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semaphores) 144.65 296.29 T
(34) 203.53 296.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3.5) 117.65 284.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Noti\336cations) 144.65 284.29 T
(36) 206.32 284.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3.6) 117.65 272.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144.65 272.29 T
(imers) 150.41 272.29 T
(38) 182.63 272.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3.7) 117.65 260.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread V) 144.65 260.29 T
(ariables) 181.58 260.29 T
(39) 222.68 260.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.4) 90.65 247.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Support for Dylan Language Features) 117.65 247.62 T
(39) 294.84 247.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(4.4.1) 117.65 235.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Garbage Collector Support for Threads) 144.65 235.29 T
(39) 311.28 235.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.4.2) 117.65 223.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Interf) 144.65 223.29 T
(acing to F) 166.76 223.29 T
(oreign Code) 206.61 223.29 T
(40) 265.77 223.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.4.3) 117.65 211.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Finalization) 144.65 211.29 T
(41) 202.43 211.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(5.) 63.65 191.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF T) 90.65 191.95 T
(ok) 133.87 191.95 T
(en Design) 146.42 191.95 T
(42) 208.09 191.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(5.1) 90.65 178.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF T) 117.65 178.62 T
(ok) 156.18 178.62 T
(ens Corresponding to Primiti) 167.07 178.62 T
(v) 294.22 178.62 T
(es) 299.55 178.62 T
(43) 319.72 178.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.1.1) 117.65 166.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Threads) 144.65 166.29 T
(43) 186.86 166.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.2) 117.65 154.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Simple Locks) 144.65 154.29 T
(44) 209.93 154.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.3) 117.65 142.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Recursi) 144.65 142.29 T
(v) 174.95 142.29 T
(e Locks) 179.8 142.29 T
(45) 221.18 142.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.4) 117.65 130.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semaphores) 144.65 130.29 T
(46) 203.53 130.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.5) 117.65 118.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Noti\336cations) 144.65 118.29 T
(47) 206.32 118.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "v" 5
%%Page: "vi" 6
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10 Q
(vi) 63.65 84.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Stud) 297.65 766.62 T
(y of P) 315.3 766.62 T
(erf) 336.85 766.62 T
(ormance of TDF-Based Threaded Systems) 346.91 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.1.6) 117.65 738.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144.65 738.29 T
(imers) 150.41 738.29 T
(48) 182.63 738.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.7) 117.65 726.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread V) 144.65 726.29 T
(ariables) 181.58 726.29 T
(48) 222.68 726.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(5.2) 90.65 713.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF T) 117.65 713.62 T
(ok) 156.18 713.62 T
(en Support for Atomic and Fluid V) 167.07 713.62 T
(ariables) 320.45 713.62 T
(48) 365.67 713.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.2.1) 117.65 701.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Atomic V) 144.65 701.29 T
(ariable Access) 183.26 701.29 T
(49) 251.29 701.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.2) 117.65 689.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread V) 144.65 689.29 T
(ariables) 181.58 689.29 T
(49) 222.68 689.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(6.) 63.65 669.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Solaris Runtime Implementation) 90.65 669.95 T
(50) 270.65 669.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(6.1) 90.65 656.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Expansion of ANDF T) 117.65 656.62 T
(ok) 217.29 656.62 T
(ens Corresponding to Primiti) 228.18 656.62 T
(v) 355.33 656.62 T
(es) 360.66 656.62 T
(50) 380.82 656.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(6.1.1) 117.65 644.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Threads) 144.65 644.29 T
(50) 186.86 644.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.2) 117.65 632.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Simple Locks) 144.65 632.29 T
(51) 209.93 632.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.3) 117.65 620.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Recursi) 144.65 620.29 T
(v) 174.95 620.29 T
(e Locks) 179.8 620.29 T
(51) 221.18 620.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.4) 117.65 608.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semaphores) 144.65 608.29 T
(52) 203.53 608.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.5) 117.65 596.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Noti\336cations) 144.65 596.29 T
(53) 206.32 596.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.6) 117.65 584.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144.65 584.29 T
(imers) 150.41 584.29 T
(54) 182.63 584.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.7) 117.65 572.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread V) 144.65 572.29 T
(ariables) 181.58 572.29 T
(54) 222.68 572.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(6.2) 90.65 559.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Expansion of ANDF T) 117.65 559.62 T
(ok) 217.29 559.62 T
(ens Supporting Atomic and Fluid V) 228.18 559.62 T
(ariables) 384.32 559.62 T
(54) 429.53 559.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(6.2.1) 117.65 547.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Atomic V) 144.65 547.29 T
(ariable Access) 183.26 547.29 T
(54) 251.29 547.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.2.2) 117.65 535.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread V) 144.65 535.29 T
(ariables) 181.58 535.29 T
(54) 222.68 535.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(6.3) 90.65 522.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Solaris Runtime Primiti) 117.65 522.62 T
(v) 221.9 522.62 T
(e Reference) 227.23 522.62 T
(55) 290.45 522.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(6.3.1) 117.65 510.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Threads) 144.65 510.29 T
(55) 186.86 510.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.2) 117.65 498.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Simple Locks) 144.65 498.29 T
(57) 209.93 498.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.3) 117.65 486.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Recursi) 144.65 486.29 T
(v) 174.95 486.29 T
(e Locks) 179.8 486.29 T
(59) 221.18 486.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.4) 117.65 474.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semaphores) 144.65 474.29 T
(60) 203.53 474.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.5) 117.65 462.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Noti\336cations) 144.65 462.29 T
(61) 206.32 462.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.6) 117.65 450.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144.65 450.29 T
(imers) 150.41 450.29 T
(63) 182.63 450.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.7) 117.65 438.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Atomic V) 144.65 438.29 T
(ariable Access) 183.26 438.29 T
(63) 251.29 438.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.3.8) 117.65 426.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread V) 144.65 426.29 T
(ariables) 181.58 426.29 T
(64) 222.68 426.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(7.) 63.65 406.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(P) 90.65 406.95 T
(erf) 97.74 406.95 T
(ormance Ev) 112.09 406.95 T
(aluation) 173.63 406.95 T
(66) 227.64 406.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.) 63.65 386.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Conclusions) 90.65 386.95 T
(66) 164.66 386.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9.) 63.65 366.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Refer) 90.65 366.95 T
(ences and Bibliograph) 119.08 366.95 T
(y) 232.92 366.95 T
(67) 250.92 366.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "vi" 6
%%Page: "1" 7
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(1) 526.09 84.9 T
3 15 Q
(1.) 63.65 734.95 T
(Purpose) 90.65 734.95 T
2 11 Q
0.28 0.07 (It is con) 63.65 712.62 B
0.28 0.07 (v) 99.81 712.62 B
0.28 0.07 (enient to use threads for man) 105.21 712.62 B
0.28 0.07 (y application domains, from serv) 235.78 712.62 B
0.28 0.07 (ers to GUIs. This is being recog-) 384.01 712.62 B
0.28 0.03 (nized by modern operating systems, man) 63.65 699.62 B
0.28 0.03 (y of which no) 246.16 699.62 B
0.28 0.03 (w pro) 307.86 699.62 B
0.28 0.03 (vide interf) 333.47 699.62 B
0.28 0.03 (aces to threads f) 379.45 699.62 B
0.28 0.03 (acilities by means) 451.8 699.62 B
(of an API. Some high le) 63.65 686.62 T
(v) 169.7 686.62 T
(el languages pro) 175.03 686.62 T
(vide direct support for threads, too.) 246.96 686.62 T
0.28 0.17 (Dylan) 63.65 661.62 B
2 10 Q
0.25 0.17 ([Apple94]) 94.56 661.62 B
2 11 Q
0.28 0.17 ( is a high le) 137.16 661.62 B
0.28 0.17 (v) 190.87 661.62 B
0.28 0.17 (el object oriented programming language, with dynamic capabilities, and) 196.38 661.62 B
-0.12 (automatic memory management. It is de\336ned as a small core language with no support for parallelism, and) 63.65 648.62 P
0.28 0.09 (encourages language e) 63.65 635.62 B
0.28 0.09 (xtensions via libraries. W) 165.6 635.62 B
0.28 0.09 (e present here a design for such a library to add threads) 280.45 635.62 B
(support to Dylan \321 the) 63.65 622.62 T
1 F
(Simple Dylan Thr) 170.28 622.62 T
(eads Libr) 248.1 622.62 T
(ary) 289.8 622.62 T
2 F
(.) 303.74 622.62 T
0.28 0.06 (This document describes a complete design for the threads library for Dylan. It sho) 63.65 603.62 B
0.28 0.06 (ws ho) 437.5 603.62 B
0.28 0.06 (w a Dylan pro-) 463.79 603.62 B
-0.2 (gram using threads may be compiled to a portable ANDF representation, and ho) 63.65 590.62 P
-0.2 (w a combination of install-) 413.88 590.62 P
-0.16 (time tok) 63.65 577.62 P
-0.16 (en libraries and runtime system libraries may be used to implement the system on a particular plat-) 99.75 577.62 P
(form, in terms of threads APIs.) 63.65 564.62 T
-0.13 (This w) 63.65 539.62 P
-0.13 (ork is presented as a proof of concept, to sho) 93.65 539.62 P
-0.13 (w that ANDF is an appropriate medium for implement-) 288.91 539.62 P
0.28 0.25 (ing an adv) 63.65 526.62 B
0.28 0.25 (anced dynamic language with support for threads. Some empirical analysis is made of the) 112.21 526.62 B
(impact of ANDF on the performance of programs described in this w) 63.65 513.62 T
(ay) 368.12 513.62 T
(.) 377.79 513.62 T
(This w) 63.65 488.62 T
(ork w) 93.79 488.62 T
(as sponsored by the Commission of the European Communities.) 119.03 488.62 T
3 15 Q
(2.) 63.65 446.95 T
(Ex) 90.65 446.95 T
(ecutive Summar) 108.84 446.95 T
(y) 224.87 446.95 T
2 11 Q
0.28 0.06 (A major goal of Dylan is to support the creation of reusable softw) 63.65 420.62 B
0.28 0.06 (are components. It is a requirement of) 360.58 420.62 B
0.28 0.12 (Harlequin\325) 63.65 407.62 B
0.28 0.12 (s implementation of Dylan that these components should be inter) 111.94 407.62 B
0.28 0.12 (-operable with components) 408.35 407.62 B
-0.19 (written in other languages. This has implications for the design of a threads library) 63.65 394.62 P
-0.19 (, since threads of control) 423.97 394.62 P
0.03 (need not be limited to component boundaries. It is primarily for this reason that the Simple Dylan Threads) 63.65 381.62 P
0.28 0.01 (Library is designed to be implementable in terms of typical threads APIs pro) 63.65 368.62 B
0.28 0.01 (vided by mainstream operat-) 404.51 368.62 B
(ing systems \050without constraining the design to an) 63.65 355.62 T
(y particular platform\051.) 284.4 355.62 T
0.28 0 (Although the Simple Dylan Threads Library has not been endorsed as a standard, it is hoped that it might) 63.65 330.62 B
0.28 0.08 (e) 63.65 317.62 B
0.28 0.08 (v) 68.33 317.62 B
0.28 0.08 (olv) 73.69 317.62 B
0.28 0.08 (e into a standard. In k) 87.81 317.62 B
0.28 0.08 (eeping with the language of Dylan, it is described as an object oriented class) 186.15 317.62 B
0.23 (library) 63.65 304.62 P
0.23 (, although it is not de\336ned at a particularly high le) 92.26 304.62 P
0.23 (v) 313.97 304.62 P
0.23 (el. It is e) 319.31 304.62 P
0.23 (xpected that higher le) 357.72 304.62 P
0.23 (v) 453.14 304.62 P
0.23 (el libraries \050with) 458.48 304.62 P
-0.07 (support for monitors, for instance\051 can be b) 63.65 291.62 P
-0.07 (uilt in a layered f) 253.54 291.62 P
-0.07 (ashion from the f) 328.29 291.62 P
-0.07 (acilities of the simple library) 403.42 291.62 P
-0.07 (.) 528.9 291.62 P
0.28 0.34 (The library is designed to be portable \321 and a mechanism for achie) 63.65 278.62 B
0.28 0.34 (ving portability with ANDF is) 387.82 278.62 B
(described.) 63.65 265.62 T
0.28 0.17 (ANDF [TDF92] has no direct support for parallelism, b) 63.65 240.62 B
0.28 0.17 (ut earlier studies \050[Edw) 319.62 240.62 B
0.28 0.17 (ards93], [ME94]\051 ha) 427.49 240.62 B
0.28 0.17 (v) 521.25 240.62 B
0.28 0.17 (e) 526.76 240.62 B
0.11 (sho) 63.65 227.62 P
0.11 (wn ho) 78.65 227.62 P
0.11 (w a combination of core ANDF and ANDF tok) 105.68 227.62 P
0.11 (ens may be used to support parallel features, pro-) 314.19 227.62 P
0.28 0.18 (vided that appropriate e) 63.65 214.62 B
0.28 0.18 (xpanders for the tok) 172.73 214.62 B
0.28 0.18 (ens are a) 265.28 214.62 B
0.28 0.18 (v) 305.68 214.62 B
0.28 0.18 (ailable on the installation platform. These tok) 311.09 214.62 B
0.28 0.18 (en) 521.09 214.62 B
(e) 63.65 201.62 T
(xpansions might describe calls to threads APIs, or might be specially recognized by the installer) 68.37 201.62 T
(.) 490.29 201.62 T
0.28 0.11 (The set of ANDF tok) 63.65 176.62 B
0.28 0.11 (ens used to manage portability for the Dylan threads library is carefully crafted to) 160.18 176.62 B
0.25 (describe the features of the library) 63.65 163.62 P
0.25 (. It is designed to be ultimately mapped onto operating system APIs for) 214.8 163.62 P
0.28 0.22 (threads, b) 63.65 150.62 B
0.28 0.22 (ut is not designed to be similar to an) 108.69 150.62 B
0.28 0.22 (y particular API. Conceptually) 278.66 150.62 B
0.28 0.22 (, it describes an API for) 420.47 150.62 B
0.21 (threads support from the Dylan runtime system, and it might be a reasonable choice on some platforms to) 63.65 137.62 P
-0.05 (implement it in that w) 63.65 124.62 P
-0.05 (ay) 160.52 124.62 P
-0.05 (. The library has been tested on Solaris using such a runtime system to pro) 170.19 124.62 P
-0.05 (vide the) 496.56 124.62 P
(threads support. The Solaris implementation is described in this document.) 63.65 111.62 T
FMENDPAGE
%%EndPage: "1" 7
%%Page: "2" 8
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(2) 63.65 84.9 T
2 11 Q
-0.16 (The ef) 63.65 737.62 P
-0.16 (fect of ANDF on the general implementation of Dylan with multiple threads is discussed in [ME94].) 91.62 737.62 P
0.28 0.06 (Since ANDF does not pro) 63.65 724.62 B
0.28 0.06 (vide the direct support for threads or synchronization, it has little ef) 180.19 724.62 B
0.28 0.06 (fect on the) 484.08 724.62 B
0.28 0.02 (performance of a threads system b) 63.65 711.62 B
0.28 0.02 (uilt using it. ANDF is a con) 216.72 711.62 B
0.28 0.02 (v) 340.45 711.62 B
0.28 0.02 (enient layer of abstraction o) 345.81 711.62 B
0.28 0.02 (v) 470.17 711.62 B
0.28 0.02 (er the dif) 475.53 711.62 B
0.28 0.02 (fer-) 515.73 711.62 B
0.28 0.08 (ences between platforms, and plays little part in the implementation choices for an) 63.65 698.62 B
0.28 0.08 (y platform. There are) 435.81 698.62 B
-0.17 (features in the Dylan threads library) 63.65 685.62 P
-0.17 (, ho) 220.65 685.62 P
-0.17 (we) 236.71 685.62 P
-0.17 (v) 249.26 685.62 P
-0.17 (er) 254.6 685.62 P
-0.17 (, which can only be implemented ef) 262.71 685.62 P
-0.17 (\336ciently on some systems) 418.78 685.62 P
0.16 (if special hardw) 63.65 672.62 P
0.16 (are instructions are used. ANDF may impose a cost for these features on some tar) 134.12 672.62 P
0.16 (get plat-) 495.13 672.62 P
0.28 0.12 (forms if there is no appropriate tok) 63.65 659.62 B
0.28 0.12 (en e) 222.9 659.62 B
0.28 0.12 (xpansion which will cause the installer on the tar) 241.51 659.62 B
0.28 0.12 (get to generate) 464.65 659.62 B
(these hardw) 63.65 646.62 T
(are instructions.) 116.38 646.62 T
FMENDPAGE
%%EndPage: "2" 8
%%Page: "3" 9
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(3) 526.09 84.9 T
2 11 Q
(Figure 1.) 186.44 737.62 T
(Processing of Dylan Threads Constructs) 231.66 737.62 T
0 0 0 1 0 0 0 K
63.65 157.95 531.65 733.95 C
0 0 0 1 0 0 0 K
108.65 670.95 252.65 697.95 13.5 RR
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
342.65 670.95 486.65 697.95 13.5 RR
7 X
V
0 X
N
2 11 Q
(Dylan Source Code) 137.57 680.7 T
(Dylan Threads Library) 364.25 680.7 T
272.93 684.45 272.93 681.48 262.55 684.45 272.93 687.43 4 Y
0 Z
N
272.93 684.45 272.93 681.48 262.55 684.45 272.93 687.43 4 Y
V
273.18 684.45 333.65 684.45 2 L
2 Z
N
216.65 547.24 219.62 547.24 216.65 536.86 213.67 547.24 4 Y
0 Z
N
216.65 547.24 219.62 547.24 216.65 536.86 213.67 547.24 4 Y
V
216.65 547.49 216.65 670.95 2 L
2 Z
N
378.65 547.24 381.62 547.24 378.65 536.86 375.67 547.24 4 Y
0 Z
N
378.65 547.24 381.62 547.24 378.65 536.86 375.67 547.24 4 Y
V
378.65 670.95 378.65 547.49 2 L
2 Z
N
171.65 508.95 423.65 535.95 13.5 RR
N
(Implicit Continuation Representation \050ICR\051) 201.55 518.7 T
63.65 490.95 528.05 490.95 2 L
N
297.65 457.24 300.62 457.24 297.65 446.86 294.67 457.24 4 Y
0 Z
N
297.65 457.24 300.62 457.24 297.65 446.86 294.67 457.24 4 Y
V
297.65 508.95 297.65 457.49 2 L
2 Z
N
243.65 418.95 351.65 445.95 13.5 RR
N
(ANDF Stream) 265.72 428.99 T
185.15 328.95 284.15 355.95 13.5 RR
N
(Core ANDF) 207.61 338.7 T
261.65 367.24 264.62 367.24 261.65 356.86 258.67 367.24 4 Y
0 Z
N
261.65 367.24 264.62 367.24 261.65 356.86 258.67 367.24 4 Y
V
261.65 418.95 261.65 367.49 2 L
2 Z
N
234.65 286.24 237.62 286.24 234.65 275.86 231.67 286.24 4 Y
0 Z
N
234.65 286.24 237.62 286.24 234.65 275.86 231.67 286.24 4 Y
V
234.65 328.95 234.65 286.49 2 L
2 Z
N
140.15 175.95 329.15 274.95 18 RR
N
(Runtime Primiti) 171 213.44 T
(v) 241.94 213.44 T
(e Functions) 247.27 213.44 T
0 F
(Compiler Fr) 72.65 574.21 T
(ont End) 131.41 574.21 T
(Compiler ANDF Back End) 72.65 474.52 T
(Solaris) 72.65 385.21 T
297.65 724.95 297.65 643.95 2 L
N
(Dylan Libraries) 306.65 709.21 T
(A) 72.65 709.21 T
(pplications) 80.32 709.21 T
63.65 642.15 528.05 724.95 R
0 Z
N
2 F
(P) 227.26 567.34 T
(arser/) 233.21 567.34 T
(Con) 227.26 556.34 T
(v) 245.16 556.34 T
(erter) 250.5 556.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(P) 326.26 567.34 T
(arser/) 332.21 567.34 T
(Con) 326.26 556.34 T
(v) 344.16 556.34 T
(erter) 349.5 556.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF Emitter) 312.96 466.34 T
(ANDF T) 279.65 378.34 T
(ok) 318.18 378.34 T
(en) 329.07 378.34 T
(Expansion) 279.65 367.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Executable) 151.21 258.52 T
2 F
(Application Functions) 185.6 240.44 T
(OS Threads Interf) 187.67 187.34 T
(ace) 266.98 187.34 T
140.15 229.95 329.15 229.95 2 L
N
140.15 202.95 329.15 202.95 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF) 251.21 303.44 T
(Installation) 251.21 292.44 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Other) 441.65 382.95 T
(Platf) 441.65 371.95 T
(orm) 463.98 371.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
J
351.65 432.45 522.65 432.45 2 L
J
351.65 432.45 355.4 432.45 2 L
2 Z
N
[7.64 6.621] 7.64 I
355.4 432.45 518.9 432.45 2 L
N
J
518.9 432.45 522.65 432.45 2 L
N
J
522.65 403.24 525.62 403.24 522.65 392.86 519.67 403.24 4 Y
0 Z
N
522.65 403.24 525.62 403.24 522.65 392.86 519.67 403.24 4 Y
V
J
522.65 427.95 522.65 403.49 2 L
J
522.65 427.95 522.65 424.2 2 L
2 Z
N
[6.207 5.379] 6.207 I
522.65 424.2 522.65 407.24 2 L
N
J
522.65 407.24 522.65 403.49 2 L
N
J
63.65 453.99 528.05 590.79 R
0 Z
N
63.65 166.95 405.65 400.95 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PR) 73.15 598.95 T
(ODUCER) 87.48 598.95 T
(INST) 72.86 409.11 T
(ALLER) 97.54 409.11 T
63.65 400.95 144.65 424.71 R
N
63.65 590.79 144.65 614.55 R
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(INST) 441.86 409.11 T
(ALLER) 466.54 409.11 T
432.65 400.95 513.65 424.71 R
N
432.65 166.95 529.85 400.95 R
N
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 9
%%Page: "4" 10
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(4) 63.65 84.9 T
3 15 Q
(3.) 63.65 734.95 T
(Simple Dylan Threads Librar) 90.65 734.95 T
(y) 294.2 734.95 T
3 12 Q
(3.1) 63.65 695.95 T
(Intr) 90.65 695.95 T
(oduction) 109.74 695.95 T
2 11 Q
(The goals of the simple Dylan threads library) 63.65 670.62 T
(, in order of importance, are:) 262.43 670.62 T
4 F
(\245) 99.65 651.62 T
2 F
(Maps easily and ef) 113.4 651.62 T
(\336ciently onto OS pro) 195.91 651.62 T
(vided threads f) 288.33 651.62 T
(acilities for common OSs) 353.6 651.62 T
4 F
(\245) 99.65 635.62 T
2 F
(Permits all common thread models, including co-operati) 113.4 635.62 T
(v) 360.91 635.62 T
(e, pre-empti) 366.25 635.62 T
(v) 419.12 635.62 T
(e and concurrent) 424.46 635.62 T
4 F
(\245) 99.65 619.62 T
2 F
(Mak) 113.4 619.62 T
(es use of the language features of Dylan) 133.45 619.62 T
4 F
(\245) 99.65 603.62 T
2 F
(Pro) 113.4 603.62 T
(vides enough functionality to implement more adv) 128.51 603.62 T
(anced features portably in terms of the) 350.67 603.62 T
(simple features pro) 113.4 590.62 T
(vided here) 197.55 590.62 T
(The library is called) 63.65 565.62 T
0 F
(thr) 154.68 565.62 T
(eads) 169.15 565.62 T
2 F
(. All names are e) 189.93 565.62 T
(xported from the module called) 263.99 565.62 T
0 F
(thr) 405.44 565.62 T
(eads) 419.9 565.62 T
2 F
(.) 440.68 565.62 T
3 12 Q
(3.2) 63.65 527.95 T
(Multi-thread Semantics) 90.65 527.95 T
2 11 Q
0.28 0.12 (This library pro) 63.65 502.62 B
0.28 0.12 (vides multiple threads of control within a single space of objects and module v) 134.97 502.62 B
0.28 0.12 (ariables.) 493.74 502.62 B
0.28 0.02 (Each thread runs in its o) 63.65 489.62 B
0.28 0.02 (wn independent stack. The mechanism by which the threads are scheduled is not) 171.94 489.62 B
0.26 (speci\336ed, and it is not possible to determine ho) 63.65 476.62 P
0.26 (w the e) 272.34 476.62 P
0.26 (x) 304.47 476.62 P
0.26 (ecution of instructions by dif) 309.8 476.62 P
0.26 (ferent threads will be) 437.69 476.62 P
0.09 (interlea) 63.65 463.62 P
0.09 (v) 96.42 463.62 P
0.09 (ed. No mechanism is pro) 101.75 463.62 P
0.09 (vided to call a function on a thread other than the current thread. Neither) 211.61 463.62 P
(is there a mechanism to signal an e) 63.65 450.62 T
(xception on a thread other than the current thread.) 217.15 450.62 T
3 10 Q
(3.2.1) 63.65 416.29 T
(Implicit Sync) 90.89 416.29 T
(hr) 152.48 416.29 T
(onization) 162.28 416.29 T
2 11 Q
-0.06 (The threads library guarantees that assignments to slots and to v) 63.65 391.62 P
-0.06 (ariables are atomic. The time at which that) 344.48 391.62 P
0.28 0.03 (assignment becomes visible to another thread is undef) 63.65 378.62 B
0.28 0.03 (ined, unless the tw) 304.58 378.62 B
0.28 0.03 (o threads synchronize e) 387.75 378.62 B
0.28 0.03 (xplicitly) 492.67 378.62 B
0.28 0.03 (.) 528.9 378.62 B
0.16 (I.e. after an assignment, b) 63.65 365.62 P
0.16 (ut before e) 177.38 365.62 P
0.16 (xplicit synchronization, another thread will either see the old v) 224.56 365.62 P
0.16 (alue or) 501.25 365.62 P
(the ne) 63.65 352.62 T
(w v) 89.95 352.62 T
(alue of the location. There is no possibility of seeing a half-w) 105.87 352.62 T
(ay state.) 375.83 352.62 T
-0.17 (The ordering of visibility of side-ef) 63.65 327.62 P
-0.17 (fects performed in other threads is unde\336ned, unless e) 218.04 327.62 P
-0.17 (xplicit synchroni-) 453.9 327.62 P
-0.23 (zation is used. Implementations of the library may guarantee that the visibility of side-ef) 63.65 314.62 P
-0.23 (fects performed by) 449.02 314.62 P
0.28 0.13 (another thread is ordered according to the control f) 63.65 301.62 B
0.28 0.13 (lo) 295.42 301.62 B
0.28 0.13 (w of the other thread \050) 303.96 301.62 B
1 F
0.28 0.13 (str) 406.3 301.62 B
0.28 0.13 (ong or) 417.8 301.62 B
0.28 0.13 (dering) 447.45 301.62 B
2 F
0.28 0.13 (\051, b) 476.93 301.62 B
0.28 0.13 (ut multi-) 492.16 301.62 B
0.02 (processor implementations may not be strongly ordered. Portable code should not assume strong ordering,) 63.65 288.62 P
0.28 0.17 (and should use e) 63.65 275.62 B
0.28 0.17 (xplicit synchronization where order of side ef) 140 275.62 B
0.28 0.17 (fects is important. There is currently no) 349.47 275.62 B
(library introspection f) 63.65 262.62 T
(acility to determine if the implementation is strong or weak ordered.) 159.47 262.62 T
0.03 (Because of the possibility of weak ordering, the compiler is free to assume that the ef) 63.65 237.62 P
0.03 (fects of other threads) 439 237.62 P
-0.11 (may be ignored between e) 63.65 224.62 P
-0.11 (xplicit synchronization points \321 and may perform an) 178.51 224.62 P
-0.11 (y optimizations which pre-) 413.74 224.62 P
0 (serv) 63.65 211.62 P
0 (e the semantics of a single-thread model re) 81.81 211.62 P
0 (g) 270.15 211.62 P
0 (ardless of their ef) 275.6 211.62 P
0 (fects on other threads \050e.g. common sub-) 352 211.62 P
(e) 63.65 198.62 T
(xpression elimination, or changing the order of e) 68.37 198.62 T
(v) 282.56 198.62 T
(aluation\051.) 287.78 198.62 T
3 10 Q
(3.2.2) 63.65 164.29 T
(Explicit Sync) 90.89 164.29 T
(hr) 153.04 164.29 T
(onization) 162.84 164.29 T
2 11 Q
0.28 0.25 (The threads library pro) 63.65 139.62 B
0.28 0.25 (vides a v) 171.24 139.62 B
0.28 0.25 (ariety of synchronization f) 212.9 139.62 B
0.28 0.25 (acilities, described belo) 336.85 139.62 B
0.28 0.25 (w) 447.02 139.62 B
0.28 0.25 (. These f) 454.5 139.62 B
0.28 0.25 (acilities) 495.4 139.62 B
-0.06 (include mutual-e) 63.65 126.62 P
-0.06 (xclusion locks, semaphores and noti\336cations. Each f) 137.66 126.62 P
-0.06 (acility guarantees that when synchro-) 367.54 126.62 P
FMENDPAGE
%%EndPage: "4" 10
%%Page: "5" 11
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(5) 526.09 84.9 T
2 11 Q
0.28 0.09 (nization has been achie) 63.65 737.62 B
0.28 0.09 (v) 168.49 737.62 B
0.28 0.09 (ed, then all the side ef) 173.91 737.62 B
0.28 0.09 (fects of another thread are visible, at least up to the point) 273.6 737.62 B
(where that other thread last released the synchronization f) 63.65 724.62 T
(acility) 317.69 724.62 T
(.) 344.48 724.62 T
0.28 0.11 (An appropriate synchronization must be used to guard side-ef) 63.65 699.62 B
0.28 0.11 (fects on state if there is an) 343.71 699.62 B
0.28 0.11 (y possibility of) 463.37 699.62 B
0.28 0.1 (those side-ef) 63.65 686.62 B
0.28 0.1 (fects either being corrupted by another thread or corrupting another thread. F) 120.92 686.62 B
0.28 0.1 (or e) 470.44 686.62 B
0.28 0.1 (xample, a) 487.76 686.62 B
0.28 0.22 (function which assigns to tw) 63.65 673.62 B
0.28 0.22 (o slots of an object may require the use of a lock to guarantee that other) 196.63 673.62 B
(threads ne) 63.65 660.62 T
(v) 108.28 660.62 T
(er observ) 113.61 660.62 T
(e the object in a partly updated state.) 154.07 660.62 T
3 10 Q
(3.2.3) 63.65 626.29 T
(Conditional Update) 90.89 626.29 T
2 11 Q
-0.25 (In addition to the synchronization primiti) 63.65 601.62 P
-0.25 (v) 243.34 601.62 P
-0.25 (es, the library pro) 248.67 601.62 P
-0.25 (vides a conditional update mechanism which is) 325.36 601.62 P
0.28 0.24 (not synchronized, b) 63.65 588.62 B
0.28 0.24 (ut which tests whether the v) 155.07 588.62 B
0.28 0.24 (alue in a v) 286.12 588.62 B
0.28 0.24 (ariable or slot has changed and atomically) 334.87 588.62 B
(updates it if not.) 63.65 575.62 T
-0.13 (By using conditional updates, a thread can con\336rm \050or den) 63.65 550.62 P
-0.13 (y\051 that there has been no interference from other) 320.12 550.62 P
0.28 0.07 (threads, without an) 63.65 537.62 B
0.28 0.07 (y need for a blocking operation. This is more ef) 149.34 537.62 B
0.28 0.07 (f) 364.37 537.62 B
0.28 0.07 (icient for those circumstances where) 367.5 537.62 B
(interference is not disastrous and it is possible to re-compute the update.) 63.65 524.62 T
0.28 0.05 (F) 63.65 499.62 B
0.28 0.05 (or e) 69.64 499.62 B
0.28 0.05 (xample, a function which increments the v) 86.74 499.62 B
0.28 0.05 (alue of a v) 277.27 499.62 B
0.28 0.05 (ariable might use a conditional update to store) 324.44 499.62 B
0.28 0.08 (the ne) 63.65 486.62 B
0.28 0.08 (w v) 90.72 486.62 B
0.28 0.08 (alue into place, in order to guarantee a numeric sequence for the v) 107.16 486.62 B
0.28 0.08 (ariable. In this e) 406.2 486.62 B
0.28 0.08 (xample, the) 479.22 486.62 B
(function might loop until the conditional update has succeeded.) 63.65 473.62 T
-0.16 (It is possible to achie) 63.65 448.62 P
-0.16 (v) 155.62 448.62 P
-0.16 (e synchronization by looping until a conditional update is successful. This is not rec-) 160.96 448.62 P
0.12 (ommended, because the) 63.65 435.62 P
1 F
0.12 (b) 172.15 435.62 P
0.12 (usy-waiting) 177.43 435.62 P
2 F
0.12 ( state during the loop may disallo) 228.76 435.62 P
0.12 (w other threads from running. Nor-) 375.86 435.62 P
0.28 0.3 (mally) 63.65 422.62 B
0.28 0.3 (, conditional update should be used only when it is e) 89.49 422.62 B
0.28 0.3 (xpected to succeed. If it is lik) 338.59 422.62 B
0.28 0.3 (ely that the) 478.93 422.62 B
0.28 0.05 (conditional update might f) 63.65 409.62 B
0.28 0.05 (ail multiple times around the loop, then either the number of times around the) 182.22 409.62 B
(loop should be limited, or a blocking function from the) 63.65 396.62 T
0 F
(thr) 308.39 396.62 T
(eads) 322.85 396.62 T
2 F
( library should be used within the loop.) 343.63 396.62 T
3 10 Q
(3.2.4) 63.65 362.29 T
(Dynamic En) 90.89 362.29 T
(vir) 147.73 362.29 T
(onment) 159.76 362.29 T
2 11 Q
0.28 0.31 (Dylan has an implicit notion of a dynamic en) 63.65 337.62 B
0.28 0.31 (vironment, corresponding to language constructs with) 277.52 337.62 B
1 F
-0.13 (dynamic e) 63.65 324.62 P
-0.13 (xtent) 108.2 324.62 P
2 F
-0.13 (. F) 129.59 324.62 P
-0.13 (or e) 140.91 324.62 P
-0.13 (xample, the) 157.41 324.62 P
0 F
-0.13 (block) 211.23 324.62 P
2 F
-0.13 ( construct can introduce) 236.91 324.62 P
1 F
-0.13 (cleanup-clauses) 344.54 324.62 P
2 F
-0.13 (, and the) 415.41 324.62 P
1 F
-0.13 (body) 455.35 324.62 P
2 F
-0.13 ( of the block) 476.73 324.62 P
0.22 (is e) 63.65 311.62 P
0.22 (x) 78.67 311.62 P
0.22 (ecuted in a dynamic en) 84.01 311.62 P
0.22 (vironment in which those cleanup-clauses are acti) 185.85 311.62 P
0.22 (v) 406.22 311.62 P
0.22 (e.) 411.55 311.62 P
1 F
0.22 (Handler) 422.15 311.62 P
0.22 (s) 458.71 311.62 P
2 F
0.22 ( and) 462.98 311.62 P
1 F
0.22 (e) 484.8 311.62 P
0.22 (xit pr) 489.47 311.62 P
0.22 (oce-) 512.72 311.62 P
0.28 0.15 (dur) 63.65 298.62 B
0.28 0.15 (es) 78.96 298.62 B
2 F
0.28 0.15 (are other e) 91.58 298.62 B
0.28 0.15 (xamples of language features related to the dynamic en) 139.99 298.62 B
0.28 0.15 (vironment. The threads library) 392.17 298.62 B
(introduces a ne) 63.65 285.62 T
(w construct which af) 129.97 285.62 T
(fects the dynamic en) 221.64 285.62 T
(vironment called) 311.93 285.62 T
0 F
(\337uid-bind) 388.92 285.62 T
2 F
( \050de\336ned belo) 435.39 285.62 T
(w\051.) 495.61 285.62 T
0 (The dynamic en) 63.65 260.62 P
0 (vironment is de\336ned to be thread-local. When a ne) 134.09 260.62 P
0 (w thread is created, it starts with a fresh) 356.56 260.62 P
0.28 0.08 (dynamic en) 63.65 247.62 B
0.28 0.08 (vironment. It is an error to attempt to use a handler or a non-local e) 115.28 247.62 B
0.28 0.08 (xit function belonging to) 419.86 247.62 B
(another thread. It is impossible to use an unwind-protect cleanup from another thread.) 63.65 234.62 T
0.28 0.1 (Although the binding of condition handlers only af) 63.65 209.62 B
0.28 0.1 (fects the dynamic en) 294.19 209.62 B
0.28 0.1 (vironment of the current thread,) 387.27 209.62 B
0.28 0.03 (unhandled conditions are passed to the global generic function) 63.65 196.62 B
0 F
0.28 0.03 (default-handler) 345.66 196.62 B
2 F
0.28 0.03 (. Potentially this function) 418.83 196.62 B
(might) 63.65 183.62 T
1 F
(call the deb) 92.07 183.62 T
(ug) 143.18 183.62 T
(g) 154.07 183.62 T
(er) 159.46 183.62 T
2 F
(. The threads library does not de\336ne what this term might mean.) 168.02 183.62 T
0.11 (Note that in Dylan, unlik) 63.65 158.62 P
0.11 (e in C and C++,) 173.66 158.62 P
1 F
0.11 (le) 247.11 158.62 P
0.11 (xical) 254.84 158.62 P
2 F
0.11 ( v) 276.22 158.62 P
0.11 (ariables \050i.e. local, or LET bound v) 284.3 158.62 P
0.11 (ariables\051 ha) 438.95 158.62 P
0.11 (v) 489.85 158.62 P
0.11 (e inde\336-) 495.18 158.62 P
0.26 (nite e) 63.65 145.62 P
0.26 (xtent, and are not bound in the dynamic en) 87.88 145.62 P
0.26 (vironment. In general, the v) 277.43 145.62 P
0.26 (ariables are potentially global) 400.41 145.62 P
-0.05 (\321 and programmers may need to e) 63.65 132.62 P
-0.05 (xplicitly synchronize accesses to them accordingly) 218.38 132.62 P
-0.05 (. The introduction of) 440.75 132.62 P
FMENDPAGE
%%EndPage: "5" 11
%%Page: "6" 12
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(6) 63.65 84.9 T
2 11 Q
0.04 (threads to Dylan does not af) 63.65 737.62 P
0.04 (fect the ef) 187.32 737.62 P
0.04 (\336cienc) 231.11 737.62 P
0.04 (y of le) 260.27 737.62 P
0.04 (xical v) 288.3 737.62 P
0.04 (ariables which do not require e) 317.7 737.62 P
0.04 (xplicit synchroni-) 453.69 737.62 P
(zation.) 63.65 724.62 T
3 10 Q
(3.2.5) 63.65 690.29 T
(Fluid Binding) 90.89 690.29 T
2 11 Q
0.19 (The threads library pro) 63.65 665.62 P
0.19 (vides a ne) 165.15 665.62 P
0.19 (w de\336ning form,) 209.24 665.62 P
0 F
0.19 (\337uid-v) 286.18 665.62 P
0.19 (ariable) 316.64 665.62 P
2 F
0.19 (, for de\336ning module v) 349.64 665.62 P
0.19 (ariables which are) 451.25 665.62 P
0.05 (suitable for) 63.65 652.62 P
1 F
0.05 (\337uid binding) 116.29 652.62 P
2 F
0.05 (. A) 172.26 652.62 P
1 F
0.05 (binding) 188.54 652.62 P
2 F
0.05 ( is a mapping between a v) 222.15 652.62 P
0.05 (ariable and a) 336.41 652.62 P
1 F
0.05 ( value-cell) 392.7 652.62 P
2 F
0.05 ( which holds the v) 438.87 652.62 P
0.05 (ar-) 519.44 652.62 P
-0.05 (iable\325) 63.65 639.62 P
-0.05 (s v) 88.09 639.62 P
-0.05 (alue. A) 100.3 639.62 P
1 F
-0.05 (\337uid) 134.73 639.62 P
2 F
-0.05 ( binding is a binding which has dynamic e) 154.28 639.62 P
-0.05 (xtent, and shado) 339.52 639.62 P
-0.05 (ws an) 410.95 639.62 P
-0.05 (y outermost bindings.) 436.09 639.62 P
0.15 (Fluid v) 63.65 626.62 P
0.15 (ariables may ha) 95 626.62 P
0.15 (v) 164.12 626.62 P
0.15 (e their bindings changed with) 169.45 626.62 P
0 F
0.15 (\337uid-bind) 303.1 626.62 P
2 F
0.15 (, which is a primiti) 349.58 626.62 P
0.15 (v) 432.71 626.62 P
0.15 (e mechanism for cre-) 438.04 626.62 P
0.28 0.12 (ating ne) 63.65 613.62 B
0.28 0.12 (w bindings with dynamic e) 99.76 613.62 B
0.28 0.12 (xtent. Fluid v) 222.91 613.62 B
0.28 0.12 (ariables are visible in the module namespace, b) 283.87 613.62 B
0.28 0.12 (ut their) 499.05 613.62 B
0.28 0.25 (bindings \050and hence v) 63.65 600.62 B
0.28 0.25 (alue-cells\051 e) 166.19 600.62 B
0.28 0.25 (xist in the dynamic en) 222.94 600.62 B
0.28 0.25 (vironment. The mechanism includes a small) 326.15 600.62 B
-0.04 (amount of e) 63.65 587.62 P
-0.04 (xtensibility) 115.96 587.62 P
-0.04 (, and it is hoped that more comple) 164.76 587.62 P
-0.04 (x mechanisms \050such as \337uid-binding of slots\051 can) 314.05 587.62 P
(be b) 63.65 574.62 T
(uilt from it.) 82.06 574.62 T
0.28 0 (Fluid v) 63.65 549.62 B
0.28 0 (ariables contain a pri) 95.16 549.62 B
0.28 0 (v) 187.77 549.62 B
0.28 0 (ate v) 193 549.62 B
0.28 0 (alue-cell per thread. Whene) 214.1 549.62 B
0.28 0 (v) 336.33 549.62 B
0.28 0 (er a thread is created, the v) 341.67 549.62 B
0.28 0 (alue of the f) 461.39 549.62 B
0.28 0 (luid) 514.52 549.62 B
0.28 0.05 (v) 63.65 536.62 B
0.28 0.05 (ariable is implicitly bound in the dynamic en) 68.92 536.62 B
0.28 0.05 (vironment of that thread, and its initial v) 269.76 536.62 B
0.28 0.05 (alue is the thread-) 451.41 536.62 B
0.28 0.1 (independent v) 63.65 523.62 B
0.28 0.1 (alue resulting from e) 126.94 523.62 B
0.28 0.1 (v) 220.9 523.62 B
0.28 0.1 (aluation the initialization e) 226.23 523.62 B
0.28 0.1 (xpression of the f) 347.37 523.62 B
0.28 0.1 (luid v) 426.04 523.62 B
0.28 0.1 (ariable def) 452 523.62 B
0.28 0.1 (inition.) 499.48 523.62 B
0.14 (The f) 63.65 510.62 P
0.14 (act that the v) 87.2 510.62 P
0.14 (alue-cells are al) 143.87 510.62 P
0.14 (w) 213.07 510.62 P
0.14 (ays thread-local means that \337uid v) 220.9 510.62 P
0.14 (ariables may be used as thread local) 372.56 510.62 P
-0.12 (v) 63.65 497.62 P
-0.12 (ariables, e) 68.87 497.62 P
-0.12 (v) 113.07 497.62 P
-0.12 (en if the) 118.41 497.62 P
-0.12 (y are not e) 154.04 497.62 P
-0.12 (xplicitly re-bound. The thread locality of \337uid v) 199.64 497.62 P
-0.12 (ariables is an important fea-) 409.33 497.62 P
0.09 (ture for programs which mak) 63.65 484.62 P
0.09 (e use of threads, and it is for this reason that \337uid v) 192.22 484.62 P
0.09 (ariables are de\336ned in the) 418.24 484.62 P
(threads library) 63.65 471.62 T
(.) 126.78 471.62 T
-0.24 (The thread-local nature of the initial binding of \337uid v) 63.65 446.62 P
-0.24 (ariables may not be optimal for all problem domains.) 299.83 446.62 P
0.28 0.05 (F) 63.65 433.62 B
0.28 0.05 (or instance a shared, global, outermost binding may be desirable, or alternati) 69.65 433.62 B
0.28 0.05 (v) 413.23 433.62 B
0.28 0.05 (ely) 418.62 433.62 B
0.28 0.05 (, a thread may w) 431.51 433.62 B
0.28 0.05 (ant to) 506.36 433.62 B
-0.06 (inherit current bindings from the parent thread at creation time, gi) 63.65 420.62 P
-0.06 (ving a \322fork\323 type model of state inherit-) 352.11 420.62 P
0.28 0.09 (ance. These alternati) 63.65 407.62 B
0.28 0.09 (v) 156.49 407.62 B
0.28 0.09 (es are not implemented in this library) 161.91 407.62 B
0.28 0.09 (. In principle, it should be possible to imple-) 330.55 407.62 B
0.28 0.14 (ment either or both of these mechanisms at a later date, possibly using adjecti) 63.65 394.62 B
0.28 0.14 (v) 419.19 394.62 B
0.28 0.14 (es to the) 424.67 394.62 B
0 F
0.28 0.14 (f) 466.33 394.62 B
0.28 0.14 (luid-v) 469.53 394.62 B
0.28 0.14 (ariable) 497.79 394.62 B
2 F
0.28 0.09 (def) 63.65 381.62 B
0.28 0.09 (inition form to specify the mechanism required, Maybe it w) 77.35 381.62 B
0.28 0.09 (ould be useful to introduce the def) 347.43 381.62 B
0.28 0.09 (inition) 502.4 381.62 B
(form) 63.65 368.62 T
0 F
(\337uid-constant) 87.78 368.62 T
2 F
( one day) 152.57 368.62 T
(, too.) 189.12 368.62 T
FMENDPAGE
%%EndPage: "6" 12
%%Page: "7" 13
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(7) 526.09 84.9 T
3 12 Q
(3.3) 63.65 736.95 T
(Threads-Related Class Hierar) 90.65 736.95 T
(c) 257.8 736.95 T
(h) 264.35 736.95 T
(y) 271.44 736.95 T
2 11 Q
(Figure 2.) 206 707.62 T
(Dylan Threads-Related Classes) 251.22 707.62 T
63.65 105.95 531.65 744.95 C
63.65 132.95 531.65 703.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
68.15 180.95 527.15 675.95 18 RR
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
104.15 261.95 491.15 360.95 18 RR
7 X
V
0 X
N
0 10 Q
(<thr) 118.6 291.05 T
(ead>) 137.45 291.05 T
(<synchr) 303.59 552.25 T
(onization>) 338 552.25 T
(<lock>) 356.15 489.25 T
(<semaphor) 428.15 291.05 T
(e>) 475.89 291.05 T
(<simple-lock>) 277.86 291.05 T
140.15 306.95 302.15 612.95 2 L
N
338.15 567.95 302.15 612.95 2 L
N
365.15 504.95 338.15 540.95 2 L
N
311.15 306.95 347.15 405.95 2 L
N
383.15 306.95 347.15 405.95 2 L
N
2 12 Q
(SEALED) 437.15 337.56 T
(ABSTRA) 86.47 550.77 T
(CT) 133.33 550.77 T
68.15 378.95 527.15 378.95 2 L
N
(CONCRETE) 95.15 210.56 T
194.15 648.95 401.15 675.95 R
N
1 11 Q
(THREADS-RELA) 225.59 658.91 T
(TED CLASSES) 302.79 658.91 T
0 10 Q
(<object>) 282.65 624.25 T
86.15 243.95 509.15 513.95 18 RR
N
2 12 Q
(INST) 414.46 487.77 T
(ANTIABLE) 440 487.77 T
0 10 Q
(<noti\336cation>) 188.41 291.05 T
338.15 540.95 221.15 306.95 2 L
N
(<r) 347.15 291.05 T
(ecursi) 357.11 291.05 T
(v) 382.56 291.05 T
(e-lock>) 387.46 291.05 T
446.15 306.95 374.15 477.95 2 L
N
(<exclusi) 311.15 417.25 T
(v) 345.64 417.25 T
(e-lock>) 350.54 417.25 T
374.15 477.95 356.15 432.95 2 L
N
63.65 105.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "7" 13
%%Page: "8" 14
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(8) 63.65 84.9 T
3 12 Q
(3.4) 63.65 736.95 T
(Librar) 90.65 736.95 T
(y Ref) 124.78 736.95 T
(erence) 154 736.95 T
3 10 Q
(3.4.1) 63.65 702.29 T
(<thread>) 90.89 702.29 T
0 11 Q
(<thread>) 63.65 671.62 T
2 F
([Instantiable Sealed Class]) 414.33 671.62 T
1 F
(Super) 81.65 646.62 T
(classes) 106.9 646.62 T
0 F
(<object>) 99.65 624.62 T
1 F
(Requir) 81.65 599.62 T
(ed-init-k) 111.18 599.62 T
(e) 148.34 599.62 T
(ywor) 152.9 599.62 T
(ds) 174.49 599.62 T
0 F
(function:) 99.65 577.62 T
2 F
-0.13 (A) 171.65 577.62 P
0 F
-0.13 (<function>) 182.21 577.62 P
2 F
-0.13 ( which will be called with no ar) 233.86 577.62 P
-0.13 (guments in the empty dynamic en) 371.74 577.62 P
-0.13 (vi-) 519.43 577.62 P
-0.14 (ronment of the ne) 171.65 564.62 P
-0.14 (w thread. This function will be runnable immediately) 248.86 564.62 P
-0.14 (. If desired,) 481.83 564.62 P
0.28 0.02 (the ne) 171.65 551.62 B
0.28 0.02 (w thread may be suspended \050almost\051 immediately on creation by arranging) 198.33 551.62 B
(for it to synchronize on an una) 171.65 538.62 T
(v) 305.85 538.62 T
(ailable resource on entry to the function.) 311.07 538.62 T
1 F
(Init-k) 81.65 513.62 T
(e) 105.36 513.62 T
(ywor) 109.92 513.62 T
(ds) 131.51 513.62 T
0 F
(priority:) 99.65 491.62 T
2 F
0.28 0.14 (The scheduling priority of the thread, which is a signed inte) 171.65 491.62 B
0.28 0.14 (ger) 445.21 491.62 B
0.28 0.14 (. The higher the) 459.07 491.62 B
0.28 0 (v) 171.65 478.62 B
0.28 0 (alue, the greater the priority) 176.87 478.62 B
0.28 0 (.) 299.79 478.62 B
0 F
0.28 0 ( 0) 302.54 478.62 B
2 F
0.28 0 ( is the def) 311.07 478.62 B
0.28 0 (ault v) 354.87 478.62 B
0.28 0 (alue, and is the v) 379.62 478.62 B
0.28 0 (alue of) 454.71 478.62 B
0 F
0.28 0 ($normal-) 488.26 478.62 B
0.28 0.03 (priority) 171.65 465.62 B
2 F
0.28 0.03 (, one of se) 207.8 465.62 B
0.28 0.03 (v) 253.84 465.62 B
0.28 0.03 (eral constants which correspond to useful priority le) 259.2 465.62 B
0.28 0.03 (v) 491.01 465.62 B
0.28 0.03 (els. The) 496.37 465.62 B
(library currently of) 171.65 452.62 T
(fers no w) 255.07 452.62 T
(ay to change the priority of a thread dynamically) 295.89 452.62 T
(.) 509.63 452.62 T
0 F
(name:) 99.65 430.62 T
2 F
-0.09 (If supplied, this should be a) 171.65 430.62 P
0 F
-0.09 (<string>) 295.48 430.62 P
2 F
-0.09 (, which names the thread object for purposes) 335.52 430.62 P
0.28 0.05 (which might include deb) 171.65 417.62 B
0.28 0.05 (ugging, or supporting inter) 282.59 417.62 B
0.28 0.05 (-process communication in a) 402.61 417.62 B
(future v) 171.65 404.62 T
(ersion of the library) 206 404.62 T
(.) 292.35 404.62 T
1 F
(Description) 81.65 379.62 T
2 F
-0.14 (The class representing a thread of control. Note that there is currently no ability to introspect or set) 99.65 357.62 P
-0.14 (the running state or priority of a thread. These abilities are considered to be related to de) 99.65 344.62 P
-0.14 (v) 485.37 344.62 P
-0.14 (elopment) 490.71 344.62 P
0.1 (en) 99.65 331.62 P
0.1 (vironments, deb) 109.59 331.62 P
0.1 (uggers or schedulers and were deliberately omitted. There is also no w) 180.36 331.62 P
0.1 (ay to ter-) 491.73 331.62 P
-0.02 (minate a thread, mainly because there is no clear implementation technique which is both portable) 99.65 318.62 P
0.28 0.12 (to common operating systems, and will also ensure that cleanups happen. There is currently no) 99.65 305.62 B
0.28 0.08 (w) 99.65 292.62 B
0.28 0.08 (ay to signal a condition on another thread. If there w) 107.56 292.62 B
0.28 0.08 (as, it might pro) 344.98 292.62 B
0.28 0.08 (v) 413.48 292.62 B
0.28 0.08 (e a safe w) 418.89 292.62 B
0.28 0.08 (ay to terminate) 464.04 292.62 B
(threads.) 99.65 279.62 T
1 F
(Oper) 81.65 254.62 T
(ations) 104.09 254.62 T
2 F
(The class) 99.65 232.62 T
0 F
(<thr) 143.64 232.62 T
(ead>) 164.37 232.62 T
2 F
( pro) 187.14 232.62 T
(vides the follo) 204.39 232.62 T
(wing operations:) 267.06 232.62 T
0 F
(thr) 99.65 210.62 T
(ead-name) 114.11 210.62 T
2 F
(Returns the name of a thread, or) 171.65 210.62 T
0 F
(#f) 315.84 210.62 T
2 F
( if no name w) 325 210.62 T
(as supplied.) 385.38 210.62 T
0 F
(join-thr) 99.65 188.62 T
(ead) 136.11 188.62 T
2 F
0.22 (Blocks until one of the speci\336ed threads has terminated, and returns the v) 171.65 188.62 P
0.22 (alues of) 496.91 188.62 P
(its function.) 171.65 175.62 T
1 F
(Associated Constants) 81.65 150.62 T
2 F
-0.05 (The follo) 99.65 128.62 P
-0.05 (wing constants \050in order of increasing v) 139.96 128.62 P
-0.05 (alue\051 may be useful as priority v) 314.16 128.62 P
-0.05 (alues for threads:) 455.98 128.62 P
FMENDPAGE
%%EndPage: "8" 14
%%Page: "9" 15
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(9) 526.09 84.9 T
0 11 Q
($lo) 99.65 737.62 T
(w-priority) 113.6 737.62 T
($backgr) 99.65 715.62 T
(ound-priority) 137.95 715.62 T
($normal-priority) 99.65 693.62 T
($interacti) 99.65 671.62 T
(v) 144.75 671.62 T
(e-priority) 150.14 671.62 T
($high-priority) 99.65 649.62 T
(thread-name) 63.65 620.62 T
2 F
([Function]) 485.21 620.62 T
1 F
(Signatur) 81.65 595.62 T
(e) 119.14 595.62 T
0 F
(\050thr) 99.65 576.62 T
(ead :: <thr) 117.78 576.62 T
(ead>\051 => \050name :: false-or\050<string>\051\051) 167.84 576.62 T
1 F
(Description) 81.65 551.62 T
2 F
(Returns the name of the thread as a) 99.65 529.62 T
0 F
(<string>) 257.28 529.62 T
2 F
(, or) 297.32 529.62 T
(, if the thread is unnamed, returns) 311.54 529.62 T
0 F
(#f) 462.15 529.62 T
2 F
(.) 471.32 529.62 T
0 F
(join-thread) 63.65 500.62 T
2 F
([Function]) 485.21 500.62 T
1 F
(Signatur) 81.65 475.62 T
(e) 119.14 475.62 T
0 F
(\050thr) 99.65 456.62 T
(ead1 :: <thr) 117.78 456.62 T
(ead>, #r) 173.34 456.62 T
(est mor) 211.79 456.62 T
(e-thr) 246.72 456.62 T
(eads\051 => \050thr) 269.73 456.62 T
(ead, #r) 330.34 456.62 T
(est r) 362.53 456.62 T
(esults\051) 382.79 456.62 T
1 F
(Ar) 81.65 431.62 T
(guments) 92.24 431.62 T
0 F
(thr) 99.65 409.62 T
(ead1) 114.11 409.62 T
2 F
(A thread object to w) 171.65 409.62 T
(ait for) 261.35 409.62 T
(.) 287.32 409.62 T
0 F
(mor) 99.65 387.62 T
(e-thr) 119 387.62 T
(eads) 142.01 387.62 T
2 F
(More thread objects to w) 171.65 387.62 T
(ait for) 281.52 387.62 T
(.) 307.49 387.62 T
1 F
(V) 81.65 362.62 T
(alues) 87.15 362.62 T
0 F
(thr) 99.65 340.62 T
(ead) 114.11 340.62 T
2 F
(The thread that e) 171.65 340.62 T
(xited) 245.71 340.62 T
0 F
(r) 99.65 318.62 T
(esults) 104.33 318.62 T
2 F
(The v) 171.65 318.62 T
(alues returned from the thread that w) 196.73 318.62 T
(as joined) 359.13 318.62 T
1 F
(Description) 81.65 293.62 T
2 F
0.28 0.04 (Returns one of the supplied threads which has f) 99.65 271.62 B
0.28 0.04 (inished \050because its function has returned\051, along) 312.07 271.62 B
0.28 0.12 (with an) 99.65 258.62 B
0.28 0.12 (y v) 133.27 258.62 B
0.28 0.12 (alues returned by the thread.) 147.37 258.62 B
0 F
0.28 0.12 (join-thr) 279.94 258.62 B
0.28 0.12 (ead) 317.34 258.62 B
2 F
0.28 0.12 ( will block if necessary) 334.19 258.62 B
0.28 0.12 (, while w) 439.42 258.62 B
0.28 0.12 (aiting for a) 481.54 258.62 B
-0.18 (thread to \336nish. It is an error to pass a thread to) 99.65 245.62 P
0 F
-0.18 ( join-thr) 305.41 245.62 P
-0.18 (ead) 344.44 245.62 P
2 F
-0.18 ( if it has already been joined in a pre) 360.94 245.62 P
-0.18 (vi-) 519.43 245.62 P
0.28 0.12 (ous call to) 99.65 232.62 B
0 F
0.28 0.12 (join-thr) 149.86 232.62 B
0.28 0.12 (ead) 187.27 232.62 B
2 F
0.28 0.12 (. It is an error to pass a thread to) 204.12 232.62 B
0 F
0.28 0.12 (join-thr) 355.73 232.62 B
0.28 0.12 (ead) 393.13 232.62 B
2 F
0.28 0.12 ( if that thread is also being) 409.99 232.62 B
(processed by another simultaneous call to) 99.65 219.62 T
0 F
(join-thr) 286.01 219.62 T
(ead) 322.48 219.62 T
2 F
( from another thread.) 338.98 219.62 T
1 F
(Exceptions) 81.65 194.62 T
0 F
(join-thr) 99.65 172.62 T
(ead) 136.11 172.62 T
2 F
( may signal the follo) 152.61 172.62 T
(wing condition:) 242.78 172.62 T
0 F
(<duplicate-join-err) 99.65 150.62 T
(or>) 189.43 150.62 T
2 F
0.28 0.01 (A condition of this class \050a subclass of) 171.65 137.62 B
0 F
0.28 0.01 (<err) 346.71 137.62 B
0.28 0.01 (or>) 367.48 137.62 B
2 F
0.28 0.01 (\051 may be signalled when a thread) 384.18 137.62 B
0.28 0.13 (is passed to) 171.65 124.62 B
0 F
0.28 0.13 (join-thr) 227.64 124.62 B
0.28 0.13 (ead) 265.15 124.62 B
2 F
0.28 0.13 (, if that thread has been pre) 282.05 124.62 B
0.28 0.13 (viously joined by an earlier) 406.65 124.62 B
FMENDPAGE
%%EndPage: "9" 15
%%Page: "10" 16
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(10) 63.65 84.9 T
2 11 Q
0.28 0.2 (call to) 171.65 737.62 B
0 F
0.28 0.2 (join-thr) 203.77 737.62 B
0.28 0.2 (ead) 241.87 737.62 B
2 F
0.28 0.2 (, or if that thread is currently acti) 258.99 737.62 B
0.28 0.2 (v) 413 737.62 B
0.28 0.2 (e in another call to) 418.54 737.62 B
0 F
0.28 0.2 (join-) 508.83 737.62 B
(thr) 171.65 724.62 T
(ead) 186.11 724.62 T
2 F
(.) 202.61 724.62 T
0 F
(thread-yield) 63.65 695.62 T
2 F
([Function]) 485.21 695.62 T
1 F
(Signatur) 81.65 670.62 T
(e) 119.14 670.62 T
0 F
(\050\051 => \050\051) 99.65 651.62 T
1 F
(Description) 81.65 626.62 T
2 F
0.28 0.2 (Causes the current thread to yield control to the thread scheduler) 99.65 604.62 B
0.28 0.2 (. This may ha) 398.96 604.62 B
0.28 0.2 (v) 462.02 604.62 B
0.28 0.2 (e the ef) 467.55 604.62 B
0.28 0.2 (fect of) 501.78 604.62 B
0.04 (allo) 99.65 591.62 P
0.04 (wing other threads to run \321 and may be essential to a) 115.87 591.62 P
0.04 (v) 353.42 591.62 P
0.04 (oid deadlock in a co-operati) 358.7 591.62 P
0.04 (v) 481.38 591.62 P
0.04 (e schedul-) 486.71 591.62 P
(ing en) 99.65 578.62 T
(vironment.) 126.4 578.62 T
0 F
(current-thread) 63.65 549.62 T
2 F
([Function]) 485.21 549.62 T
1 F
(Signatur) 81.65 524.62 T
(e) 119.14 524.62 T
0 F
(\050\051 => \050thr) 99.65 505.62 T
(ead :: <thr) 143.14 505.62 T
(ead>\051) 193.2 505.62 T
1 F
(Description) 81.65 480.62 T
2 F
(Returns the current thread.) 99.65 458.62 T
3 10 Q
(3.4.2) 63.65 424.29 T
(<sync) 90.89 424.29 T
(hr) 119.42 424.29 T
(onization>) 129.22 424.29 T
0 11 Q
(<synchronization>) 63.65 393.62 T
2 F
([Abstract Open Class]) 433.89 393.62 T
1 F
(Super) 81.65 368.62 T
(classes) 106.9 368.62 T
0 F
(<object>) 99.65 346.62 T
1 F
(Init-k) 81.65 321.62 T
(e) 105.36 321.62 T
(ywor) 109.92 321.62 T
(ds) 131.51 321.62 T
0 F
(name:) 99.65 299.62 T
2 F
-0.17 (If supplied, this should be a) 171.65 299.62 P
0 F
-0.17 (<string>) 294.98 299.62 P
2 F
-0.17 (, which names the synchronization object for) 335.02 299.62 P
0.28 0.06 (purposes which might include deb) 171.65 286.62 B
0.28 0.06 (ugging, or supporting inter) 325.51 286.62 B
0.28 0.06 (-process communi-) 445.79 286.62 B
(cation in a future v) 171.65 273.62 T
(ersion of the library) 254.58 273.62 T
(.) 340.93 273.62 T
1 F
(Oper) 81.65 248.62 T
(ations) 104.09 248.62 T
2 F
(The class) 99.65 226.62 T
0 F
(<synchr) 143.64 226.62 T
(onization>) 181.49 226.62 T
2 F
( provides the following operations:) 231.15 226.62 T
0 F
(wait-f) 99.65 204.62 T
(or) 126.86 204.62 T
2 F
(Block until synchronization can be achie) 171.65 204.62 T
(v) 350.71 204.62 T
(ed.) 356.04 204.62 T
0 F
(r) 99.65 182.62 T
(elease) 104.33 182.62 T
2 F
(Release the object to mak) 171.65 182.62 T
(e it a) 284.57 182.62 T
(v) 305.74 182.62 T
(ailable for synchronization.) 310.96 182.62 T
0 F
(synchr) 99.65 160.62 T
(onization-name) 131.23 160.62 T
2 F
(Returns the name of the synchronization object.) 171.65 147.62 T
FMENDPAGE
%%EndPage: "10" 16
%%Page: "11" 17
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(11) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.05 (The class of objects which are used for inter) 99.65 715.62 P
0.05 (-thread synchronization. There is currently no e) 294.13 715.62 P
0.05 (xplicit) 503.53 715.62 P
0.28 0.1 (mechanism in the library to block on a number of synchronization objects simultaneously) 99.65 702.62 B
0.28 0.1 (, until) 505.1 702.62 B
0.28 0.07 (synchronization can be achie) 99.65 689.62 B
0.28 0.07 (v) 229.42 689.62 B
0.28 0.07 (ed with one of them. This mechanism may be achie) 234.82 689.62 B
0.28 0.07 (v) 466.86 689.62 B
0.28 0.07 (ed instead by) 472.26 689.62 B
0.28 0.14 (creating a ne) 99.65 676.62 B
0.28 0.14 (w thread to w) 157.98 676.62 B
0.28 0.14 (ait for each synchronization object, and arranging for each thread to) 220.74 676.62 B
(release a noti\336cation once synchronization has been achie) 99.65 663.62 T
(v) 353.84 663.62 T
(ed.) 359.17 663.62 T
0 F
(wait-for) 63.65 634.62 T
2 F
([Open Generic Function]) 421.07 634.62 T
1 F
(Signatur) 81.65 609.62 T
(e) 119.14 609.62 T
0 F
(\050object :: <synchr) 99.65 590.62 T
(onization>, #k) 182.7 590.62 T
(ey timeout = #f\051 => \050success\051) 249.37 590.62 T
1 F
(Ar) 81.65 565.62 T
(guments) 92.24 565.62 T
0 F
(object) 99.65 543.62 T
2 F
(Synchronization object to w) 171.65 543.62 T
(ait for) 295.28 543.62 T
(.) 321.25 543.62 T
0 F
(timeout) 99.65 521.62 T
2 F
0.28 0.31 (T) 171.65 521.62 B
0.28 0.31 (ime-out interv) 178.29 521.62 B
0.28 0.31 (al. If the v) 245.22 521.62 B
0.28 0.31 (alue is) 294.67 521.62 B
0 F
0.28 0.31 (#f) 328.83 521.62 B
2 F
0.28 0.31 (\050the def) 341.94 521.62 B
0.28 0.31 (ault\051, the time-out interv) 378.46 521.62 B
0.28 0.31 (al ne) 494.54 521.62 B
0.28 0.31 (v) 517.15 521.62 B
0.28 0.31 (er) 522.79 521.62 B
0.28 0.2 (elapses. Otherwise the v) 171.65 508.62 B
0.28 0.2 (alue should be a) 283.94 508.62 B
0 F
0.28 0.2 (<r) 362.39 508.62 B
0.28 0.2 (eal>) 373.75 508.62 B
2 F
0.28 0.2 (, corresponding to the desired) 394.27 508.62 B
(interv) 171.65 495.62 T
(al in seconds.) 197.04 495.62 T
1 F
(V) 81.65 470.62 T
(alues) 87.15 470.62 T
0 F
(success) 99.65 448.62 T
2 F
0.28 0.21 (A true v) 171.65 448.62 B
0.28 0.21 (alue if synchronization w) 209.64 448.62 B
0.28 0.21 (as achie) 327.1 448.62 B
0.28 0.21 (v) 363.89 448.62 B
0.28 0.21 (ed, or) 369.43 448.62 B
0 F
0.28 0.21 (#f) 399.25 448.62 B
2 F
0.28 0.21 (to indicate that a time-out) 412.06 448.62 B
(occurred.) 171.65 435.62 T
1 F
(Description) 81.65 410.62 T
2 F
0.28 0.06 (This is the basic blocking primiti) 99.65 388.62 B
0.28 0.06 (v) 248.02 388.62 B
0.28 0.06 (e of the threads library) 253.42 388.62 B
0.28 0.06 (. The function blocks until the object is) 354.89 388.62 B
0.28 0.01 (a) 99.65 375.62 B
0.28 0.01 (v) 104.32 375.62 B
0.28 0.01 (ailable and synchronization can be achie) 109.55 375.62 B
0.28 0.01 (v) 288.99 375.62 B
0.28 0.01 (ed, or the time-out interv) 294.33 375.62 B
0.28 0.01 (al has e) 405 375.62 B
0.28 0.01 (xpired. A non-block-) 438.42 375.62 B
-0.27 (ing synchronization may be attempted by specifying a timeout of 0. Indi) 99.65 362.62 P
-0.27 (vidual methods may adjust) 414.2 362.62 P
-0.14 (the state of the synchronization object on synchronization. The function returns a true v) 99.65 349.62 P
-0.14 (alue if syn-) 482.45 349.62 P
-0.13 (chronization is achie) 99.65 336.62 P
-0.13 (v) 190.15 336.62 P
-0.13 (ed before this interv) 195.49 336.62 P
-0.13 (al elapses; otherwise, it returns) 283.12 336.62 P
0 F
-0.13 (#f) 421.18 336.62 P
-0.13 (.) 430.17 336.62 P
2 F
-0.13 ( Once synchronization) 432.92 336.62 P
0.28 0.06 (has been achie) 99.65 323.62 B
0.28 0.06 (v) 164.93 323.62 B
0.28 0.06 (ed, the side-ef) 170.33 323.62 B
0.28 0.06 (fects of other threads will be visible, at least up to the point where) 233.55 323.62 B
(the) 99.65 310.62 T
(y last passed the object to) 112.93 310.62 T
0 F
(r) 228.41 310.62 T
(elease) 233.1 310.62 T
2 F
(.) 260.59 310.62 T
0 F
(release) 63.65 281.62 T
2 F
([Open Generic Function]) 421.07 281.62 T
1 F
(Signatur) 81.65 256.62 T
(e) 119.14 256.62 T
0 F
(\050object :: <synchr) 99.65 237.62 T
(onization>, #k) 182.7 237.62 T
(ey\051 => \050\051) 249.37 237.62 T
1 F
(Ar) 81.65 212.62 T
(guments) 92.24 212.62 T
0 F
(object) 99.65 190.62 T
2 F
(Synchronization object to release.) 171.65 190.62 T
1 F
(V) 81.65 165.62 T
(alues) 87.15 165.62 T
2 F
(None) 99.65 143.62 T
FMENDPAGE
%%EndPage: "11" 17
%%Page: "12" 18
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(12) 63.65 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
-0.21 (Releases the supplied synchronization object, potentially making it a) 99.65 715.62 P
-0.21 (v) 399.89 715.62 P
-0.21 (ailable to other threads. Indi-) 405.11 715.62 P
-0.02 (vidual methods describe what this means for each class of synchronization. This function does not) 99.65 702.62 P
(block for an) 99.65 689.62 T
(y of the subclasses of) 152.63 689.62 T
0 F
(<synchr) 249.48 689.62 T
(onization>) 287.33 689.62 T
2 F
( pro) 336.99 689.62 T
(vided by the library) 354.24 689.62 T
(.) 439.99 689.62 T
1 F
(Exceptions) 81.65 664.62 T
2 F
(Indi) 99.65 642.62 T
(vidual methods may pro) 117.09 642.62 T
(vide their o) 223.56 642.62 T
(wn policies.) 273.39 642.62 T
0 F
(synchronization-name) 63.65 613.62 T
2 F
([Open Generic Function]) 421.07 613.62 T
1 F
(Signatur) 81.65 588.62 T
(e) 119.14 588.62 T
0 F
(\050object :: <synchr) 99.65 569.62 T
(onization>\051 => \050name :: false-or\050<string>\051\051) 182.7 569.62 T
1 F
(Description) 81.65 544.62 T
2 F
0.28 0.09 (Returns the name of the synchronization object, if it w) 99.65 522.62 B
0.28 0.09 (as specif) 346.56 522.62 B
0.28 0.09 (ied with the) 385.24 522.62 B
0 F
0.28 0.09 (name:) 441.94 522.62 B
2 F
0.28 0.09 ( initialization) 471.73 522.62 B
(k) 99.65 509.62 T
(e) 105.04 509.62 T
(yw) 109.76 509.62 T
(ord. Otherwise) 123.09 509.62 T
0 F
(#f) 191.21 509.62 T
2 F
( is returned.) 200.38 509.62 T
3 10 Q
(3.4.3) 63.65 475.29 T
(<loc) 90.89 475.29 T
(k>) 110.98 475.29 T
0 11 Q
(<lock>) 63.65 444.62 T
2 F
([Abstract Instantiable Class]) 406.39 444.62 T
1 F
(Super) 81.65 419.62 T
(classes) 106.9 419.62 T
0 F
(<synchr) 99.65 397.62 T
(onization>) 137.5 397.62 T
1 F
(Description) 81.65 372.62 T
2 F
0.28 0.11 (Locks are synchronization objects which change state on synchronization \050using) 99.65 350.62 B
0 F
0.28 0.11 (wait-f) 467.3 350.62 B
0.28 0.11 (or) 495.17 350.62 B
2 F
0.28 0.11 (\051, and) 505.78 350.62 B
-0.07 (re) 99.65 337.62 P
-0.07 (v) 107.92 337.62 P
-0.07 (ert state on) 113.25 337.62 P
0 F
-0.07 (r) 164.06 337.62 P
-0.07 (elease) 168.75 337.62 P
2 F
-0.07 (. It is normally necessary for programs to ensure that locks are released, oth-) 196.24 337.62 P
-0.25 (erwise there is the possibility of deadlock. Locks may be used to restrict the access of other threads) 99.65 324.62 P
0.28 0.18 (to shared resources between the synchronization and the release. It is common for a protected) 99.65 311.62 B
0.04 (operation to be performed by body of code which is e) 99.65 298.62 P
0.04 (v) 335.58 298.62 P
0.04 (aluated in a single thread between synchro-) 340.81 298.62 P
0.28 0.06 (nization and release. A macro) 99.65 285.62 B
0 F
0.28 0.06 (with-lock) 236.6 285.62 B
2 F
0.28 0.06 (is pro) 284.21 285.62 B
0.28 0.06 (vided for this purpose. When a thread uses a lock) 309.43 285.62 B
(for mutual-e) 99.65 272.62 T
(xclusion in this w) 154.16 272.62 T
(ay) 231.98 272.62 T
(, the thread is said to o) 241.65 272.62 T
(wn the lock.) 340.67 272.62 T
0 F
(<lock>) 99.65 250.62 T
2 F
( has no direct instances; calling mak) 131.75 250.62 T
(e on) 291.11 250.62 T
0 F
(<lock>) 312.5 250.62 T
2 F
(returns an instance of) 347.35 250.62 T
0 F
(<simple-lock>) 444.49 250.62 T
2 F
(.) 510.81 250.62 T
1 F
(Oper) 81.65 225.62 T
(ations) 104.09 225.62 T
2 F
(The class) 99.65 203.62 T
0 F
(<lock>) 143.64 203.62 T
2 F
( provides the following operations:) 175.74 203.62 T
0 F
(with-lock) 99.65 181.62 T
2 F
(Ex) 171.65 181.62 T
(ecute a body of code between) 183.7 181.62 T
0 F
(wait-f) 316.88 181.62 T
(or) 344.1 181.62 T
2 F
( and) 354.48 181.62 T
0 F
(r) 375.86 181.62 T
(elease) 380.55 181.62 T
2 F
( operations.) 408.04 181.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 18
%%Page: "13" 19
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(13) 520.53 84.9 T
0 11 Q
(with-lock) 63.65 737.62 T
2 F
([Macro]) 495.61 737.62 T
1 F
(Syntax) 81.65 712.62 T
0 F
(with-lock \050lock :: <lock>, #k) 99.65 693.62 T
(ey) 231.55 693.62 T
1 F
(k) 244.68 693.62 T
(e) 249.46 693.62 T
(ys) 254.01 693.62 T
0 F
(\051) 263.17 693.62 T
1 F
(body) 121.25 680.62 T
0 F
([failur) 99.65 667.62 T
(e) 129.39 667.62 T
1 F
(failur) 137.03 667.62 T
(e-e) 161.07 667.62 T
(xpr) 174.28 667.62 T
0 F
(]) 188.95 667.62 T
(end) 99.65 654.62 T
1 F
(Exceptions) 81.65 629.62 T
0 F
(with-lock) 99.65 607.62 T
2 F
( may signal a condition of the follo) 143.65 607.62 T
(wing class \050a subclass of) 297.67 607.62 T
0 F
(<serious-condition>) 409.18 607.62 T
2 F
(\051:) 502.39 607.62 T
0 F
(<timeout-expir) 99.65 585.62 T
(ed>) 169.87 585.62 T
2 F
0.28 0.03 (This is signalled when) 171.65 572.62 B
0 F
0.28 0.03 (with-lock) 274.86 572.62 B
2 F
0.28 0.03 ( did not succeed in claiming the lock within the) 319.12 572.62 B
(timeout period.) 171.65 559.62 T
1 F
(Description) 81.65 534.62 T
2 F
-0.16 (Ex) 99.65 512.62 P
-0.16 (ecute the body with the lock held. If a) 111.7 512.62 P
0 F
-0.16 (failur) 279.5 512.62 P
-0.16 (e) 305.58 512.62 P
2 F
-0.16 ( clause is supplied, then it will be e) 310.46 512.62 P
-0.16 (v) 463.2 512.62 P
-0.16 (aluated and its) 468.42 512.62 P
0.28 0.08 (v) 99.65 499.62 B
0.28 0.08 (alues returned from) 104.95 499.62 B
0 F
0.28 0.08 (with-lock) 196.21 499.62 B
2 F
0.28 0.08 ( if the lock cannot be claimed \050because a timeout occurred\051. The) 240.9 499.62 B
0.28 0.07 (def) 99.65 486.62 B
0.28 0.07 (ault, if no) 113.79 486.62 B
0 F
0.28 0.07 (failur) 160.64 486.62 B
0.28 0.07 (e) 187.13 486.62 B
2 F
0.28 0.07 ( clause is supplied, is to signal an e) 192.08 486.62 B
0.28 0.07 (xception of class) 350.98 486.62 B
0 F
0.28 0.07 (<timeout-expir) 429.7 486.62 B
0.28 0.07 (ed>) 500.87 486.62 B
2 F
0.28 0.07 (. If) 518.34 486.62 B
0.28 0.01 (there is no f) 99.65 473.62 B
0.28 0.01 (ailure,) 152.75 473.62 B
0 F
0.28 0.01 (with-lock) 183.67 473.62 B
2 F
0.28 0.01 ( returns the results of e) 227.77 473.62 B
0.28 0.01 (v) 329.67 473.62 B
0.28 0.01 (aluating the body) 334.91 473.62 B
0.28 0.01 (. As an e) 411.32 473.62 B
0.28 0.01 (xample, if no) 450.58 473.62 B
0 F
0.28 0.01 (fail-) 512.67 473.62 B
(ur) 99.65 460.62 T
(e) 110.45 460.62 T
2 F
( clause is supplied, the macro e) 115.33 460.62 T
(xpands into code equi) 252.34 460.62 T
(v) 348.3 460.62 T
(alent to the follo) 353.53 460.62 T
(wing:) 425.67 460.62 T
0 F
(if \050) 99.65 441.62 T
(wait-f) 121.25 441.62 T
(or\050lock,) 148.46 441.62 T
1 F
(k) 187.57 441.62 T
(e) 192.34 441.62 T
(ys ...) 196.9 441.62 T
0 F
(\051\051) 217.06 441.62 T
(block \050\051) 121.25 428.62 T
1 F
(body ...) 135.65 415.62 T
0 F
(cleanup) 121.25 402.62 T
(r) 135.65 389.62 T
(elease\050lock\051) 140.33 389.62 T
(end block) 121.25 376.62 T
(else) 99.65 363.62 T
(signal\050mak) 121.25 350.62 T
(e\050<timeout-expir) 173.09 350.62 T
(ed>, synchr) 251.86 350.62 T
(onization: lock\051) 306.21 350.62 T
(end if) 99.65 337.62 T
(<semaphore>) 63.65 306.62 T
2 F
([Instantiable Sealed Class]) 414.33 306.62 T
1 F
(Super) 81.65 281.62 T
(classes) 106.9 281.62 T
0 F
(<lock>) 99.65 259.62 T
1 F
(Description) 81.65 234.62 T
0 F
0.28 0.14 (<semaphor) 99.65 212.62 B
0.28 0.14 (e>) 153.44 212.62 B
2 F
0.28 0.14 ( is a class representing a traditional counting semaphore. An instance of) 164.88 212.62 B
0 F
0.28 0.14 (<sema-) 497.32 212.62 B
0.28 0 (phor) 99.65 199.62 B
0.28 0 (e>) 122.08 199.62 B
2 F
0.28 0 ( contains a counter in its internal state. Calling) 133.24 199.62 B
0 F
0.28 0 (r) 343.08 199.62 B
0.28 0 (elease) 347.77 199.62 B
2 F
0.28 0 ( on a semaphore will increment the) 375.28 199.62 B
-0.22 (internal count. Calling) 99.65 186.62 P
0 F
-0.22 (wait-f) 200.41 186.62 P
-0.22 (or) 227.63 186.62 P
2 F
-0.22 ( on a semaphore will decrement the internal count, unless it is zero,) 238.01 186.62 P
0.28 0.07 (in which case the thread will block until another thread releases the semaphore. Semaphores are) 99.65 173.62 B
0.28 0.15 (less ef) 99.65 160.62 B
0.28 0.15 (f) 128.5 160.62 B
0.28 0.15 (icient than e) 131.71 160.62 B
0.28 0.15 (xclusi) 187.81 160.62 B
0.28 0.15 (v) 214.72 160.62 B
0.28 0.15 (e locks, b) 220.2 160.62 B
0.28 0.15 (ut the) 263.89 160.62 B
0.28 0.15 (y ha) 289.65 160.62 B
0.28 0.15 (v) 308.94 160.62 B
0.28 0.15 (e asynchronous properties which may be useful) 314.43 160.62 B
0.28 0.18 (\050e.g. for managing queues, or pools of shared resources\051. Semaphores may be released by an) 99.65 147.62 B
0.28 0.18 (y) 526.15 147.62 B
0.28 0.13 (thread, so there is no b) 99.65 134.62 B
0.28 0.13 (uilt-in concept of a thread o) 203.57 134.62 B
0.28 0.13 (wning a semaphore. It is not necessary for a) 330.39 134.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 19
%%Page: "14" 20
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(14) 63.65 84.9 T
2 11 Q
0.24 (thread to release a semaphore after w) 99.65 737.62 P
0.24 (aiting for it \321 although semaphores may be used as locks if) 264.7 737.62 P
(the) 99.65 724.62 T
(y do.) 112.93 724.62 T
1 F
(Init-k) 81.65 699.62 T
(e) 105.36 699.62 T
(ywor) 109.92 699.62 T
(ds) 131.51 699.62 T
0 F
(initial-count:) 99.65 677.62 T
2 F
0.28 0.21 (This should be a non-ne) 171.65 677.62 B
0.28 0.21 (g) 283.15 677.62 B
0.28 0.21 (ati) 288.81 677.62 B
0.28 0.21 (v) 300.17 677.62 B
0.28 0.21 (e inte) 305.72 677.62 B
0.28 0.21 (ger) 331.23 677.62 B
0.28 0.21 (, corresponding to the initial state of the) 345.47 677.62 B
(internal counter) 171.65 664.62 T
(. The def) 240.39 664.62 T
(ault v) 279.68 664.62 T
(alue is 0.) 304.15 664.62 T
0 F
(maximum-count:) 99.65 642.62 T
2 F
0.28 0.09 (This should be a non-ne) 171.65 629.62 B
0.28 0.09 (g) 280.36 629.62 B
0.28 0.09 (ati) 285.89 629.62 B
0.28 0.09 (v) 296.88 629.62 B
0.28 0.09 (e inte) 302.31 629.62 B
0.28 0.09 (ger corresponding to the maximum permitted) 327.09 629.62 B
0.28 0.09 (v) 171.65 616.62 B
0.28 0.09 (alue of the internal counter) 176.96 616.62 B
0.28 0.09 (. The def) 298.34 616.62 B
0.28 0.09 (ault v) 338.95 616.62 B
0.28 0.09 (alue is the lar) 364.2 616.62 B
0.28 0.09 (gest v) 425.06 616.62 B
0.28 0.09 (alue supported by) 451.54 616.62 B
0.28 0.07 (the implementation, which is the v) 171.65 603.62 B
0.28 0.07 (alue of the constant) 327.44 603.62 B
0 F
0.28 0.07 ($semaphor) 418.69 603.62 B
0.28 0.07 (e-maximum-) 471.11 603.62 B
(count-limit) 171.65 590.62 T
2 F
(. This constant will not be smaller that) 223.59 590.62 T
0 F
(10000) 395 590.62 T
2 F
(.) 422.5 590.62 T
0 F
(release) 63.65 561.62 T
2 F
([Sealed Method]) 458.02 561.62 T
1 F
(Signatur) 81.65 536.62 T
(e) 119.14 536.62 T
0 F
(\050object :: <semaphor) 99.65 517.62 T
(e>, #k) 197.36 517.62 T
(ey\051 => \050\051) 225.52 517.62 T
1 F
(Exceptions) 81.65 492.62 T
0 F
(r) 99.65 470.62 T
(elease) 104.33 470.62 T
2 F
( may signal a condition of the follo) 131.82 470.62 T
(wing class \050which is a subclass of) 285.85 470.62 T
0 F
(<err) 437.07 470.62 T
(or>) 457.8 470.62 T
2 F
(\051.) 474.45 470.62 T
0 F
(<count-exceeded-err) 99.65 448.62 T
(or>) 196.13 448.62 T
2 F
0.21 (This may signalled when an attempt is made to release a) 171.65 435.62 P
0 F
0.21 (<semaphor) 424.79 435.62 P
0.21 (e>) 477.3 435.62 P
2 F
0.21 ( when the) 488.46 435.62 P
(internal counter is already at its maximum count.) 171.65 422.62 T
0 F
(<exclusive-lock>) 63.65 391.62 T
2 F
([Abstract Instantiable Class]) 406.39 391.62 T
1 F
(Super) 81.65 366.62 T
(classes) 106.9 366.62 T
0 F
(<lock>) 99.65 344.62 T
1 F
(Description) 81.65 319.62 T
0 F
0.07 (<exclusi) 99.65 297.62 P
0.07 (v) 137.59 297.62 P
0.07 (e-lock>) 142.98 297.62 P
2 F
0.07 ( is the class of locks for which threads cannot change the state of the lock unless) 177.35 297.62 P
0.04 (the) 99.65 284.62 P
0.04 (y o) 112.93 284.62 P
0.04 (wn it. An instance of) 126.44 284.62 P
0 F
0.04 (<exclusi) 221.37 284.62 P
0.04 (v) 259.3 284.62 P
0.04 (e-lock>) 264.69 284.62 P
2 F
0.04 ( may only be lock) 299.07 284.62 P
0.04 (ed by one thread at a time \050by call-) 377.96 284.62 P
0.28 0.06 (ing) 99.65 271.62 B
0 F
0.28 0.06 (wait-f) 116.97 271.62 B
0.28 0.06 (or) 144.54 271.62 B
2 F
0.28 0.06 ( on the lock\051. Once lock) 155.04 271.62 B
0.28 0.06 (ed, an) 263.42 271.62 B
0.28 0.06 (y attempt by an) 290.15 271.62 B
0.28 0.06 (y other thread to w) 359.83 271.62 B
0.28 0.06 (ait for the lock will) 445.04 271.62 B
0.28 0.05 (cause that thread to block. It is an error for a thread to release an) 99.65 258.62 B
0 F
0.28 0.05 (<exclusi) 393.26 258.62 B
0.28 0.05 (v) 431.6 258.62 B
0.28 0.05 (e-lock>) 437.04 258.62 B
2 F
0.28 0.05 ( if it does not) 471.77 258.62 B
0.28 0.12 (o) 99.65 245.62 B
0.28 0.12 (wn the lock. The notion of o) 105 245.62 B
0.28 0.12 (wnership is directly supported by the class, and a thread may test) 234.74 245.62 B
(whether an) 99.65 232.62 T
0 F
(<exclusi) 150.96 232.62 T
(v) 188.9 232.62 T
(e-lock>) 194.29 232.62 T
2 F
( is currently o) 228.67 232.62 T
(wned.) 289.19 232.62 T
0 F
-0.11 (<exclusi) 99.65 210.62 P
-0.11 (v) 137.59 210.62 P
-0.11 (e-lock>) 142.98 210.62 P
2 F
-0.11 ( has no direct instances; calling mak) 177.35 210.62 P
-0.11 (e on) 336.07 210.62 P
0 F
-0.11 (<exclusi) 357.24 210.62 P
-0.11 (v) 395.18 210.62 P
-0.11 (e-lock>) 400.57 210.62 P
2 F
-0.11 (returns an instance of) 437.58 210.62 P
0 F
(<simple-lock>) 99.65 197.62 T
2 F
(.) 165.97 197.62 T
1 F
(Init-k) 81.65 172.62 T
(e) 105.36 172.62 T
(ywor) 109.92 172.62 T
(ds) 131.51 172.62 T
(Oper) 81.65 147.62 T
(ations) 104.09 147.62 T
2 F
(The class) 99.65 125.62 T
0 F
(<exclusi) 143.64 125.62 T
(v) 181.58 125.62 T
(e-lock>) 186.97 125.62 T
2 F
(provides the following operations:) 224.09 125.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 20
%%Page: "15" 21
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(15) 520.53 84.9 T
0 11 Q
(o) 99.65 737.62 T
(wned?) 105.04 737.62 T
2 F
(T) 171.65 737.62 T
(ests to see if the lock is o) 177.6 737.62 T
(wned by the current thread.) 287.62 737.62 T
0 F
(release) 63.65 708.62 T
2 F
([GF Method]) 473.29 708.62 T
1 F
(Signatur) 81.65 683.62 T
(e) 119.14 683.62 T
0 F
(\050object :: <exclusi) 99.65 664.62 T
(v) 182.79 664.62 T
(e-lock>, #k) 188.18 664.62 T
(ey\051 => \050\051) 239.56 664.62 T
1 F
(Exceptions) 81.65 639.62 T
0 F
(r) 99.65 617.62 T
(elease) 104.33 617.62 T
2 F
( may signal a condition of the follo) 131.82 617.62 T
(wing class \050which is a subclass of) 285.85 617.62 T
0 F
(<err) 437.07 617.62 T
(or>) 457.8 617.62 T
2 F
(\051.) 474.45 617.62 T
0 F
(<not-o) 99.65 595.62 T
(wned-err) 130.25 595.62 T
(or>) 173.43 595.62 T
2 F
0.28 0.13 (This may be signalled when an attempt is made to release an) 171.65 582.62 B
0 F
0.28 0.13 (<exclusi) 452.04 582.62 B
0.28 0.13 (v) 490.99 582.62 B
0.28 0.13 (e-lock>) 496.51 582.62 B
2 F
(when the lock is not o) 171.65 569.62 T
(wned by the current thread.) 268.23 569.62 T
0 F
(owned?) 63.65 540.62 T
2 F
([Generic Function]) 447.64 540.62 T
1 F
(Signatur) 81.65 515.62 T
(e) 119.14 515.62 T
0 F
(\050object :: <simple-lock>\051 => \050o) 99.65 496.62 T
(wned? :: <boolean>\051) 241.92 496.62 T
1 F
(Description) 81.65 471.62 T
2 F
(A predicate to test whether the simple lock is lock) 99.65 449.62 T
(ed by the current thread.) 319.81 449.62 T
0 F
(<recursive-lock>) 63.65 418.62 T
2 F
([Instantiable Sealed Class]) 414.33 418.62 T
1 F
(Super) 81.65 393.62 T
(classes) 106.9 393.62 T
0 F
(<exclusi) 99.65 371.62 T
(v) 137.59 371.62 T
(e-lock>) 142.98 371.62 T
1 F
(Description) 81.65 346.62 T
2 F
0.28 0.24 (A thread may lock a) 99.65 324.62 B
0 F
0.28 0.24 (<r) 197.69 324.62 B
0.28 0.24 (ecursi) 209.12 324.62 B
0.28 0.24 (v) 238.52 324.62 B
0.28 0.24 (e-lock>) 244.15 324.62 B
2 F
0.28 0.24 ( multiple times, recursi) 280.18 324.62 B
0.28 0.24 (v) 387.83 324.62 B
0.28 0.24 (ely) 393.4 324.62 B
0.28 0.24 (, b) 406.83 324.62 B
0.28 0.24 (ut the lock must later be) 418.6 324.62 B
(released the same number of times. The lock will be freed on the last of these releases.) 99.65 311.62 T
0 F
(<simple-lock>) 63.65 280.62 T
2 F
([Instantiable Sealed Class]) 414.33 280.62 T
1 F
(Super) 81.65 255.62 T
(classes) 106.9 255.62 T
0 F
(<exclusi) 99.65 233.62 T
(v) 137.59 233.62 T
(e-lock>) 142.98 233.62 T
1 F
(Description) 81.65 208.62 T
0 F
0.06 (<simple-lock>) 99.65 186.62 P
2 F
0.06 ( is the class representing the most simple and ef) 165.97 186.62 P
0.06 (\336cient mutual e) 376.12 186.62 P
0.06 (xclusion synchroni-) 444.51 186.62 P
0.28 0.18 (zation primiti) 99.65 173.62 B
0.28 0.18 (v) 161.75 173.62 B
0.28 0.18 (e. It is an error to recursi) 167.27 173.62 B
0.28 0.18 (v) 282.12 173.62 B
0.28 0.18 (ely lock a) 287.64 173.62 B
0 F
0.28 0.18 (<simple-lock>) 335.96 173.62 B
2 F
0.28 0.18 (. An attempt to do so might) 404.62 173.62 B
(result in an error being signalled, or deadlock occurring.) 99.65 160.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 21
%%Page: "16" 22
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(16) 63.65 84.9 T
(3.4.4) 63.65 738.29 T
(<noti\336cation>) 90.89 738.29 T
0 11 Q
(<notification>) 63.65 707.62 T
2 F
([Instantiable Sealed Class]) 414.33 707.62 T
1 F
(Super) 81.65 682.62 T
(classes) 106.9 682.62 T
0 F
(<synchr) 99.65 660.62 T
(onization>) 137.5 660.62 T
1 F
(Description) 81.65 635.62 T
2 F
0.28 0.02 (Instances of) 99.65 613.62 B
0 F
0.28 0.02 (<notif) 156.06 613.62 B
0.28 0.02 (ication>) 183.85 613.62 B
2 F
0.28 0.02 ( are synchronization objects which may be used to notify threads of a) 222.06 613.62 B
0.12 (change of state else) 99.65 600.62 P
0.12 (where in the program. Noti\336cations are used in association with locks, and are) 185.57 600.62 P
0.28 0.08 (sometimes called) 99.65 587.62 B
1 F
0.28 0.08 (condition variables) 180.43 587.62 B
2 F
0.28 0.08 (. The) 267.53 587.62 B
0.28 0.08 (y may be used to support the sharing of data between) 290.66 587.62 B
0.28 0.17 (threads using) 99.65 574.62 B
1 F
0.28 0.17 (monitor) 163.74 574.62 B
0.28 0.17 (s) 199.68 574.62 B
2 F
0.28 0.17 (. Each) 204.13 574.62 B
0 F
0.28 0.17 (<notif) 236.14 574.62 B
0.28 0.17 (ication>) 264.85 574.62 B
2 F
0.28 0.17 ( is permanently associated with a) 304.28 574.62 B
0 F
0.28 0.17 (<simple-lock>) 460.32 574.62 B
2 F
0.28 0.17 (,) 528.9 574.62 B
0.06 (although the same lock may be associated with man) 99.65 561.62 P
0.06 (y noti\336cations. Threads w) 328.49 561.62 P
0.06 (ait for the change of) 442.83 561.62 P
0.12 (state to be noti\336ed by calling) 99.65 548.62 P
0 F
0.12 (wait-f) 230.56 548.62 P
0.12 (or) 257.78 548.62 P
2 F
0.12 (. Threads notify other threads of the change of state by call-) 267.56 548.62 P
(ing) 99.65 535.62 T
0 F
(r) 116.46 535.62 T
(elease) 121.14 535.62 T
2 F
(.) 148.63 535.62 T
1 F
(Requir) 81.65 510.62 T
(ed-init-k) 111.18 510.62 T
(e) 148.34 510.62 T
(ywor) 152.9 510.62 T
(ds) 174.49 510.62 T
0 F
(lock:) 99.65 488.62 T
2 F
0.28 0.05 (This must be an instance of) 171.65 488.62 B
0 F
0.28 0.05 (<simple-lock>) 298.21 488.62 B
2 F
0.28 0.05 (. The lock is then associated with the) 365.22 488.62 B
-0.11 (noti\336cation, and it is only possible to w) 171.65 475.62 P
-0.11 (ait for or release the noti\336cation if the lock) 344.34 475.62 P
(is o) 171.65 462.62 T
(wned.) 186.96 462.62 T
1 F
(Oper) 81.65 437.62 T
(ations) 104.09 437.62 T
2 F
(The class) 99.65 415.62 T
0 F
(<noti\336cation>) 143.64 415.62 T
2 F
(provides the following operations:) 212.1 415.62 T
0 F
(associated-lock) 99.65 393.62 T
2 F
(Returns the lock associated with the noti\336cation object.) 171.65 380.62 T
0 F
(wait-f) 99.65 358.62 T
(or) 126.86 358.62 T
2 F
0.28 0.34 (W) 171.65 358.62 B
0.28 0.34 (ait for the notif) 181.49 358.62 B
0.28 0.34 (ication of the change in state. The associated lock must be) 253.71 358.62 B
(o) 171.65 345.62 T
(wned, and is atomically released before synchronization, and reclaimed after) 176.87 345.62 T
(.) 513.81 345.62 T
0 F
(r) 99.65 323.62 T
(elease) 104.33 323.62 T
2 F
0.28 0.19 (Notify the change of state to a single w) 171.65 323.62 B
0.28 0.19 (aiting thread. This has no ef) 353.49 323.62 B
0.28 0.19 (fect on the) 482.8 323.62 B
(associated lock, which must be o) 171.65 310.62 T
(wned.) 316.19 310.62 T
0 F
(r) 99.65 288.62 T
(elease-all) 104.33 288.62 T
2 F
0.28 0 (Notify the change of state to all w) 171.65 288.62 B
0.28 0 (aiting threads. This has no ef) 322.87 288.62 B
0.28 0 (fect on the associ-) 451.08 288.62 B
(ated lock, which must be o) 171.65 275.62 T
(wned.) 289.3 275.62 T
0 F
(associated-lock) 63.65 246.62 T
2 F
([Function]) 485.21 246.62 T
1 F
(Signatur) 81.65 221.62 T
(e) 119.14 221.62 T
0 F
(\050noti\336cation :: <noti\336cation>\051 => \050lock :: <simple-lock>\051) 99.65 202.62 T
1 F
(Ar) 81.65 177.62 T
(guments) 92.24 177.62 T
0 F
(noti\336cation) 99.65 155.62 T
2 F
(A noti\336cation object.) 171.65 155.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 22
%%Page: "17" 23
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(17) 520.53 84.9 T
1 11 Q
(V) 81.65 737.62 T
(alues) 87.15 737.62 T
0 F
(lock) 99.65 715.62 T
2 F
(The lock associated with the noti\336cation.) 171.65 715.62 T
0 F
(wait-for) 63.65 686.62 T
2 F
([Sealed Method]) 458.02 686.62 T
1 F
(Signatur) 81.65 661.62 T
(e) 119.14 661.62 T
0 F
(\050noti\336cation :: <noti\336cation>, #k) 99.65 642.62 T
(ey timeout = #f\051 => \050success\051) 252.03 642.62 T
1 F
(Description) 81.65 617.62 T
2 F
0.15 (W) 99.65 595.62 P
0.15 (ait for the change of state indicated by the noti\336cation. The associated lock must be o) 109.15 595.62 P
0.15 (wned, and) 486.29 595.62 P
0.28 0.06 (is atomically released before the w) 99.65 582.62 B
0.28 0.06 (ait, and atomically claimed ag) 256.22 582.62 B
0.28 0.06 (ain after the w) 391.49 582.62 B
0.28 0.06 (ait. Note that the) 456.4 582.62 B
0.28 0.21 (state should be tested ag) 99.65 569.62 B
0.28 0.21 (ain once) 212.92 569.62 B
0 F
0.28 0.21 (wait-f) 255.08 569.62 B
0.28 0.21 (or) 283.57 569.62 B
2 F
0.28 0.21 ( has returned, because there may ha) 294.38 569.62 B
0.28 0.21 (v) 459.91 569.62 B
0.28 0.21 (e been a delay) 465.46 569.62 B
0.28 0.04 (between the) 99.65 556.62 B
0 F
0.28 0.04 (r) 156.28 556.62 B
0.28 0.04 (elease) 161 556.62 B
2 F
0.28 0.04 ( of the notif) 188.74 556.62 B
0.28 0.04 (ication and the claiming of the lock, and the state may ha) 241.11 556.62 B
0.28 0.04 (v) 497.39 556.62 B
0.28 0.04 (e been) 502.77 556.62 B
0.01 (changed during that time. If a timeout is supplied, then this will be used for w) 99.65 543.62 P
0.01 (aiting for the release) 441.52 543.62 P
-0.16 (of the noti\336cation only) 99.65 530.62 P
-0.16 (.) 198.99 530.62 P
0 F
-0.16 (wait-f) 204.34 530.62 P
-0.16 (or) 231.55 530.62 P
2 F
-0.16 ( will al) 241.93 530.62 P
-0.16 (w) 272.07 530.62 P
-0.16 (ays w) 279.9 530.62 P
-0.16 (ait for the lock with no timeout, and it is guaranteed) 304.99 530.62 P
(that the lock will be o) 99.65 517.62 T
(wned on return.) 195.01 517.62 T
0 F
(wait-f) 267.1 517.62 T
(or) 294.32 517.62 T
2 F
( will return) 304.7 517.62 T
0 F
(#f) 356.33 517.62 T
2 F
( if the noti\336cation w) 365.5 517.62 T
(ait times out.) 454.61 517.62 T
1 F
(Exceptions) 81.65 492.62 T
0 F
(wait-f) 99.65 470.62 T
(or) 126.86 470.62 T
2 F
( may signal a condition of the follo) 137.25 470.62 T
(wing class \050which is a subclass of) 291.27 470.62 T
0 F
(<err) 442.5 470.62 T
(or>) 463.22 470.62 T
2 F
(\051.) 479.87 470.62 T
0 F
(<not-o) 99.65 448.62 T
(wned-err) 130.25 448.62 T
(or>) 173.43 448.62 T
2 F
-0.05 (This may be signalled when an attempt is made to w) 171.65 435.62 P
-0.05 (ait for a noti\336cation when the) 402.04 435.62 P
(associated lock is not o) 171.65 422.62 T
(wned by the current thread.) 273.42 422.62 T
0 F
(release) 63.65 393.62 T
2 F
([Sealed Method]) 458.02 393.62 T
1 F
(Signatur) 81.65 368.62 T
(e) 119.14 368.62 T
0 F
(\050noti\336cation :: <noti\336cation>, #k) 99.65 349.62 T
(ey\051 => \050\051) 252.03 349.62 T
1 F
(Ar) 81.65 324.62 T
(guments) 92.24 324.62 T
0 F
(noti\336cation) 99.65 302.62 T
2 F
(Noti\336cation to be released.) 171.65 302.62 T
1 F
(Description) 81.65 277.62 T
2 F
0.28 0.03 (Releases the notif) 99.65 255.62 B
0.28 0.03 (ication, announcing the change of state to one of the threads which are block) 178.32 255.62 B
0.28 0.03 (ed) 521.23 255.62 B
0.04 (and w) 99.65 242.62 P
0.04 (aiting for it. The choice of which thread recei) 126.15 242.62 P
0.04 (v) 325.64 242.62 P
0.04 (es the noti\336cation is unde\336ned. The recei) 330.98 242.62 P
0.04 (ving) 512.09 242.62 P
0.19 (thread may not be unblock) 99.65 229.62 P
0.19 (ed immediately) 217.6 229.62 P
0.19 (, because it must \336rst claim o) 285.21 229.62 P
0.19 (wnership of the associated) 414.69 229.62 P
(lock.) 99.65 216.62 T
1 F
(Exceptions) 81.65 191.62 T
0 F
(Release) 99.65 169.62 T
2 F
(may signal a condition of the follo) 137.83 169.62 T
(wing class \050which is a subclass of) 289.1 169.62 T
0 F
(<err) 440.33 169.62 T
(or>) 461.05 169.62 T
2 F
(\051.) 477.71 169.62 T
0 F
(<not-o) 99.65 147.62 T
(wned-err) 130.25 147.62 T
(or>) 173.43 147.62 T
2 F
0.23 (This may be signalled when an attempt is made to release a noti\336cation when the) 171.65 134.62 P
(associated lock is not o) 171.65 121.62 T
(wned by the current thread.) 273.42 121.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 23
%%Page: "18" 24
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(18) 63.65 84.9 T
0 11 Q
(release-all) 63.65 708.62 T
2 F
([Function]) 485.21 708.62 T
1 F
(Signatur) 81.65 683.62 T
(e) 119.14 683.62 T
0 F
(\050noti\336cation :: <noti\336cation>, #k) 99.65 664.62 T
(ey\051 => \050\051) 252.03 664.62 T
1 F
(Ar) 81.65 639.62 T
(guments) 92.24 639.62 T
0 F
(noti\336cation) 99.65 617.62 T
2 F
(Noti\336cation to be released.) 171.65 617.62 T
1 F
(Description) 81.65 592.62 T
2 F
-0.27 (Releases the noti\336cation, announcing the change of state to all threads which are block) 99.65 570.62 P
-0.27 (ed and w) 477.92 570.62 P
-0.27 (ait-) 516.98 570.62 P
(ing for it. Those threads will then necessarily ha) 99.65 557.62 T
(v) 311.14 557.62 T
(e to compete for the associated lock.) 316.48 557.62 T
1 F
(Exceptions) 81.65 532.62 T
0 F
(r) 99.65 510.62 T
(elease-all) 104.33 510.62 T
2 F
( may signal a condition of the follo) 147.1 510.62 T
(wing class \050which is a subclass of) 301.12 510.62 T
0 F
(<err) 452.35 510.62 T
(or>) 473.08 510.62 T
2 F
(\051.) 489.73 510.62 T
0 F
(<not-o) 99.65 488.62 T
(wned-err) 130.25 488.62 T
(or>) 173.43 488.62 T
2 F
0.23 (This may be signalled when an attempt is made to release a noti\336cation when the) 171.65 475.62 P
(associated lock is not o) 171.65 462.62 T
(wned by the current thread.) 273.42 462.62 T
3 10 Q
(3.4.5) 63.65 428.29 T
(Timer) 90.89 428.29 T
(s) 117.97 428.29 T
0 11 Q
(sleep) 63.65 399.62 T
2 F
([Function]) 485.21 399.62 T
1 F
(Signatur) 81.65 374.62 T
(e) 119.14 374.62 T
0 F
(\050inter) 99.65 355.62 T
(v) 125.81 355.62 T
(al :: <r) 131.2 355.62 T
(eal>\051 => \050\051) 163.54 355.62 T
1 F
(Ar) 81.65 330.62 T
(guments) 92.24 330.62 T
0 F
(inter) 99.65 308.62 T
(v) 122.14 308.62 T
(al) 127.53 308.62 T
2 F
(Sleep time in seconds.) 171.65 308.62 T
1 F
(Description) 81.65 283.62 T
0 F
(sleep) 99.65 261.62 T
2 F
( causes the current-thread to block for the speci\336ed number of seconds.) 122.87 261.62 T
3 10 Q
(3.4.6) 63.65 227.29 T
(Conditional Update) 90.89 227.29 T
0 11 Q
(atomic-variable) 63.65 198.62 T
2 F
([De\336nition]) 479.71 198.62 T
1 F
(Syntax) 81.65 173.62 T
0 F
(de\336ne atomic-v) 99.65 154.62 T
(ariable) 171.34 154.62 T
1 F
(bindings) 207.09 154.62 T
0 F
( =) 244.98 154.62 T
1 F
(init) 256.75 154.62 T
0 F
(;) 271.42 154.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 24
%%Page: "19" 25
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(19) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
0 F
0.28 0.04 (def) 99.65 715.62 B
0.28 0.04 (ine atomic-v) 113.84 715.62 B
0.28 0.04 (ariable) 172.28 715.62 B
2 F
0.28 0.04 ( def) 205.59 715.62 B
0.28 0.04 (ines module v) 222.23 715.62 B
0.28 0.04 (ariables in the current module. These v) 284.81 715.62 B
0.28 0.04 (ariables ha) 459.29 715.62 B
0.28 0.04 (v) 507.18 715.62 B
0.28 0.04 (e all) 512.56 715.62 B
0.28 0.22 (the properties of normal module v) 99.65 702.62 B
0.28 0.22 (ariables, and in addition the) 258.05 702.62 B
0.28 0.22 (y may be atomically tested and) 387.3 702.62 B
(updated with) 99.65 689.62 T
0 F
(conditional-update) 159.53 689.62 T
2 F
(!.) 248.16 689.62 T
1 F
(Example) 81.65 664.62 T
0 F
(de\336ne atomic-v) 99.65 645.62 T
(ariable *number) 171.34 645.62 T
(-detected* = 0;) 249.46 645.62 T
(synchronized-class) 63.65 616.62 T
2 F
([De\336nition]) 479.71 616.62 T
1 F
(Syntax) 81.65 591.62 T
2 F
(As for) 99.65 569.62 T
0 F
(de\336ne class) 130.2 569.62 T
2 F
(, and permits the additional slot adjecti) 183.06 569.62 T
(v) 353.58 569.62 T
(e) 358.92 569.62 T
0 F
(atomic.) 366.55 569.62 T
1 F
(Description) 81.65 544.62 T
0 F
0.28 0.2 (def) 99.65 522.62 B
0.28 0.2 (ine synchr) 114.3 522.62 B
0.28 0.2 (onized-class) 164.93 522.62 B
2 F
0.28 0.2 ( is upw) 223.52 522.62 B
0.28 0.2 (ards compatible with) 257.12 522.62 B
0 F
0.28 0.2 (def) 357.11 522.62 B
0.28 0.2 (ine class) 371.76 522.62 B
2 F
0.28 0.2 (, e) 412.62 522.62 B
0.28 0.2 (xported from the) 423.71 522.62 B
0 F
0.28 0.2 (dylan) 504.57 522.62 B
2 F
0.22 (library) 99.65 509.62 P
0.22 (. It pro) 128.26 509.62 P
0.22 (vides an additional option which permits the de\336nition of slots which may be condi-) 158.17 509.62 P
0.28 0.15 (tionally updated. It is undef) 99.65 496.62 B
0.28 0.15 (ined whether the module v) 225.79 496.62 B
0.28 0.15 (ariables) 347.68 496.62 B
0 F
0.28 0.15 (class-def) 386.26 496.62 B
0.28 0.15 (iner) 427.33 496.62 B
2 F
0.28 0.15 ( e) 446.87 496.62 B
0.28 0.15 (xported from the) 454.92 496.62 B
0 F
0.28 0.17 (dylan) 99.65 483.62 B
2 F
0.28 0.17 ( library and) 126.8 483.62 B
0 F
0.28 0.17 (synchr) 183.34 483.62 B
0.28 0.17 (onized-class-def) 215.95 483.62 B
0.28 0.17 (iner) 292.66 483.62 B
2 F
0.28 0.17 ( e) 312.3 483.62 B
0.28 0.17 (xported from the) 320.39 483.62 B
0 F
0.28 0.17 (thr) 400.83 483.62 B
0.28 0.17 (eads) 415.82 483.62 B
2 F
0.28 0.17 ( library are the same) 437.29 483.62 B
(module v) 99.65 470.62 T
(ariable.) 140.62 470.62 T
0.28 0.24 (The) 99.65 448.62 B
0 F
0.28 0.24 (atomic) 120.75 448.62 B
2 F
0.28 0.24 (adjecti) 157.24 448.62 B
0.28 0.24 (v) 187.99 448.62 B
0.28 0.24 (e may be used to def) 193.57 448.62 B
0.28 0.24 (ine conditional-updater methods for indi) 289.92 448.62 B
0.28 0.24 (vidual slots) 478.28 448.62 B
0.28 0.13 (def) 99.65 435.62 B
0.28 0.13 (ined by) 113.47 435.62 B
0 F
0.28 0.13 (def) 150.48 435.62 B
0.28 0.13 (ine synchr) 164.92 435.62 B
0.28 0.13 (onized-class) 214.85 435.62 B
2 F
0.28 0.13 (. This adjecti) 272.6 435.62 B
0.28 0.13 (v) 331.79 435.62 B
0.28 0.13 (e may only be used for slots with) 337.25 435.62 B
0 F
0.28 0.13 (instance) 492.26 435.62 B
2 F
0.28 0.13 (allocation. The adjecti) 99.65 422.62 B
0.28 0.13 (v) 200.93 422.62 B
0.28 0.13 (e causes the additional creation of a conditional-updater method for the) 206.39 422.62 B
(slot, suitable for use with the) 99.65 409.62 T
0 F
(conditional-update!) 229.5 409.62 T
2 F
( macro.) 321.79 409.62 T
0.28 0.01 (A conditional-updater method has three required parameters) 99.65 387.62 B
0 F
0.28 0.01 (\050new-v) 370.03 387.62 B
0.28 0.01 (alue, old-v) 401.74 387.62 B
0.28 0.01 (alue, object\051) 450.9 387.62 B
2 F
0.28 0.01 (. The) 508.73 387.62 B
-0.27 (method atomically compares the slot contents for) 99.65 374.62 P
0 F
-0.27 (object) 317.41 374.62 P
2 F
-0.27 ( with) 346.12 374.62 P
0 F
-0.27 (old-v) 370.63 374.62 P
-0.27 (alue) 394.36 374.62 P
2 F
-0.27 (, and conditionally updates) 413.92 374.62 P
0.28 0.08 (the slot. If the comparison f) 99.65 361.62 B
0.28 0.08 (ails, the method returns) 224.67 361.62 B
0 F
0.28 0.08 (#f) 333.65 361.62 B
2 F
0.28 0.08 (. Otherwise, the slot contents are replaced) 342.97 361.62 B
(with) 99.65 348.62 T
0 F
(new-v) 121.96 348.62 T
(alue) 149.95 348.62 T
2 F
(, and the method returns a true v) 169.51 348.62 T
(alue.) 311.6 348.62 T
1 F
(K) 81.65 323.62 T
(e) 88.6 323.62 T
(ywor) 93.15 323.62 T
(ds) 114.75 323.62 T
2 F
(The follo) 99.65 301.62 T
(wing additional k) 140.01 301.62 T
(e) 216.9 301.62 T
(yw) 221.62 301.62 T
(ords are permitted for) 234.95 301.62 T
0 F
(atomic) 333.31 301.62 T
2 F
( slots:) 365.08 301.62 T
0 F
(conditional-updater:) 99.65 279.62 T
2 F
0.28 0.08 (The name of a module v) 171.65 266.62 B
0.28 0.08 (ariable to which the conditional-updater method should) 281.8 266.62 B
-0.04 (be added, or) 171.65 253.62 P
0 F
-0.04 (#f) 228.35 253.62 P
2 F
-0.04 ( if no conditional-updater method should be de\336ned \050in which case) 237.51 253.62 P
0.28 0.26 (the use of the) 171.65 240.62 B
0 F
0.28 0.26 (atomic) 238.38 240.62 B
2 F
0.28 0.26 ( adjecti) 271.71 240.62 B
0.28 0.26 (v) 305.88 240.62 B
0.28 0.26 (e w) 311.48 240.62 B
0.28 0.26 (as unnecessary\051. If it is not supplied, it will) 328 240.62 B
0.28 0.03 (def) 171.65 227.62 B
0.28 0.03 (ault to) 185.67 227.62 B
0 F
0.28 0.03 (getter) 216.99 227.62 B
0.28 0.03 (-name-conditional-updater) 244.23 227.62 B
2 F
0.28 0.03 (, where) 370.97 227.62 B
0 F
0.28 0.03 (getter) 406.87 227.62 B
0.28 0.03 (-name) 434.1 227.62 B
2 F
0.28 0.03 ( names the get-) 463.56 227.62 B
(ter for the slot.) 171.65 214.62 T
1 F
(Example) 81.65 189.62 T
2 F
(The follo) 99.65 167.62 T
(wing e) 140.01 167.62 T
(xample de\336nes a class with a single slot suitable for conditional updating:) 169.48 167.62 T
0 F
(de\336ne synchr) 99.65 148.62 T
(onized-class <atomic-v) 162.1 148.62 T
(alue> \050<object>\051) 268.16 148.62 T
(atomic slot counter :: <integer>) 121.25 135.62 T
(end class) 99.65 122.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 25
%%Page: "20" 26
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(20) 63.65 84.9 T
2 11 Q
(This e) 99.65 737.62 T
(xample de\336nes a conditional-updater method with the follo) 126.68 737.62 T
(wing signature:) 387.01 737.62 T
0 F
(de\336ne method counter) 99.65 718.62 T
(-conditional-updater) 204.35 718.62 T
(\050new-v) 135.65 705.62 T
(alue, old-v) 167.31 705.62 T
(alue, object :: <atomic-v) 216.09 705.62 T
(alue>\051) 329.78 705.62 T
(end method) 99.65 692.62 T
(conditional-update!) 63.65 663.62 T
2 F
([Macro]) 495.61 663.62 T
1 F
(Syntax) 81.65 638.62 T
0 F
(conditional-update!\050) 99.65 619.62 T
1 F
(local-name) 195.6 619.62 T
0 F
( =) 245.09 619.62 T
1 F
(place) 256.86 619.62 T
0 F
(\051) 280.69 619.62 T
1 F
(body) 121.25 606.62 T
2 F
([) 99.65 593.62 T
0 F
(success) 103.31 593.62 T
1 F
(success-e) 139.67 593.62 T
(xpr) 180.98 593.62 T
2 F
(]) 195.65 593.62 T
([) 99.65 580.62 T
0 F
(failur) 103.31 580.62 T
(e) 129.39 580.62 T
1 F
(failur) 137.03 580.62 T
(e-e) 161.07 580.62 T
(xpr) 174.28 580.62 T
2 F
(]) 188.95 580.62 T
0 F
(end) 99.65 567.62 T
1 F
(Description) 81.65 542.62 T
2 F
0.28 0.01 (The v) 99.65 520.62 B
0.28 0.01 (alue of the place is e) 125.04 520.62 B
0.28 0.01 (v) 216.42 520.62 B
0.28 0.01 (aluated once to determine the initial v) 221.65 520.62 B
0.28 0.01 (alue, which is then bound to the) 389.52 520.62 B
1 F
0.28 0.13 (local-name) 99.65 507.62 B
2 F
0.28 0.13 ( as a le) 150.43 507.62 B
0.28 0.13 (xical v) 182.36 507.62 B
0.28 0.13 (ariable. The body is then e) 212.9 507.62 B
0.28 0.13 (v) 334.19 507.62 B
0.28 0.13 (aluated to determine the ne) 339.55 507.62 B
0.28 0.13 (w v) 463 507.62 B
0.28 0.13 (alue for the) 479.58 507.62 B
0.28 0.1 (place. The place is then conditionally updated \321 which means that the follo) 99.65 494.62 B
0.28 0.1 (wing steps are per-) 445.65 494.62 B
(formed atomically:) 99.65 481.62 T
3 9 Q
(1.) 99.65 462.62 T
2 11 Q
(The place is e) 113.4 462.62 T
(v) 173.91 462.62 T
(aluated ag) 179.14 462.62 T
(ain and compared with the initial v) 223.98 462.62 T
(alue in) 377.08 462.62 T
1 F
(local-name) 409.46 462.62 T
2 F
( using) 458.95 462.62 T
0 F
(\134==) 488.29 462.62 T
3 9 Q
(2.) 99.65 443.62 T
2 11 Q
-0.18 (If the v) 113.4 443.62 P
-0.18 (alue w) 144.53 443.62 P
-0.18 (as found to be the same as the initial v) 173.25 443.62 P
-0.18 (alue, then the ne) 339.67 443.62 P
-0.18 (w v) 410.94 443.62 P
-0.18 (alue is stored by assign-) 426.67 443.62 P
(ment, otherwise the conditional update f) 113.4 431.62 T
(ails.) 290.49 431.62 T
0.28 0.1 (If the update w) 99.65 410.62 B
0.28 0.1 (as successful, then) 168.17 410.62 B
0 F
0.28 0.1 (conditional-update!) 255.34 410.62 B
2 F
0.28 0.1 ( returns the result of the) 349.56 410.62 B
0 F
0.28 0.1 (success) 461.49 410.62 B
2 F
0.28 0.1 (e) 498.93 410.62 B
0.28 0.1 (xpres-) 503.75 410.62 B
(sion, or returns the ne) 99.65 397.62 T
(w v) 195 397.62 T
(alue of the place if no) 210.91 397.62 T
0 F
(success) 309.27 397.62 T
2 F
(clause w) 345.63 397.62 T
(as supplied.) 383.7 397.62 T
0.28 0.17 (If the update f) 99.65 375.62 B
0.28 0.17 (ailed, then) 164.94 375.62 B
0 F
0.28 0.17 (conditional-update!) 216.11 375.62 B
2 F
0.28 0.17 ( signals a condition, unless a) 311.65 375.62 B
0 F
0.28 0.17 (failur) 447.24 375.62 B
0.28 0.17 (e) 474.35 375.62 B
2 F
0.28 0.17 ( clause w) 479.4 375.62 B
0.28 0.17 (as) 522.31 375.62 B
(gi) 99.65 362.62 T
(v) 107.93 362.62 T
(en, in which case the v) 113.27 362.62 T
(alue is returned.) 213.19 362.62 T
0.28 0.01 (If the) 99.65 340.62 B
1 F
0.28 0.01 (place) 126.56 340.62 B
2 F
0.28 0.01 ( is a) 150.46 340.62 B
1 F
0.28 0.01 (name) 171.84 340.62 B
2 F
0.28 0.01 (, it must be the name of an) 195.72 340.62 B
0 F
0.28 0.01 (atomic-v) 317.77 340.62 B
0.28 0.01 (ariable) 358.7 340.62 B
2 F
0.28 0.01 ( in the current module scope. If) 391.79 340.62 B
1 F
0.28 0.04 (place) 99.65 327.62 B
2 F
0.28 0.04 ( is not a name, then it may ha) 123.66 327.62 B
0.28 0.04 (v) 256.02 327.62 B
0.28 0.04 (e the syntax of a call to a function. This permits an) 261.39 327.62 B
1 F
0.28 0.04 (e) 492.51 327.62 B
0.28 0.04 (xtended) 497.21 327.62 B
0.25 (form) 99.65 314.62 P
2 F
0.25 ( for) 120.43 314.62 P
0 F
0.25 (conditional-update!) 139.25 314.62 P
2 F
0.25 (, by analogy with the e) 231.54 314.62 P
0.25 (xtended form for) 332.83 314.62 P
0 F
0.25 (:=) 410.86 314.62 P
2 F
0.25 (. In this case, if the place) 420.79 314.62 P
0.28 0.1 (appears syntactically as) 99.65 301.62 B
0 F
0.28 0.1 (name\050ar) 209.48 301.62 B
0.28 0.1 (g1, ...ar) 249.74 301.62 B
0.28 0.1 (gn\051) 285.9 301.62 B
2 F
0.28 0.1 (, then the macro e) 301.47 301.62 B
0.28 0.1 (xpands into a call to the function) 382.63 301.62 B
0 F
0.28 0.08 (name-conditional-updater\050) 99.65 288.62 B
1 F
0.28 0.08 (ne) 228.2 288.62 B
0.28 0.08 (w-value) 238.58 288.62 B
0 F
0.28 0.08 (,) 273.98 288.62 B
1 F
0.28 0.08 (local-name) 279.92 288.62 B
0 F
0.28 0.08 (, ar) 330.23 288.62 B
0.28 0.08 (g1, ... ar) 346.61 288.62 B
0.28 0.08 (gn\051) 385.75 288.62 B
2 F
0.28 0.08 (. If the result of this function) 401.27 288.62 B
(call is) 99.65 275.62 T
0 F
(#f) 128.37 275.62 T
2 F
(, then the conditional update is deemed to ha) 137.53 275.62 T
(v) 333.76 275.62 T
(e f) 339.1 275.62 T
(ailed.) 350.28 275.62 T
1 F
(Exceptions) 81.65 250.62 T
0 F
0.28 0.38 (conditional-update!) 99.65 228.62 B
2 F
0.28 0.38 ( may signal a condition of the follo) 199.2 228.62 B
0.28 0.38 (wing class \050which is a subclass of) 368.91 228.62 B
0 F
(<err) 99.65 215.62 T
(or>) 120.37 215.62 T
2 F
(\051, unless a) 137.03 215.62 T
0 F
(failur) 184.07 215.62 T
(e) 210.15 215.62 T
2 F
( clause is supplied.) 215.04 215.62 T
0 F
(<conditional-update-err) 99.65 193.62 T
(or>) 212.66 193.62 T
1 F
(Example) 81.65 168.62 T
2 F
(The follo) 99.65 146.62 T
(wing e) 140.01 146.62 T
(xample does an atomic increment of) 169.48 146.62 T
0 F
(*number) 332 146.62 T
(-detected*) 374.37 146.62 T
2 F
(.) 422.63 146.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 26
%%Page: "21" 27
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(21) 520.53 84.9 T
0 11 Q
(until \050conditional-update! \050curr) 99.65 737.62 T
(ent-v) 247.35 737.62 T
(al = *number) 271.06 737.62 T
(-detected*\051) 333.76 737.62 T
(curr) 164.45 724.62 T
(ent-v) 185.02 724.62 T
(al + 1) 208.73 724.62 T
(failur) 150.05 711.62 T
(e #f) 176.13 711.62 T
(end conditional-update!\051) 135.65 698.62 T
(end until) 99.65 685.62 T
3 10 Q
(3.4.7) 63.65 651.29 T
(Fluid Binding) 90.89 651.29 T
0 11 Q
(fluid-variable) 63.65 622.62 T
2 F
([De\336nition]) 479.71 622.62 T
1 F
(Syntax) 81.65 597.62 T
0 F
(de\336ne \337uid-v) 99.65 578.62 T
(ariable) 160.97 578.62 T
1 F
(bindings) 196.72 578.62 T
0 F
( =) 234.62 578.62 T
1 F
(init) 246.39 578.62 T
0 F
(;) 261.06 578.62 T
1 F
(Description) 81.65 553.62 T
0 F
0.28 0.05 (def) 99.65 531.62 B
0.28 0.05 (ine f) 113.84 531.62 B
0.28 0.05 (luid-v) 134.2 531.62 B
0.28 0.05 (ariable) 161.87 531.62 B
2 F
0.28 0.05 ( def) 195.18 531.62 B
0.28 0.05 (ines module v) 211.83 531.62 B
0.28 0.05 (ariables in the current module which ha) 274.4 531.62 B
0.28 0.05 (v) 451.7 531.62 B
0.28 0.05 (e bindings in the) 457.08 531.62 B
0.28 0.06 (dynamic en) 99.65 518.62 B
0.28 0.06 (vironment. The initialization e) 151.13 518.62 B
0.28 0.06 (xpression is e) 287.57 518.62 B
0.28 0.06 (v) 348.61 518.62 B
0.28 0.06 (aluated once, and is used to pro) 353.9 518.62 B
0.28 0.06 (vide the) 495.8 518.62 B
0.2 (initial v) 99.65 505.62 P
0.2 (alues for the implicit bindings in the dynamic en) 133.5 505.62 P
0.2 (vironment of each thread. These bindings) 347.95 505.62 P
-0.11 (are therefore thread-local. The bindings may be dynamically shado) 99.65 492.62 P
-0.11 (wed with) 393.31 492.62 P
0 F
-0.11 (\337uid-bind) 436.48 492.62 P
2 F
-0.11 (. The v) 482.95 492.62 P
-0.11 (alue) 513.32 492.62 P
0.28 0 (of a f) 99.65 479.62 B
0.28 0 (luid-v) 122.82 479.62 B
0.28 0 (ariable binding may be changed with the normal assignment operator) 148.84 479.62 B
0 F
0.28 0 (:=) 459.14 479.62 B
2 F
0.28 0 (. There is cur-) 469.08 479.62 B
0.28 0.03 (rently no w) 99.65 466.62 B
0.28 0.03 (ay to share bindings, either temporarily or permanently between one or more threads,) 150.54 466.62 B
(short of using a normal v) 99.65 453.62 T
(ariable.) 209.67 453.62 T
1 F
(Example) 81.65 428.62 T
0 F
(de\336ne \337uid-v) 99.65 409.62 T
(ariable *standard-output*) 160.97 409.62 T
(= mak) 121.25 396.62 T
(e\050<standard-output-str) 150.94 396.62 T
(eam>\051;) 259.06 396.62 T
(fluid-bind) 63.65 367.62 T
2 F
([Macro]) 495.61 367.62 T
1 F
(Syntax) 81.65 342.62 T
0 F
(\337uid-bind \050) 99.65 323.62 T
1 F
(place1) 152.54 323.62 T
0 F
( =) 181.86 323.62 T
1 F
(init1) 193.63 323.62 T
0 F
(,) 213.81 323.62 T
1 F
(place2) 219.31 323.62 T
0 F
( =) 248.63 323.62 T
1 F
(init2) 260.4 323.62 T
0 F
(, ...\051) 280.58 323.62 T
1 F
(body) 300.74 323.62 T
0 F
( end;) 322.12 323.62 T
1 F
(Description) 81.65 298.62 T
2 F
0.03 (The body is e) 99.65 276.62 P
0.03 (v) 159.02 276.62 P
0.03 (aluated in an en) 164.25 276.62 P
0.03 (vironment in which the speci\336ed) 233.23 276.62 P
1 F
0.03 (places) 380.31 276.62 P
2 F
0.03 ( are rebound in the dynamic) 408.41 276.62 P
(en) 99.65 263.62 T
(vironment, and initialized to the results of e) 109.59 263.62 T
(v) 301.19 263.62 T
(aluating the initialization e) 306.42 263.62 T
(xpressions.) 423.88 263.62 T
(If the) 99.65 241.62 T
1 F
(place) 125.92 241.62 T
2 F
( is a) 149.74 241.62 T
1 F
(name) 170.21 241.62 T
2 F
(, it must be the name of a) 194.04 241.62 T
0 F
(\337uid-v) 308 241.62 T
(ariable) 338.46 241.62 T
2 F
( in the module scope.) 371.46 241.62 T
-0.04 (If) 99.65 219.62 P
1 F
-0.04 (place) 109.68 219.62 P
2 F
-0.04 ( is not a name, then it may ha) 133.51 219.62 P
-0.04 (v) 262.18 219.62 P
-0.04 (e the syntax of a call to a function. This permits an) 267.52 219.62 P
1 F
-0.04 (e) 492.77 219.62 P
-0.04 (xtended) 497.44 219.62 P
0.28 0.09 (form) 99.65 206.62 B
2 F
0.28 0.09 ( for) 120.79 206.62 B
0 F
0.28 0.09 (f) 140.12 206.62 B
0.28 0.09 (luid-bind) 143.27 206.62 B
2 F
0.28 0.09 (, by analogy with the e) 187.51 206.62 B
0.28 0.09 (xtended form for) 291.04 206.62 B
0 F
0.28 0.09 (:=) 370.7 206.62 B
2 F
0.28 0.09 (. In this case, if the place appears) 380.82 206.62 B
0.28 0.14 (syntactically as) 99.65 193.62 B
0 F
0.28 0.14 (name\050ar) 172.91 193.62 B
0.28 0.14 (g1, ...ar) 213.51 193.62 B
0.28 0.14 (gn\051) 250.1 193.62 B
2 F
0.28 0.14 (, then the macro e) 265.81 193.62 B
0.28 0.14 (xpands into a call to the function) 347.84 193.62 B
0 F
0.28 0.14 (name-) 501.75 193.62 B
0.28 0.04 (f) 99.65 180.62 B
0.28 0.04 (luid-binder\050) 102.75 180.62 B
1 F
0.28 0.04 (init) 160.11 180.62 B
0 F
0.28 0.04 (,) 174.96 180.62 B
1 F
0.28 0.04 (body-method) 180.82 180.62 B
0 F
0.28 0.04 (, ar) 238.72 180.62 B
0.28 0.04 (g1, ... ar) 254.94 180.62 B
0.28 0.04 (gn\051) 293.69 180.62 B
2 F
0.28 0.04 ( where) 309.1 180.62 B
1 F
0.28 0.04 (init) 342.32 180.62 B
2 F
0.28 0.04 ( is the initial v) 357.17 180.62 B
0.28 0.04 (alue for the binding, and) 421.67 180.62 B
1 F
(body-method) 99.65 167.62 T
2 F
( is function with no parameters whose body is the) 157.08 167.62 T
1 F
(body of) 378.28 167.62 T
2 F
(the) 413.72 167.62 T
0 F
(\337uid-bind) 429.91 167.62 T
2 F
(.) 476.39 167.62 T
0.23 (There are no features in the current v) 99.65 145.62 P
0.23 (ersion of the threads library which mak) 263.88 145.62 P
0.23 (e use of the e) 438.04 145.62 P
0.23 (xtended) 496.82 145.62 P
(form of) 99.65 132.62 T
0 F
(\337uid-bind) 135.7 132.62 T
2 F
(.) 182.17 132.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 27
%%Page: "22" 28
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(22) 63.65 84.9 T
1 11 Q
(Example) 81.65 737.62 T
2 F
(The follo) 99.65 715.62 T
(wing e) 140.01 715.62 T
(xample sho) 169.48 715.62 T
(ws the simple form of) 219.61 715.62 T
0 F
(\337uid-bind) 318.91 715.62 T
2 F
(.) 365.39 715.62 T
0 F
(\337uid-bind \050*standard-output* = new-v) 99.65 696.62 T
(al\050\051\051) 280.31 696.62 T
(top-le) 121.25 683.62 T
(v) 147.97 683.62 T
(el-loop \050\051) 153.36 683.62 T
(end;) 99.65 670.62 T
1 F
(Example 2) 81.65 645.62 T
2 F
(The follo) 99.65 623.62 T
(wing e) 140.01 623.62 T
(xample sho) 169.48 623.62 T
(ws the e) 219.61 623.62 T
(xtended form of) 255.5 623.62 T
0 F
(\337uid-bind) 329.12 623.62 T
2 F
(.) 375.59 623.62 T
0 F
(\337uid-bind \050object.a-slot = new-slot-v) 99.65 604.62 T
(al\050\051\051) 269.59 604.62 T
(inner) 121.25 591.62 T
(-body\050object\051) 145.9 591.62 T
(end;) 99.65 578.62 T
2 F
(This e) 99.65 556.62 T
(xpands into code equi) 126.68 556.62 T
(v) 222.64 556.62 T
(alent to the follo) 227.86 556.62 T
(wing:) 300 556.62 T
0 F
(a-slot-\337uid-binder\050) 99.65 537.62 T
(new-slot-v) 193.25 537.62 T
(al\050\051,) 241.41 537.62 T
(method \050\051 inner) 193.25 524.62 T
(-body\050object\051 end,) 266.17 524.62 T
(object\051) 193.25 511.62 T
3 12 Q
(3.5) 63.65 473.95 T
(Thread Saf) 90.65 473.95 T
(ety in Other Libraries) 152.54 473.95 T
3 10 Q
(3.5.1) 63.65 439.29 T
(General Requirements) 90.89 439.29 T
2 11 Q
0.01 (Library designers are responsible for documenting which features of the library of) 63.65 414.62 P
0.01 (fer in-b) 424.92 414.62 P
0.01 (uilt synchroniza-) 457.39 414.62 P
0.28 0.05 (tion and which do not. There is no def) 63.65 401.62 B
0.28 0.05 (initi) 234.92 401.62 B
0.28 0.05 (v) 252.64 401.62 B
0.28 0.05 (e rule to guide designers on ho) 258.02 401.62 B
0.28 0.05 (w to do this, b) 396.03 401.62 B
0.28 0.05 (ut the follo) 460.32 401.62 B
0.28 0.05 (wing) 509.49 401.62 B
(guidelines may be useful.) 63.65 388.62 T
0.28 0.12 (If a client of the library for) 63.65 363.62 B
0.28 0.12 (gets to use a synchronization feature when one is necessary) 186.45 363.62 B
0.28 0.12 (, then the library) 456.16 363.62 B
0.28 0.02 (designer should ensure that the ef) 63.65 350.62 B
0.28 0.02 (fect of the lack of synchronization is limited to a small unit \050probably a) 213.13 350.62 B
0.28 0.11 (single object\051. In cases where the designer cannot guarantee that the ef) 63.65 337.62 B
0.28 0.11 (fect will be limited, the designer) 384.4 337.62 B
0.28 0.02 (should either def) 63.65 324.62 B
0.28 0.02 (ine that the library will implement the synchronization internally) 137.88 324.62 B
0.28 0.02 (, or will pro) 425.48 324.62 B
0.28 0.02 (vide a func-) 478.35 324.62 B
(tion or macro for clients to use instead.) 63.65 311.62 T
0.09 (Library implementors must ensure that the library pro) 63.65 286.62 P
0.09 (vides implicit synchronization for an) 300.89 286.62 P
0.09 (y hidden global) 463.02 286.62 P
0.28 0.11 (state which is maintained by the library) 63.65 273.62 B
0.28 0.11 (. Library designers may choose whether the library should of) 242.39 273.62 B
0.28 0.11 (fer) 519.22 273.62 B
0.07 (implicit synchronization of the state of objects managed by the library) 63.65 260.62 P
0.07 (. The interf) 372.19 260.62 P
0.07 (ace is more con) 421.4 260.62 P
0.07 (v) 489.89 260.62 P
0.07 (enient if) 495.23 260.62 P
0.28 0.02 (the synchronization is implicit, b) 63.65 247.62 B
0.28 0.02 (ut it may be more ef) 209.7 247.62 B
0.28 0.02 (f) 300.08 247.62 B
0.28 0.02 (icient to rely on e) 303.15 247.62 B
0.28 0.02 (xplicit synchronization by the cli-) 381.44 247.62 B
(ent. Library designers should al) 63.65 234.62 T
(w) 202.54 234.62 T
(ays document the choice the) 210.38 234.62 T
(y mak) 334.85 234.62 T
(e.) 361.93 234.62 T
3 10 Q
(3.5.2) 63.65 200.29 T
(The Dylan Librar) 90.89 200.29 T
(y) 169.9 200.29 T
2 11 Q
-0.14 (The de\336nition of the Dylan library is not changed with the addition of the threads library) 63.65 175.62 P
-0.14 (. The implementa-) 450.97 175.62 P
0.28 0.04 (tion will ensure that all hidden global state \050such as the symbol table and an) 63.65 162.62 B
0.28 0.04 (y generic function caches\051 is) 403.55 162.62 B
0.28 0.16 (implicitly synchronized. Those functions in the Dylan library which are def) 63.65 149.62 B
0.28 0.16 (ined to modify the state of) 410.2 149.62 B
-0.19 (objects are not de\336ned to pro) 63.65 136.62 P
-0.19 (vide implicit synchronization. Ho) 190.52 136.62 P
-0.19 (we) 337.55 136.62 P
-0.19 (v) 350.1 136.62 P
-0.19 (er) 355.43 136.62 P
-0.19 (, implementations are e) 363.54 136.62 P
-0.19 (xpected to pro-) 465.44 136.62 P
0.28 0.02 (vide enough implicit synchronization to ensure that the ef) 63.65 123.62 B
0.28 0.02 (fects of an omission of e) 320.28 123.62 B
0.28 0.02 (xplicit synchronization) 429.81 123.62 B
(are suf) 63.65 110.62 T
(\336ciently limited that language inte) 93 110.62 T
(grity and runtime safety are not violated.) 243.77 110.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 28
%%Page: "23" 29
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(23) 520.53 84.9 T
3 15 Q
(4.) 63.65 734.95 T
(P) 90.65 734.95 T
(or) 100.05 734.95 T
(tability Suppor) 115.35 734.95 T
(t f) 220.67 734.95 T
(or Dylan Threads) 234.53 734.95 T
3 12 Q
(4.1) 63.65 695.95 T
(Dylan P) 90.65 695.95 T
(or) 134.18 695.95 T
(tability Interface) 146.42 695.95 T
2 11 Q
0.28 0.09 (The Simple Threads Library is designed for implementation using dif) 63.65 674.62 B
0.28 0.09 (ferent threads APIs from common) 377.6 674.62 B
0.28 0.17 (operating systems, including Solaris, W) 63.65 661.62 B
0.28 0.17 (in32 and MacOS. Harlequin\325) 246.18 661.62 B
0.28 0.17 (s implementation of the library is) 378.43 661.62 B
0.11 (designed to be directly portable onto these operating systems. This portability is achie) 63.65 648.62 P
0.11 (v) 442.58 648.62 P
0.11 (ed by using ANDF) 447.92 648.62 P
0.28 0.12 (tok) 63.65 635.62 B
0.28 0.12 (ens to support primiti) 77.97 635.62 B
0.28 0.12 (v) 175.68 635.62 B
0.28 0.12 (e operations def) 181.15 635.62 B
0.28 0.12 (ined within our implementation of the library) 253.34 635.62 B
0.28 0.12 (. Each primiti) 459.09 635.62 B
0.28 0.12 (v) 521.3 635.62 B
0.28 0.12 (e) 526.76 635.62 B
0.28 0.1 (operation must be implemented specially for each operating system. This can be achie) 63.65 622.62 B
0.28 0.1 (v) 454.24 622.62 B
0.28 0.1 (ed by ha) 459.67 622.62 B
0.28 0.1 (ving an) 498.08 622.62 B
0.06 (operating system speci\336c tok) 63.65 609.62 P
0.06 (en e) 191.74 609.62 P
0.06 (xpansion, or) 209.66 609.62 P
0.06 (, alternati) 263.67 609.62 P
0.06 (v) 305 609.62 P
0.06 (ely) 310.34 609.62 P
0.06 (, by portably mapping the tok) 323.06 609.62 P
0.06 (en onto a call to a) 453.43 609.62 P
-0.27 (function in Dylan\325) 63.65 596.62 P
-0.27 (s runtime system. The Dylan runtime system is implemented specially for each platform.) 143.78 596.62 P
-0.12 (The set of portable primiti) 63.65 571.62 P
-0.12 (v) 178.38 571.62 P
-0.12 (e operations which correspond to ANDF tok) 183.71 571.62 P
-0.12 (ens is collecti) 378.4 571.62 P
-0.12 (v) 437.77 571.62 P
-0.12 (ely called the) 443.11 571.62 P
1 F
-0.12 (porta-) 504.15 571.62 P
0.28 0.14 (bility layer) 63.65 558.62 B
2 F
0.28 0.14 (. The back end of the Dylan compiler has special kno) 112.94 558.62 B
0.28 0.14 (wledge of the portability layer) 356.89 558.62 B
0.28 0.14 (. This is) 494.85 558.62 B
-0.19 (achie) 63.65 545.62 P
-0.19 (v) 86.58 545.62 P
-0.19 (ed by ha) 91.92 545.62 P
-0.19 (ving code generation methods for the ANDF back end which are specialized on nodes in the) 128.58 545.62 P
0.28 0.04 (compiler f) 63.65 532.62 B
0.28 0.04 (lo) 109.22 532.62 B
0.28 0.04 (w graph that correspond to the primiti) 117.58 532.62 B
0.28 0.04 (v) 287.24 532.62 B
0.28 0.04 (e operations. Some of these nodes appear to the com-) 292.62 532.62 B
0.11 (piler as calls to) 63.65 519.62 P
1 F
0.11 (primitive functions) 133.12 519.62 P
2 F
0.11 ( \050which are treated specially by the back end\051. Other nodes describe the) 216.04 519.62 P
0.18 (operation more directly in the \337o) 63.65 506.62 P
0.18 (w graph. The specialized methods emit uses of the corresponding ANDF) 209.39 506.62 P
(tok) 63.65 493.62 T
(ens.) 77.6 493.62 T
3 10 Q
(4.1.1) 63.65 459.29 T
(P) 90.89 459.29 T
(or) 97.16 459.29 T
(tability and Runtime La) 107.36 459.29 T
(y) 217.18 459.29 T
(er) 222.64 459.29 T
(s) 231.94 459.29 T
2 11 Q
0.28 0 (The design assumes that each of the concrete classes of the Simple Threads Library \050) 63.65 438.62 B
0 F
0.28 0 (<thr) 441.8 438.62 B
0.28 0 (ead>) 462.55 438.62 B
2 F
0.28 0 (,) 485.34 438.62 B
0 F
0.28 0 (<simple-) 491.12 438.62 B
0.28 0.04 (lock>) 63.65 425.62 B
2 F
0.28 0.04 (,) 89.69 425.62 B
0 F
0.28 0.04 (<r) 95.56 425.62 B
0.28 0.04 (ecursi) 106.6 425.62 B
0.28 0.04 (v) 134.86 425.62 B
0.28 0.04 (e-lock>) 140.29 425.62 B
2 F
0.28 0.04 (,) 174.97 425.62 B
0 F
0.28 0.04 (<semaphor) 180.83 425.62 B
0.28 0.04 (e>) 233.74 425.62 B
2 F
0.28 0.04 ( and) 244.98 425.62 B
0 F
0.28 0.04 (<notif) 267.13 425.62 B
0.28 0.04 (ication>) 295.06 425.62 B
2 F
0.28 0.04 (\051 corresponds with an equi) 333.45 425.62 B
0.28 0.04 (v) 452.11 425.62 B
0.28 0.04 (alent lo) 457.38 425.62 B
0.28 0.04 (wer) 490.42 425.62 B
0.28 0.04 (-le) 506.82 425.62 B
0.28 0.04 (v) 518.28 425.62 B
0.28 0.04 (el) 523.66 425.62 B
0.28 0.06 (feature pro) 63.65 412.62 B
0.28 0.06 (vided directly by either the operating system or the runtime system. The Dylan objects which) 112.33 412.62 B
0.28 0.01 (are instances of these classes are implemented as) 63.65 399.62 B
1 F
0.28 0.01 (container) 284.26 399.62 B
0.28 0.01 (s) 326.37 399.62 B
2 F
0.28 0.01 ( for handles corresponding to lo) 330.65 399.62 B
0.28 0.01 (w-le) 472.17 399.62 B
0.28 0.01 (v) 491.47 399.62 B
0.28 0.01 (el \050non-) 496.81 399.62 B
0.28 0.05 (Dylan\051 objects. The Dylan objects contain normal Dylan slots too, and these are directly manipulated by) 63.65 386.62 B
0.07 (the Dylan library) 63.65 373.62 P
0.07 (. Ho) 138.22 373.62 P
0.07 (we) 156.95 373.62 P
0.07 (v) 169.5 373.62 P
0.07 (er) 174.84 373.62 P
0.07 (, the slots containing the lo) 182.95 373.62 P
0.07 (w-le) 301.56 373.62 P
0.07 (v) 320.84 373.62 P
0.07 (el handles may only be manipulated via primi-) 326.17 373.62 P
0.28 0.07 (ti) 63.65 360.62 B
0.28 0.07 (v) 69.62 360.62 B
0.28 0.07 (e function calls. F) 75.02 360.62 B
0.28 0.07 (or each of the classes, primiti) 155.78 360.62 B
0.28 0.07 (v) 287.87 360.62 B
0.28 0.07 (e functions are def) 293.27 360.62 B
0.28 0.07 (ined to both create and destro) 376.31 360.62 B
0.28 0.07 (y the) 509.41 360.62 B
0.08 (lo) 63.65 347.62 P
0.08 (w-le) 71.93 347.62 P
0.08 (v) 91.2 347.62 P
0.08 (el handles, as well as to perform the basic functions of the class, such as) 96.54 347.62 P
0 F
0.08 (wait-f) 417.64 347.62 P
0.08 (or) 444.85 347.62 P
2 F
0.08 ( and) 455.23 347.62 P
0 F
0.08 (r) 476.79 347.62 P
0.08 (elease) 481.47 347.62 P
2 F
0.08 (. The) 508.96 347.62 P
-0.12 (platform-speci\336c implementation of these primiti) 63.65 334.62 P
-0.12 (v) 279.82 334.62 P
-0.12 (e functions is free to choose an) 285.16 334.62 P
-0.12 (y representation for these) 420.51 334.62 P
(handles, pro) 63.65 321.62 T
(vided that it is the same shape as a Dylan slot \050which is equi) 117.25 321.62 T
(v) 381.87 321.62 T
(alent to C\325) 387.09 321.62 T
(s) 432.93 321.62 T
0 F
(v) 439.96 321.62 T
(oid *) 445.35 321.62 T
2 F
(\051.) 468.27 321.62 T
0.28 0.16 (As with all Dylan objects, the container objects def) 63.65 296.62 B
0.28 0.16 (ined by the threads library are subject to automatic) 298.5 296.62 B
0.05 (memory management, and possible relocation by the g) 63.65 283.62 P
0.05 (arbage collector) 304.65 283.62 P
0.05 (. The contents of the container slots) 374.65 283.62 P
-0.11 (will be copied during such a relocation \321 b) 63.65 270.62 P
-0.11 (ut the v) 255.64 270.62 P
-0.11 (alues the) 288.14 270.62 P
-0.11 (y contain will not be subject to g) 326.67 270.62 P
-0.11 (arbage collec-) 469.76 270.62 P
(tion or relocation themselv) 63.65 257.62 T
(es.) 181.72 257.62 T
0.28 0.14 (The portability layer pro) 63.65 232.62 B
0.28 0.14 (vides no direct support for the) 175.65 232.62 B
0 F
0.28 0.14 (f) 316.81 232.62 B
0.28 0.14 (luid-bind) 320.01 232.62 B
2 F
0.28 0.14 ( operation. The library implements a) 364.68 232.62 B
0 F
0.28 0.1 (f) 63.65 219.62 B
0.28 0.1 (luid-v) 66.81 219.62 B
0.28 0.1 (ariable) 94.81 219.62 B
2 F
0.28 0.1 ( as a thread-local v) 128.51 219.62 B
0.28 0.1 (ariable, and uses the high-le) 214.41 219.62 B
0.28 0.1 (v) 341.25 219.62 B
0.28 0.1 (el Dylan construct) 346.69 219.62 B
0 F
0.28 0.1 (unwind-pr) 432.82 219.62 B
0.28 0.1 (otect) 483.64 219.62 B
2 F
0.28 0.1 ( [also) 506.74 219.62 B
(called) 63.65 206.62 T
0 F
(cleanup) 92.67 206.62 T
2 F
( in Dylan\325) 129.34 206.62 T
(s in\336x syntax] to manage the creation and deletion of ne) 173.34 206.62 T
(w bindings.) 419.92 206.62 T
0.28 0.08 (The portability layer includes support for conditional update of atomic v) 63.65 181.62 B
0.28 0.08 (ariables, as well as assignment.) 390.51 181.62 B
0.28 0.04 (The implementation mechanism for these is not def) 63.65 168.62 B
0.28 0.04 (ined, b) 293.14 168.62 B
0.28 0.04 (ut it is hoped that man) 323.39 168.62 B
0.28 0.04 (y platforms will pro) 423.52 168.62 B
0.28 0.04 (vide) 512.6 168.62 B
0.28 0.04 (direct hardw) 63.65 155.62 B
0.28 0.04 (are support for this operation. Where hardw) 119.6 155.62 B
0.28 0.04 (are support is not a) 315.68 155.62 B
0.28 0.04 (v) 401.11 155.62 B
0.28 0.04 (ailable, the lo) 406.38 155.62 B
0.28 0.04 (w-le) 466.85 155.62 B
0.28 0.04 (v) 486.29 155.62 B
0.28 0.04 (el imple-) 491.67 155.62 B
-0.2 (mentation may choose to use a lock to protect conditional updates and assignments, as a f) 63.65 142.62 P
-0.2 (all back option. It) 454.64 142.62 P
(is assumed that atomic v) 63.65 129.62 T
(ariables may al) 171.54 129.62 T
(w) 238.02 129.62 T
(ays be read as normal v) 245.85 129.62 T
(ariables.) 349.13 129.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 29
%%Page: "24" 30
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(24) 63.65 84.9 T
2 11 Q
0.06 (T) 63.65 737.62 P
0.06 (able) 69.49 737.62 P
0.06 (1 on page) 90.57 737.62 P
0.06 (24 sho) 136.2 737.62 P
0.06 (ws the e) 165.01 737.62 P
0.06 (xpected mapping between the concrete Dylan classes and lo) 201.01 737.62 P
0.06 (w-le) 465.14 737.62 P
0.06 (v) 484.41 737.62 P
0.06 (el operat-) 489.74 737.62 P
0.28 0.08 (ing system features, for three of the most popular general-purpose operating systems. In principle, there) 63.65 724.62 B
0.28 0.07 (e) 63.65 711.62 B
0.28 0.07 (xist separate e) 68.44 711.62 B
0.28 0.07 (xpansions of ANDF tok) 132.24 711.62 B
0.28 0.07 (ens and separate implementations of primiti) 239.91 711.62 B
0.28 0.07 (v) 436.96 711.62 B
0.28 0.07 (e functions for each) 442.37 711.62 B
(operating system. This document describes in detail only the Solaris implementation.) 63.65 698.62 T
(T) 179.62 679.62 T
(able 1.) 185.46 679.62 T
(Implementations of Dylan Thread Interf) 220.29 679.62 T
(aces) 396.75 679.62 T
3 10 Q
(4.1.2) 63.65 428.29 T
(Dylan T) 90.89 428.29 T
(ypes f) 126.41 428.29 T
(or Threads P) 155.11 428.29 T
(or) 215.84 428.29 T
(tability) 226.04 428.29 T
2 11 Q
0.28 0.1 (Three Dylan types merit discussion for their use with portability primiti) 63.65 407.62 B
0.28 0.1 (v) 389.12 407.62 B
0.28 0.1 (es:) 394.57 407.62 B
0 F
0.28 0.1 (<thr) 410.23 407.62 B
0.28 0.1 (ead>) 431.39 407.62 B
2 F
0.28 0.1 (,) 454.58 407.62 B
0 F
0.28 0.1 (<portable-con-) 460.57 407.62 B
0.28 0.13 (tainer>) 63.65 394.62 B
2 F
0.28 0.13 (, and) 98.91 394.62 B
0 F
0.28 0.13 (<optional-name>) 124.36 394.62 B
2 F
0.28 0.13 (. Objects that are instances of the) 206.64 394.62 B
0 F
0.28 0.13 (<thr) 361.61 394.62 B
0.28 0.13 (ead>) 382.86 394.62 B
2 F
0.28 0.13 ( and) 406.13 394.62 B
0 F
0.28 0.13 (<portable-container>) 428.7 394.62 B
2 F
-0.11 (classes ha) 63.65 381.62 P
-0.11 (v) 107 381.62 P
-0.11 (e slots which contain lo) 112.33 381.62 P
-0.11 (wer) 215.5 381.62 P
-0.11 (-le) 231.77 381.62 P
-0.11 (v) 243.1 381.62 P
-0.11 (el objects that are speci\336c to the Dylan runtime or operating sys-) 248.43 381.62 P
-0.17 (tem. The) 63.65 368.62 P
0 F
-0.17 (<optional-name>) 105.16 368.62 P
2 F
-0.17 ( type allo) 185.54 368.62 P
-0.17 (ws an object, such as a lock, to ha) 225.87 368.62 P
-0.17 (v) 373.38 368.62 P
-0.17 (e a name represented as a string or) 378.71 368.62 P
-0.17 (,) 528.9 368.62 P
(if no name is supplied, as the Boolean f) 63.65 355.62 T
(alse v) 237.38 355.62 T
(alue) 262.46 355.62 T
0 F
(#f) 283.54 355.62 T
2 F
(.) 292.7 355.62 T
0 F
(<thread>) 63.65 326.62 T
2 F
([Class]) 500.48 326.62 T
0.28 0.02 (A Dylan object of class) 99.65 304.62 B
0 F
0.28 0.02 (<thr) 207.55 304.62 B
0.28 0.02 (ead>) 228.37 304.62 B
2 F
0.28 0.02 ( contains tw) 251.23 304.62 B
0.28 0.02 (o OS handles. One of these represents the underly-) 305.09 304.62 B
0.28 0.03 (ing OS thread, and the other may be used by implementations to contain the current status of the) 99.65 291.62 B
(thread, as an aid to the implementation of the join state.) 99.65 278.62 T
0 F
(<portable-container>) 63.65 249.62 T
2 F
([Class]) 500.48 249.62 T
-0.02 (The) 99.65 227.62 P
0 F
-0.02 (<portable-container>) 119.48 227.62 P
2 F
-0.02 ( class is used by the implementation as a superclass for all the concrete) 220.01 227.62 P
0.28 0.05 (synchronization classes \050) 99.65 214.62 B
0 F
0.28 0.05 (<simple-lock>) 211.4 214.62 B
2 F
0.28 0.05 (,) 278.36 214.62 B
0 F
0.28 0.05 (<r) 284.23 214.62 B
0.28 0.05 (ecursi) 295.28 214.62 B
0.28 0.05 (v) 323.57 214.62 B
0.28 0.05 (e-lock>) 329.01 214.62 B
2 F
0.28 0.05 (,) 363.73 214.62 B
0 F
0.28 0.05 (<semaphor) 369.6 214.62 B
0.28 0.05 (e>) 422.56 214.62 B
2 F
0.28 0.05 (, and) 433.81 214.62 B
0 F
0.28 0.05 (<notif) 458.79 214.62 B
0.28 0.05 (ication>) 486.74 214.62 B
2 F
0.28 0.05 (\051.) 525.19 214.62 B
0.28 0.08 (Each) 99.65 201.62 B
0 F
0.28 0.08 (<portable-container>) 125.07 201.62 B
2 F
0.28 0.08 ( object contains an OS handle, which is a) 227.26 201.62 B
0.28 0.08 (v) 413.8 201.62 B
0.28 0.08 (ailable to the runtime for) 419.11 201.62 B
(storing an) 99.65 188.62 T
(y OS-speci\336c data. Subclasses may pro) 143.18 188.62 T
(vide additional slots.) 315.93 188.62 T
0 F
(<optional-name>) 63.65 159.62 T
2 F
([T) 502.6 159.62 T
(ype]) 512.1 159.62 T
0.28 0.12 (This is a union type which is used to represent names of synchronization objects. V) 99.65 137.62 B
0.28 0.12 (alues of the) 479.08 137.62 B
(type are either strings \050of class) 99.65 124.62 T
0 F
(<byte-string>) 237.12 124.62 T
2 F
(\051 or f) 300.98 124.62 T
(alse \050) 322.86 124.62 T
0 F
(#f\051) 346.38 124.62 T
2 F
(.) 359.2 124.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Dylan Interface) 69.65 619.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Solaris) 186.65 631.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Implementation) 186.65 619.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(W) 303.65 631.62 T
(in32) 314.45 631.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Implementation) 303.65 619.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Macintosh) 420.65 631.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Implementation) 420.65 619.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<thr) 69.65 599.62 T
(ead>) 90.38 599.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(thread) 186.65 599.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(thread) 303.65 599.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(thread) 420.65 599.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<simple-lock>) 69.65 585.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(mute) 186.65 585.62 T
(x) 208.48 585.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(critical re) 303.65 585.62 T
(gion) 345.33 585.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(critical re) 420.65 585.62 T
(gion) 462.33 585.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<r) 69.65 571.62 T
(ecursi) 80.6 571.62 T
(v) 108.6 571.62 T
(e-lock>) 113.99 571.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(mute) 186.65 571.62 T
(x) 208.48 571.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(critical re) 303.65 571.62 T
(gion) 345.33 571.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(critical re) 420.65 571.62 T
(gion) 462.33 571.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<semaphor) 69.65 557.62 T
(e>) 122.16 557.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(semaphore) 186.65 557.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(semaphore) 303.65 557.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(b) 420.65 557.62 T
(uilt using critical) 425.93 557.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(re) 420.65 544.62 T
(gion as a primiti) 429.03 544.62 T
(v) 500.56 544.62 T
(e) 505.9 544.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<noti\336cation>) 69.65 530.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(condition v) 186.65 530.62 T
(ariable) 236.18 530.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(e) 303.65 530.62 T
(v) 308.26 530.62 T
(ent) 313.59 530.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(b) 420.65 530.62 T
(uilt using critical) 425.93 530.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(re) 420.65 517.62 T
(gion as a primiti) 429.03 517.62 T
(v) 500.56 517.62 T
(e) 505.9 517.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(\337uid-v) 69.65 503.62 T
(ariable) 100.11 503.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(thread-local v) 186.65 503.62 T
(ariable) 247.16 503.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(thread-local v) 303.65 503.62 T
(ariable) 364.16 503.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(thread-local v) 420.65 503.62 T
(ariable?) 481.16 503.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(conditional-update!) 69.65 489.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(mute) 186.65 489.62 T
(x) 208.48 489.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(e) 303.65 489.62 T
(xchange instruction) 308.37 489.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(\050using a guard v) 303.65 476.62 T
(alue as) 374.55 476.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(a lock\051;) 303.65 463.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(store conditional) 420.65 489.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(instruction \050on Po) 420.65 476.62 T
(wer) 499.21 476.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(PC\051) 420.65 463.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
180.65 661.95 180.65 458.95 2 L
V
0.25 H
0 Z
N
297.65 661.95 297.65 458.95 2 L
V
N
414.65 661.95 414.65 458.95 2 L
V
N
63.65 608.95 531.65 608.95 2 L
V
0.5 H
N
63.65 594.95 531.65 594.95 2 L
V
0.25 H
N
63.65 580.95 531.65 580.95 2 L
V
N
63.65 566.95 531.65 566.95 2 L
V
N
63.65 539.95 531.65 539.95 2 L
V
N
63.65 512.95 531.65 512.95 2 L
V
N
63.65 498.95 531.65 498.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 30
%%Page: "25" 31
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(25) 520.53 84.9 T
2 11 Q
-0.06 (V) 63.65 737.62 P
-0.06 (arious classes of Dylan objects are passed through the portability interf) 70.37 737.62 P
-0.06 (ace, and hence require description) 381.9 737.62 P
0.27 (in terms of lo) 63.65 724.62 P
0.27 (wer le) 123.16 724.62 P
0.27 (v) 150.34 724.62 P
0.27 (el languages. T) 155.68 724.62 P
0.27 (able) 222.24 724.62 P
0.27 (2 on page) 243.32 724.62 P
0.27 (25 maps the layout of these Dylan objects onto their C) 289.38 724.62 P
(equi) 63.65 711.62 T
(v) 82.32 711.62 T
(alents, which are used by runtime-speci\336c implementations of the portability layer) 87.54 711.62 T
(.) 449.58 711.62 T
0.28 0.03 (In general, all Dylan types can be thought of as equi) 63.65 686.62 B
0.28 0.03 (v) 297.31 686.62 B
0.28 0.03 (alent to the C type) 302.57 686.62 B
0 F
0.28 0.03 (Z) 388.02 686.62 B
2 F
0.28 0.03 (, which is in turn equi) 395.39 686.62 B
0.28 0.03 (v) 493.19 686.62 B
0.28 0.03 (alent to) 498.45 686.62 B
0.13 (the C type) 63.65 673.62 P
0 F
0.13 (v) 112.01 673.62 P
0.13 (oid*) 117.4 673.62 P
2 F
0.13 (. Of course, runtime-speci\336c implementations of the portability layer must ha) 137.58 673.62 P
0.13 (v) 479.02 673.62 P
0.13 (e access to) 484.35 673.62 P
0.2 (rele) 63.65 660.62 P
0.2 (v) 79.86 660.62 P
0.2 (ant \336elds of the Dylan objects on which the) 85.09 660.62 P
0.2 (y operate. The type de\336nitions in T) 277.78 660.62 P
0.2 (able) 433.01 660.62 P
0.2 (2 gi) 454.08 660.62 P
0.2 (v) 470.82 660.62 P
0.2 (e implemen-) 476.15 660.62 P
0.28 0.07 (tations access to f) 63.65 647.62 B
0.28 0.07 (ields needed for specif) 143.11 647.62 B
0.28 0.07 (ic types. These def) 244.24 647.62 B
0.28 0.07 (initions are not necessarily complete descrip-) 328.28 647.62 B
-0.03 (tions of the Dylan objects, ho) 63.65 634.62 P
-0.03 (we) 192.76 634.62 P
-0.03 (v) 205.31 634.62 P
-0.03 (er) 210.65 634.62 P
-0.03 (. The objects may contain additional \336elds that are not of interest to the) 218.59 634.62 P
(portability layer) 63.65 621.62 T
(, and subclasses may add additional \336elds of their o) 133.78 621.62 T
(wn.) 360.21 621.62 T
(T) 163.02 602.62 T
(able 2.) 168.87 602.62 T
(Correspondence Between Dylan T) 203.69 602.62 T
(ypes and C T) 354.63 602.62 T
(ypes) 412.11 602.62 T
3 12 Q
(4.2) 63.65 187.95 T
(Compiler Suppor) 90.65 187.95 T
(t f) 188.23 187.95 T
(or the P) 199.32 187.95 T
(or) 243.52 187.95 T
(tability Interface) 255.76 187.95 T
3 10 Q
(4.2.1) 63.65 153.29 T
(The Compiler Flo) 90.89 153.29 T
(w Graph) 172.42 153.29 T
2 11 Q
0.28 0.03 (The front end of the compiler parses Dylan source code and produces an intermediate representation, the) 63.65 132.62 B
0.25 (Implicit Continuation Representation \050ICR\051. The ICR is a directed ac) 63.65 119.62 P
0.25 (yclic graph \050D) 370 119.62 P
0.25 (A) 433.59 119.62 P
0.25 (G\051 of Dylan objects.) 441.09 119.62 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Dylan T) 69.65 566.62 T
(ype) 107.04 566.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(C T) 225.65 566.62 T
(ype) 242.86 566.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(C T) 381.65 566.62 T
(ype De\336nition) 398.86 566.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<object>) 69.65 546.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Z) 225.65 546.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef v) 381.65 546.62 T
(oid* Z;) 424.61 546.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<small-integer>) 69.65 532.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ZINT) 225.65 532.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(platf) 381.65 532.62 T
(orm speci\336c \050size of) 403.37 532.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(v) 381.65 519.62 T
(oid*\051) 387.04 519.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<function>) 69.65 505.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ZFN) 225.65 505.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef Z\050*ZFN\051\050Z, int, \311\051;) 381.65 505.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<simple-object-v) 69.65 491.62 T
(ector>) 147.9 491.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(SO) 225.65 491.62 T
(V*) 239.77 491.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef struct _so) 381.65 491.62 T
(v {) 464.63 491.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Z class;) 392.65 478.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ZINT size;) 392.65 465.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Z data[ ];) 392.65 450.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(} SO) 381.65 435.62 T
(V) 402.86 435.62 T
(;) 409.79 435.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<byte-string>) 69.65 421.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(B_STRING*) 225.65 421.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef struct _bst {) 381.65 421.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Z class;) 392.65 408.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ZINT size;) 392.65 395.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char data[ ];) 392.65 380.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(} B_STRING;) 381.65 365.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<optional-name>) 69.65 351.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(D_N) 225.65 351.62 T
(AME) 246.81 351.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef v) 381.65 351.62 T
(oid* D_N) 424.61 351.62 T
(AME;) 468.7 351.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<portable-container>) 69.65 337.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(CONT) 225.65 337.62 T
(AINER*) 256.44 337.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef struct _ctr {) 381.65 337.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Z class;) 392.65 324.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(v) 392.65 311.62 T
(oid* handle;) 398.04 311.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(} CONT) 381.65 296.62 T
(AINER;) 419.52 296.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<thr) 69.65 282.62 T
(ead>) 90.38 282.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(D_THREAD*) 225.65 282.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(typedef struct _dth {) 381.65 282.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Z class;) 392.65 269.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(v) 392.65 256.62 T
(oid* handle1;) 398.04 256.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(v) 392.65 241.62 T
(oid* handle2;) 398.04 241.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(} D_THREAD;) 381.65 226.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
219.65 584.95 219.65 221.95 2 L
V
0.25 H
0 Z
N
375.65 584.95 375.65 221.95 2 L
V
N
63.65 555.95 531.65 555.95 2 L
V
0.5 H
N
63.65 541.95 531.65 541.95 2 L
V
0.25 H
N
63.65 514.95 531.65 514.95 2 L
V
N
63.65 500.95 531.65 500.95 2 L
V
N
63.65 430.95 531.65 430.95 2 L
V
N
63.65 360.95 531.65 360.95 2 L
V
N
63.65 346.95 531.65 346.95 2 L
V
N
63.65 291.95 531.65 291.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 31
%%Page: "26" 32
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(26) 63.65 84.9 T
2 11 Q
0.22 (A) 63.65 737.62 P
1 F
0.22 (leaf) 74.56 737.62 P
2 F
0.22 ( in the ICR represents a basic computational object, such as a v) 91.06 737.62 P
0.22 (ariable \050of class) 371.11 737.62 P
0 F
0.22 (<v) 444.15 737.62 P
0.22 (ariable-leaf>) 455.82 737.62 P
2 F
0.22 (\051 or) 515.85 737.62 P
-0.04 (a function \050of class) 63.65 724.62 P
0 F
-0.04 (<function-leaf>) 150.24 724.62 P
2 F
-0.04 (\051. A) 222.66 724.62 P
1 F
-0.04 (node) 242.44 724.62 P
2 F
-0.04 ( in the ICR represents an operation such as assignment \050class) 263.82 724.62 P
0 F
(<assignment>) 63.65 711.62 T
2 F
(\051, conditional e) 128.75 711.62 T
(x) 194.88 711.62 T
(ecution \050class) 200.21 711.62 T
0 F
(<if>) 263.14 711.62 T
2 F
(\051, or a reference to a leaf \050class) 282.4 711.62 T
0 F
(<r) 420.75 711.62 T
(efer) 431.71 711.62 T
(ence>) 449.83 711.62 T
2 F
(\051.) 476.86 711.62 T
0.26 (In mapping Dylan code to the ICR, the compiler uses a set of) 63.65 686.62 P
1 F
0.26 (con) 338.99 686.62 P
0.26 (verter) 354.44 686.62 P
0.26 (s) 380.6 686.62 P
2 F
0.26 (, which perform syntactic pattern) 384.87 686.62 P
0.28 0.04 (matching ag) 63.65 673.62 B
0.28 0.04 (ainst fragments of Dylan code and generate the ICR corresponding to the matched code. F) 118.39 673.62 B
0.28 0.04 (or) 522.44 673.62 B
0.28 0.14 (e) 63.65 660.62 B
0.28 0.14 (xample, when the compiler encounters a top-le) 68.5 660.62 B
0.28 0.14 (v) 282.28 660.62 B
0.28 0.14 (el v) 287.75 660.62 B
0.28 0.14 (ariable def) 304.49 660.62 B
0.28 0.14 (inition \050introduced by the Dylan) 352.41 660.62 B
0 F
0.28 0.14 (def) 502.84 660.62 B
0.28 0.14 (ine) 517.31 660.62 B
0.16 (v) 63.65 647.62 P
0.16 (ariable) 69.04 647.62 P
2 F
0.16 ( construct\051, the con) 102.04 647.62 P
0.16 (v) 186.39 647.62 P
0.16 (erter for) 191.73 647.62 P
0 F
0.16 (de\336ne v) 230.53 647.62 P
0.16 (ariable) 266.94 647.62 P
2 F
0.16 ( creates a ne) 299.94 647.62 P
0.16 (w instance of) 354.2 647.62 P
0 F
0.16 (<global-v) 416.09 647.62 P
0.16 (ariable-leaf>) 460.14 647.62 P
2 F
0.16 ( in) 520.18 647.62 P
-0.06 (the ICR to represent this v) 63.65 634.62 P
-0.06 (ariable and to record data such as its name, initial v) 178.88 634.62 P
-0.06 (alue, and typing information.) 403.8 634.62 P
0.28 0.03 (The back end of the compiler tra) 63.65 609.62 B
0.28 0.03 (v) 209.46 609.62 B
0.28 0.03 (erses the f) 214.82 609.62 B
0.28 0.03 (lo) 259.64 609.62 B
0.28 0.03 (w graph and emits code in the tar) 267.98 609.62 B
0.28 0.03 (get language for compiler) 416.88 609.62 B
0.28 0.01 (output. Methods in the back end specialize on node and leaf classes to enable them to produce the appro-) 63.65 596.62 B
0.28 0.06 (priate output. Some methods in the ANDF back end, for e) 63.65 583.62 B
0.28 0.06 (xample, are specialized on node classes repre-) 324.28 583.62 B
0.28 0.05 (senting calls to primiti) 63.65 570.62 B
0.28 0.05 (v) 164.06 570.62 B
0.28 0.05 (e functions. These methods emit uses of the ANDF tok) 169.45 570.62 B
0.28 0.05 (ens that correspond to the) 416.3 570.62 B
(function calls.) 63.65 557.62 T
3 10 Q
(4.2.2) 63.65 523.29 T
(Compiler Suppor) 90.89 523.29 T
(t f) 172.21 523.29 T
(or Atomic and Fluid V) 181.45 523.29 T
(ariab) 284.2 523.29 T
(les) 308 523.29 T
2 11 Q
0.28 0.16 (The portability layer pro) 63.65 502.62 B
0.28 0.16 (vides support for atomic v) 176.21 502.62 B
0.28 0.16 (ariable access and for Dylan f) 296.74 502.62 B
0.28 0.16 (luid v) 433.42 502.62 B
0.28 0.16 (ariables \050imple-) 459.76 502.62 B
0.28 0.13 (mented as thread-local v) 63.65 489.62 B
0.28 0.13 (ariables\051. Atomic v) 175.24 489.62 B
0.28 0.13 (ariables and thread v) 262.68 489.62 B
0.28 0.13 (ariables are directly represented in the) 357.36 489.62 B
0.28 0.05 (f) 63.65 476.62 B
0.28 0.05 (lo) 66.75 476.62 B
0.28 0.05 (w graph, where the) 75.14 476.62 B
0.28 0.05 (y are subject to dataf) 160.98 476.62 B
0.28 0.05 (lo) 254.19 476.62 B
0.28 0.05 (w analysis. The v) 262.57 476.62 B
0.28 0.05 (ariables themselv) 340.94 476.62 B
0.28 0.05 (es appear as lea) 418.56 476.62 B
0.28 0.05 (v) 488.66 476.62 B
0.28 0.05 (es in the) 494.04 476.62 B
(graph.) 63.65 463.62 T
0.05 (Because both atomic and \337uid v) 63.65 438.62 P
0.05 (ariables need special treatment when the) 205.07 438.62 P
0.05 (y are accessed, the back end must) 383.22 438.62 P
-0.04 (emit output that is dif) 63.65 425.62 P
-0.04 (ferent from that for accessing other kinds of v) 157.96 425.62 P
-0.04 (ariables. The compiler de\336nes tw) 359.02 425.62 P
-0.04 (o spe-) 505.11 425.62 P
0.28 0.09 (cialized classes of leaf for the ICR,) 63.65 412.62 B
0 F
0.28 0.09 (<atomic-global-v) 226.03 412.62 B
0.28 0.09 (ariable-leaf>) 306.97 412.62 B
2 F
0.28 0.09 ( \050corresponding to atomic v) 368.18 412.62 B
0.28 0.09 (ariables\051) 493.05 412.62 B
0.15 (and) 63.65 399.62 P
0 F
0.15 (<\337uid-global-v) 82.43 399.62 P
0.15 (ariable-leaf>) 151.55 399.62 P
2 F
0.15 ( \050corresponding to \337uid v) 211.59 399.62 P
0.15 (ariables\051. These are subclasses of) 323.74 399.62 P
0 F
0.15 (<global-v) 473.55 399.62 P
0.15 (ar-) 517.6 399.62 P
(iable-leaf>) 63.65 386.62 T
2 F
( and therefore inherit general characteristics of lea) 113.3 386.62 T
(v) 333.92 386.62 T
(es that represent v) 339.25 386.62 T
(ariables.) 418.71 386.62 T
0.28 0.05 (ICR lea) 63.65 361.62 B
0.28 0.05 (v) 97.96 361.62 B
0.28 0.05 (es representing both atomic and f) 103.35 361.62 B
0.28 0.05 (luid v) 252.09 361.62 B
0.28 0.05 (ariables are created by the con) 277.76 361.62 B
0.28 0.05 (v) 413.71 361.62 B
0.28 0.05 (erter for) 419.09 361.62 B
0 F
0.28 0.05 (def) 458.62 361.62 B
0.28 0.05 (ine v) 472.83 361.62 B
0.28 0.05 (ariable) 495.55 361.62 B
2 F
0.28 0.05 (.) 528.9 361.62 B
0.28 0.01 (When the compiler encounters a def) 63.65 348.62 B
0.28 0.01 (inition of an atomic v) 223.83 348.62 B
0.28 0.01 (ariable \050introduced by the) 319.55 348.62 B
0 F
0.28 0.01 (def) 436.94 348.62 B
0.28 0.01 (ine atomic-v) 451.02 348.62 B
0.28 0.01 (aria-) 509.02 348.62 B
0.28 0.03 (ble) 63.65 335.62 B
2 F
0.28 0.03 ( construct\051, the con) 77.79 335.62 B
0.28 0.03 (v) 163.07 335.62 B
0.28 0.03 (erter for) 168.43 335.62 B
0 F
0.28 0.03 (def) 207.74 335.62 B
0.28 0.03 (ine v) 221.89 335.62 B
0.28 0.03 (ariable) 244.51 335.62 B
2 F
0.28 0.03 ( creates an instance of) 277.71 335.62 B
0 F
0.28 0.03 (<atomic-global-v) 379.65 335.62 B
0.28 0.03 (ariable-leaf>) 459.6 335.62 B
2 F
0.28 0.03 (in) 523.06 335.62 B
-0.08 (the ICR. When the compiler encounters a de\336nition of a \337uid v) 63.65 322.62 P
-0.08 (ariable \050introduced by the) 340.57 322.62 P
0 F
-0.08 (de\336ne \337uid-v) 456.35 322.62 P
-0.08 (ar-) 517.6 322.62 P
(iable) 63.65 309.62 T
2 F
( construct\051, the con) 86.26 309.62 T
(v) 170.14 309.62 T
(erter creates an instance of) 175.47 309.62 T
0 F
(<\337uid-global-v) 295.51 309.62 T
(ariable-leaf>) 364.63 309.62 T
2 F
(.) 424.67 309.62 T
-0.03 (The operations of reading, writing, and conditionally updating atomic v) 63.65 284.62 P
-0.03 (ariables and of reading and writing) 378.12 284.62 P
0.14 (\337uid v) 63.65 271.62 P
0.14 (ariables are not represented by primiti) 91.93 271.62 P
0.14 (v) 259.44 271.62 P
0.14 (e functions. Instead, the) 264.78 271.62 P
0.14 (y are represented directly in the \337o) 369.81 271.62 P
0.14 (w) 523.71 271.62 P
0.28 0.12 (graph. By specializing methods on the leaf classes that represent atomic and f) 63.65 258.62 B
0.28 0.12 (luid v) 417.08 258.62 B
0.28 0.12 (ariables, the ANDF) 443.18 258.62 B
(back end generates uses of ANDF tok) 63.65 245.62 T
(ens that correspond to these operations.) 230.33 245.62 T
3 10 Q
(4.2.3) 63.65 211.29 T
(Compiler Suppor) 90.89 211.29 T
(t f) 172.21 211.29 T
(or Primitives) 181.45 211.29 T
2 11 Q
0.13 (When the compiler constructs the \337o) 63.65 190.62 P
0.13 (w graph, it represents a function call as a node in the ICR. Just as the) 226.27 190.62 P
0.28 0.03 (compiler distinguishes atomic and f) 63.65 177.62 B
0.28 0.03 (luid v) 222.31 177.62 B
0.28 0.03 (ariables by means of specialized leaf classes, so it distinguishes) 247.86 177.62 B
(calls to primiti) 63.65 164.62 T
(v) 127.55 164.62 T
(e functions of the portability interf) 132.88 164.62 T
(ace by means of a specialized node class.) 284.62 164.62 T
0.04 (A function call is an operation on se) 63.65 139.62 P
0.04 (v) 222.8 139.62 P
0.04 (eral components: the function object, the ar) 228.14 139.62 P
0.04 (guments, and the destina-) 419.1 139.62 P
0.28 0.01 (tion for returned v) 63.65 126.62 B
0.28 0.01 (alues. When the compiler encounters a re) 144.82 126.62 B
0.28 0.01 (gular Dylan call, which typically appears as a) 328.66 126.62 B
(call to a generic function, it represents the call in the ICR as a node of class) 63.65 113.62 T
0 F
(<combination>) 397.86 113.62 T
2 F
(.) 469.08 113.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 32
%%Page: "27" 33
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(27) 520.53 84.9 T
2 11 Q
0.13 (Ho) 63.65 737.62 P
0.13 (we) 76.82 737.62 P
0.13 (v) 89.37 737.62 P
0.13 (er) 94.7 737.62 P
0.13 (, the compiler contains a table of the primiti) 102.81 737.62 P
0.13 (v) 296.38 737.62 P
0.13 (e functions in the portability interf) 301.72 737.62 P
0.13 (ace. Before creat-) 453.51 737.62 P
-0.05 (ing an ICR node to represent a function call, the compiler looks up the function being called in the table of) 63.65 724.62 P
-0.01 (primiti) 63.65 711.62 P
-0.01 (v) 93.33 711.62 P
-0.01 (es. If the function appears in the table, the compiler creates an ICR node of class) 98.66 711.62 P
0 F
-0.01 (<primiti) 455.34 711.62 P
-0.01 (v) 494.5 711.62 P
-0.01 (e-com-) 499.89 711.62 P
(bination>) 63.65 698.62 T
2 F
(.) 109.04 698.62 T
0.28 0.11 (When the ANDF back end tra) 63.65 673.62 B
0.28 0.11 (v) 199.31 673.62 B
0.28 0.11 (erses the f) 204.76 673.62 B
0.28 0.11 (lo) 250.5 673.62 B
0.28 0.11 (w graph, methods specialized on the node class) 259 673.62 B
0 F
0.28 0.11 (<primiti) 477.45 673.62 B
0.28 0.11 (v) 517.49 673.62 B
0.28 0.11 (e-) 522.99 673.62 B
(combination>) 63.65 660.62 T
2 F
( emit uses of the ANDF tok) 128.59 660.62 T
(ens that correspond to calls to primiti) 250.09 660.62 T
(v) 413.58 660.62 T
(e functions.) 418.92 660.62 T
3 12 Q
(4.3) 63.65 622.95 T
(Primitive Functions of the P) 90.65 622.95 T
(or) 248.87 622.95 T
(tability Interface) 261.11 622.95 T
2 11 Q
(This section describes in detail the ar) 63.65 601.62 T
(guments, v) 226.59 601.62 T
(alues, and operations of the primiti) 274.6 601.62 T
(v) 427.69 601.62 T
(e functions.) 433.03 601.62 T
3 10 Q
(4.3.1) 63.65 567.29 T
(Threads) 90.89 567.29 T
0 11 Q
(primitive-make-thread) 63.65 538.62 T
2 F
([Primiti) 483.81 538.62 T
(v) 517.77 538.62 T
(e]) 523.1 538.62 T
1 F
(Signatur) 81.65 513.62 T
(e) 119.14 513.62 T
0 F
(\050thr) 99.65 494.62 T
(ead :: <thr) 117.78 494.62 T
(ead>, name :: <optional-name>, priority :: <small-integer>,) 167.84 494.62 T
(function :: <function>\051 => \050\051) 121.25 481.62 T
1 F
(Ar) 81.65 456.62 T
(guments) 92.24 456.62 T
0 F
(thr) 99.65 434.62 T
(ead) 114.11 434.62 T
2 F
(A Dylan thread object.) 171.65 434.62 T
0 F
(name) 99.65 412.62 T
2 F
(The name of the thread \050as a) 171.65 412.62 T
0 F
(<byte-string>) 299.63 412.62 T
2 F
(\051 or) 363.5 412.62 T
0 F
(#f) 381.83 412.62 T
2 F
(.) 390.99 412.62 T
0 F
(priority) 99.65 390.62 T
2 F
(The priority at which the thread is to run.) 171.65 390.62 T
0 F
(function) 99.65 368.62 T
2 F
(The initial function to run after the thread is created.) 171.65 368.62 T
1 F
(Description) 81.65 343.62 T
2 F
0.28 0.01 (Creates a ne) 99.65 321.62 B
0.28 0.01 (w OS thread and destructi) 153.83 321.62 B
0.28 0.01 (v) 269.22 321.62 B
0.28 0.01 (ely modif) 274.57 321.62 B
0.28 0.01 (ies the container slots in the Dylan thread object) 316.82 321.62 B
0.05 (with the handles of the ne) 99.65 308.62 P
0.05 (w OS thread. The ne) 212.96 308.62 P
0.05 (w OS thread is started in a w) 303.61 308.62 P
0.05 (ay which calls the sup-) 430.64 308.62 P
(plied Dylan function.) 99.65 295.62 T
0 F
(primitive-destroy-thread) 63.65 266.62 T
2 F
([Primiti) 483.81 266.62 T
(v) 517.77 266.62 T
(e]) 523.1 266.62 T
1 F
(Signatur) 81.65 241.62 T
(e) 119.14 241.62 T
0 F
(\050thr) 99.65 222.62 T
(ead :: <thr) 117.78 222.62 T
(ead>\051 => \050\051) 167.84 222.62 T
1 F
(Ar) 81.65 197.62 T
(guments) 92.24 197.62 T
0 F
(thr) 99.65 175.62 T
(ead) 114.11 175.62 T
2 F
(A Dylan thread object.) 171.65 175.62 T
1 F
(Description) 81.65 150.62 T
2 F
(Frees an) 99.65 128.62 T
(y runtime-allocated memory associated with the thread.) 136.44 128.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 33
%%Page: "28" 34
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(28) 63.65 84.9 T
0 11 Q
(primitive-initialize-current-thread) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050thr) 99.65 693.62 T
(ead :: <thr) 117.78 693.62 T
(ead>\051 => \050\051) 167.84 693.62 T
1 F
(Ar) 81.65 668.62 T
(guments) 92.24 668.62 T
0 F
(thr) 99.65 646.62 T
(ead) 114.11 646.62 T
2 F
(A Dylan thread object.) 171.65 646.62 T
1 F
(Description) 81.65 621.62 T
2 F
0.28 0.07 (The container slots in the Dylan thread object are destructi) 99.65 599.62 B
0.28 0.07 (v) 363.76 599.62 B
0.28 0.07 (ely modif) 369.17 599.62 B
0.28 0.07 (ied with the handles of the) 411.97 599.62 B
-0.07 (current OS thread. This function will be used to initialize the \336rst thread, which will not ha) 99.65 586.62 P
-0.07 (v) 497.98 586.62 P
-0.07 (e been) 503.31 586.62 P
(started as the result of a call to) 99.65 573.62 T
0 F
(primiti) 236.51 573.62 T
(v) 269.4 573.62 T
(e-mak) 274.79 573.62 T
(e-thr) 304.01 573.62 T
(ead) 327.02 573.62 T
2 F
(.) 343.52 573.62 T
0 F
(primitive-thread-join-single) 63.65 544.62 T
2 F
([Primiti) 483.81 544.62 T
(v) 517.77 544.62 T
(e]) 523.1 544.62 T
1 F
(Signatur) 81.65 519.62 T
(e) 119.14 519.62 T
0 F
(\050thr) 99.65 500.62 T
(ead :: <thr) 117.78 500.62 T
(ead>\051 => \050err) 167.84 500.62 T
(or) 230.43 500.62 T
(-code :: <small-integer>\051) 240.4 500.62 T
1 F
(Ar) 81.65 475.62 T
(guments) 92.24 475.62 T
0 F
(thr) 99.65 453.62 T
(ead) 114.11 453.62 T
2 F
(A Dylan thread object.) 171.65 453.62 T
1 F
(V) 81.65 428.62 T
(alues) 87.15 428.62 T
0 F
(err) 102.4 406.62 T
(or) 116.85 406.62 T
(-code) 126.83 406.62 T
2 F
(0 = ok, an) 171.65 406.62 T
(ything else is an error) 215.57 406.62 T
(, corresponding to a multiple join.) 310.45 406.62 T
1 F
(Description) 81.65 381.62 T
2 F
(The calling thread blocks \050if necessary\051 until the speci\336ed thread has terminated.) 99.65 359.62 T
0 F
(primitive-thread-join-multiple) 63.65 330.62 T
2 F
([Primiti) 483.81 330.62 T
(v) 517.77 330.62 T
(e]) 523.1 330.62 T
1 F
(Signatur) 81.65 305.62 T
(e) 119.14 305.62 T
0 F
(\050thr) 99.65 286.62 T
(ead-v) 117.78 286.62 T
(ector :: <simple-object-v) 143.33 286.62 T
(ector>\051 => \050r) 258.22 286.62 T
(esult\051) 318.36 286.62 T
1 F
(Ar) 81.65 261.62 T
(guments) 92.24 261.62 T
0 F
(thr) 99.65 239.62 T
(ead-v) 114.11 239.62 T
(ector) 139.67 239.62 T
2 F
(A) 171.65 239.62 T
0 F
(<simple-object-v) 182.34 239.62 T
(ector>) 260.59 239.62 T
2 F
( containing) 290.68 239.62 T
0 F
(<thr) 342.62 239.62 T
(ead>) 363.36 239.62 T
2 F
( objects) 386.13 239.62 T
1 F
(V) 81.65 214.62 T
(alues) 87.15 214.62 T
0 F
(r) 99.65 192.62 T
(esult) 104.33 192.62 T
2 F
0.28 0.15 (The) 171.65 192.62 B
0 F
0.28 0.15 (<thr) 192.37 192.62 B
0.28 0.15 (ead>) 213.7 192.62 B
2 F
0.28 0.15 ( that w) 237.06 192.62 B
0.28 0.15 (as joined, if the join w) 268.48 192.62 B
0.28 0.15 (as successful; otherwise, a) 371.68 192.62 B
0 F
0.28 0.15 (<small-) 495.77 192.62 B
(integer>) 171.65 179.62 T
2 F
( indicating the error) 210.91 179.62 T
(.) 297.37 179.62 T
1 F
(Description) 81.65 154.62 T
2 F
(The calling thread blocks \050if necessary\051 until one of the speci\336ed threads has terminated.) 99.65 132.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 34
%%Page: "29" 35
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(29) 520.53 84.9 T
0 11 Q
(primitive-thread-yield) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050\051 => \050\051) 99.65 693.62 T
1 F
(Description) 81.65 668.62 T
2 F
0.28 0.26 (F) 99.65 646.62 B
0.28 0.26 (or co-operati) 105.86 646.62 B
0.28 0.26 (v) 165.73 646.62 B
0.28 0.26 (ely scheduled threads implementations, the calling thread yields e) 171.32 646.62 B
0.28 0.26 (x) 479.76 646.62 B
0.28 0.26 (ecution in) 485.35 646.62 B
(f) 99.65 633.62 T
(a) 103.2 633.62 T
(v) 107.86 633.62 T
(our of another thread. This may do nothing in some implementations.) 113.14 633.62 T
0 F
(primitive-current-thread) 63.65 604.62 T
2 F
([Primiti) 483.81 604.62 T
(v) 517.77 604.62 T
(e]) 523.1 604.62 T
1 F
(Signatur) 81.65 579.62 T
(e) 119.14 579.62 T
0 F
(\050\051 => \050thr) 99.65 560.62 T
(ead-handle\051) 143.14 560.62 T
1 F
(V) 81.65 535.62 T
(alues) 87.15 535.62 T
0 F
(thr) 99.65 513.62 T
(ead-handle) 114.11 513.62 T
2 F
(A lo) 171.65 513.62 T
(w-le) 190.62 513.62 T
(v) 209.9 513.62 T
(el handle corresponding to the current thread) 215.23 513.62 T
1 F
(Description) 81.65 488.62 T
2 F
0.18 (Returns the lo) 99.65 466.62 P
0.18 (w-le) 161.45 466.62 P
0.18 (v) 180.73 466.62 P
0.18 (el handle of the current thread, which is assumed to be in the handle container) 186.06 466.62 P
0.28 0.15 (slot of one of the) 99.65 453.62 B
0 F
0.28 0.15 (<thr) 181.25 453.62 B
0.28 0.15 (ead>) 202.61 453.62 B
2 F
0.28 0.15 ( objects kno) 225.99 453.62 B
0.28 0.15 (wn to the Dylan library) 281.29 453.62 B
0.28 0.15 (. This result is therefore NO) 387.88 453.62 B
0.28 0.15 (T a) 516.71 453.62 B
-0.01 (Dylan object. The mapping from this v) 99.65 440.62 P
-0.01 (alue back to the) 270.72 440.62 P
0 F
-0.01 (<thr) 342.78 440.62 P
-0.01 (ead>) 363.51 440.62 P
2 F
-0.01 ( object must be performed by the) 386.28 440.62 P
0.28 0.06 (Dylan threads library) 99.65 427.62 B
0.28 0.06 (, and not the primiti) 194.2 427.62 B
0.28 0.06 (v) 283.36 427.62 B
0.28 0.06 (e layer) 288.75 427.62 B
0.28 0.06 (, because the) 318.62 427.62 B
0 F
0.28 0.06 (<thr) 379.53 427.62 B
0.28 0.06 (ead>) 400.5 427.62 B
2 F
0.28 0.06 ( object is subject to g) 423.51 427.62 B
0.28 0.06 (ar-) 519.38 427.62 B
(bage collection, and may not be referenced from an) 99.65 414.62 T
(y lo) 325.83 414.62 T
(w-le) 342.36 414.62 T
(v) 361.64 414.62 T
(el data structures.) 366.97 414.62 T
3 10 Q
(4.3.2) 63.65 380.29 T
(Simple Loc) 90.89 380.29 T
(ks) 144.04 380.29 T
0 11 Q
(primitive-make-simple-lock) 63.65 351.62 T
2 F
([Primiti) 483.81 351.62 T
(v) 517.77 351.62 T
(e]) 523.1 351.62 T
1 F
(Signatur) 81.65 326.62 T
(e) 119.14 326.62 T
0 F
(\050lock :: <portable-container>, name :: <optional-name>\051 => \050\051) 99.65 307.62 T
1 F
(Ar) 81.65 282.62 T
(guments) 92.24 282.62 T
0 F
(lock) 99.65 260.62 T
2 F
(A Dylan) 171.65 260.62 T
0 F
(<simple-lock>) 211.97 260.62 T
2 F
( object.) 278.29 260.62 T
0 F
(name) 99.65 238.62 T
2 F
(The name of the lock \050as a) 171.65 238.62 T
0 F
(<byte-string>) 291.09 238.62 T
2 F
(\051 or) 354.95 238.62 T
0 F
(#f) 373.28 238.62 T
2 F
(.) 382.44 238.62 T
1 F
(Description) 81.65 213.62 T
2 F
0.27 (Creates a ne) 99.65 191.62 P
0.27 (w OS lock and destructi) 153.68 191.62 P
0.27 (v) 260.2 191.62 P
0.27 (ely modi\336es the container slot in the Dylan lock object with) 265.54 191.62 P
(the handle of the ne) 99.65 178.62 T
(w OS lock.) 186.13 178.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 35
%%Page: "30" 36
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(30) 63.65 84.9 T
0 11 Q
(primitive-destroy-simple-lock) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050lock :: <portable-container>\051 => \050\051) 99.65 693.62 T
1 F
(Ar) 81.65 668.62 T
(guments) 92.24 668.62 T
0 F
(lock) 99.65 646.62 T
2 F
(A Dylan) 171.65 646.62 T
0 F
(<simple-lock>) 211.97 646.62 T
2 F
( object.) 278.29 646.62 T
1 F
(Description) 81.65 621.62 T
2 F
(Frees an) 99.65 599.62 T
(y runtime-allocated memory associated with the lock.) 136.44 599.62 T
0 F
(primitive-wait-for-simple-lock) 63.65 570.62 T
2 F
([Primiti) 483.81 570.62 T
(v) 517.77 570.62 T
(e]) 523.1 570.62 T
1 F
(Signatur) 81.65 545.62 T
(e) 119.14 545.62 T
0 F
(\050lock :: <portable-container>\051 => \050err) 99.65 526.62 T
(or) 276.04 526.62 T
(-code :: <small-integer>\051) 286.02 526.62 T
1 F
(Ar) 81.65 501.62 T
(guments) 92.24 501.62 T
0 F
(lock) 99.65 479.62 T
2 F
(A Dylan) 171.65 479.62 T
0 F
(<simple-lock>) 211.97 479.62 T
2 F
( object.) 278.29 479.62 T
1 F
(V) 81.65 454.62 T
(alues) 87.15 454.62 T
0 F
(err) 99.65 432.62 T
(or) 114.1 432.62 T
(-code) 124.08 432.62 T
2 F
(0 = ok) 171.65 432.62 T
1 F
(Description) 81.65 407.62 T
2 F
0.28 0.05 (The calling thread blocks until the specif) 99.65 385.62 B
0.28 0.05 (ied lock is a) 282.25 385.62 B
0.28 0.05 (v) 336.3 385.62 B
0.28 0.05 (ailable \050unlock) 341.58 385.62 B
0.28 0.05 (ed\051 and then locks it. When) 408.11 385.62 B
(the function returns, the lock is o) 99.65 372.62 T
(wned by the calling thread.) 244.5 372.62 T
0 F
(primitive-wait-for-simple-lock-timed) 63.65 343.62 T
2 F
([Primiti) 483.81 343.62 T
(v) 517.77 343.62 T
(e]) 523.1 343.62 T
1 F
(Signatur) 81.65 318.62 T
(e) 119.14 318.62 T
0 F
(\050lock :: <portable-container>, millisecs :: <small-integer>\051) 99.65 299.62 T
(=> \050err) 121.25 286.62 T
(or) 154.65 286.62 T
(-code :: <small-integer>\051) 164.63 286.62 T
1 F
(Ar) 81.65 261.62 T
(guments) 92.24 261.62 T
0 F
(lock) 99.65 239.62 T
2 F
(A Dylan) 171.65 239.62 T
0 F
(<simple-lock>) 211.97 239.62 T
2 F
( object.) 278.29 239.62 T
0 F
(millisecs) 99.65 217.62 T
2 F
(T) 171.65 217.62 T
(imeout period in milliseconds) 177.98 217.62 T
1 F
(V) 81.65 192.62 T
(alues) 87.15 192.62 T
0 F
(err) 99.65 170.62 T
(or) 114.1 170.62 T
(-code) 124.08 170.62 T
2 F
(0 = ok, 1 = timeout e) 171.65 170.62 T
(xpired) 263.64 170.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 36
%%Page: "31" 37
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(31) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.28 0.2 (The calling thread blocks until either the specif) 99.65 715.62 B
0.28 0.2 (ied lock is a) 318.39 715.62 B
0.28 0.2 (v) 374.51 715.62 B
0.28 0.2 (ailable \050unlock) 379.93 715.62 B
0.28 0.2 (ed\051 or the timeout) 448.84 715.62 B
0.28 0.07 (period e) 99.65 702.62 B
0.28 0.07 (xpires. If the lock becomes a) 136.03 702.62 B
0.28 0.07 (v) 265.58 702.62 B
0.28 0.07 (ailable, this function locks it. If the function returns 0, the) 270.88 702.62 B
(lock is o) 99.65 689.62 T
(wned by the calling thread, otherwise a timeout occurred.) 136.65 689.62 T
0 F
(primitive-release-simple-lock) 63.65 660.62 T
2 F
([Primiti) 483.81 660.62 T
(v) 517.77 660.62 T
(e]) 523.1 660.62 T
1 F
(Signatur) 81.65 635.62 T
(e) 119.14 635.62 T
0 F
(\050lock :: <portable-container>\051 => \050err) 99.65 616.62 T
(or) 276.04 616.62 T
(-code :: <small-integer>\051) 286.02 616.62 T
1 F
(Ar) 81.65 591.62 T
(guments) 92.24 591.62 T
0 F
(lock) 99.65 569.62 T
2 F
(A Dylan) 171.65 569.62 T
0 F
(<simple-lock>) 211.97 569.62 T
2 F
( object.) 278.29 569.62 T
1 F
(V) 81.65 544.62 T
(alues) 87.15 544.62 T
0 F
(err) 99.65 522.62 T
(or) 114.1 522.62 T
(-code) 124.08 522.62 T
2 F
(0 = ok, 2 = not lock) 171.65 522.62 T
(ed) 258.2 522.62 T
1 F
(Description) 81.65 497.62 T
2 F
0.28 0.15 (Unlocks the specif) 99.65 475.62 B
0.28 0.15 (ied lock. The lock must be o) 184.09 475.62 B
0.28 0.15 (wned by the calling thread, otherwise the result) 314.51 475.62 B
(indicates \322not lock) 99.65 462.62 T
(ed\323.) 182.03 462.62 T
0 F
(primitive-owned-simple-lock) 63.65 433.62 T
2 F
([Primiti) 483.81 433.62 T
(v) 517.77 433.62 T
(e]) 523.1 433.62 T
1 F
(Signatur) 81.65 408.62 T
(e) 119.14 408.62 T
0 F
(\050lock :: <portable-container>\051 => \050o) 99.65 389.62 T
(wned :: <small-integer>\051) 266.98 389.62 T
1 F
(Ar) 81.65 364.62 T
(guments) 92.24 364.62 T
0 F
(lock) 99.65 342.62 T
2 F
(A Dylan) 171.65 342.62 T
0 F
(<simple-lock>) 211.97 342.62 T
2 F
(object.) 281.04 342.62 T
1 F
(V) 81.65 317.62 T
(alues) 87.15 317.62 T
0 F
(o) 99.65 295.62 T
(wned) 105.04 295.62 T
2 F
(0= not o) 171.65 295.62 T
(wned, 1 = o) 208.13 295.62 T
(wned) 259.89 295.62 T
1 F
(Description) 81.65 270.62 T
2 F
(Returns 1 if the speci\336ed lock is o) 99.65 248.62 T
(wned \050lock) 249.39 248.62 T
(ed\051 by the calling thread.) 298.46 248.62 T
3 10 Q
(4.3.3) 63.65 214.29 T
(Recur) 90.89 214.29 T
(sive Loc) 119.08 214.29 T
(ks) 158.9 214.29 T
0 11 Q
(primitive-make-recursive-lock) 63.65 185.62 T
2 F
([Primiti) 483.81 185.62 T
(v) 517.77 185.62 T
(e]) 523.1 185.62 T
1 F
(Signatur) 81.65 160.62 T
(e) 119.14 160.62 T
0 F
(\050lock :: <portable-container>, name :: <optional-name>\051 => \050\051) 99.65 141.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 37
%%Page: "32" 38
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(32) 63.65 84.9 T
1 11 Q
(Ar) 81.65 737.62 T
(guments) 92.24 737.62 T
0 F
(lock) 99.65 715.62 T
2 F
(A Dylan) 171.65 715.62 T
0 F
(<r) 211.97 715.62 T
(ecursi) 222.93 715.62 T
(v) 250.93 715.62 T
(e-lock>) 256.32 715.62 T
2 F
( object.) 290.69 715.62 T
0 F
(name) 99.65 693.62 T
2 F
(The name of the lock \050as a) 171.65 693.62 T
0 F
(<byte-string>) 291.09 693.62 T
2 F
(\051 or) 354.95 693.62 T
0 F
(#f) 373.28 693.62 T
2 F
(.) 382.44 693.62 T
1 F
(Description) 81.65 668.62 T
2 F
0.27 (Creates a ne) 99.65 646.62 P
0.27 (w OS lock and destructi) 153.68 646.62 P
0.27 (v) 260.2 646.62 P
0.27 (ely modi\336es the container slot in the Dylan lock object with) 265.54 646.62 P
(the handle of the ne) 99.65 633.62 T
(w OS lock.) 186.13 633.62 T
0 F
(primitive-destroy-recursive-lock) 63.65 604.62 T
2 F
([Primiti) 483.81 604.62 T
(v) 517.77 604.62 T
(e]) 523.1 604.62 T
1 F
(Signatur) 81.65 579.62 T
(e) 119.14 579.62 T
0 F
(\050lock :: <portable-container>\051 => \050\051) 99.65 560.62 T
1 F
(Ar) 81.65 535.62 T
(guments) 92.24 535.62 T
0 F
(lock) 99.65 513.62 T
2 F
(A Dylan) 171.65 513.62 T
0 F
( <r) 209.22 513.62 T
(ecursi) 222.93 513.62 T
(v) 250.93 513.62 T
(e-lock>) 256.32 513.62 T
2 F
( object.) 290.69 513.62 T
1 F
(Description) 81.65 488.62 T
2 F
(Frees an) 99.65 466.62 T
(y runtime-allocated memory associated with the lock.) 136.44 466.62 T
0 F
(primitive-wait-for-recursive-lock) 63.65 437.62 T
2 F
([Primiti) 483.81 437.62 T
(v) 517.77 437.62 T
(e]) 523.1 437.62 T
1 F
(Signatur) 81.65 412.62 T
(e) 119.14 412.62 T
0 F
(\050lock :: <portable-container>\051 => \050err) 99.65 393.62 T
(or) 276.04 393.62 T
(-code :: <small-integer>\051) 286.02 393.62 T
1 F
(Ar) 81.65 368.62 T
(guments) 92.24 368.62 T
0 F
(lock) 99.65 346.62 T
2 F
(A Dylan) 171.65 346.62 T
0 F
(<r) 211.97 346.62 T
(ecursi) 222.93 346.62 T
(v) 250.93 346.62 T
(e-lock>) 256.32 346.62 T
2 F
( object.) 290.69 346.62 T
1 F
(V) 81.65 321.62 T
(alues) 87.15 321.62 T
0 F
(err) 99.65 299.62 T
(or) 114.1 299.62 T
(-code) 124.08 299.62 T
2 F
(0 = ok) 171.65 299.62 T
1 F
(Description) 81.65 274.62 T
2 F
(The calling thread blocks until the speci\336ed lock is a) 99.65 252.62 T
(v) 331.32 252.62 T
(ailable \050unlock) 336.54 252.62 T
(ed or already lock) 402.11 252.62 T
(ed by) 481.12 252.62 T
0.28 0.05 (the calling thread\051. When the lock becomes a) 99.65 239.62 B
0.28 0.05 (v) 302.17 239.62 B
0.28 0.05 (ailable, this function claims o) 307.45 239.62 B
0.28 0.05 (wnership of the lock) 439.72 239.62 B
(and increments the lock count. When the function returns, the lock is o) 99.65 226.62 T
(wned by the calling thread.) 410.99 226.62 T
0 F
(primitive-wait-for-recursive-lock-timed) 63.65 197.62 T
2 F
([Primiti) 483.81 197.62 T
(v) 517.77 197.62 T
(e]) 523.1 197.62 T
1 F
(Signatur) 81.65 172.62 T
(e) 119.14 172.62 T
0 F
(\050lock :: <portable-container>, millisecs :: <small-integer>\051) 99.65 153.62 T
(=> \050err) 121.25 140.62 T
(or) 154.65 140.62 T
(-code :: <small-integer>\051) 164.63 140.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 38
%%Page: "33" 39
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(33) 520.53 84.9 T
1 11 Q
(Ar) 81.65 737.62 T
(guments) 92.24 737.62 T
0 F
(lock) 99.65 715.62 T
2 F
(A Dylan) 171.65 715.62 T
0 F
(<r) 211.97 715.62 T
(ecursi) 222.93 715.62 T
(v) 250.93 715.62 T
(e-lock>) 256.32 715.62 T
2 F
( object.) 290.69 715.62 T
0 F
(millisecs) 99.65 693.62 T
2 F
(T) 171.65 693.62 T
(imeout period in milliseconds) 177.98 693.62 T
1 F
(V) 81.65 668.62 T
(alues) 87.15 668.62 T
0 F
(err) 99.65 646.62 T
(or) 114.1 646.62 T
(-code) 124.08 646.62 T
2 F
(0 = ok, 1 = timeout e) 171.65 646.62 T
(xpired) 263.64 646.62 T
1 F
(Description) 81.65 621.62 T
2 F
(The calling thread blocks until the speci\336ed lock is a) 99.65 599.62 T
(v) 331.32 599.62 T
(ailable \050unlock) 336.54 599.62 T
(ed or already lock) 402.11 599.62 T
(ed by) 481.12 599.62 T
-0.23 (the calling thread\051. If the lock becomes a) 99.65 586.62 P
-0.23 (v) 277.42 586.62 P
-0.23 (ailable, this function claims o) 282.65 586.62 P
-0.23 (wnership of the lock, incre-) 411.3 586.62 P
0.28 0.28 (ments an internal lock count, and returns 0. If a timeout occurs, the function lea) 99.65 573.62 B
0.28 0.28 (v) 475.68 573.62 B
0.28 0.28 (es the lock) 481.29 573.62 B
(unmodi\336ed and returns 1.) 99.65 560.62 T
0 F
(primitive-release-recursive-lock) 63.65 531.62 T
2 F
([Primiti) 483.81 531.62 T
(v) 517.77 531.62 T
(e]) 523.1 531.62 T
1 F
(Signatur) 81.65 506.62 T
(e) 119.14 506.62 T
0 F
(\050lock :: <portable-container>\051 => \050err) 99.65 487.62 T
(or) 276.04 487.62 T
(-code :: <small-integer>\051) 286.02 487.62 T
1 F
(Ar) 81.65 462.62 T
(guments) 92.24 462.62 T
0 F
(lock) 99.65 440.62 T
2 F
(A Dylan) 171.65 440.62 T
0 F
( <r) 209.22 440.62 T
(ecursi) 222.93 440.62 T
(v) 250.93 440.62 T
(e-lock>) 256.32 440.62 T
2 F
( object.) 290.69 440.62 T
1 F
(V) 81.65 415.62 T
(alues) 87.15 415.62 T
0 F
(err) 99.65 393.62 T
(or) 114.1 393.62 T
(-code) 124.08 393.62 T
2 F
(0 = ok, 2 = not lock) 171.65 393.62 T
(ed) 258.2 393.62 T
1 F
(Description) 81.65 368.62 T
2 F
0.28 0.05 (Checks that the lock is o) 99.65 346.62 B
0.28 0.05 (wned by the calling thread, and returns 2 if not. If the lock is o) 209.74 346.62 B
0.28 0.05 (wned, its) 491.29 346.62 B
(internal count is decremented by 1. If the count is then zero, the lock is then released.) 99.65 333.62 T
0 F
(primitive-owned-recursive-lock) 63.65 304.62 T
2 F
([Primiti) 483.81 304.62 T
(v) 517.77 304.62 T
(e]) 523.1 304.62 T
1 F
(Signatur) 81.65 279.62 T
(e) 119.14 279.62 T
0 F
(\050lock :: <portable-container>\051 => \050o) 99.65 260.62 T
(wned :: <small-integer>\051) 266.98 260.62 T
1 F
(Ar) 81.65 235.62 T
(guments) 92.24 235.62 T
0 F
(lock) 99.65 213.62 T
2 F
(A Dylan) 171.65 213.62 T
0 F
(<r) 211.97 213.62 T
(ecursi) 222.93 213.62 T
(v) 250.93 213.62 T
(e-lock>) 256.32 213.62 T
2 F
( object.) 290.69 213.62 T
1 F
(V) 81.65 188.62 T
(alues) 87.15 188.62 T
0 F
(o) 99.65 166.62 T
(wned) 105.04 166.62 T
2 F
(0= not o) 171.65 166.62 T
(wned, 1 = o) 208.13 166.62 T
(wned) 259.89 166.62 T
1 F
(Description) 81.65 141.62 T
2 F
(Returns 1 if the speci\336ed lock is lock) 99.65 119.62 T
(ed and o) 263 119.62 T
(wned by the calling thread.) 299.99 119.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 39
%%Page: "34" 40
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(34) 63.65 84.9 T
(4.3.4) 63.65 738.29 T
(Semaphores) 90.89 738.29 T
0 11 Q
(primitive-make-semaphore) 63.65 709.62 T
2 F
([Primiti) 483.81 709.62 T
(v) 517.77 709.62 T
(e]) 523.1 709.62 T
1 F
(Signatur) 81.65 684.62 T
(e) 119.14 684.62 T
0 F
(\050lock :: <portable-container>, name :: <optional-name>,) 99.65 665.62 T
(initial :: <small-integer>, max :: <small-integer>\051 => \050\051) 121.25 652.62 T
1 F
(Ar) 81.65 627.62 T
(guments) 92.24 627.62 T
0 F
(lock) 99.65 605.62 T
2 F
(A Dylan) 171.65 605.62 T
0 F
(<semaphor) 211.97 605.62 T
(e>) 264.49 605.62 T
2 F
( object.) 275.64 605.62 T
0 F
(name) 99.65 583.62 T
2 F
(The name of the lock \050as a) 171.65 583.62 T
0 F
(<byte-string>) 291.09 583.62 T
2 F
(\051 or) 354.95 583.62 T
0 F
(#f) 373.28 583.62 T
2 F
(.) 382.44 583.62 T
0 F
(initial) 99.65 561.62 T
2 F
(The initial v) 171.65 561.62 T
(alue for the semaphore count) 225.15 561.62 T
1 F
(Description) 81.65 536.62 T
2 F
0.28 0.07 (Creates a ne) 99.65 514.62 B
0.28 0.07 (w OS semaphore with the specif) 154.54 514.62 B
0.28 0.07 (ied initial count and destructi) 300.12 514.62 B
0.28 0.07 (v) 431.48 514.62 B
0.28 0.07 (ely modif) 436.89 514.62 B
0.28 0.07 (ies the con-) 479.67 514.62 B
(tainer slot in the Dylan lock object with the handle of the ne) 99.65 501.62 T
(w OS semaphore.) 363.34 501.62 T
0 F
(primitive-destroy-semaphore) 63.65 472.62 T
2 F
([Primiti) 483.81 472.62 T
(v) 517.77 472.62 T
(e]) 523.1 472.62 T
1 F
(Signatur) 81.65 447.62 T
(e) 119.14 447.62 T
0 F
(\050lock :: <portable-container>\051 => \050\051) 99.65 428.62 T
1 F
(Ar) 81.65 403.62 T
(guments) 92.24 403.62 T
0 F
(lock) 99.65 381.62 T
2 F
(A Dylan) 171.65 381.62 T
0 F
(<semaphor) 211.97 381.62 T
(e>) 264.49 381.62 T
2 F
( object.) 275.64 381.62 T
1 F
(Description) 81.65 356.62 T
2 F
(Frees an) 99.65 334.62 T
(y runtime-allocated memory associated with the semaphore.) 136.44 334.62 T
0 F
(primitive-wait-for-semaphore) 63.65 305.62 T
2 F
([Primiti) 483.81 305.62 T
(v) 517.77 305.62 T
(e]) 523.1 305.62 T
1 F
(Signatur) 81.65 280.62 T
(e) 119.14 280.62 T
0 F
(\050lock :: <portable-container>\051 => \050err) 99.65 261.62 T
(or) 276.04 261.62 T
(-code :: <small-integer>\051) 286.02 261.62 T
1 F
(Ar) 81.65 236.62 T
(guments) 92.24 236.62 T
0 F
(lock) 99.65 214.62 T
2 F
(A Dylan) 171.65 214.62 T
0 F
(<semaphor) 211.97 214.62 T
(e>) 264.49 214.62 T
2 F
( object.) 275.64 214.62 T
1 F
(V) 81.65 189.62 T
(alues) 87.15 189.62 T
0 F
(err) 99.65 167.62 T
(or) 114.1 167.62 T
(-code) 124.08 167.62 T
2 F
(0 = ok) 171.65 167.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 40
%%Page: "35" 41
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(35) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.09 (The calling thread blocks until the internal count of the speci\336ed semaphore becomes greater than) 99.65 715.62 P
(zero. It then decrements the semaphore count.) 99.65 702.62 T
0 F
(primitive-wait-for-semaphore-timed) 63.65 673.62 T
2 F
([Primiti) 483.81 673.62 T
(v) 517.77 673.62 T
(e]) 523.1 673.62 T
1 F
(Signatur) 81.65 648.62 T
(e) 119.14 648.62 T
0 F
(\050lock :: <portable-container>, millisecs :: <small-integer>\051) 99.65 629.62 T
(=> \050err) 121.25 616.62 T
(or) 154.65 616.62 T
(-code :: <small-integer>\051) 164.63 616.62 T
1 F
(Ar) 81.65 591.62 T
(guments) 92.24 591.62 T
0 F
(lock) 99.65 569.62 T
2 F
(A Dylan) 171.65 569.62 T
0 F
(<semaphor) 211.97 569.62 T
(e>) 264.49 569.62 T
2 F
( object.) 275.64 569.62 T
0 F
(millisecs) 99.65 547.62 T
2 F
(T) 171.65 547.62 T
(imeout period in milliseconds) 177.98 547.62 T
1 F
(V) 81.65 522.62 T
(alues) 87.15 522.62 T
0 F
(err) 99.65 500.62 T
(or) 114.1 500.62 T
(-code) 124.08 500.62 T
2 F
(0 = ok, 1 = timeout e) 171.65 500.62 T
(xpired) 263.64 500.62 T
1 F
(Description) 81.65 475.62 T
2 F
0.28 0.27 (The calling thread blocks until either the internal count of the specif) 99.65 453.62 B
0.28 0.27 (ied semaphore becomes) 420.55 453.62 B
0.28 0.12 (greater than zero or the timeout period e) 99.65 440.62 B
0.28 0.12 (xpires. In the former case, the function decrements the) 283.32 440.62 B
(semaphore count and returns 0. In the latter case, the function returns 1.) 99.65 427.62 T
0 F
(primitive-release-semaphore) 63.65 398.62 T
2 F
([Primiti) 483.81 398.62 T
(v) 517.77 398.62 T
(e]) 523.1 398.62 T
1 F
(Signatur) 81.65 373.62 T
(e) 119.14 373.62 T
0 F
(\050lock :: <portable-container>\051 => \050err) 99.65 354.62 T
(or) 276.04 354.62 T
(-code :: <small-integer>\051) 286.02 354.62 T
1 F
(Ar) 81.65 329.62 T
(guments) 92.24 329.62 T
0 F
(lock) 99.65 307.62 T
2 F
(A Dylan) 171.65 307.62 T
0 F
(<semaphor) 211.97 307.62 T
(e>) 264.49 307.62 T
2 F
( object.) 275.64 307.62 T
1 F
(V) 81.65 282.62 T
(alues) 87.15 282.62 T
0 F
(err) 99.65 260.62 T
(or) 114.1 260.62 T
(-code) 124.08 260.62 T
2 F
(0 = ok,) 171.65 260.62 T
(3 = count e) 205.35 260.62 T
(xceeded) 254.47 260.62 T
1 F
(Description) 81.65 235.62 T
2 F
0.17 (This function checks that internal count of the semaphore is not at its maximum limit, and returns) 99.65 213.62 P
(3 if the test f) 99.65 200.62 T
(ails. Otherwise the internal count is incremented.) 155.14 200.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 41
%%Page: "36" 42
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(36) 63.65 84.9 T
(4.3.5) 63.65 738.29 T
(Noti\336cations) 90.89 738.29 T
0 11 Q
(primitive-make-notification) 63.65 709.62 T
2 F
([Primiti) 483.81 709.62 T
(v) 517.77 709.62 T
(e]) 523.1 709.62 T
1 F
(Signatur) 81.65 684.62 T
(e) 119.14 684.62 T
0 F
(\050noti\336cation :: <portable-container>, name :: <optional-name>\051 => \050\051) 99.65 665.62 T
1 F
(Ar) 81.65 640.62 T
(guments) 92.24 640.62 T
0 F
(noti\336cation) 99.65 618.62 T
2 F
(A Dylan <) 171.65 618.62 T
0 F
(noti\336cation>) 218.18 618.62 T
2 F
( object.) 277.62 618.62 T
0 F
(name) 99.65 596.62 T
2 F
(The name of the noti\336cation \050as a) 171.65 596.62 T
0 F
(<byte-string>) 322.26 596.62 T
2 F
(\051 or) 386.13 596.62 T
0 F
(#f) 404.45 596.62 T
2 F
(.) 413.61 596.62 T
1 F
(Description) 81.65 571.62 T
2 F
0.24 (Creates a ne) 99.65 549.62 P
0.24 (w OS noti\336cation \050condition v) 153.61 549.62 P
0.24 (ariable\051 and destructi) 288.13 549.62 P
0.24 (v) 381.2 549.62 P
0.24 (ely modi\336es the container slot in) 386.54 549.62 P
(the Dylan lock object with the handle of the ne) 99.65 536.62 T
(w OS noti\336cation.) 305.59 536.62 T
0 F
(primitive-destroy-notification) 63.65 507.62 T
2 F
([Primiti) 483.81 507.62 T
(v) 517.77 507.62 T
(e]) 523.1 507.62 T
1 F
(Signatur) 81.65 482.62 T
(e) 119.14 482.62 T
0 F
(\050noti\336cation :: <portable-container>\051 => \050\051) 99.65 463.62 T
1 F
(Ar) 81.65 438.62 T
(guments) 92.24 438.62 T
0 F
(noti\336cation) 99.65 416.62 T
2 F
(A Dylan) 171.65 416.62 T
0 F
(<noti\336cation>) 211.97 416.62 T
2 F
( object.) 277.69 416.62 T
1 F
(Description) 81.65 391.62 T
2 F
(Frees an) 99.65 369.62 T
(y runtime-allocated memory associated with the noti\336cation.) 136.44 369.62 T
0 F
(primitive-wait-for-notification) 63.65 340.62 T
2 F
([Primiti) 483.81 340.62 T
(v) 517.77 340.62 T
(e]) 523.1 340.62 T
1 F
(Signatur) 81.65 315.62 T
(e) 119.14 315.62 T
0 F
(\050noti\336cation :: <portable-container>, lock :: <portable-container>\051) 99.65 296.62 T
(=> \050err) 121.25 283.62 T
(or) 154.65 283.62 T
(-code :: <small-integer>\051) 164.63 283.62 T
1 F
(Ar) 81.65 258.62 T
(guments) 92.24 258.62 T
0 F
(noti\336cation) 99.65 236.62 T
2 F
(A Dylan) 171.65 236.62 T
0 F
(<noti\336cation>) 211.97 236.62 T
2 F
( object.) 277.69 236.62 T
0 F
(lock) 99.65 214.62 T
2 F
(A Dylan) 171.65 214.62 T
0 F
(<simple-lock>) 211.97 214.62 T
2 F
( object.) 278.29 214.62 T
1 F
(V) 81.65 189.62 T
(alues) 87.15 189.62 T
0 F
(err) 99.65 167.62 T
(or) 114.1 167.62 T
(-code) 124.08 167.62 T
2 F
(0 = ok, 2 = not lock) 171.65 167.62 T
(ed, 3 = other error) 258.2 167.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 42
%%Page: "37" 43
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(37) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.14 (The function checks that the speci\336ed lock is o) 99.65 715.62 P
0.14 (wned by the calling thread, and returns 2 if the test) 306.98 715.62 P
-0.15 (f) 99.65 702.62 P
-0.15 (ails. Otherwise, the calling thread atomically releases the lock and then blocks, w) 103.2 702.62 P
-0.15 (aiting to be noti-) 459.06 702.62 P
0.28 0.04 (f) 99.65 689.62 B
0.28 0.04 (ied of the condition represented by the specif) 102.74 689.62 B
0.28 0.04 (ied notif) 304.08 689.62 B
0.28 0.04 (ication. When the calling thread is notif) 341.07 689.62 B
0.28 0.04 (ied) 518.13 689.62 B
0.09 (of the condition, the function reclaims o) 99.65 676.62 P
0.09 (wnership of the lock, blocking if necessary) 276.23 676.62 P
0.09 (, before return-) 465.18 676.62 P
(ing 0.) 99.65 663.62 T
0 F
(primitive-wait-for-notification-timed) 63.65 634.62 T
2 F
([Primiti) 483.81 634.62 T
(v) 517.77 634.62 T
(e]) 523.1 634.62 T
1 F
(Signatur) 81.65 609.62 T
(e) 119.14 609.62 T
0 F
(\050noti\336cation :: <portable-container>, lock :: <portable-container>,) 99.65 590.62 T
(millisecs :: <small-integer>\051 => \050err) 121.25 577.62 T
(or) 287.86 577.62 T
(-code :: <small-integer>\051) 297.84 577.62 T
1 F
(Ar) 81.65 552.62 T
(guments) 92.24 552.62 T
0 F
(noti\336cation) 99.65 530.62 T
2 F
(A Dylan) 171.65 530.62 T
0 F
(<noti\336cation>) 211.97 530.62 T
2 F
( object.) 277.69 530.62 T
0 F
(lock) 99.65 508.62 T
2 F
(A Dylan) 171.65 508.62 T
0 F
(<simple-lock>) 211.97 508.62 T
2 F
( object.) 278.29 508.62 T
0 F
(millisecs) 99.65 486.62 T
2 F
(T) 171.65 486.62 T
(imeout period in milliseconds) 177.98 486.62 T
1 F
(V) 81.65 461.62 T
(alues) 87.15 461.62 T
0 F
(err) 99.65 439.62 T
(or) 114.1 439.62 T
(-code) 124.08 439.62 T
2 F
(0 = ok, 1 = timeout, 2 = not lock) 171.65 439.62 T
(ed, 3 = other error) 314.52 439.62 T
1 F
(Description) 81.65 414.62 T
2 F
0.14 (The function checks that the speci\336ed lock is o) 99.65 392.62 P
0.14 (wned by the calling thread, and returns 2 if the test) 306.98 392.62 P
-0.15 (f) 99.65 379.62 P
-0.15 (ails. Otherwise, the calling thread atomically releases the lock and then blocks, w) 103.2 379.62 P
-0.15 (aiting to be noti-) 459.06 379.62 P
0.28 0.03 (f) 99.65 366.62 B
0.28 0.03 (ied of the condition represented by the specif) 102.74 366.62 B
0.28 0.03 (ied notif) 303.73 366.62 B
0.28 0.03 (ication, or for the timeout period to e) 340.65 366.62 B
0.28 0.03 (xpire.) 506.14 366.62 B
-0.13 (The function then reclaims o) 99.65 353.62 P
-0.13 (wnership of the lock, blocking inde\336nitely if necessary) 225.32 353.62 P
-0.13 (, before return-) 465.64 353.62 P
(ing either 0 or 1 to indicate whether a timeout occurred.) 99.65 340.62 T
0 F
(primitive-release-notification) 63.65 311.62 T
2 F
([Primiti) 483.81 311.62 T
(v) 517.77 311.62 T
(e]) 523.1 311.62 T
1 F
(Signatur) 81.65 286.62 T
(e) 119.14 286.62 T
0 F
(\050noti\336cation :: <portable-container>, lock :: <portable-container>\051) 99.65 267.62 T
(=> \050err) 121.25 254.62 T
(or) 154.65 254.62 T
(-code :: <small-integer>\051) 164.63 254.62 T
1 F
(Ar) 81.65 229.62 T
(guments) 92.24 229.62 T
0 F
(noti\336cation) 99.65 207.62 T
2 F
(A Dylan) 171.65 207.62 T
0 F
(<noti\336cation>) 211.97 207.62 T
2 F
( object.) 277.69 207.62 T
0 F
(lock) 99.65 185.62 T
2 F
(A Dylan) 171.65 185.62 T
0 F
(<simple-lock>) 211.97 185.62 T
2 F
( object.) 278.29 185.62 T
1 F
(V) 81.65 160.62 T
(alues) 87.15 160.62 T
0 F
(err) 99.65 138.62 T
(or) 114.1 138.62 T
(-code) 124.08 138.62 T
2 F
(0 = ok, 2 = not lock) 171.65 138.62 T
(ed) 258.2 138.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 43
%%Page: "38" 44
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(38) 63.65 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.23 (If the calling thread does not o) 99.65 715.62 P
0.23 (wn the speci\336ed lock, the function returns the error v) 235.19 715.62 P
0.23 (alue 2. Other-) 470.4 715.62 P
0.09 (wise, the function releases the speci\336ed noti\336cation, notifying another thread that is block) 99.65 702.62 P
0.09 (ed w) 495.93 702.62 P
0.09 (ait-) 516.98 702.62 P
0.28 0.31 (ing for the notif) 99.65 689.62 B
0.28 0.31 (ication to occur) 174.52 689.62 B
0.28 0.31 (. If more than one thread is w) 247.89 689.62 B
0.28 0.31 (aiting for the notif) 388.58 689.62 B
0.28 0.31 (ication, it is) 475.4 689.62 B
(unspeci\336ed which thread is noti\336ed. If no threads are w) 99.65 676.62 T
(aiting, then the release has no ef) 343.94 676.62 T
(fect.) 485.1 676.62 T
0 F
(primitive-release-all-notification) 63.65 647.62 T
2 F
([Primiti) 483.81 647.62 T
(v) 517.77 647.62 T
(e]) 523.1 647.62 T
1 F
(Signatur) 81.65 622.62 T
(e) 119.14 622.62 T
0 F
(\050noti\336cation :: <portable-container>, lock :: <portable-container>\051) 99.65 603.62 T
(=> \050err) 121.25 590.62 T
(or) 154.65 590.62 T
(-code :: <small-integer>\051) 164.63 590.62 T
1 F
(Ar) 81.65 565.62 T
(guments) 92.24 565.62 T
0 F
(noti\336cation) 99.65 543.62 T
2 F
(A Dylan) 171.65 543.62 T
0 F
(<noti\336cation>) 211.97 543.62 T
2 F
( object.) 277.69 543.62 T
0 F
(lock) 99.65 521.62 T
2 F
(A Dylan) 171.65 521.62 T
0 F
(<simple-lock>) 211.97 521.62 T
2 F
(object.) 281.04 521.62 T
1 F
(V) 81.65 496.62 T
(alues) 87.15 496.62 T
0 F
(err) 99.65 474.62 T
(or) 114.1 474.62 T
(-code) 124.08 474.62 T
2 F
(0 = ok, 2 = not lock) 171.65 474.62 T
(ed) 258.2 474.62 T
1 F
(Description) 81.65 449.62 T
2 F
0.23 (If the calling thread does not o) 99.65 427.62 P
0.23 (wn the speci\336ed lock, the function returns the error v) 235.19 427.62 P
0.23 (alue 2. Other-) 470.4 427.62 P
0.28 0.09 (wise, the function releases the specif) 99.65 414.62 B
0.28 0.09 (ied notif) 265.19 414.62 B
0.28 0.09 (ication, notifying all other threads that are block) 302.66 414.62 B
0.28 0.09 (ed) 521.17 414.62 B
(w) 99.65 401.62 T
(aiting for the noti\336cation to occur) 107.48 401.62 T
(. If no threads are w) 255.06 401.62 T
(aiting, then the release has no ef) 342.91 401.62 T
(fect.) 484.08 401.62 T
3 10 Q
(4.3.6) 63.65 367.29 T
(Timer) 90.89 367.29 T
(s) 117.97 367.29 T
0 11 Q
(primitive-sleep) 63.65 338.62 T
2 F
([Primiti) 483.81 338.62 T
(v) 517.77 338.62 T
(e]) 523.1 338.62 T
1 F
(Signatur) 81.65 313.62 T
(e) 119.14 313.62 T
0 F
(\050millisecs :: <small-integer>\051 => \050\051) 99.65 294.62 T
1 F
(Ar) 81.65 269.62 T
(guments) 92.24 269.62 T
0 F
(millisecs) 99.65 247.62 T
2 F
(T) 171.65 247.62 T
(ime interv) 177.98 247.62 T
(al in milliseconds) 222.62 247.62 T
1 F
(Description) 81.65 222.62 T
2 F
(This function causes the calling thread to block for the speci\336ed time interv) 99.65 200.62 T
(al.) 431.77 200.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "38" 44
%%Page: "39" 45
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(39) 520.53 84.9 T
(4.3.7) 63.65 738.29 T
(Thread V) 90.89 738.29 T
(ariab) 133.08 738.29 T
(les) 156.88 738.29 T
0 11 Q
(primitive-allocate-thread-variable) 63.65 709.62 T
2 F
([Primiti) 483.81 709.62 T
(v) 517.77 709.62 T
(e]) 523.1 709.62 T
1 F
(Signatur) 81.65 684.62 T
(e) 119.14 684.62 T
0 F
(\050initial-v) 99.65 665.62 T
(alue\051 => \050handle-on-v) 139.88 665.62 T
(ariable\051) 240.92 665.62 T
1 F
(Ar) 81.65 640.62 T
(guments) 92.24 640.62 T
0 F
(initial-v) 99.65 618.62 T
(alue) 136.21 618.62 T
2 F
(A Dylan object that is to be the initial v) 171.65 618.62 T
(alue of the \337uid v) 345.23 618.62 T
(ariable.) 422.56 618.62 T
1 F
(V) 81.65 593.62 T
(alues) 87.15 593.62 T
0 F
(handle-on-v) 99.65 571.62 T
(ariable) 155.77 571.62 T
2 F
-0.11 (An OS handle on the \337uid v) 171.65 558.62 P
-0.11 (ariable, to be stored as the immediate v) 294.14 558.62 P
-0.11 (alue of the v) 465.37 558.62 P
-0.11 (ar-) 519.44 558.62 P
0.09 (iable. V) 171.65 545.62 P
0.09 (ariable reading and assignment will indirect through this handle. The han-) 205.35 545.62 P
(dle is not a Dylan object.) 171.65 532.62 T
1 F
(Description) 81.65 507.62 T
2 F
0.28 0.02 (This function creates a ne) 99.65 485.62 B
0.28 0.02 (w thread-local v) 214.07 485.62 B
0.28 0.02 (ariable handle, and assigns the specif) 286.18 485.62 B
0.28 0.02 (ied initial v) 450.92 485.62 B
0.28 0.02 (alue to) 501.6 485.62 B
0.28 0.09 (the location indicated by the handle. The function must arrange to assign the initial v) 99.65 472.62 B
0.28 0.09 (alue to the) 484.34 472.62 B
-0.15 (thread-local location associated with all other e) 99.65 459.62 P
-0.15 (xisting threads, too. The function must also arrange) 306.31 459.62 P
0.28 0.04 (that whene) 99.65 446.62 B
0.28 0.04 (v) 148.01 446.62 B
0.28 0.04 (er a ne) 153.38 446.62 B
0.28 0.04 (w thread is subsequently created, it also has its thread-local location indicated) 183.25 446.62 B
(by the handle set to the initial v) 99.65 433.62 T
(alue.) 237.79 433.62 T
3 12 Q
(4.4) 63.65 395.95 T
(Suppor) 90.65 395.95 T
(t f) 132.89 395.95 T
(or Dylan Langua) 143.98 395.95 T
(g) 237.88 395.95 T
(e Features) 245.33 395.95 T
3 10 Q
(4.4.1) 63.65 361.29 T
(Garba) 90.89 361.29 T
(g) 119.69 361.29 T
(e Collector Suppor) 125.9 361.29 T
(t f) 215.56 361.29 T
(or Threads) 224.8 361.29 T
2 11 Q
-0.21 (There are some general constraints that an) 63.65 340.62 P
-0.21 (y combination of a threads implementation and a g) 247.95 340.62 P
-0.21 (arbage collec-) 469.86 340.62 P
0.2 (tor implementation must agree about. A detailed discussion is gi) 63.65 327.62 P
0.2 (v) 348.12 327.62 P
0.2 (en in [ME94]. One important considera-) 353.45 327.62 P
-0.24 (tion is that the g) 63.65 314.62 P
-0.24 (arbage collector must be able to locate all the roots of the entire program \321 including local) 133.51 314.62 P
(v) 63.65 301.62 T
(ariables on the stack, and thread-local v) 68.87 301.62 T
(ariables.) 243.02 301.62 T
0.17 (W) 63.65 276.62 P
0.17 (ith Harlequin\325) 73.59 276.62 P
0.17 (s design for the Dylan threads library) 135.18 276.62 P
0.17 (, it is the responsibility of the runtime system to per-) 299.24 276.62 P
0.28 0.04 (form the allocation of the stacks for each thread, as well as the allocation of the static thread-local v) 63.65 263.62 B
0.28 0.04 (aria-) 511.36 263.62 B
0.28 0.03 (bles. Since the runtime system is also responsible for pro) 63.65 250.62 B
0.28 0.03 (viding g) 318.16 250.62 B
0.28 0.03 (arbage collection services, co-operation) 354.98 250.62 B
0.28 0.13 (between the threads and memory management subsystems may be achie) 63.65 237.62 B
0.28 0.13 (v) 392.03 237.62 B
0.28 0.13 (ed without an) 397.49 237.62 B
0.28 0.13 (y acti) 459.39 237.62 B
0.28 0.13 (v) 484.27 237.62 B
0.28 0.13 (e support) 489.73 237.62 B
0.04 (from the ANDF output produced from Dylan code. This allo) 63.65 224.62 P
0.04 (ws the runtime system implementor consider-) 330.12 224.62 P
(able freedom to select the most appropriate designs for each platform.) 63.65 211.62 T
0.1 (Harlequin\325) 63.65 186.62 P
0.1 (s Simple Threads Library has been tested on Solaris with a public domain conserv) 110.69 186.62 P
0.1 (ati) 473.1 186.62 P
0.1 (v) 483.82 186.62 P
0.1 (e g) 489.16 186.62 P
0.1 (arbage) 502.33 186.62 P
0.28 0.07 (collector [BW88]. This collector has implicit support for locating the stacks of multiple threads, and for) 63.65 173.62 B
-0.08 (tracing memory which is allocated with) 63.65 160.62 P
0 F
-0.08 (malloc) 240.37 160.62 P
2 F
-0.08 (. The thread-local v) 271.53 160.62 P
-0.08 (ariables used by Dylan are found by the) 357.16 160.62 P
0.16 (Boehm collector because the) 63.65 147.62 P
0.16 (y are ultimately located in memory reserv) 190.75 147.62 P
0.16 (ed with) 375.47 147.62 P
0 F
0.16 (malloc) 411.24 147.62 P
2 F
0.16 ( by the threads runt-) 442.4 147.62 P
0.05 (ime system, with) 63.65 134.62 P
0 F
0.05 (primiti) 141.41 134.62 P
0.05 (v) 174.3 134.62 P
0.05 (e_allocate_thr) 179.69 134.62 P
0.05 (ead_v) 246.08 134.62 P
0.05 (ariable) 273.47 134.62 P
2 F
0.05 (. The Boehm collector also accepts direct responsi-) 306.47 134.62 P
(bility for synchronization of all allocation requests.) 63.65 121.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 45
%%Page: "40" 46
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(40) 63.65 84.9 T
2 11 Q
0.28 0.19 (Ultimately) 63.65 737.62 B
0.28 0.19 (, Harlequin plan to use a more sophisticated) 111.84 737.62 B
1 F
0.28 0.19 (mostly copying) 318.21 737.62 B
2 F
0.28 0.19 ( collector for the Dylan threads) 387.37 737.62 B
0.28 0.07 (library) 63.65 724.62 B
0.28 0.07 (. This w) 92.76 724.62 B
0.28 0.07 (ork is outside of the scope of the GLUE project, b) 129.52 724.62 B
0.28 0.07 (ut it is belie) 355.29 724.62 B
0.28 0.07 (v) 408.49 724.62 B
0.28 0.07 (ed that the interf) 413.89 724.62 B
0.28 0.07 (ace to the) 488.3 724.62 B
-0.27 (runtime system de\336ned here is suf) 63.65 711.62 P
-0.27 (\336ciently \337e) 212.64 711.62 P
-0.27 (xible that such an implementation is possible without an) 262.01 711.62 P
-0.27 (y sig-) 507.17 711.62 P
(ni\336cant change to the producer output.) 63.65 698.62 T
3 10 Q
(4.4.2) 63.65 664.29 T
(Interfacing to Foreign Code) 90.89 664.29 T
2 11 Q
0.28 0.09 (It is intended that threads created by the Dylan library may inter) 63.65 643.62 B
0.28 0.09 (-operate with code written in other lan-) 354.32 643.62 B
0.28 0.1 (guages with no special constraints. The issues relating to inter) 63.65 630.62 B
0.28 0.1 (-operation of Dylan with other languages) 345.07 630.62 B
0.28 0.12 (were discussed in [MG95], b) 63.65 617.62 B
0.28 0.12 (ut limited to a serial computation model. It is relati) 195.27 617.62 B
0.28 0.12 (v) 427.83 617.62 B
0.28 0.12 (ely straightforw) 433.29 617.62 B
0.28 0.12 (ard to) 505.4 617.62 B
(e) 63.65 604.62 T
(xtend the conclusions of this discussion to support multiple threads.) 68.37 604.62 T
-0.05 (Dylan may be interf) 63.65 579.62 P
-0.05 (aced with other languages via a F) 151.66 579.62 P
-0.05 (oreign Language Interf) 298.41 579.62 P
-0.05 (ace \050FLI\051 [MG95], which acts) 399.6 579.62 P
-0.2 (as a barrier between Dylan con) 63.65 566.62 P
-0.2 (v) 198.73 566.62 P
-0.2 (entions and the) 204.06 566.62 P
1 F
-0.2 (neutr) 272.81 566.62 P
-0.2 (al) 295.87 566.62 P
2 F
-0.2 ( con) 304.42 566.62 P
-0.2 (v) 322.42 566.62 P
-0.2 (entions of the platform. The FLI is responsible) 327.75 566.62 P
(for:) 63.65 553.62 T
3 9 Q
(1.) 99.65 534.62 T
2 11 Q
(mapping between Dylan and foreign data types,) 113.4 534.62 T
3 9 Q
(2.) 99.65 515.62 T
2 11 Q
(con) 113.4 515.62 T
(v) 128.84 515.62 T
(erting between Dylan and foreign calling con) 134.18 515.62 T
(v) 332.92 515.62 T
(entions) 338.25 515.62 T
3 9 Q
(3.) 99.65 496.62 T
2 11 Q
(maintaining the Dylan dynamic en) 113.4 496.62 T
(vironment) 265.11 496.62 T
3 9 Q
(4.) 99.65 477.62 T
2 11 Q
(maintaining an) 113.4 477.62 T
(y support necessary for g) 178.93 477.62 T
(arbage collection \050such as ensuring that all Dylan v) 289.45 477.62 T
(al-) 514.64 477.62 T
(ues can be traced\051.) 113.4 465.62 T
0.28 0.01 (The f) 63.65 441.62 B
0.28 0.01 (irst and second of these require no signif) 86.91 441.62 B
0.28 0.01 (icant e) 267.54 441.62 B
0.28 0.01 (xtensions to support multiple threads, since these are) 296.77 441.62 B
0.28 0.06 (inherently computations which ha) 63.65 428.62 B
0.28 0.06 (v) 215.64 428.62 B
0.28 0.06 (e no ef) 221.04 428.62 B
0.28 0.06 (fect on an) 251.68 428.62 B
0.28 0.06 (y thread other than the one performing the computa-) 296.06 428.62 B
(tion.) 63.65 415.62 T
-0.03 (As discussed in [ME94], there is a requirement that the dynamic en) 63.65 390.62 P
-0.03 (vironment for each thread is stored in a) 359.24 390.62 P
0.28 0.05 (thread-local v) 63.65 377.62 B
0.28 0.05 (ariable. It is possible to implement this v) 125.07 377.62 B
0.28 0.05 (ariable, and all references to it, entirely within the) 307.71 377.62 B
0.01 (runtime system, so this does not place a requirement on ANDF to support thread-local v) 63.65 364.62 P
0.01 (ariables. Since the) 451.27 364.62 P
0.28 0.06 (en) 63.65 351.62 B
0.28 0.06 (vironment is stored in this w) 73.71 351.62 B
0.28 0.06 (ay) 202.29 351.62 B
0.28 0.06 (, its v) 212.08 351.62 B
0.28 0.06 (alue is preserv) 236.92 351.62 B
0.28 0.06 (ed across calls into foreign code, and it will still be) 301.73 351.62 B
0.28 0.08 (v) 63.65 338.62 B
0.28 0.08 (alid if the foreign code calls back into Dylan. The techniques described in [MG95] for maintaining the) 68.95 338.62 B
-0.01 (dynamic en) 63.65 325.62 P
-0.01 (vironment across foreign calls are therefore directly appropriate to a multi-threaded implemen-) 114.21 325.62 P
(tation too.) 63.65 312.62 T
0.28 0.17 ([ME94] discusses the general issues of support for g) 63.65 287.62 B
0.28 0.17 (arbage collection in a multi-threaded system, and) 305.11 287.62 B
0.26 (sho) 63.65 274.62 P
0.26 (ws ho) 78.65 274.62 P
0.26 (w g) 104.61 274.62 P
0.26 (arbage collector techniques may be implemented in the Dylan runtime system to manage the) 121.01 274.62 P
0.28 0.08 (Dylan object space. [MG95] describes ho) 63.65 261.62 B
0.28 0.08 (w the g) 250.33 261.62 B
0.28 0.08 (arbage collector may require an) 283.73 261.62 B
1 F
0.28 0.08 (interface r) 429.53 261.62 B
0.28 0.08 (ecor) 476.35 261.62 B
0.28 0.08 (d) 495.79 261.62 B
2 F
0.28 0.08 ( which) 501.36 261.62 B
0.28 0.07 (records those objects passed from Dylan to foreign code, so that the g) 63.65 248.62 B
0.28 0.07 (arbage collector will treat them as) 378.41 248.62 B
(both li) 63.65 235.62 T
(v) 91.8 235.62 T
(e and static. This technique may be e) 97.13 235.62 T
(xtended directly for use with multiple threads.) 259.49 235.62 T
0.28 0.03 (If an object is passed to foreign code with dynamic e) 63.65 210.62 B
0.28 0.03 (xtent, then it is suf) 300.23 210.62 B
0.28 0.03 (f) 383.36 210.62 B
0.28 0.03 (icient to ensure that the object is) 386.46 210.62 B
-0.2 (referenced from the current stack, which the g) 63.65 197.62 P
-0.2 (arbage collector will scan conserv) 265.03 197.62 P
-0.2 (ati) 413.64 197.62 P
-0.2 (v) 424.36 197.62 P
-0.2 (ely) 429.7 197.62 P
-0.2 (. In a multi-threaded) 442.42 197.62 P
0.2 (implementation, the g) 63.65 184.62 P
0.2 (arbage collector will scan all the stacks conserv) 160.24 184.62 P
0.2 (ati) 370.61 184.62 P
0.2 (v) 381.33 184.62 P
0.2 (ely) 386.67 184.62 P
0.2 (, so there is no requirement to) 399.39 184.62 P
(maintain a thread-global data structure.) 63.65 171.62 T
0.28 0.09 (If an object is passed with indef) 63.65 146.62 B
0.28 0.09 (inite e) 207.56 146.62 B
0.28 0.09 (xtent, then it must be recorded in a table. The table may be main-) 235.49 146.62 B
0.28 0.2 (tained by the runtime system, by means of suitable primiti) 63.65 133.62 B
0.28 0.2 (v) 333.33 133.62 B
0.28 0.2 (e functions to add and remo) 338.86 133.62 B
0.28 0.2 (v) 467.9 133.62 B
0.28 0.2 (e references.) 473.43 133.62 B
0.28 0.14 (There are potentially synchronization problems associated with multiple threads manipulating a global) 63.65 120.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 46
%%Page: "41" 47
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(41) 520.53 84.9 T
2 11 Q
0.28 0.01 (data structure \321 b) 63.65 737.62 B
0.28 0.01 (ut the runtime system implementation is free to choose whether to ha) 146 737.62 B
0.28 0.01 (v) 453.5 737.62 B
0.28 0.01 (e separate tables) 458.85 737.62 B
0.28 0.06 (for each thread, or whether to ha) 63.65 724.62 B
0.28 0.06 (v) 210.38 724.62 B
0.28 0.06 (e a global table with an associated lock to guard accesses. Either tech-) 215.77 724.62 B
(nique is possible \321 b) 63.65 711.62 T
(ut Harlequin ha) 158.76 711.62 T
(v) 226.98 711.62 T
(e not yet implemented this feature.) 232.31 711.62 T
(One further consideration is the interaction of the Dylan threads library itself with foreign components:) 63.65 686.62 T
-0.16 (If foreign code is not designed for multiple threads \050for instance, because it uses global data structures, and) 63.65 661.62 P
-0.26 (doesn\325) 63.65 648.62 P
-0.26 (t synchronize updates\051, then the code may f) 92.78 648.62 P
-0.26 (ail if it is in) 282.05 648.62 P
-0.26 (v) 331.29 648.62 P
-0.26 (ok) 336.57 648.62 P
-0.26 (ed from multiple Dylan threads. Ho) 347.46 648.62 P
-0.26 (we) 502.9 648.62 P
-0.26 (v) 515.46 648.62 P
-0.26 (er) 520.79 648.62 P
-0.26 (,) 528.9 648.62 P
0.19 (this problem is not related to the Dylan implementation, since it w) 63.65 635.62 P
0.19 (ould f) 357.09 635.62 P
0.19 (ail if called from multiple threads) 383.14 635.62 P
(created by an) 63.65 622.62 T
(y means. The solution is to modify the foreign component to mak) 122.12 622.62 T
(e it thread safe.) 410.45 622.62 T
0.28 0.05 (If foreign code is designed for use with multiple threads, then it is v) 63.65 597.62 B
0.28 0.05 (alid for it to use the synchronization) 369.07 597.62 B
-0.16 (f) 63.65 584.62 P
-0.16 (acilities of the Dylan library \050by calling back into Dylan, to in) 67.2 584.62 P
-0.16 (v) 337.55 584.62 P
-0.16 (ok) 342.83 584.62 P
-0.16 (e the Simple Threads Library synchroni-) 353.72 584.62 P
0.28 0.08 (zation functions\051. Alternati) 63.65 571.62 B
0.28 0.08 (v) 185.02 571.62 B
0.28 0.08 (ely) 190.44 571.62 B
0.28 0.08 (, it may use its o) 203.41 571.62 B
0.28 0.08 (wn methods for synchronization, pro) 278.08 571.62 B
0.28 0.08 (vided that these are) 444.06 571.62 B
0.28 0.07 (not incompatible with the methods pro) 63.65 558.62 B
0.28 0.07 (vided by the operating system. This is v) 237.65 558.62 B
0.28 0.07 (alid whene) 417.5 558.62 B
0.28 0.07 (v) 466.16 558.62 B
0.28 0.07 (er it has been) 471.56 558.62 B
0.28 0.1 (possible to implement the runtime system support for threads directly in terms of operating system fea-) 63.65 545.62 B
0.28 0 (tures, and it is anticipated that this will al) 63.65 532.62 B
0.28 0 (w) 246.98 532.62 B
0.28 0 (ays be true if the operating system supports threads. T) 254.82 532.62 B
0.28 0 (ypically) 494.16 532.62 B
0.28 0 (,) 528.9 532.62 B
(foreign code is e) 63.65 519.62 T
(xpected to mak) 136.49 519.62 T
(e direct use of operating system threads f) 203.59 519.62 T
(acilities.) 384.02 519.62 T
-0.2 (Ho) 63.65 494.62 P
-0.2 (we) 76.82 494.62 P
-0.2 (v) 89.37 494.62 P
-0.2 (er) 94.7 494.62 P
-0.2 (, a problem may arise if a thread is created in foreign code, and the ne) 102.81 494.62 P
-0.2 (w thread then calls back into) 406.49 494.62 P
0.08 (Dylan. In this case, the Dylan thread library itself will not be able to \336nd an e) 63.65 481.62 P
0.08 (xisting) 405.11 481.62 P
0 F
0.08 (<thr) 437.89 481.62 P
0.08 (ead>) 458.62 481.62 P
2 F
0.08 ( object cor-) 481.39 481.62 P
0.22 (responding to the current thread, and the \337uid v) 63.65 468.62 P
0.22 (ariables for the current thread will not ha) 274.39 468.62 P
0.22 (v) 455.63 468.62 P
0.22 (e been correctly) 460.96 468.62 P
0.28 0.08 (initialized. W) 63.65 455.62 B
0.28 0.08 (orse still, the g) 124.06 455.62 B
0.28 0.08 (arbage collector may not ha) 190.98 455.62 B
0.28 0.08 (v) 316.23 455.62 B
0.28 0.08 (e enough information to locate the roots of the) 321.65 455.62 B
0.28 0 (thread. Harlequin ha) 63.65 442.62 B
0.28 0 (v) 154.1 442.62 B
0.28 0 (e not yet allo) 159.43 442.62 B
0.28 0 (wed for this in their implementation, b) 217.12 442.62 B
0.28 0 (ut the) 388.14 442.62 B
0.28 0 (y ha) 413 442.62 B
0.28 0 (v) 431.69 442.62 B
0.28 0 (e an anticipated solu-) 437.03 442.62 B
(tion.) 63.65 429.62 T
-0.12 (It is possible to detect that a thread has ne) 63.65 404.62 P
-0.12 (v) 245.87 404.62 P
-0.12 (er been e) 251.21 404.62 P
-0.12 (x) 290.49 404.62 P
-0.12 (ecuting on the Dylan side of the FLI before because it) 295.83 404.62 P
0.28 0.21 (will ha) 63.65 391.62 B
0.28 0.21 (v) 95.41 391.62 B
0.28 0.21 (e an uninitialized \050zero\051 v) 100.95 391.62 B
0.28 0.21 (alue for its thread-local dynamic en) 220.43 391.62 B
0.28 0.21 (vironment v) 384.96 391.62 B
0.28 0.21 (ariable. This can be) 440.72 391.62 B
0.17 (check) 63.65 378.62 P
0.17 (ed at a call-in in the stub function which implements the FLI. Once such a thread has been detected,) 89.19 378.62 P
0.19 (appropriate initialization steps can be tak) 63.65 365.62 P
0.19 (en. A function in the runtime system can be called to re) 245.06 365.62 P
0.19 (gister the) 490.82 365.62 P
0.25 (stack of the thread for root tracing; the dynamic en) 63.65 352.62 P
0.25 (vironment can be set to point to a suitable v) 288.75 352.62 P
0.25 (alue on the) 482.88 352.62 P
0.24 (stack; \336nally a ne) 63.65 339.62 P
0.24 (w Dylan) 141.38 339.62 P
0 F
0.24 (<thr) 182.18 339.62 P
0.24 (ead>) 202.92 339.62 P
2 F
0.24 ( object can be allocated and initialized with) 225.69 339.62 P
0 F
0.24 (primiti) 421.27 339.62 P
0.24 (v) 454.16 339.62 P
0.24 (e-initialize-cur-) 459.55 339.62 P
(r) 63.65 326.62 T
(ent-thr) 68.33 326.62 T
(ead) 101.12 326.62 T
2 F
( \050as for the \336rst thread\051.) 117.62 326.62 T
3 10 Q
(4.4.3) 63.65 292.29 T
(Finalization) 90.89 292.29 T
2 11 Q
-0.16 (As has been discussed, the Dylan synchronization objects are implemented as wrappers around lo) 63.65 271.62 P
-0.16 (wer) 490.77 271.62 P
-0.16 (-le) 507.04 271.62 P
-0.16 (v) 518.37 271.62 P
-0.16 (el) 523.71 271.62 P
-0.02 (operating system structures. The Dylan objects are subject to g) 63.65 258.62 P
-0.02 (arbage collection, and their memory will be) 339.6 258.62 P
0.14 (automatically freed by the g) 63.65 245.62 P
0.14 (arbage collector at an unde\336ned point in the program. But the lo) 187.58 245.62 P
0.14 (w-le) 471.16 245.62 P
0.14 (v) 490.43 245.62 P
0.14 (el struc-) 495.77 245.62 P
0.28 0.05 (tures are not Dylan objects and must be e) 63.65 232.62 B
0.28 0.05 (xplicitly freed when the Dylan container is collected \050primiti) 249.26 232.62 B
0.28 0.05 (v) 521.38 232.62 B
0.28 0.05 (e) 526.76 232.62 B
0.28 0.14 (functions are pro) 63.65 219.62 B
0.28 0.14 (vided for this purpose\051. Ho) 140.94 219.62 B
0.28 0.14 (we) 264.38 219.62 B
0.28 0.14 (v) 277.21 219.62 B
0.28 0.14 (er) 282.69 219.62 B
0.28 0.14 (, the core language of Dylan pro) 291.08 219.62 B
0.28 0.14 (vides no) 439.07 219.62 B
1 F
0.28 0.14 (f) 480.6 219.62 B
0.28 0.14 (inalization) 483.18 219.62 B
2 F
0.06 (mechanism to in) 63.65 206.62 P
0.06 (v) 136.04 206.62 P
0.06 (ok) 141.32 206.62 P
0.06 (e cleanup code when objects are reclaimed. Harlequin\325) 152.21 206.62 P
0.06 (s implementation of the Simple) 393.31 206.62 P
0.28 0.08 (Threads Library strictly requires this, b) 63.65 193.62 B
0.28 0.08 (ut it is not yet implemented. It is intended to pro) 240.19 193.62 B
0.28 0.08 (vide f) 458.98 193.62 B
0.28 0.08 (inalization) 484.45 193.62 B
(support for Dylan with a ne) 63.65 180.62 T
(w g) 184.66 180.62 T
(arbage collector which is currently under de) 200.8 180.62 T
(v) 394.19 180.62 T
(elopment.) 399.52 180.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 47
%%Page: "42" 48
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(42) 63.65 84.9 T
3 15 Q
(5.) 63.65 734.95 T
(ANDF T) 90.65 734.95 T
(oken Design) 144.44 734.95 T
2 11 Q
0.28 0.07 (The ANDF compiler back end supports Dylan threads entirely through tok) 63.65 712.62 B
0.28 0.07 (ens. The use of tok) 399.2 712.62 B
0.28 0.07 (ens allo) 484.9 712.62 B
0.28 0.07 (ws) 519.36 712.62 B
0.28 0.16 (for operating system specif) 63.65 699.62 B
0.28 0.16 (ic implementation by pro) 187.6 699.62 B
0.28 0.16 (viding either specif) 302.98 699.62 B
0.28 0.16 (ic tok) 391.03 699.62 B
0.28 0.16 (en e) 416.89 699.62 B
0.28 0.16 (xpansions or specif) 435.66 699.62 B
0.28 0.16 (ic) 523.55 699.62 B
(implementations of the primiti) 63.65 686.62 T
(v) 197.52 686.62 T
(e functions in) 202.85 686.62 T
(v) 262.3 686.62 T
(ok) 267.58 686.62 T
(ed by the tok) 278.47 686.62 T
(ens.) 335.49 686.62 T
0.28 0.21 (The compiler back end operates on a straight-forw) 63.65 661.62 B
0.28 0.21 (ard mapping between Dylan primiti) 298.01 661.62 B
0.28 0.21 (v) 462.92 661.62 B
0.28 0.21 (es and ANDF) 468.47 661.62 B
0.28 0.11 (tok) 63.65 648.62 B
0.28 0.11 (ens. Each Dylan primiti) 77.92 648.62 B
0.28 0.11 (v) 185.48 648.62 B
0.28 0.11 (e has an associated ANDF tok) 190.92 648.62 B
0.28 0.11 (en, as specif) 328.14 648.62 B
0.28 0.11 (ied in T) 383.57 648.62 B
0.28 0.11 (able) 418.33 648.62 B
0.28 0.11 (3 on page) 439.95 648.62 B
0.28 0.11 (42. Code-) 487.11 648.62 B
0.28 0.07 (generation methods in the ANDF back end are specialized on classes of f) 63.65 635.62 B
0.28 0.07 (lo) 393.18 635.62 B
0.28 0.07 (w-graph nodes that represent) 401.6 635.62 B
0.28 0.05 (calls to Dylan primiti) 63.65 622.62 B
0.28 0.05 (v) 159.08 622.62 B
0.28 0.05 (es. When the back end encounters a call to a Dylan primiti) 164.46 622.62 B
0.28 0.05 (v) 427.26 622.62 B
0.28 0.05 (e, it emits a use of the) 432.64 622.62 B
(corresponding tok) 63.65 609.62 T
(en.) 143.28 609.62 T
(T) 139.63 590.62 T
(able 3.) 145.47 590.62 T
(Correspondence Between Dylan Primiti) 180.3 590.62 T
(v) 355.7 590.62 T
(es and ANDF T) 361.03 590.62 T
(ok) 430.11 590.62 T
(ens) 441 590.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Dylan Primiti) 69.65 554.62 T
(v) 134.01 554.62 T
(e) 139.4 554.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF T) 303.65 554.62 T
(ok) 343.27 554.62 T
(en) 354.78 554.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(primiti) 69.65 534.62 T
(v) 102.54 534.62 T
(e-mak) 107.93 534.62 T
(e-thr) 137.14 534.62 T
(ead) 160.16 534.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_MAKE_THREAD) 303.65 535.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 520.62 T
(v) 102.54 520.62 T
(e-destr) 107.93 520.62 T
(oy-thr) 140.1 520.62 T
(ead) 169.23 520.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_DESTR) 303.65 521.29 T
(O) 367.9 521.29 T
(Y_THREAD) 374.98 521.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 506.62 T
(v) 102.54 506.62 T
(e-initialize-curr) 107.93 506.62 T
(ent-thr) 181.04 506.62 T
(ead) 213.84 506.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_INITIALIZE_CURRENT_THREAD) 303.65 507.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 492.62 T
(v) 102.54 492.62 T
(e-thr) 107.93 492.62 T
(ead-join-single) 130.94 492.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_THREAD_JOIN_SINGLE) 303.65 493.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 478.62 T
(v) 102.54 478.62 T
(e-thr) 107.93 478.62 T
(ead-join-multiple) 130.94 478.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_THREAD_JOIN_MUL) 303.65 479.29 T
(TIPLE) 429.23 479.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 464.62 T
(v) 102.54 464.62 T
(e-thr) 107.93 464.62 T
(ead-yield) 130.94 464.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_THREAD_YIELD) 303.65 465.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 450.62 T
(v) 102.54 450.62 T
(e-curr) 107.93 450.62 T
(ent-thr) 137.04 450.62 T
(ead) 169.84 450.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_CURRENT_THREAD) 303.65 451.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 436.62 T
(v) 102.54 436.62 T
(e-mak) 107.93 436.62 T
(e-simple-lock) 137.14 436.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_MAKE_SIMPLE_LOCK) 303.65 437.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 422.62 T
(v) 102.54 422.62 T
(e-destr) 107.93 422.62 T
(oy-simple-lock) 140.1 422.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_DESTR) 303.65 423.29 T
(O) 367.9 423.29 T
(Y_SIMPLE_LOCK) 374.98 423.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 408.62 T
(v) 102.54 408.62 T
(e-wait-f) 107.93 408.62 T
(or) 143.69 408.62 T
(-simple-lock) 153.67 408.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 409.29 T
(AIT_FOR_SIMPLE_LOCK) 343.15 409.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 394.62 T
(v) 102.54 394.62 T
(e-wait-f) 107.93 394.62 T
(or) 143.69 394.62 T
(-simple-lock-timed) 153.67 394.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 395.29 T
(AIT_FOR_SIMPLE_LOCK_TIMED) 343.15 395.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 380.62 T
(v) 102.54 380.62 T
(e-r) 107.93 380.62 T
(elease-simple-lock) 121.16 380.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_RELEASE_SIMPLE_LOCK) 303.65 381.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 366.62 T
(v) 102.54 366.62 T
(e-o) 107.93 366.62 T
(wned-simple-lock) 121.86 366.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_O) 303.65 367.29 T
(WNED_SIMPLE_LOCK) 341.69 367.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 352.62 T
(v) 102.54 352.62 T
(e-mak) 107.93 352.62 T
(e-r) 137.14 352.62 T
(ecursi) 150.38 352.62 T
(v) 178.37 352.62 T
(e-lock) 183.76 352.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_MAKE_RECURSIVE_LOCK) 303.65 353.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 338.62 T
(v) 102.54 338.62 T
(e-destr) 107.93 338.62 T
(oy-r) 140.1 338.62 T
(ecursi) 159.45 338.62 T
(v) 187.45 338.62 T
(e-lock) 192.84 338.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_DESTR) 303.65 339.29 T
(O) 367.9 339.29 T
(Y_RECURSIVE_LOCK) 374.98 339.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 324.62 T
(v) 102.54 324.62 T
(e-wait-f) 107.93 324.62 T
(or) 143.69 324.62 T
(-r) 153.67 324.62 T
(ecursi) 162.01 324.62 T
(v) 190.01 324.62 T
(e-lock) 195.4 324.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 325.29 T
(AIT_FOR_RECURSIVE_LOCK) 343.15 325.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 310.62 T
(v) 102.54 310.62 T
(e-wait-f) 107.93 310.62 T
(or) 143.69 310.62 T
(-r) 153.67 310.62 T
(ecursi) 162.01 310.62 T
(v) 190.01 310.62 T
(e-lock-timed) 195.4 310.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 311.29 T
(AIT_FOR_RECURSIVE_LOCK_TIMED) 343.15 311.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 296.62 T
(v) 102.54 296.62 T
(e-r) 107.93 296.62 T
(elease-r) 121.16 296.62 T
(ecursi) 157 296.62 T
(v) 184.99 296.62 T
(e-lock) 190.38 296.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_RELEASE_RECURSIVE_LOCK) 303.65 297.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 282.62 T
(v) 102.54 282.62 T
(e-o) 107.93 282.62 T
(wned-r) 121.86 282.62 T
(ecursi) 155.27 282.62 T
(v) 183.27 282.62 T
(e-lock) 188.66 282.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_O) 303.65 283.29 T
(WNED_RECURSIVE_LOCK) 341.69 283.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 268.62 T
(v) 102.54 268.62 T
(e-mak) 107.93 268.62 T
(e-semaphor) 137.14 268.62 T
(e) 191.93 268.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_MAKE_SEMAPHORE) 303.65 269.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 254.62 T
(v) 102.54 254.62 T
(e-destr) 107.93 254.62 T
(oy-semaphor) 140.1 254.62 T
(e) 201.01 254.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_DESTR) 303.65 255.29 T
(O) 367.9 255.29 T
(Y_SEMAPHORE) 374.98 255.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 240.62 T
(v) 102.54 240.62 T
(e-wait-f) 107.93 240.62 T
(or) 143.69 240.62 T
(-semaphor) 153.67 240.62 T
(e) 203.57 240.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 241.29 T
(AIT_FOR_SEMAPHORE) 343.15 241.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 226.62 T
(v) 102.54 226.62 T
(e-wait-f) 107.93 226.62 T
(or) 143.69 226.62 T
(-semaphor) 153.67 226.62 T
(e-timed) 203.57 226.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 227.29 T
(AIT_FOR_SEMAPHORE_TIMED) 343.15 227.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 212.62 T
(v) 102.54 212.62 T
(e-r) 107.93 212.62 T
(elease-semaphor) 121.16 212.62 T
(e) 198.56 212.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_RELEASE_SEMAPHORE) 303.65 213.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 198.62 T
(v) 102.54 198.62 T
(e-mak) 107.93 198.62 T
(e-noti\336cation) 137.14 198.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_MAKE_NO) 303.65 199.29 T
(TIFICA) 382.71 199.29 T
(TION) 413.18 199.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 184.62 T
(v) 102.54 184.62 T
(e-destr) 107.93 184.62 T
(oy-noti\336cation) 140.1 184.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_DESTR) 303.65 185.29 T
(O) 367.9 185.29 T
(Y_NO) 374.98 185.29 T
(TIFICA) 401.81 185.29 T
(TION) 432.28 185.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 170.62 T
(v) 102.54 170.62 T
(e-wait-f) 107.93 170.62 T
(or) 143.69 170.62 T
(-noti\336cation) 153.67 170.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 171.29 T
(AIT_FOR_NO) 343.15 171.29 T
(TIFICA) 405.54 171.29 T
(TION) 436.01 171.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 156.62 T
(v) 102.54 156.62 T
(e-wait-f) 107.93 156.62 T
(or) 143.69 156.62 T
(-noti\336cation-timed) 153.67 156.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_W) 303.65 157.29 T
(AIT_FOR_NO) 343.15 157.29 T
(TIFICA) 405.54 157.29 T
(TION_TIMED) 436.01 157.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 142.62 T
(v) 102.54 142.62 T
(e-r) 107.93 142.62 T
(elease-noti\336cation) 121.16 142.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_RELEASE_NO) 303.65 143.29 T
(TIFICA) 400.5 143.29 T
(TION) 430.97 143.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 128.62 T
(v) 102.54 128.62 T
(e-r) 107.93 128.62 T
(elease-all-noti\336cation) 121.16 128.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_RELEASE_ALL_NO) 303.65 129.29 T
(TIFICA) 423.85 129.29 T
(TION) 454.32 129.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
297.65 572.95 297.65 123.95 2 L
V
0.25 H
0 Z
N
63.65 543.95 531.65 543.95 2 L
V
0.5 H
N
63.65 529.95 531.65 529.95 2 L
V
0.25 H
N
63.65 515.95 531.65 515.95 2 L
V
N
63.65 501.95 531.65 501.95 2 L
V
N
63.65 487.95 531.65 487.95 2 L
V
N
63.65 473.95 531.65 473.95 2 L
V
N
63.65 459.95 531.65 459.95 2 L
V
N
63.65 445.95 531.65 445.95 2 L
V
N
63.65 431.95 531.65 431.95 2 L
V
N
63.65 417.95 531.65 417.95 2 L
V
N
63.65 403.95 531.65 403.95 2 L
V
N
63.65 389.95 531.65 389.95 2 L
V
N
63.65 375.95 531.65 375.95 2 L
V
N
63.65 361.95 531.65 361.95 2 L
V
N
63.65 347.95 531.65 347.95 2 L
V
N
63.65 333.95 531.65 333.95 2 L
V
N
63.65 319.95 531.65 319.95 2 L
V
N
63.65 305.95 531.65 305.95 2 L
V
N
63.65 291.95 531.65 291.95 2 L
V
N
63.65 277.95 531.65 277.95 2 L
V
N
63.65 263.95 531.65 263.95 2 L
V
N
63.65 249.95 531.65 249.95 2 L
V
N
63.65 235.95 531.65 235.95 2 L
V
N
63.65 221.95 531.65 221.95 2 L
V
N
63.65 207.95 531.65 207.95 2 L
V
N
63.65 193.95 531.65 193.95 2 L
V
N
63.65 179.95 531.65 179.95 2 L
V
N
63.65 165.95 531.65 165.95 2 L
V
N
63.65 151.95 531.65 151.95 2 L
V
N
63.65 137.95 531.65 137.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 48
%%Page: "43" 49
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(43) 520.53 84.9 T
2 11 Q
0.16 (The signature of each tok) 63.65 668.62 P
0.16 (en corresponds directly to the signature of the corresponding Dylan primiti) 175.97 668.62 P
0.16 (v) 506.61 668.62 P
0.16 (e. In) 511.94 668.62 P
0.28 0.08 (the tok) 63.65 655.62 B
0.28 0.08 (en signatures, all parameters and return v) 94.61 655.62 B
0.28 0.08 (alues are of sort) 280.39 655.62 B
5 10 Q
0.28 0.08 (EXP) 355.58 655.62 B
2 11 Q
0.28 0.08 (. The tok) 374.6 655.62 B
0.28 0.08 (en signatures mak) 415.15 655.62 B
0.28 0.08 (e use of) 496.34 655.62 B
(tw) 63.65 642.62 T
(o shapes,) 74.54 642.62 T
5 10 Q
(pz) 117.61 642.62 T
2 11 Q
( and) 128.17 642.62 T
5 10 Q
(~ptr-v) 149.56 642.62 T
(oid) 175.15 642.62 T
2 11 Q
(.) 188.49 642.62 T
5 10 Q
(pz) 63.65 615.29 T
2 11 Q
([Shape]) 497.44 614.62 T
(This shape represents an) 99.65 592.62 T
(y Dylan object.) 207.32 592.62 T
5 10 Q
(~ptr_void) 63.65 565.29 T
2 11 Q
([Shape]) 497.44 564.62 T
(This shape represents the C type) 99.65 542.62 T
0 F
(v) 245.07 542.62 T
(oid*) 250.46 542.62 T
2 F
(. It is de\336ned in the standard ANSI C tok) 270.63 542.62 T
(en library) 450.79 542.62 T
(.) 492.54 542.62 T
3 12 Q
(5.1) 63.65 504.95 T
(ANDF T) 90.65 504.95 T
(okens Corresponding to Primitives) 133.68 504.95 T
3 10 Q
(5.1.1) 63.65 470.29 T
(Threads) 90.89 470.29 T
5 F
(PRIM_MAKE_THREAD) 63.65 443.29 T
2 11 Q
([T) 497.21 442.62 T
(ok) 506.71 442.62 T
(en]) 517.6 442.62 T
1 F
(Signatur) 81.65 417.62 T
(e) 119.14 417.62 T
(thr) 125.89 398.62 T
(ead_object) 138.32 398.62 T
2 F
(:) 186.59 398.62 T
5 10 Q
(EXP pz) 207.65 398.62 T
1 11 Q
(name) 162.76 385.62 T
2 F
(:) 186.59 385.62 T
5 10 Q
(EXP pz) 207.65 385.62 T
1 11 Q
(priority) 152.97 372.62 T
2 F
(:) 186.59 372.62 T
5 10 Q
(EXP pz) 207.65 372.62 T
1 11 Q
(function) 150.53 359.62 T
2 F
(:) 186.59 359.62 T
5 10 Q
(EXP pz) 207.65 359.62 T
6 11 Q
(\256) 189.59 344.29 T
5 10 Q
(EXP pz) 207.65 344.29 T
(PRIM_DESTROY_THREAD) 63.65 317.29 T
2 11 Q
([T) 497.21 316.62 T
(ok) 506.71 316.62 T
(en]) 517.6 316.62 T
1 F
(Signatur) 81.65 291.62 T
(e) 119.14 291.62 T
(thr) 122.83 272.62 T
(ead_handle) 135.26 272.62 T
2 F
(:) 186.59 272.62 T
5 10 Q
(EXP pz) 207.65 272.62 T
6 11 Q
(\256) 189.59 257.29 T
5 10 Q
(EXP pz) 207.65 257.29 T
(PRIM_INITIALIZE_CURRENT_THREAD) 63.65 230.29 T
2 11 Q
([T) 497.21 229.62 T
(ok) 506.71 229.62 T
(en]) 517.6 229.62 T
1 F
(Signatur) 81.65 204.62 T
(e) 119.14 204.62 T
(thr) 158.28 185.62 T
(ead) 170.71 185.62 T
2 F
(:) 186.59 185.62 T
5 10 Q
(EXP pz) 207.65 185.62 T
6 11 Q
(\256) 189.59 170.29 T
5 10 Q
(EXP pz) 207.65 170.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 706.62 T
(v) 102.54 706.62 T
(e-sleep) 107.93 706.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_SLEEP) 303.65 707.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(primiti) 69.65 692.62 T
(v) 102.54 692.62 T
(e-allocate-thr) 107.93 692.62 T
(ead-v) 170.65 692.62 T
(ariable) 196.2 692.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 10 Q
(PRIM_ALLOCA) 303.65 693.29 T
(TE_THREAD_V) 372.47 693.29 T
(ARIABLE) 443.35 693.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(Dylan Primiti) 69.65 726.62 T
(v) 134.01 726.62 T
(e) 139.4 726.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF T) 303.65 726.62 T
(ok) 343.27 726.62 T
(en) 354.78 726.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
297.65 744.95 297.65 687.95 2 L
V
0.25 H
0 Z
N
63.65 715.95 531.65 715.95 2 L
V
0.5 H
N
63.65 701.95 531.65 701.95 2 L
V
0.25 H
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 49
%%Page: "44" 50
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(44) 63.65 84.9 T
5 F
(PRIM_THREAD_JOIN_SINGLE) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(thr) 122.83 693.62 T
(ead_handle) 135.26 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
6 11 Q
(\256) 189.59 678.29 T
5 10 Q
(EXP pz) 207.65 678.29 T
(PRIM_THREAD_JOIN_MULTIPLE) 63.65 651.29 T
2 11 Q
([T) 497.21 650.62 T
(ok) 506.71 650.62 T
(en]) 517.6 650.62 T
1 F
(Signatur) 81.65 625.62 T
(e) 119.14 625.62 T
(thr) 139.32 606.62 T
(ead_list) 151.75 606.62 T
2 F
(:) 186.59 606.62 T
5 10 Q
(EXP pz) 207.65 606.62 T
6 11 Q
(\256) 189.59 591.29 T
5 10 Q
(EXP pz) 207.65 591.29 T
(PRIM_THREAD_YIELD) 63.65 564.29 T
2 11 Q
([T) 497.21 563.62 T
(ok) 506.71 563.62 T
(en]) 517.6 563.62 T
1 F
(Signatur) 81.65 538.62 T
(e) 119.14 538.62 T
6 F
(\256) 189.59 520.29 T
5 10 Q
(EXP pz) 207.65 520.29 T
(PRIM_CURRENT_THREAD) 63.65 493.29 T
2 11 Q
([T) 497.21 492.62 T
(ok) 506.71 492.62 T
(en]) 517.6 492.62 T
1 F
(Signatur) 81.65 467.62 T
(e) 119.14 467.62 T
6 F
(\256) 189.59 449.29 T
5 10 Q
(EXP ~ptr_v) 207.65 449.29 T
(oid) 258.26 449.29 T
3 F
(5.1.2) 63.65 415.29 T
(Simple Loc) 90.89 415.29 T
(ks) 144.04 415.29 T
5 F
(PRIM_MAKE_SIMPLE_LOCK) 63.65 388.29 T
2 11 Q
([T) 497.21 387.62 T
(ok) 506.71 387.62 T
(en]) 517.6 387.62 T
1 F
(Signatur) 81.65 362.62 T
(e) 119.14 362.62 T
(loc) 168.48 343.62 T
(k) 181.71 343.62 T
2 F
(:) 186.59 343.62 T
5 10 Q
(EXP pz) 207.65 343.62 T
1 11 Q
(name) 162.76 330.62 T
2 F
(:) 186.59 330.62 T
5 10 Q
(EXP pz) 207.65 330.62 T
6 11 Q
(\256) 189.59 315.29 T
5 10 Q
(EXP pz) 207.65 315.29 T
(PRIM_DESTROY_SIMPLE_LOCK) 63.65 288.29 T
2 11 Q
([T) 497.21 287.62 T
(ok) 506.71 287.62 T
(en]) 517.6 287.62 T
1 F
(Signatur) 81.65 262.62 T
(e) 119.14 262.62 T
(loc) 133.04 243.62 T
(k_handle) 146.26 243.62 T
2 F
(:) 186.59 243.62 T
5 10 Q
(EXP pz) 207.65 243.62 T
6 11 Q
(\256) 189.59 228.29 T
5 10 Q
(EXP pz) 207.65 228.29 T
(PRIM_WAIT_FOR_SIMPLE_LOCK) 63.65 201.29 T
2 11 Q
([T) 497.21 200.62 T
(ok) 506.71 200.62 T
(en]) 517.6 200.62 T
1 F
(Signatur) 81.65 175.62 T
(e) 119.14 175.62 T
(loc) 168.48 156.62 T
(k) 181.71 156.62 T
2 F
(:) 186.59 156.62 T
5 10 Q
(EXP pz) 207.65 156.62 T
6 11 Q
(\256) 189.59 141.29 T
5 10 Q
(EXP pz) 207.65 141.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 50
%%Page: "45" 51
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(45) 520.53 84.9 T
5 F
(PRIM_WAIT_FOR_SIMPLE_LOCK_TIMED) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(loc) 168.48 693.62 T
(k) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
1 11 Q
(timeout) 153.59 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP pz) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP pz) 207.65 665.29 T
(PRIM_RELEASE_SIMPLE_LOCK) 63.65 638.29 T
2 11 Q
([T) 497.21 637.62 T
(ok) 506.71 637.62 T
(en]) 517.6 637.62 T
1 F
(Signatur) 81.65 612.62 T
(e) 119.14 612.62 T
(loc) 168.48 593.62 T
(k) 181.71 593.62 T
2 F
(:) 186.59 593.62 T
5 10 Q
(EXP pz) 207.65 593.62 T
6 11 Q
(\256) 189.59 578.29 T
5 10 Q
(EXP pz) 207.65 578.29 T
(PRIM_OWNED_SIMPLE_LOCK) 63.65 551.29 T
2 11 Q
([T) 497.21 550.62 T
(ok) 506.71 550.62 T
(en]) 517.6 550.62 T
1 F
(Signatur) 81.65 525.62 T
(e) 119.14 525.62 T
(loc) 133.04 506.62 T
(k_handle) 146.26 506.62 T
2 F
(:) 186.59 506.62 T
5 10 Q
(EXP pz) 207.65 506.62 T
6 11 Q
(\256) 189.59 491.29 T
5 10 Q
(EXP pz) 207.65 491.29 T
3 F
(5.1.3) 63.65 457.29 T
(Recur) 90.89 457.29 T
(sive Loc) 119.08 457.29 T
(ks) 158.9 457.29 T
5 F
(PRIM_MAKE_RECURSIVE_LOCK) 63.65 430.29 T
2 11 Q
([T) 497.21 429.62 T
(ok) 506.71 429.62 T
(en]) 517.6 429.62 T
1 F
(Signatur) 81.65 404.62 T
(e) 119.14 404.62 T
(loc) 168.48 385.62 T
(k) 181.71 385.62 T
2 F
(:) 186.59 385.62 T
5 10 Q
(EXP pz) 207.65 385.62 T
1 11 Q
(name) 162.76 372.62 T
2 F
(:) 186.59 372.62 T
5 10 Q
(EXP pz) 207.65 372.62 T
6 11 Q
(\256) 189.59 357.29 T
5 10 Q
(EXP pz) 207.65 357.29 T
(PRIM_DESTROY_RECURSIVE_LOCK) 63.65 330.29 T
2 11 Q
([T) 497.21 329.62 T
(ok) 506.71 329.62 T
(en]) 517.6 329.62 T
1 F
(Signatur) 81.65 304.62 T
(e) 119.14 304.62 T
(loc) 133.04 285.62 T
(k_handle) 146.26 285.62 T
2 F
(:) 186.59 285.62 T
5 10 Q
(EXP pz) 207.65 285.62 T
6 11 Q
(\256) 189.59 270.29 T
5 10 Q
(EXP pz) 207.65 270.29 T
(PRIM_WAIT_FOR_RECURSIVE_LOCK) 63.65 243.29 T
2 11 Q
([T) 497.21 242.62 T
(ok) 506.71 242.62 T
(en]) 517.6 242.62 T
1 F
(Signatur) 81.65 217.62 T
(e) 119.14 217.62 T
(loc) 168.48 198.62 T
(k) 181.71 198.62 T
2 F
(:) 186.59 198.62 T
5 10 Q
(EXP pz) 207.65 198.62 T
6 11 Q
(\256) 189.59 183.29 T
5 10 Q
(EXP pz) 207.65 183.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 51
%%Page: "46" 52
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(46) 63.65 84.9 T
5 F
(PRIM_WAIT_FOR_RECURSIVE_LOCK_TIMED) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(loc) 168.48 693.62 T
(k) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
1 11 Q
(timeout) 153.59 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP pz) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP pz) 207.65 665.29 T
(PRIM_RELEASE_RECURSIVE_LOCK) 63.65 638.29 T
2 11 Q
([T) 497.21 637.62 T
(ok) 506.71 637.62 T
(en]) 517.6 637.62 T
1 F
(Signatur) 81.65 612.62 T
(e) 119.14 612.62 T
(loc) 168.48 593.62 T
(k) 181.71 593.62 T
2 F
(:) 186.59 593.62 T
5 10 Q
(EXP pz) 207.65 593.62 T
6 11 Q
(\256) 189.59 578.29 T
5 10 Q
(EXP pz) 207.65 578.29 T
(PRIM_OWNED_RECURSIVE_LOCK) 63.65 551.29 T
2 11 Q
([T) 497.21 550.62 T
(ok) 506.71 550.62 T
(en]) 517.6 550.62 T
1 F
(Signatur) 81.65 525.62 T
(e) 119.14 525.62 T
(loc) 133.04 506.62 T
(k_handle) 146.26 506.62 T
2 F
(:) 186.59 506.62 T
5 10 Q
(EXP pz) 207.65 506.62 T
6 11 Q
(\256) 189.59 491.29 T
5 10 Q
(EXP pz) 207.65 491.29 T
3 F
(5.1.4) 63.65 457.29 T
(Semaphores) 90.89 457.29 T
5 F
(PRIM_MAKE_SEMAPHORE) 63.65 430.29 T
2 11 Q
([T) 497.21 429.62 T
(ok) 506.71 429.62 T
(en]) 517.6 429.62 T
1 F
(Signatur) 81.65 404.62 T
(e) 119.14 404.62 T
(loc) 168.48 385.62 T
(k) 181.71 385.62 T
2 F
(:) 186.59 385.62 T
5 10 Q
(EXP pz) 207.65 385.62 T
1 11 Q
(name) 162.76 372.62 T
2 F
(:) 186.59 372.62 T
5 10 Q
(EXP pz) 207.65 372.62 T
1 11 Q
(initial) 160.3 359.62 T
2 F
(:) 186.59 359.62 T
5 10 Q
(EXP pz) 207.65 359.62 T
1 11 Q
(max) 168.26 346.62 T
2 F
(:) 186.59 346.62 T
5 10 Q
(EXP pz) 207.65 346.62 T
6 11 Q
(\256) 189.59 331.29 T
5 10 Q
(EXP pz) 207.65 331.29 T
(PRIM_DESTROY_SEMAPHORE) 63.65 304.29 T
2 11 Q
([T) 497.21 303.62 T
(ok) 506.71 303.62 T
(en]) 517.6 303.62 T
1 F
(Signatur) 81.65 278.62 T
(e) 119.14 278.62 T
(loc) 133.04 259.62 T
(k_handle) 146.26 259.62 T
2 F
(:) 186.59 259.62 T
5 10 Q
(EXP pz) 207.65 259.62 T
6 11 Q
(\256) 189.59 244.29 T
5 10 Q
(EXP pz) 207.65 244.29 T
(PRIM_WAIT_FOR_SEMAPHORE) 63.65 217.29 T
2 11 Q
([T) 497.21 216.62 T
(ok) 506.71 216.62 T
(en]) 517.6 216.62 T
1 F
(Signatur) 81.65 191.62 T
(e) 119.14 191.62 T
(loc) 168.48 172.62 T
(k) 181.71 172.62 T
2 F
(:) 186.59 172.62 T
5 10 Q
(EXP pz) 207.65 172.62 T
6 11 Q
(\256) 189.59 157.29 T
5 10 Q
(EXP pz) 207.65 157.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 52
%%Page: "47" 53
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(47) 520.53 84.9 T
5 F
(PRIM_WAIT_FOR_SEMAPHORE_TIMED) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(loc) 168.48 693.62 T
(k) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
1 11 Q
(timeout) 153.59 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP pz) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP pz) 207.65 665.29 T
(PRIM_RELEASE_SEMAPHORE) 63.65 638.29 T
2 11 Q
([T) 497.21 637.62 T
(ok) 506.71 637.62 T
(en]) 517.6 637.62 T
1 F
(Signatur) 81.65 612.62 T
(e) 119.14 612.62 T
(loc) 168.48 593.62 T
(k) 181.71 593.62 T
2 F
(:) 186.59 593.62 T
5 10 Q
(EXP pz) 207.65 593.62 T
6 11 Q
(\256) 189.59 578.29 T
5 10 Q
(EXP pz) 207.65 578.29 T
3 F
(5.1.5) 63.65 544.29 T
(Noti\336cations) 90.89 544.29 T
5 F
(PRIM_MAKE_NOTIFICATION) 63.65 517.29 T
2 11 Q
([T) 497.21 516.62 T
(ok) 506.71 516.62 T
(en]) 517.6 516.62 T
1 F
(Signatur) 81.65 491.62 T
(e) 119.14 491.62 T
(noti\336cation) 136.47 472.62 T
2 F
(:) 186.59 472.62 T
5 10 Q
(EXP pz) 207.65 472.62 T
1 11 Q
(name) 162.76 459.62 T
2 F
(:) 186.59 459.62 T
5 10 Q
(EXP pz) 207.65 459.62 T
6 11 Q
(\256) 189.59 444.29 T
5 10 Q
(EXP pz) 207.65 444.29 T
(PRIM_DESTROY_NOTIFICATION) 63.65 417.29 T
2 11 Q
([T) 497.21 416.62 T
(ok) 506.71 416.62 T
(en]) 517.6 416.62 T
1 F
(Signatur) 81.65 391.62 T
(e) 119.14 391.62 T
(noti\336cation_handle) 101.03 372.62 T
2 F
(:) 186.59 372.62 T
5 10 Q
(EXP pz) 207.65 372.62 T
6 11 Q
(\256) 189.59 357.29 T
5 10 Q
(EXP pz) 207.65 357.29 T
(PRIM_WAIT_FOR_NOTIFICATION) 63.65 330.29 T
2 11 Q
([T) 497.21 329.62 T
(ok) 506.71 329.62 T
(en]) 517.6 329.62 T
1 F
(Signatur) 81.65 304.62 T
(e) 119.14 304.62 T
(noti\336cation) 136.47 285.62 T
2 F
(:) 186.59 285.62 T
5 10 Q
(EXP pz) 207.65 285.62 T
1 11 Q
(loc) 168.48 272.62 T
(k) 181.71 272.62 T
2 F
(:) 186.59 272.62 T
5 10 Q
(EXP pz) 207.65 272.62 T
6 11 Q
(\256) 189.59 257.29 T
5 10 Q
(EXP pz) 207.65 257.29 T
(PRIM_WAIT_FOR_NOTIFICATION_TIMED) 63.65 230.29 T
2 11 Q
([T) 497.21 229.62 T
(ok) 506.71 229.62 T
(en]) 517.6 229.62 T
1 F
(Signatur) 81.65 204.62 T
(e) 119.14 204.62 T
(noti\336cation) 136.47 185.62 T
2 F
(:) 186.59 185.62 T
5 10 Q
(EXP pz) 207.65 185.62 T
1 11 Q
(loc) 168.48 172.62 T
(k) 181.71 172.62 T
2 F
(:) 186.59 172.62 T
5 10 Q
(EXP pz) 207.65 172.62 T
1 11 Q
(timeout) 153.59 159.62 T
2 F
(:) 186.59 159.62 T
5 10 Q
(EXP pz) 207.65 159.62 T
6 11 Q
(\256) 189.59 144.29 T
5 10 Q
(EXP pz) 207.65 144.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 53
%%Page: "48" 54
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(48) 63.65 84.9 T
5 F
(PRIM_RELEASE_NOTIFICATION) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(noti\336cation) 136.47 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
1 11 Q
(loc) 168.48 680.62 T
(k) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP pz) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP pz) 207.65 665.29 T
(PRIM_RELEASE_ALL_NOTIFICATION) 63.65 638.29 T
2 11 Q
([T) 497.21 637.62 T
(ok) 506.71 637.62 T
(en]) 517.6 637.62 T
1 F
(Signatur) 81.65 612.62 T
(e) 119.14 612.62 T
(noti\336cation) 136.47 593.62 T
2 F
(:) 186.59 593.62 T
5 10 Q
(EXP pz) 207.65 593.62 T
1 11 Q
(loc) 168.48 580.62 T
(k) 181.71 580.62 T
2 F
(:) 186.59 580.62 T
5 10 Q
(EXP pz) 207.65 580.62 T
6 11 Q
(\256) 189.59 565.29 T
5 10 Q
(EXP pz) 207.65 565.29 T
3 F
(5.1.6) 63.65 531.29 T
(Timer) 90.89 531.29 T
(s) 117.97 531.29 T
5 F
(PRIM_SLEEP) 63.65 504.29 T
2 11 Q
([T) 497.21 503.62 T
(ok) 506.71 503.62 T
(en]) 517.6 503.62 T
1 F
(Signatur) 81.65 478.62 T
(e) 119.14 478.62 T
(millisecs) 148.09 459.62 T
2 F
(:) 186.59 459.62 T
5 10 Q
(EXP pz) 207.65 459.62 T
6 11 Q
(\256) 189.59 444.29 T
5 10 Q
(EXP pz) 207.65 444.29 T
3 F
(5.1.7) 63.65 410.29 T
(Thread V) 90.89 410.29 T
(ariab) 133.08 410.29 T
(les) 156.88 410.29 T
5 F
(PRIM_ALLOCATE_THREAD_VARIABLE) 63.65 383.29 T
2 11 Q
([T) 497.21 382.62 T
(ok) 506.71 382.62 T
(en]) 517.6 382.62 T
1 F
(Signatur) 81.65 357.62 T
(e) 119.14 357.62 T
(initial_value) 130.97 338.62 T
2 F
(:) 186.59 338.62 T
5 10 Q
(EXP pz) 207.65 338.62 T
6 11 Q
(\256) 189.59 323.29 T
5 10 Q
(EXP ~ptr_v) 207.65 323.29 T
(oid) 258.26 323.29 T
3 12 Q
(5.2) 63.65 285.95 T
(ANDF T) 90.65 285.95 T
(oken Suppor) 133.68 285.95 T
(t f) 207.26 285.95 T
(or Atomic and Fluid V) 218.35 285.95 T
(ariab) 341.65 285.95 T
(les) 370.21 285.95 T
2 11 Q
0.26 (Reading and writing of atomic and \337uid v) 63.65 264.62 P
0.26 (ariables requires special treatment in the compiler) 249.45 264.62 P
0.26 (. Access to an) 469.77 264.62 P
0.28 0.1 (atomic v) 63.65 251.62 B
0.28 0.1 (ariable by one thread must be protected from accesses by other threads. Fluid v) 102.61 251.62 B
0.28 0.1 (ariables require) 461.81 251.62 B
0.28 0.03 (storage that is local to each thread, and access to a thread v) 63.65 238.62 B
0.28 0.03 (ariable must obtain or update the v) 327.9 238.62 B
0.28 0.03 (alue that is) 483.1 238.62 B
(local to the calling thread.) 63.65 225.62 T
-0.25 (The Dylan compiler front end handles atomic and \337uid v) 63.65 200.62 P
-0.25 (ariables by de\336ning tw) 311.38 200.62 P
-0.25 (o specialized classes of leaf) 411.06 200.62 P
0.28 0.04 (nodes in the compiler\325) 63.65 187.62 B
0.28 0.04 (s Implicit Continuation Representation \050ICR\051:) 163.49 187.62 B
0 F
0.28 0.04 (<atomic-global-v) 371.85 187.62 B
0.28 0.04 (ariable-leaf>) 452.02 187.62 B
2 F
0.28 0.04 ( and) 512.61 187.62 B
0 F
0.28 0.12 (<f) 63.65 174.62 B
0.28 0.12 (luid-global-v) 73.22 174.62 B
0.28 0.12 (ariable-leaf>) 134.63 174.62 B
2 F
0.28 0.12 (. The ANDF back end for the compiler uses methods specialized on these) 196.28 174.62 B
0.28 0.11 (classes to emit tok) 63.65 161.62 B
0.28 0.11 (ens that represent access to atomic v) 147.5 161.62 B
0.28 0.11 (ariables \050) 313.17 161.62 B
5 10 Q
0.28 0.11 (READ_A) 355.21 161.62 B
0.28 0.11 (T) 394.7 161.62 B
0.28 0.11 (OMIC) 400.52 161.62 B
2 11 Q
0.28 0.11 (,) 427.09 161.62 B
5 10 Q
0.28 0.11 (WRITE_A) 433.09 161.62 B
0.28 0.11 (T) 477.14 161.62 B
0.28 0.11 (OMIC) 482.97 161.62 B
2 11 Q
0.28 0.11 (, and) 509.53 161.62 B
5 10 Q
0.28 0.92 (CONDITIONAL_UPD) 63.65 148.62 B
0.28 0.92 (A) 171.98 148.62 B
0.28 0.92 (TE_MEMOR) 178.37 148.62 B
0.28 0.92 (Y) 241.85 148.62 B
2 11 Q
0.28 0.92 (\051 and access to thread v) 249.44 148.62 B
0.28 0.92 (ariables \050) 375.43 148.62 B
5 10 Q
0.28 0.92 (READ_THREAD) 425.48 148.62 B
2 11 Q
0.28 0.92 ( and) 509.99 148.62 B
5 10 Q
(WRITE_THREAD) 63.65 135.62 T
2 11 Q
(\051.) 142.54 135.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 54
%%Page: "49" 55
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(49) 520.53 84.9 T
(5.2.1) 63.65 738.29 T
(Atomic V) 90.89 738.29 T
(ariab) 133.63 738.29 T
(le Access) 157.43 738.29 T
5 F
(READ_ATOMIC) 63.65 711.29 T
2 11 Q
([T) 497.21 710.62 T
(ok) 506.71 710.62 T
(en]) 517.6 710.62 T
1 F
(Signatur) 81.65 685.62 T
(e) 119.14 685.62 T
(var) 171.93 666.62 T
2 F
(:) 186.59 666.62 T
5 10 Q
(EXP ~ptr_v) 207.65 666.62 T
(oid) 258.26 666.62 T
6 11 Q
(\256) 189.59 651.29 T
5 10 Q
(EXP pz) 207.65 651.29 T
(WRITE_ATOMIC) 63.65 624.29 T
2 11 Q
([T) 497.21 623.62 T
(ok) 506.71 623.62 T
(en]) 517.6 623.62 T
1 F
(Signatur) 81.65 598.62 T
(e) 119.14 598.62 T
(var) 171.93 579.62 T
2 F
(:) 186.59 579.62 T
5 10 Q
(EXP ~ptr_v) 207.65 579.62 T
(oid) 258.26 579.62 T
1 11 Q
(ne) 155.59 566.62 T
(wval) 165.81 566.62 T
2 F
(:) 186.59 566.62 T
5 10 Q
(EXP pz) 207.65 566.62 T
6 11 Q
(\256) 189.59 551.29 T
5 10 Q
(EXP pz) 207.65 551.29 T
(CONDITIONAL_UPDATE_MEMORY) 63.65 524.29 T
2 11 Q
([T) 497.21 523.62 T
(ok) 506.71 523.62 T
(en]) 517.6 523.62 T
1 F
(Signatur) 81.65 498.62 T
(e) 119.14 498.62 T
(location) 150.53 479.62 T
2 F
(:) 186.59 479.62 T
5 10 Q
(EXP ~ptr_v) 207.65 479.62 T
(oid) 258.26 479.62 T
1 11 Q
(ne) 155.59 466.62 T
(wval) 165.81 466.62 T
2 F
(:) 186.59 466.62 T
5 10 Q
(EXP pz) 207.65 466.62 T
1 11 Q
(oldval) 159.09 453.62 T
2 F
(:) 186.59 453.62 T
5 10 Q
(EXP pz) 207.65 453.62 T
6 11 Q
(\256) 189.59 438.29 T
5 10 Q
(EXP pz) 207.65 438.29 T
3 F
(5.2.2) 63.65 404.29 T
(Thread V) 90.89 404.29 T
(ariab) 133.08 404.29 T
(les) 156.88 404.29 T
5 F
(READ_THREAD) 63.65 377.29 T
2 11 Q
([T) 497.21 376.62 T
(ok) 506.71 376.62 T
(en]) 517.6 376.62 T
1 F
(Signatur) 81.65 351.62 T
(e) 119.14 351.62 T
(variable_handle) 114.49 332.62 T
2 F
(:) 186.59 332.62 T
5 10 Q
(EXP ~ptr_v) 207.65 332.62 T
(oid) 258.26 332.62 T
6 11 Q
(\256) 189.59 317.29 T
5 10 Q
(EXP pz) 207.65 317.29 T
(WRITE_THREAD) 63.65 290.29 T
2 11 Q
([T) 497.21 289.62 T
(ok) 506.71 289.62 T
(en]) 517.6 289.62 T
1 F
(Signatur) 81.65 264.62 T
(e) 119.14 264.62 T
(variable_handle) 114.49 245.62 T
2 F
(:) 186.59 245.62 T
5 10 Q
(EXP ~ptr_v) 207.65 245.62 T
(oid) 258.26 245.62 T
1 11 Q
(ne) 155.59 232.62 T
(wval) 165.81 232.62 T
2 F
(:) 186.59 232.62 T
5 10 Q
(EXP pz) 207.65 232.62 T
6 11 Q
(\256) 189.59 217.29 T
5 10 Q
(EXP pz) 207.65 217.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "49" 55
%%Page: "50" 56
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(50) 63.65 84.9 T
3 15 Q
(6.) 63.65 734.95 T
(Solaris Runtime Implementation) 90.65 734.95 T
3 12 Q
(6.1) 63.65 695.95 T
(Expansion of ANDF T) 90.65 695.95 T
(okens Corresponding to Primitives) 212.36 695.95 T
2 11 Q
-0.27 (In the Solaris runtime,.there is a direct correspondence between ANDF tok) 63.65 670.62 P
-0.27 (ens that represent primiti) 390.18 670.62 P
-0.27 (v) 498.78 670.62 P
-0.27 (es and) 504.12 670.62 P
0.13 (C functions that implement Dylan thread support for Solaris. Each ANDF tok) 63.65 657.62 P
0.13 (en e) 406.52 657.62 P
0.13 (xpands into a call, using) 424.5 657.62 P
0 F
0.28 0.01 (apply_pr) 63.65 644.62 B
0.28 0.01 (oc) 106.29 644.62 B
2 F
0.28 0.01 (, to the run-time routine that actually implements the functionality of the primiti) 116.69 644.62 B
0.28 0.01 (v) 471.92 644.62 B
0.28 0.01 (e def) 477.26 644.62 B
0.28 0.01 (ined by) 498.64 644.62 B
(the portability interf) 63.65 631.62 T
(ace.) 152.14 631.62 T
3 10 Q
(6.1.1) 63.65 597.29 T
(Threads) 90.89 597.29 T
5 F
(PRIM_MAKE_THREAD) 63.65 570.29 T
2 11 Q
([T) 497.21 569.62 T
(ok) 506.71 569.62 T
(en]) 517.6 569.62 T
1 F
(Expansion) 81.65 544.62 T
0 F
(\050apply_pr) 99.65 525.62 T
(oc pz \050obtain_tag primiti) 145.9 525.62 T
(v) 262.21 525.62 T
(e_mak) 267.6 525.62 T
(e_thr) 298.65 525.62 T
(ead\051 thr) 323.5 525.62 T
(ead_object name priority) 360.88 525.62 T
(function\051) 121.25 512.62 T
5 10 Q
(PRIM_DESTROY_THREAD) 63.65 485.29 T
2 11 Q
([T) 497.21 484.62 T
(ok) 506.71 484.62 T
(en]) 517.6 484.62 T
1 F
(Expansion) 81.65 459.62 T
0 F
(\050apply_pr) 99.65 440.62 T
(oc pz \050obtain_tag primiti) 145.9 440.62 T
(v) 262.21 440.62 T
(e_destr) 267.6 440.62 T
(oy_thr) 301.61 440.62 T
(ead\051 thr) 332.57 440.62 T
(ead_handle\051) 369.95 440.62 T
5 10 Q
(PRIM_INITIALIZE_CURRENT_THREAD) 63.65 413.29 T
2 11 Q
([T) 497.21 412.62 T
(ok) 506.71 412.62 T
(en]) 517.6 412.62 T
1 F
(Expansion) 81.65 387.62 T
0 F
(\050apply_pr) 99.65 368.62 T
(oc pz \050obtain_tag primiti) 145.9 368.62 T
(v) 262.21 368.62 T
(e_initialize_curr) 267.6 368.62 T
(ent_thr) 344.39 368.62 T
(ead\051 thr) 379.02 368.62 T
(ead\051) 416.39 368.62 T
5 10 Q
(PRIM_THREAD_JOIN_SINGLE) 63.65 341.29 T
2 11 Q
([T) 497.21 340.62 T
(ok) 506.71 340.62 T
(en]) 517.6 340.62 T
1 F
(Expansion) 81.65 315.62 T
0 F
(\050apply_pr) 99.65 296.62 T
(oc pz \050obtain_tag primiti) 145.9 296.62 T
(v) 262.21 296.62 T
(e_thr) 267.6 296.62 T
(ead_join_single\051 thr) 292.45 296.62 T
(ead_handle\051) 386.05 296.62 T
5 10 Q
(PRIM_THREAD_JOIN_MULTIPLE) 63.65 269.29 T
2 11 Q
([T) 497.21 268.62 T
(ok) 506.71 268.62 T
(en]) 517.6 268.62 T
1 F
(Expansion) 81.65 243.62 T
0 F
(\050apply_pr) 99.65 224.62 T
(oc pz \050obtain_tag primiti) 145.9 224.62 T
(v) 262.21 224.62 T
(e_thr) 267.6 224.62 T
(ead_join_multiple\051 thr) 292.45 224.62 T
(ead_list\051) 398.28 224.62 T
5 10 Q
(PRIM_THREAD_YIELD) 63.65 197.29 T
2 11 Q
([T) 497.21 196.62 T
(ok) 506.71 196.62 T
(en]) 517.6 196.62 T
1 F
(Expansion) 81.65 171.62 T
0 F
(\050apply_pr) 99.65 152.62 T
(oc pz \050obtain_tag primiti) 145.9 152.62 T
(v) 262.21 152.62 T
(e_thr) 267.6 152.62 T
(ead_yield\051\051) 292.45 152.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "50" 56
%%Page: "51" 57
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(51) 520.53 84.9 T
5 F
(PRIM_CURRENT_THREAD) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Expansion) 81.65 712.62 T
0 F
(\050apply_pr) 99.65 693.62 T
(oc ~ptr_v) 145.9 693.62 T
(oid \050obtain_tag primiti) 190.31 693.62 T
(v) 297.15 693.62 T
(e_curr) 302.54 693.62 T
(ent_thr) 333.5 693.62 T
(ead\051\051) 368.12 693.62 T
3 10 Q
(6.1.2) 63.65 659.29 T
(Simple Loc) 90.89 659.29 T
(ks) 144.04 659.29 T
5 F
(PRIM_MAKE_SIMPLE_LOCK) 63.65 632.29 T
2 11 Q
([T) 497.21 631.62 T
(ok) 506.71 631.62 T
(en]) 517.6 631.62 T
1 F
(Expansion) 81.65 606.62 T
0 F
(\050apply_pr) 99.65 587.62 T
(oc pz \050obtain_tag primiti) 145.9 587.62 T
(v) 262.21 587.62 T
(e_mak) 267.6 587.62 T
(e_simple_lock\051 lock name\051) 298.65 587.62 T
5 10 Q
(PRIM_DESTROY_SIMPLE_LOCK) 63.65 560.29 T
2 11 Q
([T) 497.21 559.62 T
(ok) 506.71 559.62 T
(en]) 517.6 559.62 T
1 F
(Expansion) 81.65 534.62 T
0 F
(\050apply_pr) 99.65 515.62 T
(oc pz \050obtain_tag primiti) 145.9 515.62 T
(v) 262.21 515.62 T
(e_destr) 267.6 515.62 T
(oy_simple_lock\051 lock_handle\051) 301.61 515.62 T
5 10 Q
(PRIM_WAIT_FOR_SIMPLE_LOCK) 63.65 488.29 T
2 11 Q
([T) 497.21 487.62 T
(ok) 506.71 487.62 T
(en]) 517.6 487.62 T
1 F
(Expansion) 81.65 462.62 T
0 F
(\050apply_pr) 99.65 443.62 T
(oc pz \050obtain_tag primiti) 145.9 443.62 T
(v) 262.21 443.62 T
(e_wait_f) 267.6 443.62 T
(or_simple_lock\051 lock\051) 307.03 443.62 T
5 10 Q
(PRIM_WAIT_FOR_SIMPLE_LOCK_TIMED) 63.65 416.29 T
2 11 Q
([T) 497.21 415.62 T
(ok) 506.71 415.62 T
(en]) 517.6 415.62 T
1 F
(Expansion) 81.65 390.62 T
0 F
(\050apply_pr) 99.65 371.62 T
(oc pz \050obtain_tag primiti) 145.9 371.62 T
(v) 262.21 371.62 T
(e_wait_f) 267.6 371.62 T
(or_simple_lock_timed\051 lock timeout\051) 307.03 371.62 T
5 10 Q
(PRIM_RELEASE_SIMPLE_LOCK) 63.65 344.29 T
2 11 Q
([T) 497.21 343.62 T
(ok) 506.71 343.62 T
(en]) 517.6 343.62 T
1 F
(Expansion) 81.65 318.62 T
0 F
(\050apply_pr) 99.65 299.62 T
(oc pz \050obtain_tag primiti) 145.9 299.62 T
(v) 262.21 299.62 T
(e_r) 267.6 299.62 T
(elease_simple_lock\051 lock\051) 282.67 299.62 T
5 10 Q
(PRIM_OWNED_SIMPLE_LOCK) 63.65 272.29 T
2 11 Q
([T) 497.21 271.62 T
(ok) 506.71 271.62 T
(en]) 517.6 271.62 T
1 F
(Expansion) 81.65 246.62 T
0 F
(\050apply_pr) 99.65 227.62 T
(oc pz \050obtain_tag primiti) 145.9 227.62 T
(v) 262.21 227.62 T
(e_o) 267.6 227.62 T
(wned_simple_lock\051 lock_handle\051) 283.37 227.62 T
3 10 Q
(6.1.3) 63.65 193.29 T
(Recur) 90.89 193.29 T
(sive Loc) 119.08 193.29 T
(ks) 158.9 193.29 T
5 F
(PRIM_MAKE_RECURSIVE_LOCK) 63.65 166.29 T
2 11 Q
([T) 497.21 165.62 T
(ok) 506.71 165.62 T
(en]) 517.6 165.62 T
1 F
(Expansion) 81.65 140.62 T
0 F
(\050apply_pr) 99.65 121.62 T
(oc pz \050obtain_tag primiti) 145.9 121.62 T
(v) 262.21 121.62 T
(e_mak) 267.6 121.62 T
(e_r) 298.65 121.62 T
(ecursi) 313.72 121.62 T
(v) 341.71 121.62 T
(e_lock\051 lock name\051) 347.1 121.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "51" 57
%%Page: "52" 58
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(52) 63.65 84.9 T
5 F
(PRIM_DESTROY_RECURSIVE_LOCK) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Expansion) 81.65 712.62 T
0 F
(\050apply_pr) 99.65 693.62 T
(oc pz \050obtain_tag primiti) 145.9 693.62 T
(v) 262.21 693.62 T
(e_destr) 267.6 693.62 T
(oy_r) 301.61 693.62 T
(ecursi) 322.79 693.62 T
(v) 350.79 693.62 T
(e_lock\051 lock_handle\051) 356.18 693.62 T
5 10 Q
(PRIM_WAIT_FOR_RECURSIVE_LOCK) 63.65 666.29 T
2 11 Q
([T) 497.21 665.62 T
(ok) 506.71 665.62 T
(en]) 517.6 665.62 T
1 F
(Expansion) 81.65 640.62 T
0 F
(\050apply_pr) 99.65 621.62 T
(oc pz \050obtain_tag primiti) 145.9 621.62 T
(v) 262.21 621.62 T
(e_wait_f) 267.6 621.62 T
(or_r) 307.03 621.62 T
(ecursi) 327.6 621.62 T
(v) 355.6 621.62 T
(e_lock\051 lock\051) 360.99 621.62 T
5 10 Q
(PRIM_WAIT_FOR_RECURSIVE_LOCK_TIMED) 63.65 594.29 T
2 11 Q
([T) 497.21 593.62 T
(ok) 506.71 593.62 T
(en]) 517.6 593.62 T
1 F
(Expansion) 81.65 568.62 T
0 F
(\050apply_pr) 99.65 549.62 T
(oc pz \050obtain_tag primiti) 145.9 549.62 T
(v) 262.21 549.62 T
(e_wait_f) 267.6 549.62 T
(or_r) 307.03 549.62 T
(ecursi) 327.6 549.62 T
(v) 355.6 549.62 T
(e_lock_timed\051 lock timeout\051) 360.99 549.62 T
5 10 Q
(PRIM_RELEASE_RECURSIVE_LOCK) 63.65 522.29 T
2 11 Q
([T) 497.21 521.62 T
(ok) 506.71 521.62 T
(en]) 517.6 521.62 T
1 F
(Expansion) 81.65 496.62 T
0 F
(\050apply_pr) 99.65 477.62 T
(oc pz \050obtain_tag primiti) 145.9 477.62 T
(v) 262.21 477.62 T
(e_r) 267.6 477.62 T
(elease_r) 282.67 477.62 T
(ecursi) 320.34 477.62 T
(v) 348.34 477.62 T
(e_lock\051 lock\051) 353.73 477.62 T
5 10 Q
(PRIM_OWNED_RECURSIVE_LOCK) 63.65 450.29 T
2 11 Q
([T) 497.21 449.62 T
(ok) 506.71 449.62 T
(en]) 517.6 449.62 T
1 F
(Expansion) 81.65 424.62 T
0 F
(\050apply_pr) 99.65 405.62 T
(oc pz \050obtain_tag primiti) 145.9 405.62 T
(v) 262.21 405.62 T
(e_o) 267.6 405.62 T
(wned_r) 283.37 405.62 T
(ecursi) 318.61 405.62 T
(v) 346.61 405.62 T
(e_lock\051 lock_handle\051) 352 405.62 T
3 10 Q
(6.1.4) 63.65 371.29 T
(Semaphores) 90.89 371.29 T
5 F
(PRIM_MAKE_SEMAPHORE) 63.65 344.29 T
2 11 Q
([T) 497.21 343.62 T
(ok) 506.71 343.62 T
(en]) 517.6 343.62 T
1 F
(Expansion) 81.65 318.62 T
0 F
(\050apply_pr) 99.65 299.62 T
(oc pz \050obtain_tag primiti) 145.9 299.62 T
(v) 262.21 299.62 T
(e_mak) 267.6 299.62 T
(e_semaphor) 298.65 299.62 T
(e\051 lock name initial max\051) 355.28 299.62 T
5 10 Q
(PRIM_DESTROY_SEMAPHORE) 63.65 272.29 T
2 11 Q
([T) 497.21 271.62 T
(ok) 506.71 271.62 T
(en]) 517.6 271.62 T
1 F
(Expansion) 81.65 246.62 T
0 F
(\050apply_pr) 99.65 227.62 T
(oc pz \050obtain_tag primiti) 145.9 227.62 T
(v) 262.21 227.62 T
(e_destr) 267.6 227.62 T
(oy_semaphor) 301.61 227.62 T
(e\051 lock_handle\051) 364.35 227.62 T
5 10 Q
(PRIM_WAIT_FOR_SEMAPHORE) 63.65 200.29 T
2 11 Q
([T) 497.21 199.62 T
(ok) 506.71 199.62 T
(en]) 517.6 199.62 T
1 F
(Expansion) 81.65 174.62 T
0 F
(\050apply_pr) 99.65 155.62 T
(oc pz \050obtain_tag primiti) 145.9 155.62 T
(v) 262.21 155.62 T
(e_wait_f) 267.6 155.62 T
(or_semaphor) 307.03 155.62 T
(e\051 lock\051) 369.16 155.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "52" 58
%%Page: "53" 59
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(53) 520.53 84.9 T
5 F
(PRIM_WAIT_FOR_SEMAPHORE_TIMED) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Expansion) 81.65 712.62 T
0 F
(\050apply_pr) 99.65 693.62 T
(oc pz \050obtain_tag primiti) 145.9 693.62 T
(v) 262.21 693.62 T
(e_wait_f) 267.6 693.62 T
(or_semaphor) 307.03 693.62 T
(e_timed\051 lock timeout\051) 369.16 693.62 T
5 10 Q
(PRIM_RELEASE_SEMAPHORE) 63.65 666.29 T
2 11 Q
([T) 497.21 665.62 T
(ok) 506.71 665.62 T
(en]) 517.6 665.62 T
1 F
(Expansion) 81.65 640.62 T
0 F
(\050apply_pr) 99.65 621.62 T
(oc pz \050obtain_tag primiti) 145.9 621.62 T
(v) 262.21 621.62 T
(e_r) 267.6 621.62 T
(elease_semaphor) 282.67 621.62 T
(e\051 lock\051) 361.9 621.62 T
3 10 Q
(6.1.5) 63.65 587.29 T
(Noti\336cations) 90.89 587.29 T
5 F
(PRIM_MAKE_NOTIFICATION) 63.65 560.29 T
2 11 Q
([T) 497.21 559.62 T
(ok) 506.71 559.62 T
(en]) 517.6 559.62 T
1 F
(Expansion) 81.65 534.62 T
0 F
(\050apply_pr) 99.65 515.62 T
(oc pz \050obtain_tag primiti) 145.9 515.62 T
(v) 262.21 515.62 T
(e_mak) 267.6 515.62 T
(e_noti\336cation\051 noti\336cation name\051) 298.65 515.62 T
5 10 Q
(PRIM_DESTROY_NOTIFICATION) 63.65 488.29 T
2 11 Q
([T) 497.21 487.62 T
(ok) 506.71 487.62 T
(en]) 517.6 487.62 T
1 F
(Expansion) 81.65 462.62 T
0 F
(\050apply_pr) 99.65 443.62 T
(oc pz \050obtain_tag primiti) 145.9 443.62 T
(v) 262.21 443.62 T
(e_destr) 267.6 443.62 T
(oy_noti\336cation\051 noti\336cation_handle\051) 301.61 443.62 T
5 10 Q
(PRIM_WAIT_FOR_NOTIFICATION) 63.65 416.29 T
2 11 Q
([T) 497.21 415.62 T
(ok) 506.71 415.62 T
(en]) 517.6 415.62 T
1 F
(Expansion) 81.65 390.62 T
0 F
(\050apply_pr) 99.65 371.62 T
(oc pz \050obtain_tag primiti) 145.9 371.62 T
(v) 262.21 371.62 T
(e_wait_f) 267.6 371.62 T
(or_noti\336cation\051 noti\336cation lock\051) 307.03 371.62 T
5 10 Q
(PRIM_WAIT_FOR_NOTIFICATION_TIMED) 63.65 344.29 T
2 11 Q
([T) 497.21 343.62 T
(ok) 506.71 343.62 T
(en]) 517.6 343.62 T
1 F
(Expansion) 81.65 318.62 T
0 F
(\050apply_pr) 99.65 299.62 T
(oc pz \050obtain_tag primiti) 145.9 299.62 T
(v) 262.21 299.62 T
(e_wait_f) 267.6 299.62 T
(or_noti\336cation_timed\051) 307.03 299.62 T
(noti\336cation lock timeout\051) 121.25 286.62 T
5 10 Q
(PRIM_RELEASE_NOTIFICATION) 63.65 259.29 T
2 11 Q
([T) 497.21 258.62 T
(ok) 506.71 258.62 T
(en]) 517.6 258.62 T
1 F
(Expansion) 81.65 233.62 T
0 F
(\050apply_pr) 99.65 214.62 T
(oc pz \050obtain_tag primiti) 145.9 214.62 T
(v) 262.21 214.62 T
(e_r) 267.6 214.62 T
(elease_noti\336cation\051 noti\336cation lock\051) 282.67 214.62 T
5 10 Q
(PRIM_RELEASE_ALL_NOTIFICATION) 63.65 187.29 T
2 11 Q
([T) 497.21 186.62 T
(ok) 506.71 186.62 T
(en]) 517.6 186.62 T
1 F
(Expansion) 81.65 161.62 T
0 F
(\050apply_pr) 99.65 142.62 T
(oc pz \050obtain_tag primiti) 145.9 142.62 T
(v) 262.21 142.62 T
(e_r) 267.6 142.62 T
(elease_all_noti\336cation\051 noti\336cation\051) 282.67 142.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "53" 59
%%Page: "54" 60
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(54) 63.65 84.9 T
(6.1.6) 63.65 738.29 T
(Timer) 90.89 738.29 T
(s) 117.97 738.29 T
5 F
(PRIM_SLEEP) 63.65 711.29 T
2 11 Q
([T) 497.21 710.62 T
(ok) 506.71 710.62 T
(en]) 517.6 710.62 T
1 F
(Expansion) 81.65 685.62 T
0 F
(\050apply_pr) 99.65 666.62 T
(oc pz \050obtain_tag primiti) 145.9 666.62 T
(v) 262.21 666.62 T
(e_sleep\051 millisecs\051) 267.6 666.62 T
3 10 Q
(6.1.7) 63.65 632.29 T
(Thread V) 90.89 632.29 T
(ariab) 133.08 632.29 T
(les) 156.88 632.29 T
5 F
(PRIM_ALLOCATE_THREAD_VARIABLE) 63.65 605.29 T
2 11 Q
([T) 497.21 604.62 T
(ok) 506.71 604.62 T
(en]) 517.6 604.62 T
1 F
(Expansion) 81.65 579.62 T
0 F
(\050apply_pr) 99.65 560.62 T
(oc ~ptr_v) 145.9 560.62 T
(oid \050obtain_tag primiti) 190.31 560.62 T
(v) 297.15 560.62 T
(e_allocate_thr) 302.54 560.62 T
(ead_v) 368.94 560.62 T
(ariable\051 initial_v) 396.33 560.62 T
(alue\051) 474.14 560.62 T
3 12 Q
(6.2) 63.65 522.95 T
(Expansion of ANDF T) 90.65 522.95 T
(okens Suppor) 212.36 522.95 T
(ting Atomic and Fluid V) 292.62 522.95 T
(ariab) 425.92 522.95 T
(les) 454.48 522.95 T
2 11 Q
-0.15 (Most uses of ANDF tok) 63.65 501.62 P
-0.15 (ens that represent access to atomic v) 168.66 501.62 P
-0.15 (ariables and thread v) 327.55 501.62 P
-0.15 (ariables e) 418.16 501.62 P
-0.15 (xpand to calls to) 459.69 501.62 P
0.28 0.01 (C functions that implement the associated operations. The e) 63.65 488.62 B
0.28 0.01 (xception is) 329.17 488.62 B
5 10 Q
0.28 0.01 (READ_A) 380.53 488.62 B
0.28 0.01 (T) 419.39 488.62 B
0.28 0.01 (OMIC) 425.11 488.62 B
2 11 Q
0.28 0.01 (, which represents) 451.24 488.62 B
0.03 (reading an atomic v) 63.65 475.62 P
0.03 (ariable. This tok) 150.52 475.62 P
0.03 (en e) 222.27 475.62 P
0.03 (xpands to a simple v) 240.15 475.62 P
0.03 (ariable read, which in Solaris is guaranteed to) 330.43 475.62 P
(be atomic. This section lists e) 63.65 462.62 T
(xpansions of the remaining tok) 193.65 462.62 T
(ens that support atomic and thread v) 329.8 462.62 T
(ariables.) 489.01 462.62 T
3 10 Q
(6.2.1) 63.65 428.29 T
(Atomic V) 90.89 428.29 T
(ariab) 133.63 428.29 T
(le Access) 157.43 428.29 T
5 F
(WRITE_ATOMIC) 63.65 401.29 T
2 11 Q
([T) 497.21 400.62 T
(ok) 506.71 400.62 T
(en]) 517.6 400.62 T
1 F
(Expansion) 81.65 375.62 T
0 F
(\050apply_pr) 99.65 356.62 T
(oc pz \050obtain_tag primiti) 145.9 356.62 T
(v) 262.21 356.62 T
(e_assign_atomic_memory\051 location newv) 267.6 356.62 T
(al\051) 459.35 356.62 T
5 10 Q
(CONDITIONAL_UPDATE_MEMORY) 63.65 329.29 T
2 11 Q
([T) 497.21 328.62 T
(ok) 506.71 328.62 T
(en]) 517.6 328.62 T
1 F
(Expansion) 81.65 303.62 T
0 F
(\050apply_pr) 99.65 284.62 T
(oc pz \050obtain_tag primiti) 145.9 284.62 T
(v) 262.21 284.62 T
(e_conditional_update_memory\051 location newv) 267.6 284.62 T
(al) 483.81 284.62 T
(oldv) 121.25 271.62 T
(al\051) 141.31 271.62 T
3 10 Q
(6.2.2) 63.65 237.29 T
(Thread V) 90.89 237.29 T
(ariab) 133.08 237.29 T
(les) 156.88 237.29 T
5 F
(READ_THREAD) 63.65 210.29 T
2 11 Q
([T) 497.21 209.62 T
(ok) 506.71 209.62 T
(en]) 517.6 209.62 T
1 F
(Expansion) 81.65 184.62 T
0 F
(\050apply_pr) 99.65 165.62 T
(oc pz \050obtain_tag primiti) 145.9 165.62 T
(v) 262.21 165.62 T
(e_r) 267.6 165.62 T
(ead_thr) 282.67 165.62 T
(ead_v) 319.13 165.62 T
(ariable\051 v) 346.52 165.62 T
(ariable_handle\051) 391.32 165.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "54" 60
%%Page: "55" 61
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(55) 520.53 84.9 T
5 F
(WRITE_THREAD) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Expansion) 81.65 712.62 T
0 F
(\050apply_pr) 99.65 693.62 T
(oc pz \050obtain_tag primiti) 145.9 693.62 T
(v) 262.21 693.62 T
(e_write_thr) 267.6 693.62 T
(ead_v) 322.38 693.62 T
(ariable\051 v) 349.77 693.62 T
(ariable_handle, newv) 394.57 693.62 T
(al\051) 494.69 693.62 T
3 12 Q
(6.3) 63.65 655.95 T
(Solaris Runtime Primitive Ref) 90.65 655.95 T
(erence) 258.58 655.95 T
3 10 Q
(6.3.1) 63.65 621.29 T
(Threads) 90.89 621.29 T
0 11 Q
(primitive_make_thread) 63.65 592.62 T
2 F
([Function]) 485.21 592.62 T
1 F
(Signatur) 81.65 567.62 T
(e) 119.14 567.62 T
0 F
(v) 99.65 548.62 T
(oid primiti) 105.04 548.62 T
(v) 155.35 548.62 T
(e_mak) 160.74 548.62 T
(e_thr) 191.79 548.62 T
(ead \050D_THREAD* thr) 216.64 548.62 T
(ead, D_N) 322.77 548.62 T
(AME name, ZINT priority) 365.94 548.62 T
(,) 491.21 548.62 T
(ZFN function\051;) 121.25 535.62 T
1 F
(Implementation) 81.65 510.62 T
2 F
0.28 0.02 (The primiti) 99.65 488.62 B
0.28 0.02 (v) 149.69 488.62 B
0.28 0.02 (e starts a ne) 155.05 488.62 B
0.28 0.02 (w Solaris thread, and causes it to call the supplied Dylan function. T) 207.5 488.62 B
0.28 0.02 (o do) 512.06 488.62 B
0.28 0.05 (this, it f) 99.65 475.62 B
0.28 0.05 (irst stores the Dylan function in one of the) 133.98 475.62 B
0 F
0.28 0.05 (D_THREAD) 327.05 475.62 B
2 F
0.28 0.05 ( container slots \050because Solaris) 387.92 475.62 B
0.28 0.11 (does not allo) 99.65 462.62 B
0.28 0.11 (w for passing multiple parameters at thread creation time\051. It then calls the Solaris) 157.59 462.62 B
0.28 0.08 (function) 99.65 449.62 B
0 F
0.28 0.08 (thr_cr) 140.04 449.62 B
0.28 0.08 (eate) 170.24 449.62 B
2 F
0.28 0.08 ( passing it, among other ar) 189.49 449.62 B
0.28 0.08 (guments, a C function to call named) 309.49 449.62 B
0 F
0.28 0.08 (trampoline,) 476.17 449.62 B
2 F
0.28 0.03 (and the) 99.65 436.62 B
0 F
0.28 0.03 (D_THREAD) 135.25 436.62 B
2 F
0.28 0.03 ( Dylan thread object.) 195.97 436.62 B
0 F
0.28 0.03 (thr_cr) 292.68 436.62 B
0.28 0.03 (eate) 322.58 436.62 B
2 F
0.28 0.03 ( starts the ne) 341.62 436.62 B
0.28 0.03 (w thread which calls) 397.86 436.62 B
0 F
0.28 0.03 (trampo-) 493.02 436.62 B
(line) 99.65 423.62 T
2 F
( with the thread object as an ar) 116.76 423.62 T
(gument.) 251.28 423.62 T
0.28 0.62 (The) 99.65 401.62 B
0 F
0.28 0.62 (trampoline) 122.26 401.62 B
2 F
0.28 0.62 ( function f) 180.41 401.62 B
0.28 0.62 (irst retrie) 233.01 401.62 B
0.28 0.62 (v) 279.85 401.62 B
0.28 0.62 (es the function object in the container slot of the) 285.81 401.62 B
0 F
0.28 0.02 (D_THREAD) 99.65 388.62 B
2 F
0.28 0.02 ( object. It then initialises the data structures used to implement) 160.33 388.62 B
0 F
0.28 0.02 (join-thr) 442.9 388.62 B
0.28 0.02 (ead) 479.55 388.62 B
2 F
0.28 0.02 ( and the) 496.11 388.62 B
0.28 0.06 (thread-local v) 99.65 375.62 B
0.28 0.06 (ariables, and it modif) 161.32 375.62 B
0.28 0.06 (ies the container slots of the thread) 256.41 375.62 B
0.28 0.06 (object. It then uses Dylan) 416.85 375.62 B
0.28 0.07 (con) 99.65 362.62 B
0.28 0.07 (v) 115.31 362.62 B
0.28 0.07 (entions to call the function object with no ar) 120.71 362.62 B
0.28 0.07 (guments. When the Dylan function returns, the) 320.32 362.62 B
(thread is potentially ready for joining, so) 99.65 349.62 T
0 F
(trampoline) 281.74 349.62 T
2 F
( updates some data structures and e) 333.68 349.62 T
(xits.) 488.71 349.62 T
0.28 0.14 (Dylan threads are implemented as) 99.65 327.62 B
1 F
0.28 0.14 (unbound) 258.13 327.62 B
2 F
0.28 0.14 ( threads \050i.e., the) 297.62 327.62 B
0.28 0.14 (y are not bound to a specif) 374.29 327.62 B
0.28 0.14 (ic light-) 495.85 327.62 B
0.28 0.08 (weight process\051. This means that the operating system does not guarantee to honour the priority) 99.65 314.62 B
(le) 99.65 301.62 T
(v) 107.32 301.62 T
(els for a thread, e) 112.65 301.62 T
(v) 188.43 301.62 T
(en though the) 193.76 301.62 T
(y are set by the primiti) 253.48 301.62 T
(v) 352.51 301.62 T
(e.) 357.84 301.62 T
(The) 99.65 279.62 T
0 F
(name) 119.5 279.62 T
2 F
( and) 145.17 279.62 T
0 F
(function) 166.55 279.62 T
2 F
( ar) 205.67 279.62 T
(guments are ignored.) 216.76 279.62 T
0 F
(primitive_destroy_thread) 63.65 250.62 T
2 F
([Function]) 485.21 250.62 T
1 F
(Signatur) 81.65 225.62 T
(e) 119.14 225.62 T
0 F
(v) 99.65 206.62 T
(oid primiti) 105.04 206.62 T
(v) 155.35 206.62 T
(e_destr) 160.74 206.62 T
(oy_thr) 194.75 206.62 T
(ead \050D_THREAD* thr) 225.72 206.62 T
(ead\051;) 331.85 206.62 T
1 F
(Implementation) 81.65 181.62 T
2 F
-0.07 (This function is designed to free an) 99.65 159.62 P
-0.07 (y runtime-allocated memory associated with the creation of the) 254.24 159.62 P
0.28 0.04 (Solaris thread object. Ho) 99.65 146.62 B
0.28 0.04 (we) 210.66 146.62 B
0.28 0.04 (v) 223.3 146.62 B
0.28 0.04 (er) 228.68 146.62 B
0.28 0.04 (, Solaris thread handles are represented as inte) 236.88 146.62 B
0.28 0.04 (gers and there is no) 444.18 146.62 B
(allocated memory to free. The function thus does nothing.) 99.65 133.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "55" 61
%%Page: "56" 62
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(56) 63.65 84.9 T
0 11 Q
(primitive_initialize_current_thread) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(v) 99.65 693.62 T
(oid primiti) 105.04 693.62 T
(v) 155.35 693.62 T
(e_initialize_curr) 160.74 693.62 T
(ent_thr) 237.53 693.62 T
(ead \050D_THREAD* thr) 272.16 693.62 T
(ead\051;) 378.29 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
0.28 0.06 (This function is used to initialize the f) 99.65 646.62 B
0.28 0.06 (irst thread, which is not created by the Dylan runtime sys-) 270.48 646.62 B
0.28 0.01 (tem. The container slots in the Dylan thread object are destructi) 99.65 633.62 B
0.28 0.01 (v) 382.46 633.62 B
0.28 0.01 (ely modif) 387.81 633.62 B
0.28 0.01 (ied with the handles of) 430.06 633.62 B
0.28 0.05 (the current Solaris thread, and the data structures used to implement) 99.65 620.62 B
0 F
0.28 0.05 (join-thr) 407.88 620.62 B
0.28 0.05 (ead) 444.73 620.62 B
2 F
0.28 0.05 ( and the thread-) 461.37 620.62 B
0.2 (local v) 99.65 607.62 P
0.2 (ariables are initialized. This initialization is equi) 129.21 607.62 P
0.2 (v) 342.5 607.62 P
0.2 (alent to that performed in the) 347.73 607.62 P
0 F
0.2 (trampoline) 479.7 607.62 P
2 F
(function, for threads created with) 99.65 594.62 T
0 F
(primiti) 248.72 594.62 T
(v) 281.61 594.62 T
(e_mak) 287 594.62 T
(e_thr) 318.05 594.62 T
(ead) 342.9 594.62 T
2 F
(.) 359.4 594.62 T
0 F
(primitive_thread_join_single) 63.65 565.62 T
2 F
([Function]) 485.21 565.62 T
1 F
(Signatur) 81.65 540.62 T
(e) 119.14 540.62 T
0 F
(ZINT primiti) 99.65 521.62 T
(v) 162.18 521.62 T
(e_thr) 167.57 521.62 T
(ead_join_single \050D_THREAD* thr) 192.42 521.62 T
(ead\051;) 354.78 521.62 T
1 F
(Implementation) 81.65 496.62 T
2 F
0.28 0 (This function blocks until the supplied Dylan thread object has f) 99.65 474.62 B
0.28 0 (inished e) 384.99 474.62 B
0.28 0 (x) 424.55 474.62 B
0.28 0 (ecution. The semantics) 429.89 474.62 B
0.28 0.2 (are similar to the Solaris function) 99.65 461.62 B
0 F
0.28 0.2 (thr_join) 258.05 461.62 B
2 F
0.28 0.2 (, e) 298.12 461.62 B
0.28 0.2 (xcept that joining of threads which ha) 309.2 461.62 B
0.28 0.2 (v) 484.27 461.62 B
0.28 0.2 (e already) 489.8 461.62 B
0.28 0.09 (e) 99.65 448.62 B
0.28 0.09 (xited is permitted. The) 104.46 448.62 B
0 F
0.28 0.09 (handle2) 210.08 448.62 B
2 F
0.28 0.09 ( f) 248 448.62 B
0.28 0.09 (ield of the) 254.27 448.62 B
0 F
0.28 0.09 (D_THREAD) 303.53 448.62 B
2 F
0.28 0.09 ( thread object is used to maintain the) 364.76 448.62 B
(state information necessary to support this, and contains one of three states:) 99.65 435.62 T
3 9 Q
(1.) 99.65 416.62 T
0 11 Q
(Normal) 113.4 416.62 T
2 F
(: The thread is still running. Set by) 149.45 416.62 T
0 F
(trampoline) 304.98 416.62 T
2 F
( \050via) 356.92 416.62 T
0 F
(primiti) 379.52 416.62 T
(v) 412.41 416.62 T
(e_mak) 417.8 416.62 T
(e_thr) 448.86 416.62 T
(ead) 473.7 416.62 T
2 F
(\051 before) 490.2 416.62 T
(calling the Dylan function.) 113.4 404.62 T
3 9 Q
(2.) 99.65 385.62 T
0 11 Q
(Mark) 113.4 385.62 T
(ed) 140.17 385.62 T
2 F
(: The thread has \336nished, b) 151.17 385.62 T
(ut no join has yet been recorded. Set by) 270.11 385.62 T
0 F
(trampoline) 446.69 385.62 T
2 F
( after) 498.63 385.62 T
(the Dylan function has returned.) 113.4 373.62 T
3 9 Q
(3.) 99.65 354.62 T
0 11 Q
(J) 113.4 354.62 T
(oined) 118.74 354.62 T
2 F
(: At the Dylan le) 144.41 354.62 T
(v) 217.46 354.62 T
(el, a join has already occurred. Set by) 222.79 354.62 T
0 F
(primiti) 390.81 354.62 T
(v) 423.7 354.62 T
(e_thr) 429.09 354.62 T
(ead_join_single) 453.94 354.62 T
(and primiti) 113.4 342.62 T
(v) 166.77 342.62 T
(e_thr) 172.16 342.62 T
(ead_join_multiple.) 197.01 342.62 T
2 F
(Requesting another join on the same thread is a Dylan) 287.46 342.62 T
(error) 113.4 330.62 T
(.) 134.17 330.62 T
0.28 0.11 (The primiti) 99.65 309.62 B
0.28 0.11 (v) 150.66 309.62 B
0.28 0.11 (e f) 156.1 309.62 B
0.28 0.11 (irst checks the state of the specif) 167.4 309.62 B
0.28 0.11 (ied Dylan thread, to see whether it has f) 315.23 309.62 B
0.28 0.11 (inished.) 496.35 309.62 B
0.28 0.04 (The testing and updating of the state is carried out under the protection of a single mutual e) 99.65 296.62 B
0.28 0.04 (xclu-) 508.93 296.62 B
0.28 0.04 (sion lock. If the state is) 99.65 283.62 B
0 F
0.28 0.04 (Normal) 207.08 283.62 B
2 F
0.28 0.04 (, the lock is released and the) 243.34 283.62 B
0 F
0.28 0.04 (thr_join) 373.48 283.62 B
2 F
0.28 0.04 ( function is called to block) 412.27 283.62 B
0.28 0.01 (until the Dylan thread f) 99.65 270.62 B
0.28 0.01 (inishes; the state is then check) 202.99 270.62 B
0.28 0.01 (ed ag) 337.42 270.62 B
0.28 0.01 (ain. If the state is) 361.2 270.62 B
0 F
0.28 0.01 (Mark) 440.95 270.62 B
0.28 0.01 (ed) 467.76 270.62 B
2 F
0.28 0.01 (, the state is) 478.77 270.62 B
-0.25 (updated to) 99.65 257.62 P
0 F
-0.25 (J) 148.03 257.62 P
-0.25 (oined) 153.36 257.62 P
2 F
-0.25 (, the lock is released, and the primiti) 179.04 257.62 P
-0.25 (v) 336.79 257.62 P
-0.25 (e returns to indicate a successful join. If the) 342.12 257.62 P
(state is) 99.65 244.62 T
0 F
(J) 132.65 244.62 T
(oined) 137.98 244.62 T
2 F
(, the lock is released, and an error v) 163.66 244.62 T
(alue is returned.) 319.78 244.62 T
0 F
(primitive_thread_join_multiple) 63.65 215.62 T
2 F
([Function]) 485.21 215.62 T
1 F
(Signatur) 81.65 190.62 T
(e) 119.14 190.62 T
0 F
(Z primiti) 99.65 171.62 T
(v) 142.62 171.62 T
(e_thr) 148.01 171.62 T
(ead_join_multiple \050SO) 172.86 171.62 T
(V* thr) 278.35 171.62 T
(ead_v) 309.01 171.62 T
(ector\051;) 336.4 171.62 T
1 F
(Implementation) 81.65 146.62 T
2 F
0.28 0.75 (This primiti) 99.65 124.62 B
0.28 0.75 (v) 160.86 124.62 B
0.28 0.75 (e checks the state of all threads in its) 166.94 124.62 B
0 F
0.28 0.75 (SO) 364.06 124.62 B
0.28 0.75 (V) 379.67 124.62 B
2 F
0.28 0.75 ( v) 388.36 124.62 B
0.28 0.75 (ector in similar f) 398.21 124.62 B
0.28 0.75 (ashion to) 485.38 124.62 B
0 F
0.28 0.15 (primiti) 99.65 111.62 B
0.28 0.15 (v) 133.56 111.62 B
0.28 0.15 (e_thr) 139.1 111.62 B
0.28 0.15 (ead_join_single) 164.68 111.62 B
2 F
0.28 0.15 (. The primiti) 239.62 111.62 B
0.28 0.15 (v) 297.1 111.62 B
0.28 0.15 (e loops continually) 302.59 111.62 B
0.28 0.15 (, f) 388.93 111.62 B
0.28 0.15 (irst testing the state of all the) 398.2 111.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "56" 62
%%Page: "57" 63
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(57) 520.53 84.9 T
2 11 Q
0.28 0.08 (thread objects in) 99.65 737.62 B
0 F
0.28 0.08 (thr) 177.43 737.62 B
0.28 0.08 (ead_v) 192.14 737.62 B
0.28 0.08 (ector) 219.95 737.62 B
2 F
0.28 0.08 ( to see if an) 244.18 737.62 B
0.28 0.08 (y has f) 296.9 737.62 B
0.28 0.08 (inished, and then sleeping. The testing phase,) 326.75 737.62 B
0.28 0.63 (and an) 99.65 724.62 B
0.28 0.63 (y state updating, is performed under the protection of the same lock as used by) 132.55 724.62 B
0 F
(primiti) 99.65 711.62 T
(v) 132.54 711.62 T
(e_thr) 137.93 711.62 T
(ead_join_single) 162.78 711.62 T
2 F
(.) 235.51 711.62 T
0.28 0.09 (During the testing phase, if a) 99.65 689.62 B
0 F
0.28 0.09 (Mark) 234.01 689.62 B
0.28 0.09 (ed) 261.16 689.62 B
2 F
0.28 0.09 ( thread is found, then its state is set to) 272.34 689.62 B
0 F
0.28 0.09 (J) 447.43 689.62 B
0.28 0.09 (oined) 452.85 689.62 B
2 F
0.28 0.09 (, the lock is) 478.99 689.62 B
-0.12 (released, and the primiti) 99.65 676.62 P
-0.12 (v) 205.31 676.62 P
-0.12 (e returns to indicate a successful join. If a) 210.65 676.62 P
0 F
-0.12 (J) 395.26 676.62 P
-0.12 (oine) 400.59 676.62 P
2 F
-0.12 (d thread is found the lock) 420.15 676.62 P
(is released, and an error v) 99.65 663.62 T
(alue is returned.) 212.39 663.62 T
0.28 0.03 (If no) 99.65 641.62 B
0 F
0.28 0.03 (Mark) 124.18 641.62 B
0.28 0.03 (ed) 151.06 641.62 B
2 F
0.28 0.03 ( or) 162.11 641.62 B
0 F
0.28 0.03 (J) 177.43 641.62 B
0.28 0.03 (oined) 182.79 641.62 B
2 F
0.28 0.03 ( threads are found, then the primiti) 208.59 641.62 B
0.28 0.03 (v) 363.34 641.62 B
0.28 0.03 (e releases the lock, and then enters a) 368.7 641.62 B
0.05 (sleeping phase, by calling) 99.65 628.62 P
0 F
0.05 (primiti) 216.27 628.62 P
0.05 (v) 249.16 628.62 P
0.05 (e_sleep) 254.55 628.62 P
2 F
0.05 ( with an ar) 288.15 628.62 P
0.05 (gument of 10 milliseconds. Finally it repeats) 334.85 628.62 P
(the loop, in case the state of an) 99.65 615.62 T
(y of the threads has changed.) 235.12 615.62 T
0 F
(primitive_thread_yield) 63.65 586.62 T
2 F
([Function]) 485.21 586.62 T
1 F
(Signatur) 81.65 561.62 T
(e) 119.14 561.62 T
0 F
(v) 99.65 542.62 T
(oid primiti) 105.04 542.62 T
(v) 155.35 542.62 T
(e_thr) 160.74 542.62 T
(ead_yield \050v) 185.59 542.62 T
(oid\051;) 242.01 542.62 T
1 F
(Implementation) 81.65 517.62 T
2 F
(The Solaris) 99.65 495.62 T
0 F
(thr_yield) 152.81 495.62 T
2 F
( function is used directly) 195.59 495.62 T
(.) 303.64 495.62 T
0 F
(primitive_current_thread) 63.65 466.62 T
2 F
([Function]) 485.21 466.62 T
1 F
(Signatur) 81.65 441.62 T
(e) 119.14 441.62 T
0 F
(v) 99.65 422.62 T
(oid* primiti) 105.04 422.62 T
(v) 160.85 422.62 T
(e_curr) 166.24 422.62 T
(ent_thr) 197.2 422.62 T
(ead \050v) 231.82 422.62 T
(oid\051;) 260.13 422.62 T
1 F
(Implementation) 81.65 397.62 T
2 F
0.28 0.03 (The Solaris) 99.65 375.62 B
0 F
0.28 0.03 (thr_self) 153.67 375.62 B
2 F
0.28 0.03 ( function is used directly to return the Solaris identif) 189.92 375.62 B
0.28 0.03 (ier of the current thread.) 423.3 375.62 B
0.04 (This corresponds with the contents of the) 99.65 362.62 P
0 F
0.04 (handle1) 284.12 362.62 P
2 F
0.04 ( \336eld of one of the Dylan thread objects, kno) 321.42 362.62 P
0.04 (wn) 518.21 362.62 P
(to the Dylan library) 99.65 349.62 T
(.) 185.39 349.62 T
3 10 Q
(6.3.2) 63.65 315.29 T
(Simple Loc) 90.89 315.29 T
(ks) 144.04 315.29 T
0 11 Q
(primitive_make_simple_lock) 63.65 286.62 T
2 F
([Function]) 485.21 286.62 T
1 F
(Signatur) 81.65 261.62 T
(e) 119.14 261.62 T
0 F
(v) 99.65 242.62 T
(oid primiti) 105.04 242.62 T
(v) 155.35 242.62 T
(e_mak) 160.74 242.62 T
(e_simple_lock \050CONT) 191.79 242.62 T
(AINER* lock, D_N) 295 242.62 T
(AME name\051;) 384.91 242.62 T
1 F
(Implementation) 81.65 217.62 T
2 F
0.28 0.02 (The lock object is destructi) 99.65 195.62 B
0.28 0.02 (v) 220.08 195.62 B
0.28 0.02 (ely updated so that its handle slot refers to a handle on a Solaris pro-) 225.43 195.62 B
0.28 0.09 (vided mute) 99.65 182.62 B
0.28 0.09 (x. A call to) 149.87 182.62 B
0 F
0.28 0.09 (malloc) 203.79 182.62 B
2 F
0.28 0.09 ( is made for the lock, and the Solaris) 235.5 182.62 B
0 F
0.28 0.09 (mutex_init) 405.31 182.62 B
2 F
0.28 0.09 ( function is used) 456.94 182.62 B
(directly to initialize the mute) 99.65 169.62 T
(x. The Solaris mute) 226.59 169.62 T
(x is stored in the) 312.59 169.62 T
0 F
(handle) 388.06 169.62 T
2 F
( \336eld of the Dylan lock.) 419.85 169.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "57" 63
%%Page: "58" 64
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(58) 63.65 84.9 T
0 11 Q
(primitive_destroy_simple_lock) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(v) 99.65 693.62 T
(oid primiti) 105.04 693.62 T
(v) 155.35 693.62 T
(e_destr) 160.74 693.62 T
(oy_simple_lock \050CONT) 194.75 693.62 T
(AINER* lock\051;) 304.07 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
(The Solaris) 99.65 646.62 T
0 F
(mutex_destr) 152.81 646.62 T
(oy) 211.26 646.62 T
2 F
( function is used directly) 222.26 646.62 T
(, and the rele) 330.32 646.62 T
(v) 386.86 646.62 T
(ant memory freed.) 392.08 646.62 T
0 F
(primitive_wait_for_simple_lock) 63.65 617.62 T
2 F
([Function]) 485.21 617.62 T
1 F
(Signatur) 81.65 592.62 T
(e) 119.14 592.62 T
0 F
(ZINT primiti) 99.65 573.62 T
(v) 162.18 573.62 T
(e_wait_f) 167.57 573.62 T
(or_simple_lock \050CONT) 207.01 573.62 T
(AINER* lock\051;) 315.71 573.62 T
1 F
(Implementation) 81.65 548.62 T
2 F
(The Solaris) 99.65 526.62 T
0 F
(mutex_lock) 152.81 526.62 T
2 F
( function is used.) 207.2 526.62 T
0 F
(primitive_wait_for_simple_lock_timed) 63.65 497.62 T
2 F
([Function]) 485.21 497.62 T
1 F
(Signatur) 81.65 472.62 T
(e) 119.14 472.62 T
0 F
(ZINT primiti) 99.65 453.62 T
(v) 162.18 453.62 T
(e_wait_f) 167.57 453.62 T
(or_simple_lock_timed \050CONT) 207.01 453.62 T
(AINER* lock, ZINT millisecs\051;) 348.09 453.62 T
1 F
(Implementation) 81.65 428.62 T
2 F
-0.17 (The timeout period \050in milliseconds\051 is a gi) 99.65 406.62 P
-0.17 (v) 288.54 406.62 P
-0.17 (en as a tagged inte) 293.87 406.62 P
-0.17 (ger which has to be con) 374.28 406.62 P
-0.17 (v) 477.16 406.62 P
-0.17 (erted into a) 482.5 406.62 P
0.28 0.07 (normal C inte) 99.65 393.62 B
0.28 0.07 (ger before use. This is in turn con) 161.5 393.62 B
0.28 0.07 (v) 313.44 393.62 B
0.28 0.07 (erted into an absolute time by manipulating the) 318.85 393.62 B
0.04 (results of calls to the Solaris) 99.65 380.62 P
0 F
0.04 (clock_gettime) 227 380.62 P
2 F
0.04 ( function. The results are returned to the calling primi-) 291.76 380.62 P
(ti) 99.65 367.62 T
(v) 105.49 367.62 T
(e as a Solaris-speci\336c data type.) 110.82 367.62 T
0.28 0.06 (The primiti) 99.65 345.62 B
0.28 0.06 (v) 150.13 345.62 B
0.28 0.06 (e then enters a) 155.53 345.62 B
0 F
0.28 0.06 (while) 223.6 345.62 B
2 F
0.28 0.06 ( loop which checks that the absolute timeout time has not been) 248.96 345.62 B
-0.22 (passed, and then tries to acquire the rele) 99.65 332.62 P
-0.22 (v) 273.78 332.62 P
-0.22 (ant lock using the Solaris) 279 332.62 P
0 F
-0.22 (mutex_trylock) 391.86 332.62 P
2 F
-0.22 ( function, which) 460.29 332.62 P
0.28 0.17 (does not block on f) 99.65 319.62 B
0.28 0.17 (ailure. If the lock is acquired, then 0 is returned to indicate success. If not,) 188.29 319.62 B
0 F
0.28 0.02 (primiti) 99.65 306.62 B
0.28 0.02 (v) 132.69 306.62 B
0.28 0.02 (e_sleep) 138.1 306.62 B
2 F
0.28 0.02 ( is called with an ar) 171.86 306.62 B
0.28 0.02 (gument of 10 milliseconds, after which the loop continues. If) 259.33 306.62 B
(the call ultimately times out, an inte) 99.65 293.62 T
(ger indicating f) 257.45 293.62 T
(ailure to acquire the lock is returned.) 324.55 293.62 T
0 F
(primitive_release_simple_lock) 63.65 264.62 T
2 F
([Function]) 485.21 264.62 T
1 F
(Signatur) 81.65 239.62 T
(e) 119.14 239.62 T
0 F
(ZINT primiti) 99.65 220.62 T
(v) 162.18 220.62 T
(e_r) 167.57 220.62 T
(elease_simple_lock \050CONT) 182.64 220.62 T
(AINER* lock\051;) 308.45 220.62 T
1 F
(Implementation) 81.65 195.62 T
2 F
(The Solaris) 99.65 173.62 T
0 F
(mutex_unlock) 152.81 173.62 T
2 F
( function is used.) 219.43 173.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "58" 64
%%Page: "59" 65
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(59) 520.53 84.9 T
0 11 Q
(primitive_owned_simple_lock) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(ZINT primiti) 99.65 693.62 T
(v) 162.18 693.62 T
(e_o) 167.57 693.62 T
(wned_simple_lock \050CONT) 183.35 693.62 T
(AINER* lock\051;) 306.72 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
-0.12 (Information on the o) 99.65 646.62 P
-0.12 (wnership of the lock is e) 189.74 646.62 P
-0.12 (xtracted from the Solaris structures and used to check) 296.8 646.62 P
(that the lock is held by the calling thread.) 99.65 633.62 T
3 10 Q
(6.3.3) 63.65 599.29 T
(Recur) 90.89 599.29 T
(sive Loc) 119.08 599.29 T
(ks) 158.9 599.29 T
0 11 Q
(primitive_make_recursive_lock) 63.65 570.62 T
2 F
([Function]) 485.21 570.62 T
1 F
(Signatur) 81.65 545.62 T
(e) 119.14 545.62 T
0 F
(v) 99.65 526.62 T
(oid primiti) 105.04 526.62 T
(v) 155.35 526.62 T
(e_mak) 160.74 526.62 T
(e_r) 191.79 526.62 T
(ecursi) 206.87 526.62 T
(v) 234.86 526.62 T
(e_lock \050CONT) 240.25 526.62 T
(AINER* lock, D_N) 307.39 526.62 T
(AME name\051;) 397.31 526.62 T
1 F
(Implementation) 81.65 501.62 T
2 F
0.28 0.05 (Each recursi) 99.65 479.62 B
0.28 0.05 (v) 154.94 479.62 B
0.28 0.05 (e lock requires a dedicated structure with f) 160.33 479.62 B
0.28 0.05 (ields including a Solaris mute) 351.18 479.62 B
0.28 0.05 (x lock, the) 484.45 479.62 B
0.28 0.38 (identity of the thread holding it, and the current count for the number of times it has been) 99.65 466.62 B
(lock) 99.65 453.62 T
(ed/unlock) 118.48 453.62 T
(ed.) 161.75 453.62 T
-0.12 (Calls to) 99.65 431.62 P
0 F
-0.12 (malloc) 136.08 431.62 P
2 F
-0.12 ( are made for the lock and its associated structure. The Solaris function) 167.24 431.62 P
0 F
-0.12 (mutex_init) 480.93 431.62 P
2 F
0.28 0.06 (is then used, and the recursi) 99.65 418.62 B
0.28 0.06 (v) 224.59 418.62 B
0.28 0.06 (e lock structure members are initialised. The ne) 229.99 418.62 B
0.28 0.06 (wly allocated struc-) 443.32 418.62 B
(ture is stored in the) 99.65 405.62 T
0 F
(handle) 186.72 405.62 T
2 F
( \336eld of the Dylan lock.) 218.51 405.62 T
0 F
(primitive_destroy_recursive_lock) 63.65 376.62 T
2 F
([Function]) 485.21 376.62 T
1 F
(Signatur) 81.65 351.62 T
(e) 119.14 351.62 T
0 F
(v) 99.65 332.62 T
(oid primiti) 105.04 332.62 T
(v) 155.35 332.62 T
(e_destr) 160.74 332.62 T
(oy_r) 194.75 332.62 T
(ecursi) 215.94 332.62 T
(v) 243.93 332.62 T
(e_lock \050CONT) 249.32 332.62 T
(AINER* lock\051;) 316.47 332.62 T
1 F
(Implementation) 81.65 307.62 T
2 F
(The Solaris) 99.65 285.62 T
0 F
(mutex_destr) 152.81 285.62 T
(oy) 211.26 285.62 T
2 F
( function is used directly) 222.26 285.62 T
(, and the rele) 330.32 285.62 T
(v) 386.86 285.62 T
(ant memory freed.) 392.08 285.62 T
0 F
(primitive_wait_for_recursive_lock) 63.65 256.62 T
2 F
([Function]) 485.21 256.62 T
1 F
(Signatur) 81.65 231.62 T
(e) 119.14 231.62 T
0 F
(ZINT primiti) 99.65 212.62 T
(v) 162.18 212.62 T
(e_wait_f) 167.57 212.62 T
(or_r) 207.01 212.62 T
(ecursi) 227.58 212.62 T
(v) 255.57 212.62 T
(e_lock \050CONT) 260.96 212.62 T
(AINER* lock\051;) 328.11 212.62 T
1 F
(Implementation) 81.65 187.62 T
2 F
0.22 (If the calling thread already holds the speci\336ed lock, then its count is increased by one. If not, the) 99.65 165.62 P
-0.21 (Solaris) 99.65 152.62 P
0 F
-0.21 (mutex_lock) 132.75 152.62 P
2 F
-0.21 ( function is called to acquire it, and the lock\325) 187.13 152.62 P
-0.21 (s structure is updated to record the) 381.38 152.62 P
(current o) 99.65 139.62 T
(wner and a count of 1, Finally) 138.77 139.62 T
(, an inte) 270.35 139.62 T
(ger is returned to indicate a successful result.) 305.32 139.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "59" 65
%%Page: "60" 66
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(60) 63.65 84.9 T
0 11 Q
(primitive_wait_for_recursive_lock_timed) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(ZINT primiti) 99.65 693.62 T
(v) 162.18 693.62 T
(e_wait_f) 167.57 693.62 T
(or_r) 207.01 693.62 T
(ecursi) 227.58 693.62 T
(v) 255.57 693.62 T
(e_lock_timed \050CONT) 260.96 693.62 T
(AINER* lock, ZINT millisecs\051;) 360.49 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
-0.06 (If the calling thread already holds the speci\336ed lock, then its count is increased by one. Otherwise,) 99.65 646.62 P
0.28 0.08 (the implementation is as for) 99.65 633.62 B
0 F
0.28 0.08 (primiti) 228.81 633.62 B
0.28 0.08 (v) 262.24 633.62 B
0.28 0.08 (e_wait_f) 267.7 633.62 B
0.28 0.08 (or_simple_lock_timed) 307.75 633.62 B
2 F
0.28 0.08 (, follo) 413.16 633.62 B
0.28 0.08 (wed by an update of) 439.97 633.62 B
(the o) 99.65 620.62 T
(wner and count \336elds.) 121.07 620.62 T
0 F
(primitive_release_recursive_lock) 63.65 591.62 T
2 F
([Function]) 485.21 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(ZINT primiti) 99.65 547.62 T
(v) 162.18 547.62 T
(e_r) 167.57 547.62 T
(elease_r) 182.64 547.62 T
(ecursi) 220.32 547.62 T
(v) 248.31 547.62 T
(e_lock \050CONT) 253.7 547.62 T
(AINER* lock\051;) 320.85 547.62 T
1 F
(Implementation) 81.65 522.62 T
2 F
0.28 0.28 (The lock is f) 99.65 500.62 B
0.28 0.28 (irst check) 158.82 500.62 B
0.28 0.28 (ed to ensure that the current thread is the o) 204.26 500.62 B
0.28 0.28 (wner) 406.38 500.62 B
0.28 0.28 (, and an error v) 429.06 500.62 B
0.28 0.28 (alue is) 501.27 500.62 B
0.28 0.08 (returned if not. Otherwise, the lock\325) 99.65 487.62 B
0.28 0.08 (s count is decremented. If the count is then zero, the Solaris) 261.32 487.62 B
0 F
(mutex_unlock) 99.65 474.62 T
2 F
( function is called.) 166.26 474.62 T
0 F
(primitive_owned_recursive_lock) 63.65 445.62 T
2 F
([Function]) 485.21 445.62 T
1 F
(Signatur) 81.65 420.62 T
(e) 119.14 420.62 T
0 F
(ZINT primiti) 99.65 401.62 T
(v) 162.18 401.62 T
(e_o) 167.57 401.62 T
(wned_r) 183.35 401.62 T
(ecursi) 218.59 401.62 T
(v) 246.59 401.62 T
(e_lock \050CONT) 251.98 401.62 T
(AINER* lock\051;) 319.12 401.62 T
1 F
(Implementation) 81.65 376.62 T
2 F
(The lock\325) 99.65 354.62 T
(s associated structure is check) 141.5 354.62 T
(ed to see if the current thread is the o) 273.36 354.62 T
(wner) 435.91 354.62 T
(.) 457.29 354.62 T
3 10 Q
(6.3.4) 63.65 320.29 T
(Semaphores) 90.89 320.29 T
0 11 Q
(primitive_make_semaphore) 63.65 291.62 T
2 F
([Function]) 485.21 291.62 T
1 F
(Signatur) 81.65 266.62 T
(e) 119.14 266.62 T
0 F
(v) 99.65 247.62 T
(oid primiti) 105.04 247.62 T
(v) 155.35 247.62 T
(e_mak) 160.74 247.62 T
(e_semaphor) 191.79 247.62 T
(e \050CONT) 248.42 247.62 T
(AINER* lock, D_N) 290.51 247.62 T
(AME name, ZINT initial,) 380.42 247.62 T
(ZINT max\051;) 121.25 234.62 T
1 F
(Implementation) 81.65 209.62 T
2 F
-0.14 (A call to) 99.65 187.62 P
0 F
-0.14 (malloc) 139.85 187.62 P
2 F
-0.14 ( is made for the semaphore, and the Solaris) 171.01 187.62 P
0 F
-0.14 (sema_init) 362.18 187.62 P
2 F
-0.14 ( function is used to initialize) 407.4 187.62 P
(it. The Solaris semaphore is stored in the) 99.65 174.62 T
0 F
(handle) 282.05 174.62 T
2 F
( \336eld of the Dylan lock.) 313.84 174.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "60" 66
%%Page: "61" 67
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(61) 520.53 84.9 T
0 11 Q
(primitive_destroy_semaphore) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(v) 99.65 693.62 T
(oid primiti) 105.04 693.62 T
(v) 155.35 693.62 T
(e_destr) 160.74 693.62 T
(oy_semaphor) 194.75 693.62 T
(e \050CONT) 257.5 693.62 T
(AINER* lock\051;) 299.58 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
(The Solaris) 99.65 646.62 T
0 F
(sema_destr) 152.81 646.62 T
(oy) 205.76 646.62 T
2 F
( function is used, and the rele) 216.76 646.62 T
(v) 345.72 646.62 T
(ant memory freed.) 350.94 646.62 T
0 F
(primitive_wait_for_semaphore) 63.65 617.62 T
2 F
([Function]) 485.21 617.62 T
1 F
(Signatur) 81.65 592.62 T
(e) 119.14 592.62 T
0 F
(ZINT primiti) 99.65 573.62 T
(v) 162.18 573.62 T
(e_wait_f) 167.57 573.62 T
(or_semaphor) 207.01 573.62 T
(e \050CONT) 269.14 573.62 T
(AINER* lock\051;) 311.22 573.62 T
1 F
(Implementation) 81.65 548.62 T
2 F
(The Solaris) 99.65 526.62 T
0 F
(sema_wait) 152.81 526.62 T
2 F
( function is used.) 202.3 526.62 T
0 F
(primitive_wait_for_semaphore_timed) 63.65 497.62 T
2 F
([Function]) 485.21 497.62 T
1 F
(Signatur) 81.65 472.62 T
(e) 119.14 472.62 T
0 F
(ZINT primiti) 99.65 453.62 T
(v) 162.18 453.62 T
(e_wait_f) 167.57 453.62 T
(or_semaphor) 207.01 453.62 T
(e_timed \050CONT) 269.14 453.62 T
(AINER* lock, ZINT millisecs\051;) 343.61 453.62 T
1 F
(Implementation) 81.65 428.62 T
2 F
0.28 0.19 (This primiti) 99.65 406.62 B
0.28 0.19 (v) 154.24 406.62 B
0.28 0.19 (e uses the same timing mechanisms as) 159.77 406.62 B
0 F
0.28 0.19 (primiti) 340.3 406.62 B
0.28 0.19 (v) 374.55 406.62 B
0.28 0.19 (e_wait_f) 380.13 406.62 B
0.28 0.19 (or_simple_lock_timed) 421.12 406.62 B
2 F
0.28 0.19 (,) 528.9 406.62 B
0.05 (e) 99.65 393.62 P
0.05 (xcept the loop tests for success with the Solaris function) 104.37 393.62 P
0 F
0.05 (sema_trywait,) 354.8 393.62 P
2 F
0.05 ( which does not block on) 421.09 393.62 P
(f) 99.65 380.62 T
(ailure.) 103.2 380.62 T
0 F
(primitive_release_semaphore) 63.65 351.62 T
2 F
([Function]) 485.21 351.62 T
1 F
(Signatur) 81.65 326.62 T
(e) 119.14 326.62 T
0 F
(ZINT primiti) 99.65 307.62 T
(v) 162.18 307.62 T
(e_r) 167.57 307.62 T
(elease_semaphor) 182.64 307.62 T
(e \050CONT) 261.88 307.62 T
(AINER* lock\051;) 303.96 307.62 T
1 F
(Implementation) 81.65 282.62 T
2 F
(The Solaris) 99.65 260.62 T
0 F
(sema_post) 152.81 260.62 T
2 F
( function is used.) 201.7 260.62 T
3 10 Q
(6.3.5) 63.65 226.29 T
(Noti\336cations) 90.89 226.29 T
0 11 Q
(primitive_make_notification) 63.65 197.62 T
2 F
([Function]) 485.21 197.62 T
1 F
(Signatur) 81.65 172.62 T
(e) 119.14 172.62 T
0 F
(v) 99.65 153.62 T
(oid primiti) 105.04 153.62 T
(v) 155.35 153.62 T
(e_mak) 160.74 153.62 T
(e_noti\336cation \050CONT) 191.79 153.62 T
(AINER* noti\336cation, D_N) 292.55 153.62 T
(AME name\051;) 416.08 153.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "61" 67
%%Page: "62" 68
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(62) 63.65 84.9 T
1 11 Q
(Implementation) 81.65 737.62 T
2 F
0.28 0.26 (A call to) 99.65 715.62 B
0 F
0.28 0.26 (malloc) 143.68 715.62 B
2 F
0.28 0.26 ( is made for a condition v) 176.38 715.62 B
0.28 0.26 (ariable, and the Solaris) 296.88 715.62 B
0 F
0.28 0.26 (cond_init) 407.97 715.62 B
2 F
0.28 0.26 ( function is used) 454.3 715.62 B
(directly) 99.65 702.62 T
(. The Solaris condition v) 132.54 702.62 T
(ariable is stored in the) 240.73 702.62 T
0 F
(handle) 340.64 702.62 T
2 F
( \336eld of the Dylan lock.) 372.43 702.62 T
0 F
(primitive_destroy_notification) 63.65 673.62 T
2 F
([Function]) 485.21 673.62 T
1 F
(Signatur) 81.65 648.62 T
(e) 119.14 648.62 T
0 F
(v) 99.65 629.62 T
(oid primiti) 105.04 629.62 T
(v) 155.35 629.62 T
(e_destr) 160.74 629.62 T
(oy_noti\336cation \050CONT) 194.75 629.62 T
(AINER* noti\336cation\051;) 301.63 629.62 T
1 F
(Implementation) 81.65 604.62 T
2 F
(The Solaris) 99.65 582.62 T
0 F
(cond_destr) 152.81 582.62 T
(oy) 204.55 582.62 T
2 F
( function is used directly) 215.55 582.62 T
(, and the rele) 323.61 582.62 T
(v) 380.15 582.62 T
(ant memory freed.) 385.37 582.62 T
0 F
(primitive_wait_for_notification) 63.65 553.62 T
2 F
([Function]) 485.21 553.62 T
1 F
(Signatur) 81.65 528.62 T
(e) 119.14 528.62 T
0 F
(ZINT primiti) 99.65 509.62 T
(v) 162.18 509.62 T
(e_wait_f) 167.57 509.62 T
(or_noti\336cation \050CONT) 207.01 509.62 T
(AINER* noti\336cation, CONT) 313.27 509.62 T
(AINER* lock\051;) 446.42 509.62 T
1 F
(Implementation) 81.65 484.62 T
2 F
0.28 0.46 (Ownership of the lock is f) 99.65 462.62 B
0.28 0.46 (irst tested with) 226.98 462.62 B
0 F
0.28 0.46 (primiti) 303.18 462.62 B
0.28 0.46 (v) 339.3 462.62 B
0.28 0.46 (e_o) 345.15 462.62 B
0.28 0.46 (wned_r) 362.31 462.62 B
0.28 0.46 (ecursi) 400.32 462.62 B
0.28 0.46 (v) 431.08 462.62 B
0.28 0.46 (e_lock) 436.94 462.62 B
2 F
0.28 0.46 (. The Solaris) 469.65 462.62 B
0 F
-0.16 (cond_wait) 99.65 449.62 P
2 F
-0.16 ( function is then used directly to w) 147.93 449.62 P
-0.16 (ait for the signalling of a change in the Solaris condi-) 299.18 449.62 P
(tion v) 99.65 436.62 T
(ariable.) 124.74 436.62 T
0 F
(primitive_wait_for_notification_timed) 63.65 407.62 T
2 F
([Function]) 485.21 407.62 T
1 F
(Signatur) 81.65 382.62 T
(e) 119.14 382.62 T
0 F
(ZINT primiti) 99.65 363.62 T
(v) 162.18 363.62 T
(e_wait_f) 167.57 363.62 T
(or_noti\336cation_timed \050CONT) 207.01 363.62 T
(AINER* noti\336cation,) 345.65 363.62 T
(CONT) 121.25 350.62 T
(AINER* lock, ZINT millisecs\051;) 152.04 350.62 T
1 F
(Implementation) 81.65 325.62 T
2 F
-0.23 (Ownership of the lock is \336rst tested with) 99.65 303.62 P
0 F
-0.23 (primiti) 279.28 303.62 P
-0.23 (v) 312.17 303.62 P
-0.23 (e_o) 317.56 303.62 P
-0.23 (wned_r) 333.33 303.62 P
-0.23 (ecursi) 368.58 303.62 P
-0.23 (v) 396.57 303.62 P
-0.23 (e_lock) 401.96 303.62 P
2 F
-0.23 (. A test is then made to) 431.91 303.62 P
-0.06 (determine whether the speci\336ed timeout period \050in milliseconds\051 is 0, less than 1000, or more than) 99.65 290.62 P
0.28 0.17 (1000. The Solaris) 99.65 277.62 B
0 F
0.28 0.17 (cond_timed) 184.2 277.62 B
0.28 0.17 (wait) 240.74 277.62 B
2 F
0.28 0.17 ( function is then used directly with an appropriately scaled) 261.58 277.62 B
(timeout, depending on the range.) 99.65 264.62 T
0 F
(primitive_release_notification) 63.65 235.62 T
2 F
([Function]) 485.21 235.62 T
1 F
(Signatur) 81.65 210.62 T
(e) 119.14 210.62 T
0 F
(ZINT primiti) 99.65 191.62 T
(v) 162.18 191.62 T
(e_r) 167.57 191.62 T
(elease_noti\336cation \050CONT) 182.64 191.62 T
(AINER* noti\336cation, CONT) 306.01 191.62 T
(AINER* lock\051;) 439.16 191.62 T
1 F
(Implementation) 81.65 166.62 T
2 F
0.28 0.46 (Ownership of the lock is f) 99.65 144.62 B
0.28 0.46 (irst tested with) 226.98 144.62 B
0 F
0.28 0.46 (primiti) 303.18 144.62 B
0.28 0.46 (v) 339.3 144.62 B
0.28 0.46 (e_o) 345.15 144.62 B
0.28 0.46 (wned_r) 362.31 144.62 B
0.28 0.46 (ecursi) 400.32 144.62 B
0.28 0.46 (v) 431.08 144.62 B
0.28 0.46 (e_lock) 436.94 144.62 B
2 F
0.28 0.46 (. The Solaris) 469.65 144.62 B
0 F
(cond_signal) 99.65 131.62 T
2 F
( function is then used directly) 155.27 131.62 T
(.) 285.02 131.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "62" 68
%%Page: "63" 69
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(63) 520.53 84.9 T
0 11 Q
(primitive_release_all_notification) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(ZINT primiti) 99.65 693.62 T
(v) 162.18 693.62 T
(e_r) 167.57 693.62 T
(elease_all_noti\336cation \050CONT) 182.64 693.62 T
(AINER* noti\336cation, CONT) 323.12 693.62 T
(AINER* lock\051;) 456.28 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
0.28 0.46 (Ownership of the lock is f) 99.65 646.62 B
0.28 0.46 (irst tested with) 226.98 646.62 B
0 F
0.28 0.46 (primiti) 303.18 646.62 B
0.28 0.46 (v) 339.3 646.62 B
0.28 0.46 (e_o) 345.15 646.62 B
0.28 0.46 (wned_r) 362.31 646.62 B
0.28 0.46 (ecursi) 400.32 646.62 B
0.28 0.46 (v) 431.08 646.62 B
0.28 0.46 (e_lock) 436.94 646.62 B
2 F
0.28 0.46 (. The Solaris) 469.65 646.62 B
0 F
(cond_br) 99.65 633.62 T
(oadcast) 138.57 633.62 T
2 F
( function is then used directly) 174.01 633.62 T
(.) 303.75 633.62 T
3 10 Q
(6.3.6) 63.65 599.29 T
(Timer) 90.89 599.29 T
(s) 117.97 599.29 T
0 11 Q
(primitive_sleep) 63.65 570.62 T
2 F
([Function]) 485.21 570.62 T
1 F
(Signatur) 81.65 545.62 T
(e) 119.14 545.62 T
0 F
(v) 99.65 526.62 T
(oid primiti) 105.04 526.62 T
(v) 155.35 526.62 T
(e_sleep \050ZINT millisecs\051;) 160.74 526.62 T
1 F
(Implementation) 81.65 501.62 T
2 F
0.28 0.01 (This v) 99.65 479.62 B
0.28 0.01 (ersion of Solaris does not pro) 127.6 479.62 B
0.28 0.01 (vide a ready-made sleep primiti) 258.22 479.62 B
0.28 0.01 (v) 398.53 479.62 B
0.28 0.01 (e, so the conditional v) 403.87 479.62 B
0.28 0.01 (ariable) 501.68 479.62 B
(functions are used instead.) 99.65 466.62 T
0.28 0.07 (The) 99.65 444.62 B
0 F
0.28 0.07 (ZINT) 120.07 444.62 B
2 F
0.28 0.07 ( v) 147.26 444.62 B
0.28 0.07 (alue is con) 155.66 444.62 B
0.28 0.07 (v) 203.63 444.62 B
0.28 0.07 (erted from a tagged to a standard inte) 209.04 444.62 B
0.28 0.07 (ger) 377.64 444.62 B
0.28 0.07 (, and an absolute timeout v) 391.46 444.62 B
0.28 0.07 (alue) 513.1 444.62 B
0.25 (calculated. A dedicated mute) 99.65 431.62 P
0.25 (x lock and condition v) 227.91 431.62 P
0.25 (ariable are generated and initialised. This lock) 327.01 431.62 P
0.28 0.16 (is acquired, and a call is made to the Solaris function) 99.65 418.62 B
0 F
0.28 0.16 (cond_timed) 346.84 418.62 B
0.28 0.16 (wait) 403.26 418.62 B
2 F
0.28 0.16 (, gi) 424.06 418.62 B
0.28 0.16 (ving a pointer to the) 438.76 418.62 B
(absolute timeout time. When this call returns, the lock is released and the primiti) 99.65 405.62 T
(v) 454.09 405.62 T
(e itself returns.) 459.42 405.62 T
3 10 Q
(6.3.7) 63.65 371.29 T
(Atomic V) 90.89 371.29 T
(ariab) 133.63 371.29 T
(le Access) 157.43 371.29 T
0 11 Q
(primitive_assign_atomic_memory) 63.65 342.62 T
2 F
([Function]) 485.21 342.62 T
1 F
(Signatur) 81.65 317.62 T
(e) 119.14 317.62 T
0 F
(Z primiti) 99.65 298.62 T
(v) 142.62 298.62 T
(e_assign_atomic_memory \050v) 148.01 298.62 T
(oid* location, Z newv) 280.8 298.62 T
(al\051;) 380.92 298.62 T
1 F
(Implementation) 81.65 273.62 T
2 F
0.28 0.05 (A single mutual e) 99.65 251.62 B
0.28 0.05 (xclusion lock) 179.1 251.62 B
0 F
0.28 0.05 (atomic_lock) 242.09 251.62 B
2 F
0.28 0.05 ( is used to synchronise the updating of the specif) 299.48 251.62 B
0.28 0.05 (ied) 518.1 251.62 B
(location.) 99.65 238.62 T
(The function is implemented roughly as follo) 99.65 216.62 T
(ws:-) 298.58 216.62 T
0 F
(mutex_lock\050&atomic_lock\051;) 99.65 197.62 T
(*location = newv) 99.65 184.62 T
(al;) 178.53 184.62 T
(mutex_unlock\050&atomic_lock\051;) 99.65 171.62 T
(r) 99.65 158.62 T
(etur) 104.33 158.62 T
(n\050newv) 123.72 158.62 T
(al\051;) 157.83 158.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "63" 69
%%Page: "64" 70
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(64) 63.65 84.9 T
0 11 Q
(primitive_conditional_update_memory) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(ZINT primiti) 99.65 693.62 T
(v) 162.18 693.62 T
(e_conditional_update_memory \050v) 167.57 693.62 T
(oid* location, Z newv) 324.82 693.62 T
(al, Z oldv) 424.94 693.62 T
(al\051;) 469.15 693.62 T
1 F
(Implementation) 81.65 668.62 T
2 F
0.28 0.05 (A single mutual e) 99.65 646.62 B
0.28 0.05 (xclusion lock) 179.1 646.62 B
0 F
0.28 0.05 (atomic_lock) 242.09 646.62 B
2 F
0.28 0.05 ( is used to synchronise the updating of the specif) 299.48 646.62 B
0.28 0.05 (ied) 518.1 646.62 B
(location.) 99.65 633.62 T
(The function is implemented roughly as follo) 99.65 611.62 T
(ws:) 298.58 611.62 T
0 F
(int r) 99.65 592.62 T
(es = 0;) 119.92 592.62 T
(mutex_lock\050&atomic_lock\051;) 99.65 579.62 T
(if \050*location == oldv) 99.65 566.62 T
(al\051) 193.66 566.62 T
({ *location = newv) 121.25 553.62 T
(al;) 207.21 553.62 T
(r) 121.25 540.62 T
(es = 1;) 125.93 540.62 T
(}) 121.25 527.62 T
(mutex_unlock\050&atomic_lock\051;) 99.65 514.62 T
(r) 99.65 501.62 T
(etur) 104.33 501.62 T
(n\050r) 123.72 501.62 T
(es\051;) 138.18 501.62 T
3 10 Q
(6.3.8) 63.65 467.29 T
(Thread V) 90.89 467.29 T
(ariab) 133.08 467.29 T
(les) 156.88 467.29 T
0 11 Q
(primitive_allocate_thread_variable) 63.65 438.62 T
2 F
([Function]) 485.21 438.62 T
1 F
(Signatur) 81.65 413.62 T
(e) 119.14 413.62 T
0 F
(v) 99.65 394.62 T
(oid* primiti) 105.04 394.62 T
(v) 160.85 394.62 T
(e_allocate_thr) 166.24 394.62 T
(ead_v) 232.64 394.62 T
(ariable \050Z initial_v) 260.03 394.62 T
(alue\051;) 347.93 394.62 T
1 F
(Implementation) 81.65 369.62 T
2 F
-0.23 (Thread v) 99.65 347.62 P
-0.23 (ariable allocations \050corresponding to de\336nitions of \337uid v) 138.55 347.62 P
-0.23 (ariables\051 can be interlea) 389.98 347.62 P
-0.23 (v) 493.85 347.62 P
-0.23 (ed with) 499.18 347.62 P
0.28 0.1 (thread creation. Also, the number of thread v) 99.65 334.62 B
0.28 0.1 (ariables is not statically determinable. Whene) 303.4 334.62 B
0.28 0.1 (v) 509.46 334.62 B
0.28 0.1 (er a) 514.89 334.62 B
0.28 0.12 (thread v) 99.65 321.62 B
0.28 0.12 (ariable is allocated, its initial v) 136.36 321.62 B
0.28 0.12 (alue must be gi) 276.76 321.62 B
0.28 0.12 (v) 346.05 321.62 B
0.28 0.12 (en to all threads which are in e) 351.51 321.62 B
0.28 0.12 (xistence.) 491.88 321.62 B
(Whene) 99.65 308.62 T
(v) 130.52 308.62 T
(er a ne) 135.86 308.62 T
(w thread is created it must assume all the def) 164.9 308.62 T
(ault initial v) 362.45 308.62 T
(alues kno) 415.35 308.62 T
(wn so f) 456.93 308.62 T
(ar) 489.2 308.62 T
(.) 497.14 308.62 T
0.28 0.08 (W) 99.65 286.62 B
0.28 0.08 (e use a single Solaris thread-local k) 109.23 286.62 B
0.28 0.08 (e) 269.33 286.62 B
0.28 0.08 (y to store a v) 274.13 286.62 B
0.28 0.08 (ector of all the Dylan thread-local v) 332.94 286.62 B
0.28 0.08 (ariables.) 494.09 286.62 B
-0.01 (The Solaris runtime system will maintain inde) 99.65 273.62 P
-0.01 (x) 302.93 273.62 P
-0.01 (es into this v) 308.26 273.62 P
-0.01 (ector and will return these to Dylan as) 363.99 273.62 P
(the thread-local v) 99.65 260.62 T
(ariable handles.) 176.35 260.62 T
(A v) 99.65 238.62 T
(ector is maintained of the def) 115.68 238.62 T
(ault initial v) 244.18 238.62 T
(alues, and a pri) 297.08 238.62 T
(v) 363.39 238.62 T
(ate v) 368.62 238.62 T
(ector is used for e) 389.53 238.62 T
(v) 467.45 238.62 T
(ery thread.) 472.79 238.62 T
(On thread creation, the) 99.65 216.62 T
0 F
(trampoline) 203.2 216.62 T
2 F
( function performs the follo) 255.14 216.62 T
(wing initialization steps:) 376.46 216.62 T
3 9 Q
(1.) 99.65 197.62 T
2 11 Q
(Allocate a ne) 113.4 197.62 T
(w v) 171.16 197.62 T
(ector of thread-local storage for the ne) 187.19 197.62 T
(w thread.) 355.52 197.62 T
3 9 Q
(2.) 99.65 178.62 T
2 11 Q
(Initialise it with a cop) 113.4 178.62 T
(y of the v) 209.23 178.62 T
(alues in the def) 250.81 178.62 T
(ault v) 317.6 178.62 T
(ector) 342.19 178.62 T
(.) 363.57 178.62 T
3 9 Q
(3.) 99.65 159.62 T
2 11 Q
-0.22 (Under control of the lock t) 113.4 159.62 P
0 F
-0.22 (hr) 229.31 159.62 P
-0.22 (ead_v) 240.11 159.62 P
-0.22 (ector_lock) 267.5 159.62 P
2 F
-0.22 (, insert this ne) 316.37 159.62 P
-0.22 (w v) 377.16 159.62 P
-0.22 (ector into a link) 392.97 159.62 P
-0.22 (ed list of all the) 461.55 159.62 P
(currently acti) 113.4 147.62 T
(v) 171.47 147.62 T
(e thread v) 176.8 147.62 T
(ectors.) 220.01 147.62 T
(Once the Dylan function has returned, the follo) 99.65 126.62 T
(wing cleanup operations are performed:) 307.11 126.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "64" 70
%%Page: "65" 71
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(65) 520.53 84.9 T
3 9 Q
(1.) 99.65 737.62 T
2 11 Q
(Under the control of) 113.4 737.62 T
0 F
(thr) 205.66 737.62 T
(ead_v) 220.12 737.62 T
(ector_lock) 247.51 737.62 T
2 F
(, remo) 296.39 737.62 T
(v) 324.33 737.62 T
(e the v) 329.66 737.62 T
(ector from the list.) 358.82 737.62 T
3 9 Q
(2.) 99.65 718.62 T
2 11 Q
(Free the v) 113.4 718.62 T
(ector) 157.22 718.62 T
(.) 178.61 718.62 T
(On allocation of a ne) 99.65 697.62 T
(w thread v) 191.63 697.62 T
(ariable:) 237.79 697.62 T
3 9 Q
(1.) 99.65 678.62 T
2 11 Q
(Increment the current inde) 113.4 678.62 T
(x into the v) 229.62 678.62 T
(ector \050global v) 279.26 678.62 T
(ariable) 343.14 678.62 T
0 F
(max_k) 375.82 678.62 T
(ey) 407.48 678.62 T
2 F
(\051.) 417.87 678.62 T
3 9 Q
(2.) 99.65 659.62 T
2 11 Q
(Initialise the def) 113.4 659.62 T
(ault v) 184.78 659.62 T
(ector at inde) 209.36 659.62 T
(x) 263.57 659.62 T
0 F
(max_k) 271.82 659.62 T
(ey) 303.49 659.62 T
2 F
( with the initial v) 313.88 659.62 T
(alue.) 388.77 659.62 T
3 9 Q
(3.) 99.65 640.62 T
2 11 Q
-0.43 (Under control of) 113.4 640.62 P
0 F
-0.43 (thr) 188.16 640.62 P
-0.43 (ead_v) 202.63 640.62 P
-0.43 (ector_lock) 230.02 640.62 P
2 F
-0.43 (, iterate o) 278.89 640.62 P
-0.43 (v) 319.09 640.62 P
-0.43 (er all the thread v) 324.43 640.62 P
-0.43 (ectors in the list, and initialise) 399.5 640.62 P
(the element at inde) 113.4 628.62 T
(x) 196.64 628.62 T
0 F
(max_k) 204.89 628.62 T
(ey) 236.56 628.62 T
2 F
( with the initial v) 246.94 628.62 T
(alue.) 321.84 628.62 T
3 9 Q
(4.) 99.65 609.62 T
2 11 Q
(Return the inde) 113.4 609.62 T
(x into the v) 181.06 609.62 T
(ector as a handle on the thread v) 230.7 609.62 T
(ariable.) 372.47 609.62 T
0.05 (F) 99.65 588.62 P
0.05 (or no) 105.6 588.62 P
0.05 (w) 128.28 588.62 P
0.05 (, we assume that we do not o) 135.51 588.62 P
0.05 (v) 262.77 588.62 P
0.05 (er\337o) 268.1 588.62 P
0.05 (w the v) 287.99 588.62 P
0.05 (ariable v) 320.19 588.62 P
0.05 (ector) 358.26 588.62 P
0.05 (. W) 379.64 588.62 P
0.05 (e allocate each v) 394.69 588.62 P
0.05 (ector as a suit-) 467.66 588.62 P
(ably lar) 99.65 575.62 T
(ge size \050e.g., 1024\051, and assume that we w) 132.75 575.62 T
(on\325) 318.37 575.62 T
(t e) 332.84 575.62 T
(v) 343.25 575.62 T
(er ha) 348.59 575.62 T
(v) 370.05 575.62 T
(e that man) 375.39 575.62 T
(y \337uid v) 421.05 575.62 T
(ariables.) 457.45 575.62 T
0.28 0.07 (In the future, we can e) 99.65 553.62 B
0.28 0.07 (xpand the v) 200.84 553.62 B
0.28 0.07 (ariable v) 253.22 553.62 B
0.28 0.07 (ectors by using an e) 292.15 553.62 B
0.28 0.07 (xtra indirection, and by replacing) 381.88 553.62 B
0.28 0.03 (each v) 99.65 540.62 B
0.28 0.03 (ector with a ne) 128.36 540.62 B
0.28 0.03 (w) 194.49 540.62 B
0.28 0.03 (, bigger one, when o) 201.75 540.62 B
0.28 0.03 (v) 293.17 540.62 B
0.28 0.03 (erf) 298.54 540.62 B
0.28 0.03 (lo) 310.25 540.62 B
0.28 0.03 (w is detected. \050This must be done with all other) 318.6 540.62 B
(threads suspended\051.) 99.65 527.62 T
0.28 0.16 (A possible impro) 99.65 505.62 B
0.28 0.16 (v) 178.41 505.62 B
0.28 0.16 (ement to this idea is to use a tw) 183.9 505.62 B
0.28 0.16 (o tier system, with the f) 329.45 505.62 B
0.28 0.16 (irst) 438.16 505.62 B
1 F
0.28 0.16 (N) 456.05 505.62 B
2 F
0.28 0.16 ( f) 463.55 505.62 B
0.28 0.16 (luid v) 469.96 505.62 B
0.28 0.16 (ariables) 496.3 505.62 B
-0.12 (implemented as described abo) 99.65 492.62 P
-0.12 (v) 232 492.62 P
-0.12 (e, b) 237.34 492.62 P
-0.12 (ut with a second thread-local v) 252.88 492.62 P
-0.12 (ector \050and k) 387.42 492.62 P
-0.12 (e) 439.6 492.62 P
-0.12 (y) 444.32 492.62 P
-0.12 (, and e) 449.1 492.62 P
-0.12 (xtra indirec-) 477.71 492.62 P
0.28 0.01 (tion\051 for all other v) 99.65 479.62 B
0.28 0.01 (ariables. The second v) 184.48 479.62 B
0.28 0.01 (ector can then be e) 283.82 479.62 B
0.28 0.01 (xpanded on demand, b) 367.49 479.62 B
0.28 0.01 (ut there is less) 467.97 479.62 B
0.28 0.07 (of an o) 99.65 466.62 B
0.28 0.07 (v) 131.1 466.62 B
0.28 0.07 (erhead for the f) 136.51 466.62 B
0.28 0.07 (irst) 205.4 466.62 B
1 F
0.28 0.07 (N) 222.85 466.62 B
2 F
0.28 0.07 ( v) 230.26 466.62 B
0.28 0.07 (ariables, aside from a test for whether the v) 238.66 466.62 B
0.28 0.07 (ariable count is in the) 434.21 466.62 B
(range 0\320) 99.65 453.62 T
1 F
(N) 137.83 453.62 T
2 F
(.) 145.17 453.62 T
0 F
(primitive_read_thread_variable) 63.65 424.62 T
2 F
([Function]) 485.21 424.62 T
1 F
(Signatur) 81.65 399.62 T
(e) 119.14 399.62 T
0 F
(Z primiti) 99.65 380.62 T
(v) 142.62 380.62 T
(e_r) 148.01 380.62 T
(ead_thr) 163.09 380.62 T
(ead_v) 199.55 380.62 T
(ariable \050v) 226.94 380.62 T
(oid* handle_on_v) 271.74 380.62 T
(ariable\051;) 354.46 380.62 T
1 F
(Implementation) 81.65 355.62 T
2 F
0.28 0.31 (The ar) 99.65 333.62 B
0.28 0.31 (gument is assumed to be an inte) 129.98 333.62 B
0.28 0.31 (ger inde) 281.56 333.62 B
0.28 0.31 (x into the v) 319.87 333.62 B
0.28 0.31 (ector of thread-local v) 374.04 333.62 B
0.28 0.31 (ariables, as) 479.11 333.62 B
0.28 0.02 (returned by) 99.65 320.62 B
0 F
0.28 0.02 (primiti) 153.54 320.62 B
0.28 0.02 (v) 186.54 320.62 B
0.28 0.02 (e_allocate_thr) 191.95 320.62 B
0.28 0.02 (ead_v) 258.57 320.62 B
0.28 0.02 (ariable) 286.04 320.62 B
2 F
0.28 0.02 (. This primiti) 319.15 320.62 B
0.28 0.02 (v) 377.41 320.62 B
0.28 0.02 (e uses the Solaris) 382.76 320.62 B
0 F
0.28 0.02 (thr_getspecif) 462.99 320.62 B
0.28 0.02 (ic) 523.69 320.62 B
2 F
-0.1 (function to retrie) 99.65 307.62 P
-0.1 (v) 173.11 307.62 P
-0.1 (e the v) 178.44 307.62 P
-0.1 (ariable v) 207.3 307.62 P
-0.1 (ector that contains v) 245.22 307.62 P
-0.1 (alues local to the calling thread. It returns the) 333.55 307.62 P
(v) 99.65 294.62 T
(alue at the speci\336ed inde) 104.87 294.62 T
(x into the v) 213.46 294.62 T
(ariable v) 263 294.62 T
(ector) 301.01 294.62 T
(.) 322.4 294.62 T
0 F
(primitive_write_thread_variable) 63.65 265.62 T
2 F
([Function]) 485.21 265.62 T
1 F
(Signatur) 81.65 240.62 T
(e) 119.14 240.62 T
0 F
(Z primiti) 99.65 221.62 T
(v) 142.62 221.62 T
(e_write_thr) 148.01 221.62 T
(ead_v) 202.79 221.62 T
(ariable \050v) 230.18 221.62 T
(oid* handle_on_v) 274.99 221.62 T
(ariable, Z newv) 357.71 221.62 T
(al\051;) 430.63 221.62 T
1 F
(Implementation) 81.65 196.62 T
2 F
0.28 0.08 (The f) 99.65 174.62 B
0.28 0.08 (irst ar) 123.24 174.62 B
0.28 0.08 (gument is assumed to be an inte) 149.24 174.62 B
0.28 0.08 (ger inde) 293.8 174.62 B
0.28 0.08 (x into the v) 330.3 174.62 B
0.28 0.08 (ector of thread-local v) 381.74 174.62 B
0.28 0.08 (ariables, as) 481.6 174.62 B
0.28 0.02 (returned by) 99.65 161.62 B
0 F
0.28 0.02 (primiti) 153.54 161.62 B
0.28 0.02 (v) 186.54 161.62 B
0.28 0.02 (e_allocate_thr) 191.95 161.62 B
0.28 0.02 (ead_v) 258.57 161.62 B
0.28 0.02 (ariable) 286.04 161.62 B
2 F
0.28 0.02 (. This primiti) 319.15 161.62 B
0.28 0.02 (v) 377.41 161.62 B
0.28 0.02 (e uses the Solaris) 382.76 161.62 B
0 F
0.28 0.02 (thr_getspecif) 462.99 161.62 B
0.28 0.02 (ic) 523.69 161.62 B
2 F
0.21 (function to retrie) 99.65 148.62 P
0.21 (v) 173.72 148.62 P
0.21 (e the v) 179.05 148.62 P
0.21 (ariable v) 208.52 148.62 P
0.21 (ector that contains v) 246.74 148.62 P
0.21 (alues local to the calling thread. It stores the) 335.99 148.62 P
(ne) 99.65 135.62 T
(w v) 109.76 135.62 T
(alue at the speci\336ed inde) 125.67 135.62 T
(x into the v) 234.27 135.62 T
(ariable v) 283.8 135.62 T
(ector and returns the ne) 321.82 135.62 T
(w v) 424.79 135.62 T
(alue.) 440.7 135.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "65" 71
%%Page: "66" 72
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(66) 63.65 84.9 T
3 15 Q
(7.) 63.65 734.95 T
(P) 90.65 734.95 T
(erf) 100.2 734.95 T
(ormance Ev) 119.07 734.95 T
(aluation) 203.81 734.95 T
2 11 Q
-0.22 (The intention of the Simple Dylan Threads Library is to pro) 63.65 712.62 P
-0.22 (vide threads f) 324.69 712.62 P
-0.22 (acilities via operating system API) 384.02 712.62 P
-0.18 (calls. ANDF helps to achie) 63.65 699.62 P
-0.18 (v) 181.51 699.62 P
-0.18 (e this goal by pro) 186.85 699.62 P
-0.18 (viding an abstract interf) 262.36 699.62 P
-0.18 (ace layer of tok) 366.51 699.62 P
-0.18 (ens. In most cases, the) 433.98 699.62 P
0.28 0.02 (preferred implementation of these tok) 63.65 686.62 B
0.28 0.02 (ens will be to e) 231.51 686.62 B
0.28 0.02 (xpand directly into calls into the Dylan runtime sys-) 299.35 686.62 B
-0.25 (tem \321 in which case ANDF has no signi\336cant ef) 63.65 673.62 P
-0.25 (fect on performance. This will be true for all of the ANDF) 277.76 673.62 P
-0.25 (tok) 63.65 660.62 P
-0.25 (ens which correspond to primiti) 77.6 660.62 P
-0.25 (v) 216.24 660.62 P
-0.25 (e functions to the Dylan compiler) 221.58 660.62 P
-0.25 (, at least for all general purpose tar) 367.44 660.62 P
-0.25 (get) 518.21 660.62 P
(platforms where threads support is pro) 63.65 647.62 T
(vided by the operating system.) 233.04 647.62 T
0.05 (F) 63.65 622.62 P
0.05 (or those tok) 69.6 622.62 P
0.05 (ens corresponding to the access of atomic v) 121.53 622.62 P
0.05 (ariables and \337uid v) 313.14 622.62 P
0.05 (ariables, there are v) 397.02 622.62 P
0.05 (arious pos-) 483.02 622.62 P
0.28 0.04 (sibilities for tok) 63.65 609.62 B
0.28 0.04 (en e) 134.42 609.62 B
0.28 0.04 (xpansion depending on the tar) 152.69 609.62 B
0.28 0.04 (get platform. On some platforms ANDF may impose a) 287.25 609.62 B
(cost for the usage of these v) 63.65 596.62 T
(ariables.) 186.18 596.62 T
-0.06 (It is assumed that atomic v) 63.65 571.62 P
-0.06 (ariables can al) 180.68 571.62 P
-0.06 (w) 243.37 571.62 P
-0.06 (ays be represented as normal global v) 251.2 571.62 P
-0.06 (ariables, and that it should) 416.11 571.62 P
-0.06 (al) 63.65 558.62 P
-0.06 (w) 71.48 558.62 P
-0.06 (ays be possible to read the v) 79.31 558.62 P
-0.06 (alue of the v) 202.68 558.62 P
-0.06 (ariable in the normal w) 256.89 558.62 P
-0.06 (ay) 358.56 558.62 P
-0.06 (. The implementation choice for con-) 368.23 558.62 P
0.12 (ditional update of an atomic v) 63.65 545.62 P
0.12 (ariable, ho) 195.66 545.62 P
0.12 (we) 241.94 545.62 P
0.12 (v) 254.49 545.62 P
0.12 (er) 259.83 545.62 P
0.12 (, will depend on whether the platform has hardw) 267.93 545.62 P
0.12 (are support) 482.34 545.62 P
0.28 0.17 (for this operation \050such as Compare And Exchange on the Intel 486, or Store Conditional on the DEC) 63.65 532.62 B
0.12 (Alpha\051. If no hardw) 63.65 519.62 P
0.12 (are support is a) 151.25 519.62 P
0.12 (v) 218.28 519.62 P
0.12 (ailable, then assignments and conditional updates to the v) 223.51 519.62 P
0.12 (ariable must) 477.45 519.62 P
0.28 0.01 (be protected by a lock. ANDF can describe the operations in) 63.65 506.62 B
0.28 0.01 (v) 332.59 506.62 B
0.28 0.01 (olv) 337.88 506.62 B
0.28 0.01 (ed in an equi) 351.8 506.62 B
0.28 0.01 (v) 408.99 506.62 B
0.28 0.01 (alent manner to an) 414.22 506.62 B
0.28 0.01 (y nati) 496.61 506.62 B
0.28 0.01 (v) 521.42 506.62 B
0.28 0.01 (e) 526.76 506.62 B
0.16 (implementation, and will impose no e) 63.65 493.62 P
0.16 (xtra cost in this case. Ho) 230.52 493.62 P
0.16 (we) 339.22 493.62 P
0.16 (v) 351.77 493.62 P
0.16 (er) 357.11 493.62 P
0.16 (, if hardw) 365.21 493.62 P
0.16 (are support is a) 407.89 493.62 P
0.16 (v) 475.07 493.62 P
0.16 (ailable, it is) 480.29 493.62 P
0.28 0.06 (highly desirable that it is used. Ideally the installer for the tar) 63.65 480.62 B
0.28 0.06 (get will be able to generate the appropriate) 339.07 480.62 B
0.1 (instructions by means of a platform-speci\336c tok) 63.65 467.62 P
0.1 (en. In this case, ag) 274.34 467.62 P
0.1 (ain, there will be no e) 355.95 467.62 P
0.1 (xtra cost for using) 451.61 467.62 P
0.28 0.11 (ANDF) 63.65 454.62 B
0.28 0.11 (. But in cases where the platform pro) 93.14 454.62 B
0.28 0.11 (vides hardw) 261.37 454.62 B
0.28 0.11 (are support b) 316.17 454.62 B
0.28 0.11 (ut the installer cannot generate the) 375.32 454.62 B
-0.17 (instructions, there will indeed be a cost for using ANDF on that platform. At the w) 63.65 441.62 P
-0.17 (orst, this cost will be the) 424.92 441.62 P
-0.09 (cost of a function call, since the ANDF tok) 63.65 428.62 P
-0.09 (en can al) 251.94 428.62 P
-0.09 (w) 290.74 428.62 P
-0.09 (ays e) 298.58 428.62 P
-0.09 (xpand into a call into the runtime system, which) 320.62 428.62 P
(can pro) 63.65 415.62 T
(vide an appropriate usage of the instruction.) 96.16 415.62 T
-0.11 (As with atomic v) 63.65 390.62 P
-0.11 (ariables, thread-local v) 138.51 390.62 P
-0.11 (ariables may or may not be most ef) 238.51 390.62 P
-0.11 (\336ciently implemented with spe-) 392.35 390.62 P
-0.15 (cial hardw) 63.65 377.62 P
-0.15 (are instructions \050such as a load from memory referenced by a special se) 109.51 377.62 P
-0.15 (gment descriptor re) 422.14 377.62 P
-0.15 (gister) 507.21 377.62 P
0.28 0.02 (for the Intel 486\051. Operating systems which pro) 63.65 364.62 B
0.28 0.02 (vide threads typically pro) 275.14 364.62 B
0.28 0.02 (vide some API to access thread-) 388.35 364.62 B
0.28 0.05 (local v) 63.65 351.62 B
0.28 0.05 (ariables, and ANDF will be able to access this with no e) 93.61 351.62 B
0.28 0.05 (xtra cost if this is the preferred option for) 345.93 351.62 B
0.28 0.16 (that operating system. If there is a more ef) 63.65 338.62 B
0.28 0.16 (f) 258.66 338.62 B
0.28 0.16 (icient hardw) 261.88 338.62 B
0.28 0.16 (are instruction, ho) 318.64 338.62 B
0.28 0.16 (we) 401.7 338.62 B
0.28 0.16 (v) 414.57 338.62 B
0.28 0.16 (er) 420.07 338.62 B
0.28 0.16 (, then the performance) 428.49 338.62 B
-0.17 (impact of using ANDF on that platform ag) 63.65 325.62 P
-0.17 (ain depends on whether the installer is able to generate the hard-) 250.32 325.62 P
(w) 63.65 312.62 T
(are instruction. As for atomic v) 71.48 312.62 T
(ariables, this cost is limited to a single function call.) 208.68 312.62 T
3 15 Q
(8.) 63.65 270.95 T
(Conc) 90.65 270.95 T
(lusions) 127.85 270.95 T
2 11 Q
0.28 0.11 (W) 63.65 248.62 B
0.28 0.11 (e ha) 73.26 248.62 B
0.28 0.11 (v) 91.76 248.62 B
0.28 0.11 (e sho) 97.2 248.62 B
0.28 0.11 (wn that it is possible to implement Dylan, an adv) 120.65 248.62 B
0.28 0.11 (anced dynamic language with support for) 343.82 248.62 B
0.28 0.03 (g) 63.65 235.62 B
0.28 0.03 (arbage collection, multiple threads and interoperability with other languages, using ANDF as a portable) 69.12 235.62 B
0.06 (medium. This is achie) 63.65 222.62 P
0.06 (v) 160.73 222.62 P
0.06 (ed through the usage of platform speci\336c tok) 166.07 222.62 P
0.06 (en e) 363.46 222.62 P
0.06 (xpansions, and a platform speci\336c) 381.38 222.62 P
(runtime system.) 63.65 209.62 T
0.11 (The comple) 63.65 184.62 P
0.11 (xities of implementing the dynamic features of Dylan along with the threads support are mini-) 115.83 184.62 P
0.12 (mized, because the runtime system can be written for each platform with e) 63.65 171.62 P
0.12 (xplicit kno) 392.73 171.62 P
0.12 (wledge of the imple-) 439.94 171.62 P
0.06 (mentation of all of the features and ho) 63.65 158.62 P
0.06 (w the) 231.51 158.62 P
0.06 (y interact. Ho) 255.54 158.62 P
0.06 (we) 315.57 158.62 P
0.06 (v) 328.12 158.62 P
0.06 (er) 333.45 158.62 P
0.06 (, since these implementation details are not) 341.56 158.62 P
0.28 0.1 (described in the portable ANDF code, there may be a signif) 63.65 145.62 B
0.28 0.1 (icant cost for porting the implementation of) 333.9 145.62 B
0 (Dylan to a ne) 63.65 132.62 P
0 (w platform. This is a once only cost, ho) 122.34 132.62 P
0 (we) 296.23 132.62 P
0 (v) 308.78 132.62 P
0 (er) 314.12 132.62 P
0 (. All ANDF produced from portable Dylan pro-) 322.06 132.62 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "66" 72
%%Page: "67" 73
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(67) 520.53 84.9 T
2 11 Q
0.15 (grams should be runnable on the ne) 63.65 737.62 P
0.15 (w platform once the platform-speci\336c tok) 220.7 737.62 P
0.15 (ens and runtime system ha) 404.34 737.62 P
0.15 (v) 521.43 737.62 P
0.15 (e) 526.76 737.62 P
(been implemented.) 63.65 724.62 T
0.28 0.16 (The parallelism features of the threads library include threads themselv) 63.65 699.62 B
0.28 0.16 (es and synchronization mecha-) 390.58 699.62 B
0.13 (nisms. These are e) 63.65 686.62 P
0.13 (xpected to be implemented as API calls to operating system threads f) 145.13 686.62 P
0.13 (acilities, since this) 450.42 686.62 P
0.28 0.01 (approach has the adv) 63.65 673.62 B
0.28 0.01 (antage that Dylan components can then inter) 156.96 673.62 B
0.28 0.01 (-operate with other components, e) 354.97 673.62 B
0.28 0.01 (v) 506.13 673.62 B
0.28 0.01 (en if) 511.48 673.62 B
0.24 (multiple threads are being used. Most tok) 63.65 660.62 P
0.24 (ens will probably e) 247.39 660.62 P
0.24 (xpand into runtime system API calls, and the) 331.97 660.62 P
0.28 0.07 (runtime system will then call the operating system indirectly) 63.65 647.62 B
0.28 0.07 (. This design permits an) 335.81 647.62 B
0.28 0.07 (y mapping between) 443.83 647.62 B
0.18 (the threads library requirements and the operating systems f) 63.65 634.62 P
0.18 (acilities to be made out of line, which reduces) 328.29 634.62 P
0.28 0.01 (code size. Ho) 63.65 621.62 B
0.28 0.01 (we) 123.66 621.62 B
0.28 0.01 (v) 136.23 621.62 B
0.28 0.01 (er) 141.58 621.62 B
0.28 0.01 (, ANDF does not constrain such an implementation, either in terms of performance or) 149.71 621.62 B
0.28 0.04 (implementation choice, since ANDF tok) 63.65 608.62 B
0.28 0.04 (en e) 244.27 608.62 B
0.28 0.04 (xpansions may be used to describe appropriate API calls for) 262.56 608.62 B
(each platform.) 63.65 595.62 T
0.28 0.01 (There are some features in the Dylan threads library which might depend upon hardw) 63.65 570.62 B
0.28 0.01 (are support for ulti-) 444.75 570.62 B
0.28 0.09 (mate ef) 63.65 557.62 B
0.28 0.09 (f) 96.96 557.62 B
0.28 0.09 (icienc) 100.11 557.62 B
0.28 0.09 (y) 126.75 557.62 B
0.28 0.09 (, on platforms where this is a) 131.62 557.62 B
0.28 0.09 (v) 263.15 557.62 B
0.28 0.09 (ailable. These include conditional update of v) 268.47 557.62 B
0.28 0.09 (ariables, and) 474.7 557.62 B
0.28 0.01 (thread-local v) 63.65 544.62 B
0.28 0.01 (ariables. There may be an implementation cost for these features if the ANDF installer can-) 124.57 544.62 B
(not generate the appropriate hardw) 63.65 531.62 T
(are instructions directly) 216.88 531.62 T
(.) 320.04 531.62 T
3 15 Q
(9.) 63.65 492.95 T
(Ref) 90.65 492.95 T
(erences and Bib) 114.66 492.95 T
(liograph) 230.39 492.95 T
(y) 289.26 492.95 T
2 11 Q
([Apple94]) 63.65 474.62 T
0.28 0.15 (Apple Computer) 117.65 474.62 B
0.28 0.15 (, \322Dylan \050TM\051 Interim Reference Manual\323, Bro) 193.18 474.62 B
0.28 0.15 (wsable on the W) 410.57 474.62 B
0.28 0.15 (orld W) 486.34 474.62 B
0.28 0.15 (ide) 517.91 474.62 B
(W) 117.65 461.62 T
(eb through http://www) 127.15 461.62 T
(.cambridge.apple.com/dylan/dylan.html, April 1994) 226.66 461.62 T
([BW88]) 63.65 441.62 T
0.28 0.05 (Boehm, H-J., W) 117.65 441.62 B
0.28 0.05 (eiser) 189.85 441.62 B
0.28 0.05 (, M., \322Garbage Collection in an Uncooperati) 210.44 441.62 B
0.28 0.05 (v) 409.89 441.62 B
0.28 0.05 (e En) 415.27 441.62 B
0.28 0.05 (vironment\323, Softw) 435.17 441.62 B
0.28 0.05 (are) 518.11 441.62 B
(Practice and Experience, v) 117.65 428.62 T
(ol. 18, #9, September 1988.) 234.72 428.62 T
([BDS91]) 63.65 408.62 T
-0.24 (Boehm, H-J., Demers, A.J., Shenk) 117.65 408.62 P
-0.24 (er) 268.43 408.62 P
-0.24 (, S., \322Mostly P) 276.54 408.62 P
-0.24 (arallel Garbage Collection\323, Proceedings of) 340.45 408.62 P
0.28 0.27 (SIGPLAN \32491 Conference on Programming Language Design and Implementation, June) 117.65 395.62 B
(1991, A) 117.65 382.62 T
(CM) 152.65 382.62 T
([Edw) 63.65 362.62 T
(ards93]) 87.36 362.62 T
0.28 0.03 (Edw) 120.35 362.62 B
0.28 0.03 (ards, P) 140.49 362.62 B
0.28 0.03 (., \322Preliminary P) 169.69 362.62 B
0.28 0.03 (arallelism Extensions\323, GLUE Deli) 244.5 362.62 B
0.28 0.03 (v) 401.8 362.62 B
0.28 0.03 (erable 5.1.1, DRA Malv) 407.16 362.62 B
0.28 0.03 (ern,) 514.77 362.62 B
(October 1993) 117.65 349.62 T
([Mann93a]) 63.65 329.62 T
0.28 0.19 (Mann, T) 117.65 329.62 B
0.28 0.19 (., \322Initial e) 156.3 329.62 B
0.28 0.19 (v) 206.06 329.62 B
0.28 0.19 (aluation of TDF Support for Garbage Collection\323, GLUE Deli) 211.48 329.62 B
0.28 0.19 (v) 498.32 329.62 B
0.28 0.19 (erable) 503.84 329.62 B
(4.2.2a, Harlequin Ltd., 1993.) 117.65 316.62 T
([ME94]) 63.65 296.62 T
-0.15 (Mann, T) 117.65 296.62 P
-0.15 (., Miranda, E., \322Requirements Speci\336cation for P) 154.57 296.62 P
-0.15 (arallel Extensions to TDF to Support) 370.13 296.62 P
(Dylan \321 Including Run-T) 117.65 283.62 T
(ime Support\323, GLUE Deli) 234.28 283.62 T
(v) 349.49 283.62 T
(erable 5.7.1, Harlequin Ltd., 1994.) 354.83 283.62 T
([MG95]) 63.65 263.62 T
-0.23 (Mann, T) 117.65 263.62 P
-0.23 (., Green, S., \322Report on Inter) 154.49 263.62 P
-0.23 (-Language W) 280.19 263.62 P
-0.23 (orking in ANDF\323, GLUE Deli) 339.25 263.62 P
-0.23 (v) 472.17 263.62 P
-0.23 (erable 4.2.3,) 477.51 263.62 P
(Harlequin Ltd., 1995.) 117.65 250.62 T
([Sun93]) 63.65 230.62 T
(Sun Microsystems, Inc., \322Guide to Multithread Programming\323, SunOS 5.3, No) 117.65 230.62 T
(v) 464.89 230.62 T
(ember 1993.) 470.22 230.62 T
([TDF92]) 63.65 210.62 T
(F) 117.65 210.62 T
(oster) 123.6 210.62 T
(, M., Currie, I., \322TDF Speci\336cation\323, DRA Malv) 144.54 210.62 T
(ern, September 1992.) 358.86 210.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "67" 73
%%Page: "68" 74
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(68) 63.65 84.9 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "68" 74
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%PageOrder: Ascend
%%Pages: 74
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Helvetica-Bold
%%+ Courier-Bold
%%+ Helvetica
%%+ Symbol
%%EOF
