%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
%	FMquit  % Uncomment this line for traditional Frame failure behaviour
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.3 841.9 0 1 11 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Courier-Bold FMFONTDEFINE
3 0 /Times-Bold FMFONTDEFINE
4 0 /Times-Italic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(1) 526.09 84.9 T
0 15 Q
(1.) 63.65 734.95 T
(Simple Dylan Threads Librar) 90.65 734.95 T
(y) 294.2 734.95 T
0 12 Q
(1.1) 63.65 695.95 T
(Intr) 90.65 695.95 T
(oduction) 109.74 695.95 T
1 11 Q
0.04 (Here is a design for a threads library for Dylan for implementation as part of GLUE deli) 63.65 670.62 P
0.04 (v) 452 670.62 P
0.04 (erable 5.7.2. The) 457.34 670.62 P
(goals of this library) 63.65 657.62 T
(, in order of importance, are:) 148.79 657.62 T
2 F
(\245) 99.65 638.62 T
1 F
(Maps easily and ef) 113.4 638.62 T
(\336ciently onto OS pro) 195.91 638.62 T
(vided threads f) 288.33 638.62 T
(acilities for common OSs) 353.6 638.62 T
2 F
(\245) 99.65 622.62 T
1 F
(Permits all common thread models, including co-operati) 113.4 622.62 T
(v) 360.91 622.62 T
(e, pre-empti) 366.25 622.62 T
(v) 419.12 622.62 T
(e and concurrent) 424.46 622.62 T
2 F
(\245) 99.65 606.62 T
1 F
(Can be implemented in a short time \050because of GLUE constraints\051) 113.4 606.62 T
2 F
(\245) 99.65 590.62 T
1 F
(Mak) 113.4 590.62 T
(es use of the language features of Dylan) 133.45 590.62 T
2 F
(\245) 99.65 574.62 T
1 F
(Pro) 113.4 574.62 T
(vides enough functionality to implement more adv) 128.51 574.62 T
(anced features portably in terms of the) 350.67 574.62 T
(simple features pro) 113.4 561.62 T
(vided here) 197.55 561.62 T
2 F
(\245) 99.65 545.62 T
1 F
(May be a useful base document for a future Harlequin proposal for a threads library) 113.4 545.62 T
(.) 481.09 545.62 T
(The library is called) 63.65 520.62 T
3 F
(thr) 154.68 520.62 T
(eads) 169.15 520.62 T
1 F
(. All documented bindings are e) 189.93 520.62 T
(xported from module) 330.3 520.62 T
3 F
(thr) 426.54 520.62 T
(eads) 441 520.62 T
1 F
(.) 461.78 520.62 T
0 12 Q
(1.2) 63.65 482.95 T
(Ac) 90.65 482.95 T
(kno) 105.74 482.95 T
(wledg) 126.9 482.95 T
(ements) 161.03 482.95 T
1 11 Q
(This design is predominately based on the follo) 63.65 457.62 T
(wing documents \050in no particular order\051:) 272.05 457.62 T
2 F
(\245) 99.65 438.62 T
1 F
(Dylan threads Library Proposal [Scott McKay]) 113.4 438.62 T
2 F
(\245) 99.65 422.62 T
1 F
(Mindy 1.3 Threads Module documentation [CMU]) 113.4 422.62 T
2 F
(\245) 99.65 406.62 T
1 F
(SunOS 5.3 Guide to Multithread Programming [Sun Microsystems]) 113.4 406.62 T
2 F
(\245) 99.65 390.62 T
1 F
(W) 113.4 390.62 T
(in32 API [Microsoft]) 123.34 390.62 T
2 F
(\245) 99.65 374.62 T
1 F
(Multithread Programming in Macintosh, Solaris, W) 113.4 374.62 T
(in32 [Rod Mo) 340.59 374.62 T
(yse]) 402.82 374.62 T
0 12 Q
(1.3) 63.65 336.95 T
(Multi-thread Semantics) 90.65 336.95 T
1 11 Q
0.28 0.12 (This library pro) 63.65 311.62 B
0.28 0.12 (vides multiple threads of control within a single space of objects and module v) 134.97 311.62 B
0.28 0.12 (ariables.) 493.74 311.62 B
0.28 0.02 (Each thread runs in its o) 63.65 298.62 B
0.28 0.02 (wn independent stack. The mechanism by which the threads are scheduled is not) 171.94 298.62 B
0.26 (speci\336ed, and it is not possible to determine ho) 63.65 285.62 P
0.26 (w the e) 272.34 285.62 P
0.26 (x) 304.47 285.62 P
0.26 (ecution of instructions by dif) 309.8 285.62 P
0.26 (ferent threads will be) 437.69 285.62 P
0.09 (interlea) 63.65 272.62 P
0.09 (v) 96.42 272.62 P
0.09 (ed. No mechanism is pro) 101.75 272.62 P
0.09 (vided to call a function on a thread other than the current thread. Neither) 211.61 272.62 P
(is there a mechanism to signal an e) 63.65 259.62 T
(xception on a thread other than the current thread.) 217.15 259.62 T
0 10 Q
(1.3.1) 63.65 225.29 T
(Implicit Sync) 90.65 225.29 T
(hr) 152.24 225.29 T
(onization) 162.04 225.29 T
1 11 Q
-0.06 (The threads library guarantees that assignments to slots and to v) 63.65 200.62 P
-0.06 (ariables are atomic. The time at which that) 344.48 200.62 P
0.28 0.03 (assignment becomes visible to another thread is undef) 63.65 187.62 B
0.28 0.03 (ined, unless the tw) 304.58 187.62 B
0.28 0.03 (o threads synchronize e) 387.75 187.62 B
0.28 0.03 (xplicitly) 492.67 187.62 B
0.28 0.03 (.) 528.9 187.62 B
0.16 (I.e. after an assignment, b) 63.65 174.62 P
0.16 (ut before e) 177.38 174.62 P
0.16 (xplicit synchronization, another thread will either see the old v) 224.56 174.62 P
0.16 (alue or) 501.25 174.62 P
(the ne) 63.65 161.62 T
(w v) 89.95 161.62 T
(alue of the location. There is no possibility of seeing a half-w) 105.87 161.62 T
(ay state.) 375.83 161.62 T
-0.17 (The ordering of visibility of side-ef) 63.65 136.62 P
-0.17 (fects performed in other threads is unde\336ned, unless e) 218.04 136.62 P
-0.17 (xplicit synchroni-) 453.9 136.62 P
-0.23 (zation is used. Implementations of the library may guarantee that the visibility of side-ef) 63.65 123.62 P
-0.23 (fects performed by) 449.02 123.62 P
-0.05 (another thread is ordered according to the control \337o) 63.65 110.62 P
-0.05 (w of the other thread \050) 294.55 110.62 P
4 F
-0.05 (str) 392.36 110.62 P
-0.05 (ong or) 403.48 110.62 P
-0.05 (dering) 432.05 110.62 P
1 F
-0.05 (\051, b) 460.77 110.62 P
-0.05 (ut multi-pro-) 475.17 110.62 P
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(2) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
1 11 Q
-0.27 (cessor implementations may not be strongly ordered. Portable code should not assume strong ordering, and) 63.65 737.62 P
0.28 0.03 (should use e) 63.65 724.62 B
0.28 0.03 (xplicit synchronization where order of side ef) 118.83 724.62 B
0.28 0.03 (fects is important. There is currently no library) 322.17 724.62 B
(introspection f) 63.65 711.62 T
(acility to determine if the implementation is strong or weak ordered.) 127.39 711.62 T
0.03 (Because of the possibility of weak ordering, the compiler is free to assume that the ef) 63.65 686.62 P
0.03 (fects of other threads) 439 686.62 P
0.28 0.02 (may be ignored between e) 63.65 673.62 B
0.28 0.02 (xplicit synchronization points - and may perform an) 180.52 673.62 B
0.28 0.02 (y optimizations which pre-) 412.11 673.62 B
0 (serv) 63.65 660.62 P
0 (e the semantics of a single-thread model re) 81.81 660.62 P
0 (g) 270.15 660.62 P
0 (ardless of their ef) 275.6 660.62 P
0 (fects on other threads \050e.g. common sub-) 352 660.62 P
(e) 63.65 647.62 T
(xpression elimination, or changing the order of e) 68.37 647.62 T
(v) 282.56 647.62 T
(aluation\051.) 287.78 647.62 T
0.08 (A reasonable implementation choice for our Dylan library might be to assume strong ordering for no) 63.65 622.62 P
0.08 (w) 507.84 622.62 P
0.08 (, on) 515.07 622.62 P
0.26 (the grounds that it\325) 63.65 609.62 P
0.26 (s probably guaranteed by all platforms we care about today) 147.24 609.62 P
0.26 (, and it mak) 409.44 609.62 P
0.26 (es thread-safety) 462.05 609.62 P
(much easier to achie) 63.65 596.62 T
(v) 153.49 596.62 T
(e. This is a short-term vie) 158.82 596.62 T
(w) 270.98 596.62 T
(, though.) 278.2 596.62 T
0 10 Q
(1.3.2) 63.65 562.29 T
(Explicit Sync) 90.65 562.29 T
(hr) 152.8 562.29 T
(onization) 162.6 562.29 T
1 11 Q
0.28 0.09 (The threads library pro) 63.65 546.62 B
0.28 0.09 (vides a lo) 167.52 546.62 B
0.28 0.09 (w-le) 210.88 546.62 B
0.28 0.09 (v) 230.51 546.62 B
0.28 0.09 (el side ef) 235.94 546.62 B
0.28 0.09 (fect synchronization function which ensures that all side) 276.84 546.62 B
-0.25 (ef) 63.65 533.62 P
-0.25 (fects which ha) 71.92 533.62 P
-0.25 (v) 134.74 533.62 P
-0.25 (e been performed within one thread are also visible within all other threads. On a strongly) 140.07 533.62 P
(ordered machine this function might le) 63.65 520.62 T
(gitimately be implemented as a null operation.) 234.27 520.62 T
0.28 0.19 (At a higher le) 63.65 495.62 B
0.28 0.19 (v) 127.04 495.62 B
0.28 0.19 (el, the threads library pro) 132.57 495.62 B
0.28 0.19 (vides a v) 249.54 495.62 B
0.28 0.19 (ariety of synchronization f) 290.63 495.62 B
0.28 0.19 (acilities, described belo) 412.88 495.62 B
0.28 0.19 (w) 521.48 495.62 B
0.28 0.19 (.) 528.9 495.62 B
-0.22 (These f) 63.65 482.62 P
-0.22 (acilities include mutual-e) 96 482.62 P
-0.22 (xclusion locks, semaphores and noti\336cations. Each f) 206.61 482.62 P
-0.22 (acility guarantees that) 435.55 482.62 P
0.28 0.01 (when synchronization has been achie) 63.65 469.62 B
0.28 0.01 (v) 228.61 469.62 B
0.28 0.01 (ed, then all the side ef) 233.96 469.62 B
0.28 0.01 (fects of another thread are visible, at least up) 331.87 469.62 B
(to the point where that other thread last released the synchronization f) 63.65 456.62 T
(acility) 370.56 456.62 T
(.) 397.34 456.62 T
0.28 0.11 (An appropriate synchronization must be used to guard side-ef) 63.65 431.62 B
0.28 0.11 (fects on state if there is an) 343.71 431.62 B
0.28 0.11 (y possibility of) 463.37 431.62 B
0.28 0.1 (those side-ef) 63.65 418.62 B
0.28 0.1 (fects either being corrupted by another thread or corrupting another thread. F) 120.92 418.62 B
0.28 0.1 (or e) 470.44 418.62 B
0.28 0.1 (xample, a) 487.76 418.62 B
0.28 0.22 (function which assigns to tw) 63.65 405.62 B
0.28 0.22 (o slots of an object may require the use of a lock to guarantee that other) 196.63 405.62 B
(threads ne) 63.65 392.62 T
(v) 108.28 392.62 T
(er observ) 113.61 392.62 T
(e the object in a partly updated state.) 154.07 392.62 T
0.28 0.02 (It\325) 63.65 367.62 B
0.28 0.02 (s up to library designers to document when synchronization is not performed internally) 73.49 367.62 B
0.28 0.02 (, and when syn-) 460.91 367.62 B
0.28 0.13 (chronization protocols must be used by clients. The implications for the Dylan library \050and some other) 63.65 354.62 B
(lo) 63.65 341.62 T
(w-le) 71.93 341.62 T
(v) 91.2 341.62 T
(el libraries\051 are discussed belo) 96.54 341.62 T
(w) 229.45 341.62 T
(.) 236.68 341.62 T
0 10 Q
(1.3.3) 63.65 307.29 T
(Conditional Update) 90.65 307.29 T
1 11 Q
-0.25 (In addition to the synchronization primiti) 63.65 282.62 P
-0.25 (v) 243.34 282.62 P
-0.25 (es, the library pro) 248.67 282.62 P
-0.25 (vides a conditional update mechanism which is) 325.36 282.62 P
-0.14 (not sychronized, b) 63.65 269.62 P
-0.14 (ut which tests whether the v) 144.12 269.62 P
-0.14 (alue in a v) 266.28 269.62 P
-0.14 (ariable or slot has changed and atomically updates) 311.12 269.62 P
(it if not.) 63.65 256.62 T
-0.13 (By using conditional updates, a thread can con\336rm \050or den) 63.65 231.62 P
-0.13 (y\051 that there has been no interference from other) 320.12 231.62 P
0.28 0.07 (threads, without an) 63.65 218.62 B
0.28 0.07 (y need for a blocking operation. This is more ef) 149.34 218.62 B
0.28 0.07 (f) 364.37 218.62 B
0.28 0.07 (icient for those circumstances where) 367.5 218.62 B
(interference is not disastrous and it is possible to re-compute the update.) 63.65 205.62 T
0.28 0.05 (F) 63.65 180.62 B
0.28 0.05 (or e) 69.64 180.62 B
0.28 0.05 (xample, a function which increments the v) 86.74 180.62 B
0.28 0.05 (alue of a v) 277.27 180.62 B
0.28 0.05 (ariable might use a conditional update to store) 324.44 180.62 B
0.28 0.08 (the ne) 63.65 167.62 B
0.28 0.08 (w v) 90.72 167.62 B
0.28 0.08 (alue into place, in order to guarantee a numeric sequence for the v) 107.16 167.62 B
0.28 0.08 (ariable. In this e) 406.2 167.62 B
0.28 0.08 (xample, the) 479.22 167.62 B
(function might loop until the conditional update has succeeded.) 63.65 154.62 T
0.27 (It is possible to achie) 63.65 129.62 P
0.27 (v) 157.34 129.62 P
0.27 (e synchronization by looping until a conditional update is successful, and then syn-) 162.68 129.62 P
0.13 (chronizing side ef) 63.65 116.62 P
0.13 (fects. This is not recommended, because the) 142.45 116.62 P
4 F
0.13 (b) 340.42 116.62 P
0.13 (usy-waiting) 345.7 116.62 P
1 F
0.13 ( state during the loop may dis-) 397.03 116.62 P
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(3) 526.09 84.9 T
1 11 Q
-0.01 (allo) 63.65 737.62 P
-0.01 (w other threads from running. Normally) 79.87 737.62 P
-0.01 (, conditional update should be used only when it is e) 255.7 737.62 P
-0.01 (xpected to) 486.14 737.62 P
0.11 (succeed. If it is lik) 63.65 724.62 P
0.11 (ely that the conditional update might f) 144.94 724.62 P
0.11 (ail multiple times around the loop, then either the) 313.53 724.62 P
-0.03 (number of times around the loop should be limited, or a blocking function from the) 63.65 711.62 P
3 F
-0.03 (thr) 432.3 711.62 P
-0.03 (eads) 446.76 711.62 P
1 F
-0.03 ( library should) 467.54 711.62 P
(be used within the loop.) 63.65 698.62 T
0 10 Q
(1.3.4) 63.65 664.29 T
(Dynamic en) 90.65 664.29 T
(vir) 146.38 664.29 T
(onment) 158.41 664.29 T
1 11 Q
-0.26 (Dylan has an implicit notion of a dynamic en) 63.65 639.62 P
-0.26 (vionment, corresponding to language constructs with) 259.75 639.62 P
4 F
-0.26 (dynamic) 494.38 639.62 P
0.28 0.02 (e) 63.65 626.62 B
0.28 0.02 (xtent) 68.33 626.62 B
1 F
0.28 0.02 (. F) 89.83 626.62 B
0.28 0.02 (or e) 101.62 626.62 B
0.28 0.02 (xample, the) 118.61 626.62 B
3 F
0.28 0.02 (block) 173.5 626.62 B
1 F
0.28 0.02 ( construct can introduce) 199.29 626.62 B
4 F
0.28 0.02 (cleanup-clauses) 309.08 626.62 B
1 F
0.28 0.02 (, and the) 380.28 626.62 B
4 F
0.28 0.02 (body) 421.65 626.62 B
1 F
0.28 0.02 ( of the block is e) 443.12 626.62 B
0.28 0.02 (x) 517.74 626.62 B
0.28 0.02 (e-) 523.1 626.62 B
0.28 0.04 (cuted in a dynamic en) 63.65 613.62 B
0.28 0.04 (vironment in which those cleanup-clauses are acti) 161.69 613.62 B
0.28 0.04 (v) 384.37 613.62 B
0.28 0.04 (e.) 389.74 613.62 B
4 F
0.28 0.04 (Handler) 400.52 613.62 B
0.28 0.04 (s) 437.36 613.62 B
1 F
0.28 0.04 ( and) 441.67 613.62 B
4 F
0.28 0.04 (e) 463.81 613.62 B
0.28 0.04 (xit pr) 468.51 613.62 B
0.28 0.04 (ocedur) 492.06 613.62 B
0.28 0.04 (es) 522.44 613.62 B
1 F
-0.24 (are other e) 63.65 600.62 P
-0.24 (xamples of language features related to the dynamic en) 109.42 600.62 P
-0.24 (vironment. The threads library introduces) 349.61 600.62 P
(a ne) 63.65 587.62 T
(w construct which af) 81.39 587.62 T
(fects the dynamic en) 173.07 587.62 T
(vironment called) 263.35 587.62 T
3 F
(\337uid-bind) 340.34 587.62 T
1 F
( \050de\336ned belo) 386.82 587.62 T
(w\051.) 447.03 587.62 T
0 (The dynamic en) 63.65 562.62 P
0 (vironment is de\336ned to be thread-local. When a ne) 134.09 562.62 P
0 (w thread is created, it starts with a fresh) 356.56 562.62 P
0.28 0.08 (dynamic en) 63.65 549.62 B
0.28 0.08 (vironment. It is an error to attempt to use a handler or a non-local e) 115.28 549.62 B
0.28 0.08 (xit function belonging to) 419.86 549.62 B
(another thread. It is impossible to use an unwind-protect cleanup from another thread.) 63.65 536.62 T
0.28 0.1 (Although the binding of condition handlers only af) 63.65 511.62 B
0.28 0.1 (fects the dynamic en) 294.19 511.62 B
0.28 0.1 (vironment of the current thread,) 387.27 511.62 B
0.28 0.03 (unhandled conditions are passed to the global generic function) 63.65 498.62 B
3 F
0.28 0.03 (default-handler) 345.66 498.62 B
1 F
0.28 0.03 (. Potentially this function) 418.83 498.62 B
(might) 63.65 485.62 T
4 F
(call the deb) 92.07 485.62 T
(ug) 143.18 485.62 T
(g) 154.07 485.62 T
(er) 159.46 485.62 T
1 F
(. The threads library does not de\336ne what this term might mean.) 168.02 485.62 T
0.11 (Note that in Dylan, unlik) 63.65 460.62 P
0.11 (e in C and C++,) 173.66 460.62 P
4 F
0.11 (le) 247.11 460.62 P
0.11 (xical) 254.84 460.62 P
1 F
0.11 ( v) 276.22 460.62 P
0.11 (ariables \050i.e. local, or LET bound v) 284.3 460.62 P
0.11 (ariables\051 ha) 438.95 460.62 P
0.11 (v) 489.85 460.62 P
0.11 (e inde\336-) 495.18 460.62 P
-0.13 (nite e) 63.65 447.62 P
-0.13 (xtent, and are not bound in the dynamic en) 87.49 447.62 P
-0.13 (vironment. In general, the v) 273.9 447.62 P
-0.13 (ariables are potentially global -) 395.3 447.62 P
0.28 0.1 (and programmers may need to e) 63.65 434.62 B
0.28 0.1 (xplicitly synchronize accesses to them accordingly) 209.08 434.62 B
0.28 0.1 (. The introduction of) 437.86 434.62 B
0.04 (threads to Dylan does not af) 63.65 421.62 P
0.04 (fect the ef) 187.32 421.62 P
0.04 (\336cienc) 231.11 421.62 P
0.04 (y of le) 260.27 421.62 P
0.04 (xical v) 288.3 421.62 P
0.04 (ariables which do not require e) 317.7 421.62 P
0.04 (xplicit synchroni-) 453.69 421.62 P
(zation.) 63.65 408.62 T
0 10 Q
(1.3.5) 63.65 374.29 T
(Fluid Binding) 90.65 374.29 T
1 11 Q
0.19 (The threads library pro) 63.65 349.62 P
0.19 (vides a ne) 165.15 349.62 P
0.19 (w de\336ning form,) 209.24 349.62 P
3 F
0.19 (\337uid-v) 286.18 349.62 P
0.19 (ariable) 316.64 349.62 P
1 F
0.19 (, for de\336ning module v) 349.64 349.62 P
0.19 (ariables which are) 451.25 349.62 P
-0.12 (suitable for) 63.65 336.62 P
4 F
-0.12 (\337uid binding) 115.95 336.62 P
1 F
-0.12 (. A) 171.75 336.62 P
4 F
-0.12 (binding) 187.69 336.62 P
1 F
-0.12 ( is a mapping between a v) 221.3 336.62 P
-0.12 (ariable and a) 334.54 336.62 P
4 F
-0.12 ( value-cell) 390.49 336.62 P
1 F
-0.12 ( which holds the v) 436.49 336.62 P
-0.12 (ari-) 516.38 336.62 P
0.14 (able\325) 63.65 323.62 P
0.14 (s v) 85.03 323.62 P
0.14 (alue. A) 97.43 323.62 P
4 F
0.14 (\337uid) 132.24 323.62 P
1 F
0.14 ( binding is a binding which has dynamic e) 151.8 323.62 P
0.14 (xtent, and shado) 338.56 323.62 P
0.14 (ws an) 410.38 323.62 P
0.14 (y outermost bindings.) 435.71 323.62 P
0.15 (Fluid v) 63.65 310.62 P
0.15 (ariables may ha) 95 310.62 P
0.15 (v) 164.12 310.62 P
0.15 (e their bindings changed with) 169.45 310.62 P
3 F
0.15 (\337uid-bind) 303.1 310.62 P
1 F
0.15 (, which is a primiti) 349.58 310.62 P
0.15 (v) 432.71 310.62 P
0.15 (e mechanism for cre-) 438.04 310.62 P
0.28 0.12 (ating ne) 63.65 297.62 B
0.28 0.12 (w bindings with dynamic e) 99.76 297.62 B
0.28 0.12 (xtent. Fluid v) 222.91 297.62 B
0.28 0.12 (ariables are visible in the module namespace, b) 283.87 297.62 B
0.28 0.12 (ut their) 499.05 297.62 B
0.28 0.25 (bindings \050and hence v) 63.65 284.62 B
0.28 0.25 (alue-cells\051 e) 166.19 284.62 B
0.28 0.25 (xist in the dynamic en) 222.94 284.62 B
0.28 0.25 (vironment. The mechanism includes a small) 326.15 284.62 B
-0.04 (amount of e) 63.65 271.62 P
-0.04 (xtensibility) 115.96 271.62 P
-0.04 (, and it is hoped that more comple) 164.76 271.62 P
-0.04 (x mechanisms \050such as \337uid-binding of slots\051 can) 314.05 271.62 P
(be b) 63.65 258.62 T
(uilt from it.) 82.06 258.62 T
0.28 0 (Fluid v) 63.65 233.62 B
0.28 0 (ariables contain a pri) 95.16 233.62 B
0.28 0 (v) 187.77 233.62 B
0.28 0 (ate v) 193 233.62 B
0.28 0 (alue-cell per thread. Whene) 214.1 233.62 B
0.28 0 (v) 336.33 233.62 B
0.28 0 (er a thread is created, the v) 341.67 233.62 B
0.28 0 (alue of the f) 461.39 233.62 B
0.28 0 (luid) 514.52 233.62 B
0.28 0.05 (v) 63.65 220.62 B
0.28 0.05 (ariable is implicitly bound in the dynamic en) 68.92 220.62 B
0.28 0.05 (vironment of that thread, and its initial v) 269.76 220.62 B
0.28 0.05 (alue is the thread-) 451.41 220.62 B
0.28 0.1 (independent v) 63.65 207.62 B
0.28 0.1 (alue resulting from e) 126.94 207.62 B
0.28 0.1 (v) 220.9 207.62 B
0.28 0.1 (aluation the initialization e) 226.23 207.62 B
0.28 0.1 (xpression of the f) 347.37 207.62 B
0.28 0.1 (luid v) 426.04 207.62 B
0.28 0.1 (ariable def) 452 207.62 B
0.28 0.1 (inition.) 499.48 207.62 B
0.14 (The f) 63.65 194.62 P
0.14 (act that the v) 87.2 194.62 P
0.14 (alue-cells are al) 143.87 194.62 P
0.14 (w) 213.07 194.62 P
0.14 (ays thread-local means that \337uid v) 220.9 194.62 P
0.14 (ariables may be used as thread local) 372.56 194.62 P
-0.12 (v) 63.65 181.62 P
-0.12 (ariables, e) 68.87 181.62 P
-0.12 (v) 113.07 181.62 P
-0.12 (en if the) 118.41 181.62 P
-0.12 (y are not e) 154.04 181.62 P
-0.12 (xplicitly re-bound. The thread locality of \337uid v) 199.64 181.62 P
-0.12 (ariables is an important fea-) 409.33 181.62 P
0.09 (ture for programs which mak) 63.65 168.62 P
0.09 (e use of threads, and it is for this reason that \337uid v) 192.22 168.62 P
0.09 (ariables are de\336ned in the) 418.24 168.62 P
(threads library) 63.65 155.62 T
(.) 126.78 155.62 T
-0.24 (The thread-local nature of the initial binding of \337uid v) 63.65 130.62 P
-0.24 (ariables may not be optimal for all problem domains.) 299.83 130.62 P
0.28 0.05 (F) 63.65 117.62 B
0.28 0.05 (or instance a shared, global, outermost binding may be desirable, or alternati) 69.65 117.62 B
0.28 0.05 (v) 413.23 117.62 B
0.28 0.05 (ely) 418.62 117.62 B
0.28 0.05 (, a thread may w) 431.51 117.62 B
0.28 0.05 (ant to) 506.36 117.62 B
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(4) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
1 11 Q
-0.06 (inherit current bindings from the parent thread at creation time, gi) 63.65 737.62 P
-0.06 (ving a \322fork\323 type model of state inherit-) 352.11 737.62 P
0.28 0.09 (ance. These alternati) 63.65 724.62 B
0.28 0.09 (v) 156.49 724.62 B
0.28 0.09 (es are not implemented in this library) 161.91 724.62 B
0.28 0.09 (. In principle, it should be possible to imple-) 330.55 724.62 B
0.28 0.14 (ment either or both of these mechanisms at a later date, possibly using adjecti) 63.65 711.62 B
0.28 0.14 (v) 419.19 711.62 B
0.28 0.14 (es to the) 424.67 711.62 B
3 F
0.28 0.14 (f) 466.33 711.62 B
0.28 0.14 (luid-v) 469.53 711.62 B
0.28 0.14 (ariable) 497.79 711.62 B
1 F
0.28 0.09 (def) 63.65 698.62 B
0.28 0.09 (inition form to specify the mechanism required, Maybe it w) 77.35 698.62 B
0.28 0.09 (ould be useful to introduce the def) 347.43 698.62 B
0.28 0.09 (inition) 502.4 698.62 B
(form) 63.65 685.62 T
3 F
(\337uid-constant) 87.78 685.62 T
1 F
( one day) 152.57 685.62 T
(, too.) 189.12 685.62 T
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(5) 526.09 84.9 T
0 12 Q
(1.4) 63.65 736.95 T
(Threads-Related Class Hierar) 90.65 736.95 T
(c) 257.8 736.95 T
(h) 264.35 736.95 T
(y) 271.44 736.95 T
63.65 105.95 531.65 744.95 C
63.65 137.95 531.65 707.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 221.95 522.65 680.95 18 RR
7 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
81.65 248.95 504.65 518.95 18 RR
N
99.65 266.95 243.65 365.95 18 RR
7 X
V
0 X
N
333.65 545.95 198.65 311.95 2 L
N
135.65 311.95 297.65 617.95 2 L
N
1 12 Q
(SEALED) 107.65 348.76 T
3 10 Q
(<noti\336cation>) 165.91 296.25 T
(<thr) 114.1 296.05 T
(ead>) 132.95 296.05 T
252.65 266.95 486.65 365.95 18 RR
7 X
V
0 X
N
(<synchr) 299.09 557.25 T
(onization>) 333.5 557.25 T
(<lock>) 351.65 494.25 T
(<semaphor) 414.65 296.25 T
(e>) 462.39 296.25 T
(<simple-lock>) 261.65 296.05 T
333.65 572.95 297.65 617.95 2 L
N
360.65 509.95 333.65 545.95 2 L
N
297.65 311.95 342.65 410.95 2 L
N
369.65 311.95 342.65 410.95 2 L
N
1 12 Q
(PRIMAR) 423.65 350.56 T
(Y) 468.88 350.56 T
(ABSTRA) 81.97 555.77 T
(CT) 128.83 555.77 T
189.65 653.95 396.65 680.95 R
N
4 11 Q
(THREAD) 207.65 663.91 T
(RELA) 255.31 663.91 T
(TED) 281.18 663.91 T
( CLASSES) 307.46 663.91 T
3 10 Q
(<object>) 278.15 629.25 T
1 12 Q
(INST) 99.65 494.56 T
(ANTIABLE) 125.2 494.56 T
3 10 Q
(<r) 333.65 296.25 T
(ecursi) 343.61 296.25 T
(v) 369.06 296.25 T
(e-lock>) 373.96 296.25 T
432.65 311.95 369.65 482.95 2 L
N
(<exclusi) 306.65 422.25 T
(v) 341.14 422.25 T
(e-lock>) 346.04 422.25 T
369.65 482.95 351.65 437.95 2 L
N
63.65 105.95 531.65 744.95 C
-8.35 24.95 603.65 816.95 C
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(6) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
0 12 Q
(1.5) 63.65 736.95 T
(Librar) 90.65 736.95 T
(y Ref) 124.78 736.95 T
(erence) 154 736.95 T
0 10 Q
(1.5.1) 63.65 702.29 T
(Lo) 90.65 702.29 T
(w-le) 102.72 702.29 T
(vel sync) 122.02 702.29 T
(hr) 161.39 702.29 T
(onization) 171.19 702.29 T
3 11 Q
(synchronize-side-effects) 63.65 673.62 T
1 F
([Function]) 485.21 673.62 T
4 F
(Signatur) 81.65 648.62 T
(e) 119.14 648.62 T
3 F
(\050\051 => \050\051) 99.65 629.62 T
4 F
(Description) 81.65 604.62 T
1 F
0.28 0.04 (Ensures that all side ef) 99.65 582.62 B
0.28 0.04 (fects which ha) 201.11 582.62 B
0.28 0.04 (v) 265.58 582.62 B
0.28 0.04 (e been performed within the calling thread are also visible) 270.96 582.62 B
0.28 0 (within all other threads, and vice-v) 99.65 569.62 B
0.28 0 (ersa. On a strongly ordered machine this function might le) 254.28 569.62 B
0.28 0 (giti-) 513.3 569.62 B
0.28 0.1 (mately be implemented as a null operation. On a weakly ordered machine, this might be imple-) 99.65 556.62 B
(mented a memory cache \337ushing operation.) 99.65 543.62 T
3 F
(sequence-point) 63.65 514.62 T
1 F
([Function]) 485.21 514.62 T
4 F
(Signatur) 81.65 489.62 T
(e) 119.14 489.62 T
3 F
(\050\051 => \050\051) 99.65 470.62 T
4 F
(Description) 81.65 445.62 T
1 F
0.28 0.13 (A call to this function is an instruction to the compiler that it must consider the possibility that) 99.65 423.62 B
0.28 0.05 (there might be visible side ef) 99.65 410.62 B
0.28 0.05 (fects from other threads at the point of the call. Normally) 229.76 410.62 B
0.28 0.05 (, the com-) 486.37 410.62 B
-0.16 (piler is not obliged to consider this possibility) 99.65 397.62 P
-0.16 (, and is free to rearrange program order pro) 299.23 397.62 P
-0.16 (vided that) 488.11 397.62 P
0.28 0.12 (the reordering can\325) 99.65 384.62 B
0.28 0.12 (t be detected within a thread. A call to this function ef) 185.91 384.62 B
0.28 0.12 (fecti) 432.41 384.62 B
0.28 0.12 (v) 452.27 384.62 B
0.28 0.12 (ely prohibits the) 457.72 384.62 B
0.28 0.04 (compiler from rearranging the order of reads or writes from or to global data, relati) 99.65 371.62 B
0.28 0.04 (v) 471.23 371.62 B
0.28 0.04 (e to the call.) 476.6 371.62 B
0.28 0.31 (This function may disallo) 99.65 358.62 B
0.28 0.31 (w compiler optimizations, leading to less ef) 220.63 358.62 B
0.28 0.31 (f) 427.7 358.62 B
0.28 0.31 (icient code - e) 431.07 358.62 B
0.28 0.31 (v) 498.23 358.62 B
0.28 0.31 (en for) 503.88 358.62 B
0.15 (strongly ordered machines.) 99.65 345.62 P
3 F
0.15 (sequence-point) 222.29 345.62 P
1 F
0.15 ( does not ensure the visibility of side ef) 292.56 345.62 P
0.15 (fects, lik) 466.39 345.62 P
0.15 (e) 504.31 345.62 P
3 F
0.15 (syn-) 512.09 345.62 P
-0.1 (chr) 99.65 332.62 P
-0.1 (onize-side-effects) 115.33 332.62 P
1 F
-0.1 (. Ho) 195.36 332.62 P
-0.1 (we) 213.92 332.62 P
-0.1 (v) 226.47 332.62 P
-0.1 (er) 231.81 332.62 P
-0.1 (,) 239.91 332.62 P
3 F
-0.1 (synchr) 245.31 332.62 P
-0.1 (onize-side-effects) 276.89 332.62 P
1 F
-0.1 ( does imply at least the same set of con-) 356.92 332.62 P
(straints on the compiler as) 99.65 319.62 T
3 F
(sequence-point) 217.89 319.62 T
1 F
(.) 288.17 319.62 T
0 10 Q
(1.5.2) 63.65 285.29 T
(<thread>) 90.65 285.29 T
3 11 Q
(<thread>) 63.65 254.62 T
1 F
([Instantiable Sealed Class]) 414.33 254.62 T
4 F
(Super) 81.65 229.62 T
(classes) 106.9 229.62 T
3 F
(<object>) 99.65 207.62 T
4 F
(Requir) 81.65 182.62 T
(ed-init-k) 111.18 182.62 T
(e) 148.34 182.62 T
(ywor) 152.9 182.62 T
(ds) 174.49 182.62 T
3 F
(function:) 99.65 160.62 T
1 F
-0.13 (A) 171.65 160.62 P
3 F
-0.13 (<function>) 182.21 160.62 P
1 F
-0.13 ( which will be called with no ar) 233.86 160.62 P
-0.13 (guments in the empty dynamic en) 371.74 160.62 P
-0.13 (vi-) 519.43 160.62 P
-0.14 (ronment of the ne) 171.65 147.62 P
-0.14 (w thread. This function will be runnable immediately) 248.86 147.62 P
-0.14 (. If desired,) 481.83 147.62 P
0.28 0.02 (the ne) 171.65 134.62 B
0.28 0.02 (w thread may be suspended \050almost\051 immediately on creation by arranging) 198.33 134.62 B
(for it to synchronize on an una) 171.65 121.62 T
(v) 305.85 121.62 T
(ailable resource on entry to the function.) 311.07 121.62 T
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(7) 526.09 84.9 T
4 11 Q
(Init-k) 81.65 737.62 T
(e) 105.36 737.62 T
(ywor) 109.92 737.62 T
(ds) 131.51 737.62 T
3 F
(priority:) 99.65 715.62 T
1 F
0.28 0.14 (The scheduling priority of the thread, which is a signed inte) 171.65 715.62 B
0.28 0.14 (ger) 445.21 715.62 B
0.28 0.14 (. The higher the) 459.07 715.62 B
0.28 0 (v) 171.65 702.62 B
0.28 0 (alue, the greater the priority) 176.87 702.62 B
0.28 0 (.) 299.79 702.62 B
3 F
0.28 0 ( 0) 302.54 702.62 B
1 F
0.28 0 ( is the def) 311.07 702.62 B
0.28 0 (ault v) 354.87 702.62 B
0.28 0 (alue, and is the v) 379.62 702.62 B
0.28 0 (alue of) 454.71 702.62 B
3 F
0.28 0 ($normal-) 488.26 702.62 B
0.28 0.03 (priority) 171.65 689.62 B
1 F
0.28 0.03 (, one of se) 207.8 689.62 B
0.28 0.03 (v) 253.84 689.62 B
0.28 0.03 (eral constants which correspond to useful priority le) 259.2 689.62 B
0.28 0.03 (v) 491.01 689.62 B
0.28 0.03 (els. The) 496.37 689.62 B
(library currently of) 171.65 676.62 T
(fers no w) 255.07 676.62 T
(ay to change the priority of a thread dynamically) 295.89 676.62 T
(.) 509.63 676.62 T
3 F
(name:) 99.65 654.62 T
1 F
-0.09 (If supplied, this should be a) 171.65 654.62 P
3 F
-0.09 (<string>) 295.48 654.62 P
1 F
-0.09 (, which names the thread object for purposes) 335.52 654.62 P
0.28 0.05 (which might include deb) 171.65 641.62 B
0.28 0.05 (ugging, or supporting inter) 282.59 641.62 B
0.28 0.05 (-process communication in a) 402.61 641.62 B
(future v) 171.65 628.62 T
(ersion of the library) 206 628.62 T
(.) 292.35 628.62 T
4 F
(Description) 81.65 603.62 T
1 F
-0.14 (The class representing a thread of control. Note that there is currently no ability to introspect or set) 99.65 581.62 P
-0.14 (the running state or priority of a thread. These abilities are considered to be related to de) 99.65 568.62 P
-0.14 (v) 485.37 568.62 P
-0.14 (elopment) 490.71 568.62 P
0.1 (en) 99.65 555.62 P
0.1 (vironments, deb) 109.59 555.62 P
0.1 (uggers or schedulers and were deliberately omitted. There is also no w) 180.36 555.62 P
0.1 (ay to ter-) 491.73 555.62 P
0.04 (minate a thread, mainly because I don\325) 99.65 542.62 P
0.04 (t think it\325) 270.47 542.62 P
0.04 (s a safe thing to do an) 310.91 542.62 P
0.04 (yw) 406.93 542.62 P
0.04 (ay without the consent of) 420.27 542.62 P
0.28 0.03 (the thread - and I don\325) 99.65 529.62 B
0.28 0.03 (t kno) 199.57 529.62 B
0.28 0.03 (w ho) 222.02 529.62 B
0.28 0.03 (w to implement it so that cleanups happen. There is currently no) 243.83 529.62 B
0.28 0.08 (w) 99.65 516.62 B
0.28 0.08 (ay to signal a condition on another thread. If there w) 107.56 516.62 B
0.28 0.08 (as, it might pro) 344.98 516.62 B
0.28 0.08 (v) 413.48 516.62 B
0.28 0.08 (e a safe w) 418.89 516.62 B
0.28 0.08 (ay to terminate) 464.04 516.62 B
(threads, so we might lik) 99.65 503.62 T
(e to consider this for the future.) 204.95 503.62 T
4 F
(Oper) 81.65 478.62 T
(ations) 104.09 478.62 T
1 F
(The class) 99.65 456.62 T
3 F
(<thr) 143.64 456.62 T
(ead>) 164.37 456.62 T
1 F
( pro) 187.14 456.62 T
(vides the follo) 204.39 456.62 T
(wing operations:) 267.06 456.62 T
3 F
(thr) 99.65 434.62 T
(ead-name) 114.11 434.62 T
1 F
(Returns the name of a thread, or) 171.65 434.62 T
3 F
(#f) 315.84 434.62 T
1 F
( if no name w) 325 434.62 T
(as supplied.) 385.38 434.62 T
3 F
(join-thr) 99.65 412.62 T
(ead) 136.11 412.62 T
1 F
0.22 (Blocks until one of the speci\336ed threads has terminated, and returns the v) 171.65 412.62 P
0.22 (alues of) 496.91 412.62 P
(its function.) 171.65 399.62 T
4 F
(Associated Constants) 81.65 374.62 T
1 F
-0.05 (The follo) 99.65 352.62 P
-0.05 (wing constants \050in order of increasing v) 139.96 352.62 P
-0.05 (alue\051 may be useful as priority v) 314.16 352.62 P
-0.05 (alues for threads:) 455.98 352.62 P
3 F
($lo) 99.65 330.62 T
(w-priority) 113.6 330.62 T
($backgr) 99.65 308.62 T
(ound-priority) 137.95 308.62 T
($normal-priority) 99.65 286.62 T
($interacti) 99.65 264.62 T
(v) 144.75 264.62 T
(e-priority) 150.14 264.62 T
($high-priority) 99.65 242.62 T
(thread-name) 63.65 213.62 T
1 F
([Function]) 485.21 213.62 T
4 F
(Signatur) 81.65 188.62 T
(e) 119.14 188.62 T
3 F
(\050thr) 99.65 169.62 T
(ead :: <thr) 117.78 169.62 T
(ead>\051 => \050name :: false-or\050<string>\051\051) 167.84 169.62 T
4 F
(Description) 81.65 144.62 T
1 F
(Returns the name of the thread as a) 99.65 122.62 T
3 F
(<string>) 257.28 122.62 T
1 F
(, or) 297.32 122.62 T
(, if the thread is unnamed, returns) 311.54 122.62 T
3 F
(#f) 462.15 122.62 T
1 F
(.) 471.32 122.62 T
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(8) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
3 11 Q
(join-thread) 63.65 737.62 T
1 F
([Function]) 485.21 737.62 T
4 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
3 F
(\050thr) 99.65 693.62 T
(ead1 :: <thr) 117.78 693.62 T
(ead>, #r) 173.34 693.62 T
(est mor) 211.79 693.62 T
(e-thr) 246.72 693.62 T
(eads\051 => \050thr) 269.73 693.62 T
(ead, #r) 330.34 693.62 T
(est r) 362.53 693.62 T
(esults\051) 382.79 693.62 T
4 F
(Ar) 81.65 668.62 T
(guments) 92.24 668.62 T
3 F
(thr) 99.65 646.62 T
(ead1) 114.11 646.62 T
1 F
(A thread object to w) 171.65 646.62 T
(ait for) 261.35 646.62 T
(.) 287.32 646.62 T
3 F
(mor) 99.65 624.62 T
(e-thr) 119 624.62 T
(eads) 142.01 624.62 T
1 F
(More thread objects to w) 171.65 624.62 T
(ait for) 281.52 624.62 T
(.) 307.49 624.62 T
4 F
(V) 81.65 599.62 T
(alues) 87.15 599.62 T
3 F
(thr) 99.65 577.62 T
(ead) 114.11 577.62 T
1 F
(The thread that e) 171.65 577.62 T
(xited) 245.71 577.62 T
3 F
(r) 99.65 555.62 T
(esults) 104.33 555.62 T
1 F
(The v) 171.65 555.62 T
(alues returned from the thread that w) 196.73 555.62 T
(as joined) 359.13 555.62 T
4 F
(Description) 81.65 530.62 T
1 F
0.28 0.04 (Returns one of the supplied threads which has f) 99.65 508.62 B
0.28 0.04 (inished \050because its function has returned\051, along) 312.07 508.62 B
0.28 0.12 (with an) 99.65 495.62 B
0.28 0.12 (y v) 133.27 495.62 B
0.28 0.12 (alues returned by the thread.) 147.37 495.62 B
3 F
0.28 0.12 (join-thr) 279.94 495.62 B
0.28 0.12 (ead) 317.34 495.62 B
1 F
0.28 0.12 ( will block if necessary) 334.19 495.62 B
0.28 0.12 (, while w) 439.42 495.62 B
0.28 0.12 (aiting for a) 481.54 495.62 B
-0.18 (thread to \336nish. It is an error to pass a thread to) 99.65 482.62 P
3 F
-0.18 ( join-thr) 305.41 482.62 P
-0.18 (ead) 344.44 482.62 P
1 F
-0.18 ( if it has already been joined in a pre) 360.94 482.62 P
-0.18 (vi-) 519.43 482.62 P
-0.21 (ous call to) 99.65 469.62 P
3 F
-0.21 (join-thr) 146.99 469.62 P
-0.21 (ead) 183.46 469.62 P
1 F
-0.21 (. It is an error to pass a thread to) 199.96 469.62 P
3 F
-0.21 (join-thr) 342.36 469.62 P
-0.21 (ead) 378.83 469.62 P
1 F
-0.21 ( if that thread is also being pro-) 395.33 469.62 P
0.04 (cessed by another simultaneous call to) 99.65 456.62 P
3 F
0.04 (join-thr) 271.61 456.62 P
0.04 (ead) 308.07 456.62 P
1 F
0.04 ( from another thread. Immediately before) 324.57 456.62 P
3 F
0.04 (join-) 509.65 456.62 P
(thr) 99.65 443.62 T
(ead) 114.11 443.62 T
1 F
( returns, lo) 130.61 443.62 T
(w-le) 177.69 443.62 T
(v) 196.96 443.62 T
(el synchronization is achie) 202.3 443.62 T
(v) 319.03 443.62 T
(ed, as if with) 324.37 443.62 T
3 F
(synchr) 383.94 443.62 T
(onize-side-effects) 415.52 443.62 T
1 F
(.) 495.55 443.62 T
4 F
(Exceptions) 81.65 418.62 T
3 F
(join-thr) 99.65 396.62 T
(ead) 136.11 396.62 T
1 F
( may signal the follo) 152.61 396.62 T
(wing condition:) 242.78 396.62 T
3 F
(<duplicate-join-err) 99.65 374.62 T
(or>) 189.43 374.62 T
1 F
0.28 0.01 (A condition of this class \050a subclass of) 171.65 361.62 B
3 F
0.28 0.01 (<err) 346.71 361.62 B
0.28 0.01 (or>) 367.48 361.62 B
1 F
0.28 0.01 (\051 may be signalled when a thread) 384.18 361.62 B
0.28 0.13 (is passed to) 171.65 348.62 B
3 F
0.28 0.13 (join-thr) 227.64 348.62 B
0.28 0.13 (ead) 265.15 348.62 B
1 F
0.28 0.13 (, if that thread has been pre) 282.05 348.62 B
0.28 0.13 (viously joined by an earlier) 406.65 348.62 B
0.28 0.2 (call to) 171.65 335.62 B
3 F
0.28 0.2 (join-thr) 203.77 335.62 B
0.28 0.2 (ead) 241.87 335.62 B
1 F
0.28 0.2 (, or if that thread is currently acti) 258.99 335.62 B
0.28 0.2 (v) 413 335.62 B
0.28 0.2 (e in another call to) 418.54 335.62 B
3 F
0.28 0.2 (join-) 508.83 335.62 B
(thr) 171.65 322.62 T
(ead) 186.11 322.62 T
1 F
(.) 202.61 322.62 T
3 F
(thread-yield) 63.65 293.62 T
1 F
([Function]) 485.21 293.62 T
4 F
(Signatur) 81.65 268.62 T
(e) 119.14 268.62 T
3 F
(\050\051 => \050\051) 99.65 249.62 T
4 F
(Description) 81.65 224.62 T
1 F
0.28 0.2 (Causes the current thread to yield control to the thread scheduler) 99.65 202.62 B
0.28 0.2 (. This may ha) 398.96 202.62 B
0.28 0.2 (v) 462.02 202.62 B
0.28 0.2 (e the ef) 467.55 202.62 B
0.28 0.2 (fect of) 501.78 202.62 B
-0.16 (allo) 99.65 189.62 P
-0.16 (wing other threads to run - and may be essential to a) 115.87 189.62 P
-0.16 (v) 343.98 189.62 P
-0.16 (oid deadlock in a co-operati) 349.27 189.62 P
-0.16 (v) 471.17 189.62 P
-0.16 (e scheduling) 476.51 189.62 P
0.11 (en) 99.65 176.62 P
0.11 (vironment. Before) 109.59 176.62 P
3 F
0.11 (thr) 193.21 176.62 P
0.11 (ead-yield) 207.67 176.62 P
1 F
0.11 ( yields control, lo) 250.45 176.62 P
0.11 (w-le) 327.5 176.62 P
0.11 (v) 346.77 176.62 P
0.11 (el synchronization is achie) 352.11 176.62 P
0.11 (v) 469.16 176.62 P
0.11 (ed, as if with) 474.5 176.62 P
3 F
(synchr) 99.65 163.62 T
(onize-side-effects) 131.23 163.62 T
1 F
(.) 211.25 163.62 T
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(9) 526.09 84.9 T
3 11 Q
(current-thread) 63.65 737.62 T
1 F
([Function]) 485.21 737.62 T
4 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
3 F
(\050\051 => \050thr) 99.65 693.62 T
(ead :: <thr) 143.14 693.62 T
(ead>\051) 193.2 693.62 T
4 F
(Description) 81.65 668.62 T
1 F
(Returns the current thread.) 99.65 646.62 T
0 10 Q
(1.5.3) 63.65 612.29 T
(<sync) 90.65 612.29 T
(hr) 119.18 612.29 T
(onization>) 128.98 612.29 T
3 11 Q
(<synchronization>) 63.65 581.62 T
1 F
([Abstract Open Class]) 433.89 581.62 T
4 F
(Super) 81.65 556.62 T
(classes) 106.9 556.62 T
3 F
(<object>) 99.65 534.62 T
4 F
(Init-k) 81.65 509.62 T
(e) 105.36 509.62 T
(ywor) 109.92 509.62 T
(ds) 131.51 509.62 T
3 F
(name:) 99.65 487.62 T
1 F
-0.17 (If supplied, this should be a) 171.65 487.62 P
3 F
-0.17 (<string>) 294.98 487.62 P
1 F
-0.17 (, which names the synchronization object for) 335.02 487.62 P
0.28 0.06 (purposes which might include deb) 171.65 474.62 B
0.28 0.06 (ugging, or supporting inter) 325.51 474.62 B
0.28 0.06 (-process communi-) 445.79 474.62 B
(cation in a future v) 171.65 461.62 T
(ersion of the library) 254.58 461.62 T
(.) 340.93 461.62 T
4 F
(Oper) 81.65 436.62 T
(ations) 104.09 436.62 T
1 F
(The class) 99.65 414.62 T
3 F
(<synchr) 143.64 414.62 T
(onization>) 181.49 414.62 T
1 F
( provides the following operations:) 231.15 414.62 T
3 F
(wait-f) 99.65 392.62 T
(or) 126.86 392.62 T
1 F
(Block until synchronization can be achie) 171.65 392.62 T
(v) 350.71 392.62 T
(ed.) 356.04 392.62 T
3 F
(r) 99.65 370.62 T
(elease) 104.33 370.62 T
1 F
(Release the object to mak) 171.65 370.62 T
(e it a) 284.57 370.62 T
(v) 305.74 370.62 T
(ailable for synchronization.) 310.96 370.62 T
3 F
(synchr) 99.65 348.62 T
(onization-name) 131.23 348.62 T
1 F
(Returns the name of the synchronization object.) 171.65 335.62 T
4 F
(Description) 81.65 310.62 T
1 F
0.05 (The class of objects which are used for inter) 99.65 288.62 P
0.05 (-thread synchronization. There is currently no e) 294.13 288.62 P
0.05 (xplicit) 503.53 288.62 P
0.28 0.1 (mechanism in the library to block on a number of synchronization objects simultaneously) 99.65 275.62 B
0.28 0.1 (, until) 505.1 275.62 B
0.28 0.07 (synchronization can be achie) 99.65 262.62 B
0.28 0.07 (v) 229.42 262.62 B
0.28 0.07 (ed with one of them. This mechanism may be achie) 234.82 262.62 B
0.28 0.07 (v) 466.86 262.62 B
0.28 0.07 (ed instead by) 472.26 262.62 B
0.28 0.14 (creating a ne) 99.65 249.62 B
0.28 0.14 (w thread to w) 157.98 249.62 B
0.28 0.14 (ait for each synchronization object, and arranging for each thread to) 220.74 249.62 B
(release a noti\336cation once synchronization has been achie) 99.65 236.62 T
(v) 353.84 236.62 T
(ed.) 359.17 236.62 T
3 F
(wait-for) 63.65 207.62 T
1 F
([Open Generic Function]) 421.07 207.62 T
4 F
(Signatur) 81.65 182.62 T
(e) 119.14 182.62 T
3 F
(\050object :: <synchr) 99.65 163.62 T
(onization>, #k) 182.7 163.62 T
(ey timeout = #f\051 => \050success :: <boolean>\051) 249.37 163.62 T
4 F
(Ar) 81.65 138.62 T
(guments) 92.24 138.62 T
3 F
(object) 99.65 116.62 T
1 F
(Synchronization object to w) 171.65 116.62 T
(ait for) 295.28 116.62 T
(.) 321.25 116.62 T
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(10) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
3 11 Q
(timeout) 99.65 737.62 T
1 F
0.28 0.26 (T) 171.65 737.62 B
0.28 0.26 (ime-out interv) 178.25 737.62 B
0.28 0.26 (al . If the v) 244.6 737.62 B
0.28 0.26 (alue is) 296.83 737.62 B
3 F
0.28 0.26 (#f) 330.67 737.62 B
1 F
0.28 0.26 (\050the def) 343.65 737.62 B
0.28 0.26 (ault\051, the time-out interv) 379.84 737.62 B
0.28 0.26 (al ne) 494.83 737.62 B
0.28 0.26 (v) 517.23 737.62 B
0.28 0.26 (er) 522.84 737.62 B
0.28 0.2 (elapses. Otherwise the v) 171.65 724.62 B
0.28 0.2 (alue should be a) 283.94 724.62 B
3 F
0.28 0.2 (<r) 362.39 724.62 B
0.28 0.2 (eal>) 373.75 724.62 B
1 F
0.28 0.2 (, corresponding to the desired) 394.27 724.62 B
(interv) 171.65 711.62 T
(al in seconds.) 197.04 711.62 T
4 F
(V) 81.65 686.62 T
(alues) 87.15 686.62 T
3 F
(success) 99.65 664.62 T
(#t) 171.65 664.62 T
1 F
( if synchronization w) 180.81 664.62 T
(as achie) 273.88 664.62 T
(v) 308.73 664.62 T
(ed, or) 314.07 664.62 T
3 F
(#f) 341.86 664.62 T
1 F
(to indicate that a time-out occurred.) 353.77 664.62 T
4 F
(Description) 81.65 639.62 T
1 F
0.28 0.06 (This is the basic blocking primiti) 99.65 617.62 B
0.28 0.06 (v) 248.02 617.62 B
0.28 0.06 (e of the threads library) 253.42 617.62 B
0.28 0.06 (. The function blocks until the object is) 354.89 617.62 B
0.28 0.01 (a) 99.65 604.62 B
0.28 0.01 (v) 104.32 604.62 B
0.28 0.01 (ailable and synchronization can be achie) 109.55 604.62 B
0.28 0.01 (v) 288.99 604.62 B
0.28 0.01 (ed, or the time-out interv) 294.33 604.62 B
0.28 0.01 (al has e) 405 604.62 B
0.28 0.01 (xpired. A non-block-) 438.42 604.62 B
-0.27 (ing synchronization may be attempted by specifying a timeout of 0. Indi) 99.65 591.62 P
-0.27 (vidual methods may adjust) 414.2 591.62 P
0.14 (the state of the synchronization object on synchronization. The function returns) 99.65 578.62 P
3 F
0.14 (#t) 453.16 578.62 P
1 F
0.14 ( if synchroniza-) 462.33 578.62 P
0.09 (tion is achie) 99.65 565.62 P
0.09 (v) 152.72 565.62 P
0.09 (ed before this interv) 158.05 565.62 P
0.09 (al elapses - otherwise it returns) 246.34 565.62 P
3 F
0.09 (#f) 386.2 565.62 P
0.09 (.) 395.2 565.62 P
1 F
0.09 ( All methods of) 397.95 565.62 P
3 F
0.09 (wait-f) 469.81 565.62 P
0.09 (or) 497.03 565.62 P
1 F
0.09 ( must) 507.41 565.62 P
0.28 0.11 (guarantee that once synchronization has been achie) 99.65 552.62 B
0.28 0.11 (v) 332.06 552.62 B
0.28 0.11 (ed, the side-ef) 337.51 552.62 B
0.28 0.11 (fects of other threads will be) 401.47 552.62 B
(visible, as if by a call to) 99.65 539.62 T
3 F
(synchr) 207.2 539.62 T
(onize-side-effects) 238.78 539.62 T
1 F
(.) 318.8 539.62 T
3 F
(release) 63.65 510.62 T
1 F
([Open Generic Function]) 421.07 510.62 T
4 F
(Signatur) 81.65 485.62 T
(e) 119.14 485.62 T
3 F
(\050object :: <synchr) 99.65 466.62 T
(onization>, #k) 182.7 466.62 T
(ey\051 => \050\051) 249.37 466.62 T
4 F
(Ar) 81.65 441.62 T
(guments) 92.24 441.62 T
3 F
(object) 99.65 419.62 T
1 F
(Synchronization object to release.) 171.65 419.62 T
4 F
(V) 81.65 394.62 T
(alues) 87.15 394.62 T
1 F
(None) 99.65 372.62 T
4 F
(Description) 81.65 347.62 T
1 F
-0.21 (Releases the supplied synchronization object, potentially making it a) 99.65 325.62 P
-0.21 (v) 399.89 325.62 P
-0.21 (ailable to other threads. Indi-) 405.11 325.62 P
-0.02 (vidual methods describe what this means for each class of synchronization. This function does not) 99.65 312.62 P
0.28 0.18 (block for an) 99.65 299.62 B
0.28 0.18 (y of the subclasses of) 155.34 299.62 B
3 F
0.28 0.18 (<synchr) 257.68 299.62 B
0.28 0.18 (onization>) 296.78 299.62 B
1 F
0.28 0.18 ( pro) 348.24 299.62 B
0.28 0.18 (vided by the library) 366.48 299.62 B
0.28 0.18 (. All methods of) 456.63 299.62 B
3 F
0.03 (r) 99.65 286.62 P
0.03 (elease) 104.33 286.62 P
1 F
0.03 (must guarantee that the side ef) 134.6 286.62 P
0.03 (fects of the calling thread will be visible to other threads, as) 268.59 286.62 P
(if by a call to) 99.65 273.62 T
3 F
(synchr) 160.45 273.62 T
(onize-side-effects) 192.03 273.62 T
1 F
(.) 272.05 273.62 T
4 F
(Exceptions) 81.65 248.62 T
1 F
(Indi) 99.65 226.62 T
(vidual methods may pro) 117.09 226.62 T
(vide their o) 223.56 226.62 T
(wn policies.) 273.39 226.62 T
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(11) 520.53 84.9 T
3 11 Q
(synchronization-name) 63.65 737.62 T
1 F
([Open Generic Function]) 421.07 737.62 T
4 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
3 F
(\050object :: <synchr) 99.65 693.62 T
(onization>\051 => \050name :: false-or\050<string>\051\051) 182.7 693.62 T
4 F
(Description) 81.65 668.62 T
1 F
0.28 0.09 (Returns the name of the synchronization object, if it w) 99.65 646.62 B
0.28 0.09 (as specif) 346.56 646.62 B
0.28 0.09 (ied with the) 385.24 646.62 B
3 F
0.28 0.09 (name:) 441.94 646.62 B
1 F
0.28 0.09 ( initialization) 471.73 646.62 B
(k) 99.65 633.62 T
(e) 105.04 633.62 T
(yw) 109.76 633.62 T
(ord. Otherwise) 123.09 633.62 T
3 F
(#f) 191.21 633.62 T
1 F
( is returned.) 200.38 633.62 T
0 10 Q
(1.5.4) 63.65 599.29 T
(<loc) 90.65 599.29 T
(k>) 110.74 599.29 T
3 11 Q
(<lock>) 63.65 568.62 T
1 F
([Abstract Instantiable Class]) 406.39 568.62 T
4 F
(Super) 81.65 543.62 T
(classes) 106.9 543.62 T
3 F
(<synchr) 99.65 521.62 T
(onization>) 137.5 521.62 T
4 F
(Description) 81.65 496.62 T
1 F
0.28 0.11 (Locks are synchronization objects which change state on synchronization \050using) 99.65 474.62 B
3 F
0.28 0.11 (wait-f) 467.3 474.62 B
0.28 0.11 (or) 495.17 474.62 B
1 F
0.28 0.11 (\051, and) 505.78 474.62 B
-0.07 (re) 99.65 461.62 P
-0.07 (v) 107.92 461.62 P
-0.07 (ert state on) 113.25 461.62 P
3 F
-0.07 (r) 164.06 461.62 P
-0.07 (elease) 168.75 461.62 P
1 F
-0.07 (. It is normally necessary for programs to ensure that locks are released, oth-) 196.24 461.62 P
-0.25 (erwise there is the possibility of deadlock. Locks may be used to restrict the access of other threads) 99.65 448.62 P
0.28 0.18 (to shared resources between the synchronization and the release. It is common for a protected) 99.65 435.62 B
0.04 (operation to be performed by body of code which is e) 99.65 422.62 P
0.04 (v) 335.58 422.62 P
0.04 (aluated in a single thread between synchro-) 340.81 422.62 P
0.28 0.06 (nization and release. A macro) 99.65 409.62 B
3 F
0.28 0.06 (with-lock) 236.6 409.62 B
1 F
0.28 0.06 (is pro) 284.21 409.62 B
0.28 0.06 (vided for this purpose. When a thread uses a lock) 309.43 409.62 B
(for mutual-e) 99.65 396.62 T
(xclusion in this w) 154.16 396.62 T
(ay) 231.98 396.62 T
(, the thread is said to o) 241.65 396.62 T
(wn the lock.) 340.67 396.62 T
3 F
(<lock>) 99.65 374.62 T
1 F
( has no direct instances; calling mak) 131.75 374.62 T
(e on) 291.11 374.62 T
3 F
(<lock>) 312.5 374.62 T
1 F
(returns an instance of) 347.35 374.62 T
3 F
(<simple-lock>) 444.49 374.62 T
1 F
(.) 510.81 374.62 T
4 F
(Oper) 81.65 349.62 T
(ations) 104.09 349.62 T
1 F
(The class) 99.65 327.62 T
3 F
(<lock>) 143.64 327.62 T
1 F
( provides the following operations:) 175.74 327.62 T
3 F
(with-lock) 99.65 305.62 T
1 F
(Ex) 171.65 305.62 T
(ecute a body of code between) 183.7 305.62 T
3 F
(wait-f) 316.88 305.62 T
(or) 344.1 305.62 T
1 F
( and) 354.48 305.62 T
3 F
(r) 375.86 305.62 T
(elease) 380.55 305.62 T
1 F
( operations.) 408.04 305.62 T
3 F
(with-lock) 63.65 276.62 T
1 F
([Macro]) 495.61 276.62 T
4 F
(Syntax) 81.65 251.62 T
3 F
(with-lock \050lock :: <lock>, #k) 99.65 232.62 T
(ey) 231.55 232.62 T
4 F
(k) 244.68 232.62 T
(e) 249.46 232.62 T
(ys) 254.01 232.62 T
3 F
(\051) 263.17 232.62 T
4 F
(body) 121.25 219.62 T
3 F
([failur) 99.65 206.62 T
(e) 129.39 206.62 T
4 F
(failur) 137.03 206.62 T
(e-e) 161.07 206.62 T
(xpr) 174.28 206.62 T
3 F
(]) 188.95 206.62 T
(end) 99.65 193.62 T
4 F
(Exceptions) 81.65 168.62 T
3 F
(with-lock) 99.65 146.62 T
1 F
( may signal a condition of the follo) 143.65 146.62 T
(wing class \050a subclass of) 297.67 146.62 T
3 F
(<serious-condition>) 409.18 146.62 T
1 F
(\051:) 502.39 146.62 T
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(12) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
3 11 Q
(<timeout-expir) 99.65 737.62 T
(ed>) 169.87 737.62 T
1 F
0.28 0.03 (This is signalled when) 171.65 724.62 B
3 F
0.28 0.03 (with-lock) 274.86 724.62 B
1 F
0.28 0.03 ( did not succeed in claiming the lock within the) 319.12 724.62 B
(timeout period.) 171.65 711.62 T
4 F
(Description) 81.65 686.62 T
1 F
-0.16 (Ex) 99.65 664.62 P
-0.16 (ecute the body with the lock held. If a) 111.7 664.62 P
3 F
-0.16 (failur) 279.5 664.62 P
-0.16 (e) 305.58 664.62 P
1 F
-0.16 ( clause is supplied, then it will be e) 310.46 664.62 P
-0.16 (v) 463.2 664.62 P
-0.16 (aluated and its) 468.42 664.62 P
0.28 0.08 (v) 99.65 651.62 B
0.28 0.08 (alues returned from) 104.95 651.62 B
3 F
0.28 0.08 (with-lock) 196.21 651.62 B
1 F
0.28 0.08 ( if the lock cannot be claimed \050because a timeout occurred\051. The) 240.9 651.62 B
0.28 0.07 (def) 99.65 638.62 B
0.28 0.07 (ault, if no) 113.79 638.62 B
3 F
0.28 0.07 (failur) 160.64 638.62 B
0.28 0.07 (e) 187.13 638.62 B
1 F
0.28 0.07 ( clause is supplied, is to signal an e) 192.08 638.62 B
0.28 0.07 (xception of class) 350.98 638.62 B
3 F
0.28 0.07 (<timeout-expir) 429.7 638.62 B
0.28 0.07 (ed>) 500.87 638.62 B
1 F
0.28 0.07 (. If) 518.34 638.62 B
0.28 0.01 (there is no f) 99.65 625.62 B
0.28 0.01 (ailure,) 152.75 625.62 B
3 F
0.28 0.01 (with-lock) 183.67 625.62 B
1 F
0.28 0.01 ( returns the results of e) 227.77 625.62 B
0.28 0.01 (v) 329.67 625.62 B
0.28 0.01 (aluating the body) 334.91 625.62 B
0.28 0.01 (. As an e) 411.32 625.62 B
0.28 0.01 (xample, if no) 450.58 625.62 B
3 F
0.28 0.01 (fail-) 512.67 625.62 B
(ur) 99.65 612.62 T
(e) 110.45 612.62 T
1 F
( clause is supplied, the macro e) 115.33 612.62 T
(xpands into code equi) 252.34 612.62 T
(v) 348.3 612.62 T
(alent to the follo) 353.53 612.62 T
(wing:) 425.67 612.62 T
3 F
(if \050) 99.65 593.62 T
(wait-f) 121.25 593.62 T
(or\050lock,) 148.46 593.62 T
4 F
(k) 187.57 593.62 T
(e) 192.34 593.62 T
(ys ...) 196.9 593.62 T
3 F
(\051\051) 217.06 593.62 T
(block \050\051) 121.25 580.62 T
4 F
(body ...) 135.65 567.62 T
3 F
(cleanup) 121.25 554.62 T
(r) 135.65 541.62 T
(elease\050lock\051) 140.33 541.62 T
(end block) 121.25 528.62 T
(else) 99.65 515.62 T
(signal\050mak) 121.25 502.62 T
(e\050<timeout-expir) 173.09 502.62 T
(ed>, synchr) 251.86 502.62 T
(onization: lock\051) 306.21 502.62 T
(end if) 99.65 489.62 T
(<semaphore>) 63.65 458.62 T
1 F
([Instantiable Primary Class]) 408.22 458.62 T
4 F
(Super) 81.65 433.62 T
(classes) 106.9 433.62 T
3 F
(<lock>) 99.65 411.62 T
4 F
(Description) 81.65 386.62 T
3 F
0.28 0.14 (<semaphor) 99.65 364.62 B
0.28 0.14 (e>) 153.44 364.62 B
1 F
0.28 0.14 ( is a class representing a traditional counting semaphore. An instance of) 164.88 364.62 B
3 F
0.28 0.14 (<sema-) 497.32 364.62 B
0.28 0 (phor) 99.65 351.62 B
0.28 0 (e>) 122.08 351.62 B
1 F
0.28 0 ( contains a counter in its internal state. Calling) 133.24 351.62 B
3 F
0.28 0 (r) 343.08 351.62 B
0.28 0 (elease) 347.77 351.62 B
1 F
0.28 0 ( on a semaphore will increment the) 375.28 351.62 B
-0.22 (internal count. Calling) 99.65 338.62 P
3 F
-0.22 (wait-f) 200.41 338.62 P
-0.22 (or) 227.63 338.62 P
1 F
-0.22 ( on a sempahore will decrement the internal count, unless it is zero,) 238.01 338.62 P
0.28 0.07 (in which case the thread will block until another thread releases the semaphore. Semaphores are) 99.65 325.62 B
0.28 0.15 (less ef) 99.65 312.62 B
0.28 0.15 (f) 128.5 312.62 B
0.28 0.15 (icient than e) 131.71 312.62 B
0.28 0.15 (xclusi) 187.81 312.62 B
0.28 0.15 (v) 214.72 312.62 B
0.28 0.15 (e locks, b) 220.2 312.62 B
0.28 0.15 (ut the) 263.89 312.62 B
0.28 0.15 (y ha) 289.65 312.62 B
0.28 0.15 (v) 308.94 312.62 B
0.28 0.15 (e asynchronous properties which may be useful) 314.43 312.62 B
0.28 0.18 (\050e.g. for managing queues, or pools of shared resources\051. Semaphores may be released by an) 99.65 299.62 B
0.28 0.18 (y) 526.15 299.62 B
0.28 0.13 (thread, so there is no b) 99.65 286.62 B
0.28 0.13 (uilt-in concept of a thread o) 203.57 286.62 B
0.28 0.13 (wning a semaphore. It is not necessary for a) 330.39 286.62 B
0.28 0.12 (thread to release a semphore after w) 99.65 273.62 B
0.28 0.12 (aiting for it - although semaphores may be used as locks if) 264.48 273.62 B
(the) 99.65 260.62 T
(y do.) 112.93 260.62 T
4 F
(Init-k) 81.65 235.62 T
(e) 105.36 235.62 T
(ywor) 109.92 235.62 T
(ds) 131.51 235.62 T
3 F
(initial-count:) 99.65 213.62 T
1 F
0.28 0.21 (This should be a non-ne) 171.65 213.62 B
0.28 0.21 (g) 283.15 213.62 B
0.28 0.21 (ati) 288.81 213.62 B
0.28 0.21 (v) 300.17 213.62 B
0.28 0.21 (e inte) 305.72 213.62 B
0.28 0.21 (ger) 331.23 213.62 B
0.28 0.21 (, corresponding to the initial state of the) 345.47 213.62 B
(internal counter) 171.65 200.62 T
(. The def) 240.39 200.62 T
(ault v) 279.68 200.62 T
(alue is 0.) 304.15 200.62 T
3 F
(maximum-count:) 99.65 178.62 T
1 F
0.28 0.09 (This should be a non-ne) 171.65 165.62 B
0.28 0.09 (g) 280.36 165.62 B
0.28 0.09 (ati) 285.89 165.62 B
0.28 0.09 (v) 296.88 165.62 B
0.28 0.09 (e inte) 302.31 165.62 B
0.28 0.09 (ger corresponding to the maximum permitted) 327.09 165.62 B
0.28 0.09 (v) 171.65 152.62 B
0.28 0.09 (alue of the internal counter) 176.96 152.62 B
0.28 0.09 (. The def) 298.34 152.62 B
0.28 0.09 (ault v) 338.95 152.62 B
0.28 0.09 (alue is the lar) 364.2 152.62 B
0.28 0.09 (gest v) 425.06 152.62 B
0.28 0.09 (alue supported by) 451.54 152.62 B
0.28 0.07 (the implementation, which is the v) 171.65 139.62 B
0.28 0.07 (alue of the constant) 327.44 139.62 B
3 F
0.28 0.07 ($semaphor) 418.69 139.62 B
0.28 0.07 (e-maximum-) 471.11 139.62 B
(count-limit) 171.65 126.62 T
1 F
(. This constant will not be smaller that) 223.59 126.62 T
3 F
(10000) 395 126.62 T
1 F
(.) 422.5 126.62 T
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(13) 520.53 84.9 T
3 11 Q
(wait-for) 63.65 737.62 T
1 F
([Sealed Method]) 458.02 737.62 T
4 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
3 F
(\050object :: <semaphor) 99.65 693.62 T
(e>, #k) 197.36 693.62 T
(ey timeout = #f\051 => \050success :: <boolean>\051) 225.52 693.62 T
(release) 63.65 664.62 T
1 F
([Sealed Method]) 458.02 664.62 T
4 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
3 F
(\050object :: <semaphor) 99.65 620.62 T
(e>, #k) 197.36 620.62 T
(ey\051 => \050\051) 225.52 620.62 T
4 F
(Exceptions) 81.65 595.62 T
3 F
(Release) 99.65 573.62 T
1 F
( may signal a condition of the follo) 135.08 573.62 T
(wing class \050which is a subclass of) 289.1 573.62 T
3 F
(<err) 440.33 573.62 T
(or>) 461.05 573.62 T
1 F
(\051.) 477.71 573.62 T
3 F
(<count-exceeded-err) 99.65 551.62 T
(or>) 196.13 551.62 T
1 F
0.21 (This may signalled when an attempt is made to release a) 171.65 538.62 P
3 F
0.21 (<semaphor) 424.79 538.62 P
0.21 (e>) 477.3 538.62 P
1 F
0.21 ( when the) 488.46 538.62 P
(internal counter is already at its maximum count.) 171.65 525.62 T
3 F
(<exclusive-lock>) 63.65 494.62 T
1 F
([Abstract Instantiable Class]) 406.39 494.62 T
4 F
(Super) 81.65 469.62 T
(classes) 106.9 469.62 T
3 F
(<lock>) 99.65 447.62 T
4 F
(Description) 81.65 422.62 T
3 F
0.07 (<exclusi) 99.65 400.62 P
0.07 (v) 137.59 400.62 P
0.07 (e-lock>) 142.98 400.62 P
1 F
0.07 ( is the class of locks for which threads cannot change the state of the lock unless) 177.35 400.62 P
0.04 (the) 99.65 387.62 P
0.04 (y o) 112.93 387.62 P
0.04 (wn it. An instance of) 126.44 387.62 P
3 F
0.04 (<exclusi) 221.37 387.62 P
0.04 (v) 259.3 387.62 P
0.04 (e-lock>) 264.69 387.62 P
1 F
0.04 ( may only be lock) 299.07 387.62 P
0.04 (ed by one thread at a time \050by call-) 377.96 387.62 P
0.28 0.06 (ing) 99.65 374.62 B
3 F
0.28 0.06 (wait-f) 116.97 374.62 B
0.28 0.06 (or) 144.54 374.62 B
1 F
0.28 0.06 ( on the lock\051. Once lock) 155.04 374.62 B
0.28 0.06 (ed, an) 263.42 374.62 B
0.28 0.06 (y attempt by an) 290.15 374.62 B
0.28 0.06 (y other thread to w) 359.83 374.62 B
0.28 0.06 (ait for the lock will) 445.04 374.62 B
0.28 0.05 (cause that thread to block. It is an error for a thread to release an) 99.65 361.62 B
3 F
0.28 0.05 (<exclusi) 393.26 361.62 B
0.28 0.05 (v) 431.6 361.62 B
0.28 0.05 (e-lock>) 437.04 361.62 B
1 F
0.28 0.05 ( if it does not) 471.77 361.62 B
0.28 0.12 (o) 99.65 348.62 B
0.28 0.12 (wn the lock. The notion of o) 105 348.62 B
0.28 0.12 (wnership is directly supported by the class, and a thread may test) 234.74 348.62 B
(whether an) 99.65 335.62 T
3 F
(<exclusi) 150.96 335.62 T
(v) 188.9 335.62 T
(e-lock>) 194.29 335.62 T
1 F
( is currently o) 228.67 335.62 T
(wned.) 289.19 335.62 T
3 F
-0.11 (<exclusi) 99.65 313.62 P
-0.11 (v) 137.59 313.62 P
-0.11 (e-lock>) 142.98 313.62 P
1 F
-0.11 ( has no direct instances; calling mak) 177.35 313.62 P
-0.11 (e on) 336.07 313.62 P
3 F
-0.11 (<exclusi) 357.24 313.62 P
-0.11 (v) 395.18 313.62 P
-0.11 (e-lock>) 400.57 313.62 P
1 F
-0.11 (returns an instance of) 437.58 313.62 P
3 F
(<simple-lock>) 99.65 300.62 T
1 F
(.) 165.97 300.62 T
4 F
(Init-k) 81.65 275.62 T
(e) 105.36 275.62 T
(ywor) 109.92 275.62 T
(ds) 131.51 275.62 T
(Oper) 81.65 250.62 T
(ations) 104.09 250.62 T
1 F
(The class) 99.65 228.62 T
3 F
(<exclusi) 143.64 228.62 T
(v) 181.58 228.62 T
(e-lock>) 186.97 228.62 T
1 F
(provides the following operations:) 224.09 228.62 T
3 F
(o) 99.65 206.62 T
(wned?) 105.04 206.62 T
1 F
(T) 171.65 206.62 T
(ests to see if the lock is o) 177.6 206.62 T
(wned by the current thread.) 287.62 206.62 T
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(14) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
3 11 Q
(release) 63.65 737.62 T
1 F
([GF Method]) 473.29 737.62 T
4 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
3 F
(\050object :: <exclusi) 99.65 693.62 T
(v) 182.79 693.62 T
(e-lock>, #k) 188.18 693.62 T
(ey\051 => \050\051) 239.56 693.62 T
4 F
(Exceptions) 81.65 668.62 T
1 F
(Release may signal a condition of the follo) 99.65 646.62 T
(wing class \050which is a subclass of) 287.88 646.62 T
3 F
(<err) 439.11 646.62 T
(or>) 459.83 646.62 T
1 F
(\051.) 476.49 646.62 T
3 F
(<not-o) 99.65 624.62 T
(wned-err) 130.25 624.62 T
(or>) 173.43 624.62 T
1 F
0.28 0.13 (This may be signalled when an attempt is made to release an) 171.65 611.62 B
3 F
0.28 0.13 (<exclusi) 452.04 611.62 B
0.28 0.13 (v) 490.99 611.62 B
0.28 0.13 (e-lock>) 496.51 611.62 B
1 F
(when the lock is not o) 171.65 598.62 T
(wned by the current thread.) 268.23 598.62 T
3 F
(owned?) 63.65 569.62 T
1 F
([Generic Function]) 447.64 569.62 T
4 F
(Signatur) 81.65 544.62 T
(e) 119.14 544.62 T
3 F
(\050object :: <exclusi) 99.65 525.62 T
(v) 182.79 525.62 T
(e-lock>\051 => \050o) 188.18 525.62 T
(wned? :: <boolean>\051) 253.31 525.62 T
4 F
(Description) 81.65 500.62 T
1 F
(A predicate to test whether the e) 99.65 478.62 T
(xclusi) 241.83 478.62 T
(v) 267.84 478.62 T
(e lock is lock) 273.17 478.62 T
(ed by the current thread.) 331.42 478.62 T
3 F
(<recursive-lock>) 63.65 447.62 T
1 F
([Instantiable Primary Class]) 408.22 447.62 T
4 F
(Super) 81.65 422.62 T
(classes) 106.9 422.62 T
3 F
(<exclusi) 99.65 400.62 T
(v) 137.59 400.62 T
(e-lock>) 142.98 400.62 T
4 F
(Description) 81.65 375.62 T
1 F
0.28 0.24 (A thread may lock a) 99.65 353.62 B
3 F
0.28 0.24 (<r) 197.69 353.62 B
0.28 0.24 (ecursi) 209.12 353.62 B
0.28 0.24 (v) 238.52 353.62 B
0.28 0.24 (e-lock>) 244.15 353.62 B
1 F
0.28 0.24 ( multiple times, recursi) 280.18 353.62 B
0.28 0.24 (v) 387.83 353.62 B
0.28 0.24 (ely) 393.4 353.62 B
0.28 0.24 (, b) 406.83 353.62 B
0.28 0.24 (ut the lock must later be) 418.6 353.62 B
(released the same number of times. The lock will be freed on the last of these releases.) 99.65 340.62 T
3 F
(wait-for) 63.65 311.62 T
1 F
([Sealed Method]) 458.02 311.62 T
4 F
(Signatur) 81.65 286.62 T
(e) 119.14 286.62 T
3 F
(\050object :: <r) 99.65 264.62 T
(ecursi) 155.8 264.62 T
(v) 183.8 264.62 T
(e-lock>, #k) 189.19 264.62 T
(ey timeout = #f\051 => \050success :: <boolean>\051) 240.57 264.62 T
(release) 63.65 235.62 T
1 F
([Sealed Method]) 458.02 235.62 T
4 F
(Signatur) 81.65 210.62 T
(e) 119.14 210.62 T
3 F
(\050object :: <r) 99.65 188.62 T
(ecursi) 155.8 188.62 T
(v) 183.8 188.62 T
(e-lock>, #k) 189.19 188.62 T
(ey\051 => \050\051) 240.57 188.62 T
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(15) 520.53 84.9 T
3 11 Q
(owned?) 63.65 708.62 T
1 F
([Sealed Method]) 458.02 708.62 T
4 F
(Signatur) 81.65 683.62 T
(e) 119.14 683.62 T
3 F
(\050object :: <r) 99.65 661.62 T
(ecursi) 155.8 661.62 T
(v) 183.8 661.62 T
(e-lock>\051 => \050o) 189.19 661.62 T
(wned? :: <boolean>\051) 254.32 661.62 T
(<simple-lock>) 63.65 630.62 T
1 F
([Instantiable Primary Class]) 408.22 630.62 T
4 F
(Super) 81.65 605.62 T
(classes) 106.9 605.62 T
3 F
(<exclusi) 99.65 583.62 T
(v) 137.59 583.62 T
(e-lock>) 142.98 583.62 T
4 F
(Description) 81.65 558.62 T
3 F
0.06 (<simple-lock>) 99.65 536.62 P
1 F
0.06 ( is the class representing the most simple and ef) 165.97 536.62 P
0.06 (\336cient mutual e) 376.12 536.62 P
0.06 (xclusion synchroni-) 444.51 536.62 P
0.28 0.18 (zation primiti) 99.65 523.62 B
0.28 0.18 (v) 161.75 523.62 B
0.28 0.18 (e. It is an error to recursi) 167.27 523.62 B
0.28 0.18 (v) 282.12 523.62 B
0.28 0.18 (ely lock a) 287.64 523.62 B
3 F
0.28 0.18 (<simple-lock>) 335.96 523.62 B
1 F
0.28 0.18 (. An attempt to do so might) 404.62 523.62 B
(result in an error being signalled, or deadlock occurring.) 99.65 510.62 T
3 F
(wait-for) 63.65 481.62 T
1 F
([Sealed Method]) 458.02 481.62 T
4 F
(Signatur) 81.65 456.62 T
(e) 119.14 456.62 T
3 F
(\050object :: <simple-lock>, #k) 99.65 437.62 T
(ey timeout = #f\051 => \050success :: <boolean>\051) 228.17 437.62 T
(release) 63.65 408.62 T
1 F
([Sealed Method]) 458.02 408.62 T
4 F
(Signatur) 81.65 383.62 T
(e) 119.14 383.62 T
3 F
(\050object :: <simple-lock>, #k) 99.65 364.62 T
(ey\051 => \050\051) 228.17 364.62 T
(owned?) 63.65 335.62 T
1 F
([Sealed Method]) 458.02 335.62 T
4 F
(Signatur) 81.65 310.62 T
(e) 119.14 310.62 T
3 F
(\050object :: <simple-lock>\051 => \050o) 99.65 291.62 T
(wned? :: <boolean>\051) 241.92 291.62 T
0 10 Q
(1.5.5) 63.65 257.29 T
(<noti\336cation>) 90.65 257.29 T
3 11 Q
(<notification>) 63.65 226.62 T
1 F
([Instantiable Sealed Class]) 414.33 226.62 T
4 F
(Super) 81.65 201.62 T
(classes) 106.9 201.62 T
3 F
(<synchr) 99.65 179.62 T
(onization>) 137.5 179.62 T
4 F
(Description) 81.65 154.62 T
1 F
0.28 0.02 (Instances of) 99.65 132.62 B
3 F
0.28 0.02 (<notif) 156.06 132.62 B
0.28 0.02 (ication>) 183.85 132.62 B
1 F
0.28 0.02 ( are synchronization objects which may be used to notify threads of a) 222.06 132.62 B
0.12 (change of state else) 99.65 119.62 P
0.12 (where in the program. Noti\336cations are used in association with locks, and are) 185.57 119.62 P
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(16) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
1 11 Q
0.28 0.08 (sometimes called) 99.65 737.62 B
4 F
0.28 0.08 (condition variables) 180.43 737.62 B
1 F
0.28 0.08 (. The) 267.53 737.62 B
0.28 0.08 (y may be used to support the sharing of data between) 290.66 737.62 B
0.28 0.17 (threads using) 99.65 724.62 B
4 F
0.28 0.17 (monitor) 163.74 724.62 B
0.28 0.17 (s) 199.68 724.62 B
1 F
0.28 0.17 (. Each) 204.13 724.62 B
3 F
0.28 0.17 (<notif) 236.14 724.62 B
0.28 0.17 (ication>) 264.85 724.62 B
1 F
0.28 0.17 ( is permanently associated with a) 304.28 724.62 B
3 F
0.28 0.17 (<simple-lock>) 460.32 724.62 B
1 F
0.28 0.17 (,) 528.9 724.62 B
0.06 (although the same lock may be associated with man) 99.65 711.62 P
0.06 (y noti\336cations.) 328.49 711.62 P
0.06 (Threads w) 396.75 711.62 P
0.06 (ait for the change of) 442.83 711.62 P
0.12 (state to be noti\336ed by calling) 99.65 698.62 P
3 F
0.12 (wait-f) 230.56 698.62 P
0.12 (or) 257.78 698.62 P
1 F
0.12 (. Threads notify other threads of the change of state by call-) 267.56 698.62 P
(ing) 99.65 685.62 T
3 F
(r) 116.46 685.62 T
(elease) 121.14 685.62 T
1 F
(.) 148.63 685.62 T
4 F
(Requir) 81.65 660.62 T
(ed-init-k) 111.18 660.62 T
(e) 148.34 660.62 T
(ywor) 152.9 660.62 T
(ds) 174.49 660.62 T
3 F
(lock:) 99.65 638.62 T
1 F
0.28 0.05 (This must be an instance of) 171.65 638.62 B
3 F
0.28 0.05 (<simple-lock>) 298.21 638.62 B
1 F
0.28 0.05 (. The lock is then associated with the) 365.22 638.62 B
-0.11 (noti\336cation, and it is only possible to w) 171.65 625.62 P
-0.11 (ait for or release the noti\336cation if the lock) 344.34 625.62 P
(is o) 171.65 612.62 T
(wned.) 186.96 612.62 T
4 F
(Oper) 81.65 587.62 T
(ations) 104.09 587.62 T
1 F
(The class) 99.65 565.62 T
3 F
(<noti\336cation>) 143.64 565.62 T
1 F
(provides the following operations:) 212.1 565.62 T
3 F
(associated-lock) 99.65 543.62 T
1 F
(Returns the lock associated with the noti\336cation object.) 171.65 530.62 T
3 F
(wait-f) 99.65 508.62 T
(or) 126.86 508.62 T
1 F
0.28 0.34 (W) 171.65 508.62 B
0.28 0.34 (ait for the notif) 181.49 508.62 B
0.28 0.34 (ication of the change in state. The associated lock must be) 253.71 508.62 B
(o) 171.65 495.62 T
(wned, and is atomically released before synchronization, and reclaimed after) 176.87 495.62 T
(.) 513.81 495.62 T
3 F
(r) 99.65 473.62 T
(elease) 104.33 473.62 T
1 F
0.28 0.19 (Notify the change of state to a single w) 171.65 473.62 B
0.28 0.19 (aiting thread. This has no ef) 353.49 473.62 B
0.28 0.19 (fect on the) 482.8 473.62 B
(associated lock, which must be o) 171.65 460.62 T
(wned.) 316.19 460.62 T
3 F
(r) 99.65 438.62 T
(elease-all) 104.33 438.62 T
1 F
0.28 0 (Notify the change of state to all w) 171.65 438.62 B
0.28 0 (aiting threads. This has no ef) 322.87 438.62 B
0.28 0 (fect on the associ-) 451.08 438.62 B
(ated lock, which must be o) 171.65 425.62 T
(wned.) 289.3 425.62 T
3 F
(associated-lock) 63.65 396.62 T
1 F
([Function]) 485.21 396.62 T
4 F
(Signatur) 81.65 371.62 T
(e) 119.14 371.62 T
3 F
(\050noti\336cation :: <noti\336cation>\051 => \050lock :: <simple-lock>\051) 99.65 352.62 T
4 F
(Ar) 81.65 327.62 T
(guments) 92.24 327.62 T
3 F
(noti\336cation) 99.65 305.62 T
1 F
(A noti\336cation object.) 171.65 305.62 T
4 F
(V) 81.65 280.62 T
(alues) 87.15 280.62 T
3 F
(lock) 99.65 258.62 T
1 F
(The lock associated with the noti\336cation.) 171.65 258.62 T
3 F
(wait-for) 63.65 229.62 T
1 F
([Sealed Method]) 458.02 229.62 T
4 F
(Signatur) 81.65 204.62 T
(e) 119.14 204.62 T
3 F
(\050noti\336cation :: <noti\336cation>, #k) 99.65 185.62 T
(ey timeout = #f\051 => \050success :: <boolean>\051) 252.03 185.62 T
4 F
(Description) 81.65 160.62 T
1 F
0.15 (W) 99.65 138.62 P
0.15 (ait for the change of state indicated by the noti\336cation. The associated lock must be o) 109.15 138.62 P
0.15 (wned, and) 486.29 138.62 P
0.28 0.06 (is atomically released before the w) 99.65 125.62 B
0.28 0.06 (ait, and atomically claimed ag) 256.22 125.62 B
0.28 0.06 (ain after the w) 391.49 125.62 B
0.28 0.06 (ait. Note that the) 456.4 125.62 B
0.28 0.21 (state should be tested ag) 99.65 112.62 B
0.28 0.21 (ain once) 212.92 112.62 B
3 F
0.28 0.21 (wait-f) 255.08 112.62 B
0.28 0.21 (or) 283.57 112.62 B
1 F
0.28 0.21 ( has returned, because there may ha) 294.38 112.62 B
0.28 0.21 (v) 459.91 112.62 B
0.28 0.21 (e been a delay) 465.46 112.62 B
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(17) 520.53 84.9 T
1 11 Q
0.28 0.04 (between the) 99.65 737.62 B
3 F
0.28 0.04 (r) 156.28 737.62 B
0.28 0.04 (elease) 161 737.62 B
1 F
0.28 0.04 ( of the notif) 188.74 737.62 B
0.28 0.04 (ication and the claiming of the lock, and the state may ha) 241.11 737.62 B
0.28 0.04 (v) 497.39 737.62 B
0.28 0.04 (e been) 502.77 737.62 B
0.01 (changed during that time. If a timeout is supplied, then this will be used for w) 99.65 724.62 P
0.01 (aiting for the release) 441.52 724.62 P
0.28 0.05 (of the notif) 99.65 711.62 B
0.28 0.05 (ication only) 149.09 711.62 B
0.28 0.05 (.) 201.52 711.62 B
3 F
0.28 0.05 (W) 207.4 711.62 B
0.28 0.05 (ait-f) 217.73 711.62 B
0.28 0.05 (or) 237.26 711.62 B
1 F
0.28 0.05 ( will al) 247.75 711.62 B
0.28 0.05 (w) 279.16 711.62 B
0.28 0.05 (ays w) 287.04 711.62 B
0.28 0.05 (ait for the lock with no timeout, and it is guaran-) 312.82 711.62 B
-0.2 (teed that the lock will be o) 99.65 698.62 P
-0.2 (wned on return.) 214.91 698.62 P
3 F
-0.2 (W) 286.42 698.62 P
-0.2 (ait-f) 296.7 698.62 P
-0.2 (or) 315.97 698.62 P
1 F
-0.2 ( will return) 326.36 698.62 P
3 F
-0.2 (#f) 377.4 698.62 P
1 F
-0.2 ( if the noti\336cation w) 386.57 698.62 P
-0.2 (ait times out.) 474.89 698.62 P
4 F
(Exceptions) 81.65 673.62 T
3 F
(W) 99.65 651.62 T
(ait-f) 109.93 651.62 T
(or) 129.21 651.62 T
1 F
( may signal a condition of the follo) 139.59 651.62 T
(wing class \050which is a subclass of) 293.61 651.62 T
3 F
(<err) 444.84 651.62 T
(or>) 465.56 651.62 T
1 F
(\051.) 482.22 651.62 T
3 F
(<not-o) 99.65 629.62 T
(wned-err) 130.25 629.62 T
(or>) 173.43 629.62 T
1 F
-0.05 (This may be signalled when an attempt is made to w) 171.65 616.62 P
-0.05 (ait for a noti\336cation when the) 402.04 616.62 P
(associated lock is not o) 171.65 603.62 T
(wned by the current thread.) 273.42 603.62 T
3 F
(release) 63.65 574.62 T
1 F
([Sealed Method]) 458.02 574.62 T
4 F
(Signatur) 81.65 549.62 T
(e) 119.14 549.62 T
3 F
(\050noti\336cation :: <noti\336cation>, #k) 99.65 530.62 T
(ey\051 => \050\051) 252.03 530.62 T
4 F
(Ar) 81.65 505.62 T
(guments) 92.24 505.62 T
3 F
(noti\336cation) 99.65 483.62 T
1 F
(Noti\336cation to be released.) 171.65 483.62 T
4 F
(Description) 81.65 458.62 T
1 F
0.28 0.03 (Releases the notif) 99.65 436.62 B
0.28 0.03 (ication, announcing the change of state to one of the threads which are block) 178.32 436.62 B
0.28 0.03 (ed) 521.23 436.62 B
0.04 (and w) 99.65 423.62 P
0.04 (aiting for it. The choice of which thread recei) 126.15 423.62 P
0.04 (v) 325.64 423.62 P
0.04 (es the noti\336cation is unde\336ned. The recei) 330.98 423.62 P
0.04 (ving) 512.09 423.62 P
0.19 (thread may not be unblock) 99.65 410.62 P
0.19 (ed immediately) 217.6 410.62 P
0.19 (, because it must \336rst claim o) 285.21 410.62 P
0.19 (wnership of the associated) 414.69 410.62 P
(lock.) 99.65 397.62 T
4 F
(Exceptions) 81.65 372.62 T
3 F
(Release) 99.65 350.62 T
1 F
(may signal a condition of the follo) 137.83 350.62 T
(wing class \050which is a subclass of) 289.1 350.62 T
3 F
(<err) 440.33 350.62 T
(or>) 461.05 350.62 T
1 F
(\051.) 477.71 350.62 T
3 F
(<not-o) 99.65 328.62 T
(wned-err) 130.25 328.62 T
(or>) 173.43 328.62 T
1 F
0.23 (This may be signalled when an attempt is made to release a noti\336cation when the) 171.65 315.62 P
(associated lock is not o) 171.65 302.62 T
(wned by the current thread.) 273.42 302.62 T
3 F
(release-all) 63.65 251.62 T
1 F
([Function]) 485.21 251.62 T
4 F
(Signatur) 81.65 226.62 T
(e) 119.14 226.62 T
3 F
(\050noti\336cation :: <noti\336cation>, #k) 99.65 207.62 T
(ey\051 => \050\051) 252.03 207.62 T
4 F
(Ar) 81.65 182.62 T
(guments) 92.24 182.62 T
3 F
(noti\336cation) 99.65 160.62 T
1 F
(Noti\336cation to be released.) 171.65 160.62 T
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(18) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
4 11 Q
(Description) 81.65 737.62 T
1 F
-0.27 (Releases the noti\336cation, announcing the change of state to all threads which are block) 99.65 715.62 P
-0.27 (ed and w) 477.92 715.62 P
-0.27 (ait-) 516.98 715.62 P
0.28 0 (ing for it. Those threads will then necessarily ha) 99.65 702.62 B
0.28 0 (v) 313.58 702.62 B
0.28 0 (e to compete for the associated lock.) 318.92 702.62 B
3 F
0.28 0 (r) 484.15 702.62 B
0.28 0 (elease-all) 488.84 702.62 B
1 F
0.28 0.01 (guarantees that the side ef) 99.65 689.62 B
0.28 0.01 (fects of the calling thread will be visible to other threads, as if by a call) 214.87 689.62 B
(to) 99.65 676.62 T
3 F
(synchr) 110.96 676.62 T
(onize-side-effects) 142.54 676.62 T
1 F
(.) 222.56 676.62 T
4 F
(Exceptions) 81.65 651.62 T
3 F
(Release-all) 99.65 629.62 T
1 F
( may signal a condition of the follo) 150.36 629.62 T
(wing class \050which is a subclass of) 304.38 629.62 T
3 F
(<err) 455.61 629.62 T
(or>) 476.33 629.62 T
1 F
(\051.) 492.99 629.62 T
3 F
(<not-o) 99.65 607.62 T
(wned-err) 130.25 607.62 T
(or>) 173.43 607.62 T
1 F
0.23 (This may be signalled when an attempt is made to release a noti\336cation when the) 171.65 594.62 P
(associated lock is not o) 171.65 581.62 T
(wned by the current thread.) 273.42 581.62 T
0 10 Q
(1.5.6) 63.65 525.29 T
(Timer) 90.65 525.29 T
(s) 117.73 525.29 T
3 11 Q
(sleep) 63.65 496.62 T
1 F
([Function]) 485.21 496.62 T
4 F
(Signatur) 81.65 471.62 T
(e) 119.14 471.62 T
3 F
(\050inter) 99.65 452.62 T
(v) 125.81 452.62 T
(al :: <r) 131.2 452.62 T
(eal>\051 => \050\051) 163.54 452.62 T
4 F
(Ar) 81.65 427.62 T
(guments) 92.24 427.62 T
3 F
(inter) 99.65 405.62 T
(v) 122.14 405.62 T
(al) 127.53 405.62 T
1 F
(Sleep time in seconds.) 171.65 405.62 T
4 F
(Description) 81.65 380.62 T
3 F
(sleep) 99.65 358.62 T
1 F
( causes the current-thread to block for the speci\336ed number of seconds.) 122.87 358.62 T
0 10 Q
(1.5.7) 63.65 324.29 T
(Conditional Update) 90.65 324.29 T
3 11 Q
(atomic-variable) 63.65 295.62 T
1 F
([De\336nition]) 479.71 295.62 T
4 F
(Syntax) 81.65 270.62 T
3 F
(de\336ne atomic-v) 99.65 251.62 T
(ariable) 171.34 251.62 T
4 F
(bindings) 207.09 251.62 T
3 F
( =) 244.98 251.62 T
4 F
(init) 256.75 251.62 T
3 F
(;) 271.42 251.62 T
4 F
(Description) 81.65 226.62 T
3 F
0.28 0.04 (def) 99.65 204.62 B
0.28 0.04 (ine atomic-v) 113.84 204.62 B
0.28 0.04 (ariable) 172.28 204.62 B
1 F
0.28 0.04 ( def) 205.59 204.62 B
0.28 0.04 (ines module v) 222.23 204.62 B
0.28 0.04 (ariables in the current module. These v) 284.81 204.62 B
0.28 0.04 (ariables ha) 459.29 204.62 B
0.28 0.04 (v) 507.18 204.62 B
0.28 0.04 (e all) 512.56 204.62 B
0.28 0.22 (the properties of normal module v) 99.65 191.62 B
0.28 0.22 (ariables, and in addition the) 258.05 191.62 B
0.28 0.22 (y may be atomically tested and) 387.3 191.62 B
(updated with) 99.65 178.62 T
3 F
(conditional-update) 159.53 178.62 T
1 F
(!.) 248.16 178.62 T
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(19) 520.53 84.9 T
4 11 Q
(Example) 81.65 737.62 T
3 F
(de\336ne atomic-v) 99.65 718.62 T
(ariable *number) 171.34 718.62 T
(-detected* = 0;) 249.46 718.62 T
(synchronized-class) 63.65 689.62 T
1 F
([De\336nition]) 479.71 689.62 T
4 F
(Syntax) 81.65 664.62 T
1 F
(As for) 99.65 642.62 T
3 F
(de\336ne class) 130.2 642.62 T
1 F
(, and permits the additional slot adjecti) 183.06 642.62 T
(v) 353.58 642.62 T
(e) 358.92 642.62 T
3 F
(atomic.) 366.55 642.62 T
4 F
(Description) 81.65 617.62 T
3 F
0.28 0.2 (def) 99.65 595.62 B
0.28 0.2 (ine synchr) 114.3 595.62 B
0.28 0.2 (onized-class) 164.93 595.62 B
1 F
0.28 0.2 ( is upw) 223.52 595.62 B
0.28 0.2 (ards compatible with) 257.12 595.62 B
3 F
0.28 0.2 (def) 357.11 595.62 B
0.28 0.2 (ine class) 371.76 595.62 B
1 F
0.28 0.2 (, e) 412.62 595.62 B
0.28 0.2 (xported from the) 423.71 595.62 B
3 F
0.28 0.2 (dylan) 504.57 595.62 B
1 F
0.22 (library) 99.65 582.62 P
0.22 (. It pro) 128.26 582.62 P
0.22 (vides an additional option which permits the de\336nition of slots which may be condi-) 158.17 582.62 P
0.28 0.15 (tionally updated. It is undef) 99.65 569.62 B
0.28 0.15 (ined whether the module v) 225.79 569.62 B
0.28 0.15 (ariables) 347.68 569.62 B
3 F
0.28 0.15 (class-def) 386.26 569.62 B
0.28 0.15 (iner) 427.33 569.62 B
1 F
0.28 0.15 ( e) 446.87 569.62 B
0.28 0.15 (xported from the) 454.92 569.62 B
3 F
0.2 (dylan) 99.65 556.62 P
1 F
0.2 ( library and) 125.94 556.62 P
3 F
0.2 (synchr) 180 556.62 P
0.2 (onized-class-de\336ner) 211.58 556.62 P
1 F
0.2 ( e) 304.46 556.62 P
0.2 (xported from the the) 312.13 556.62 P
3 F
0.2 (thr) 405.8 556.62 P
0.2 (eads) 420.27 556.62 P
1 F
0.2 ( library are the same) 441.05 556.62 P
(module v) 99.65 543.62 T
(ariable.) 140.62 543.62 T
0.28 0.24 (The) 99.65 521.62 B
3 F
0.28 0.24 (atomic) 120.75 521.62 B
1 F
0.28 0.24 (adjecti) 157.24 521.62 B
0.28 0.24 (v) 187.99 521.62 B
0.28 0.24 (e may be used to def) 193.57 521.62 B
0.28 0.24 (ine conditional-updater methods for indi) 289.92 521.62 B
0.28 0.24 (vidual slots) 478.28 521.62 B
0.28 0.13 (def) 99.65 508.62 B
0.28 0.13 (ined by) 113.47 508.62 B
3 F
0.28 0.13 (def) 150.48 508.62 B
0.28 0.13 (ine synchr) 164.92 508.62 B
0.28 0.13 (onized-class) 214.85 508.62 B
1 F
0.28 0.13 (. This adjecti) 272.6 508.62 B
0.28 0.13 (v) 331.79 508.62 B
0.28 0.13 (e may only be used for slots with) 337.25 508.62 B
3 F
0.28 0.13 (instance) 492.26 508.62 B
1 F
0.28 0.13 (allocation. The adjecti) 99.65 495.62 B
0.28 0.13 (v) 200.93 495.62 B
0.28 0.13 (e causes the additional creation of a conditional-updater method for the) 206.39 495.62 B
(slot, suitable for use with the) 99.65 482.62 T
3 F
(conditional-update!) 229.5 482.62 T
1 F
( macro.) 321.79 482.62 T
0.28 0.01 (A conditional-updater method has three required parameters) 99.65 460.62 B
3 F
0.28 0.01 (\050new-v) 370.03 460.62 B
0.28 0.01 (alue, old-v) 401.74 460.62 B
0.28 0.01 (alue, object\051) 450.9 460.62 B
1 F
0.28 0.01 (. The) 508.73 460.62 B
-0.27 (method atomically compares the slot contents for) 99.65 447.62 P
3 F
-0.27 (object) 317.41 447.62 P
1 F
-0.27 ( with) 346.12 447.62 P
3 F
-0.27 (old-v) 370.63 447.62 P
-0.27 (alue) 394.36 447.62 P
1 F
-0.27 (, and conditionally updates) 413.92 447.62 P
0.28 0.08 (the slot. If the comparison f) 99.65 434.62 B
0.28 0.08 (ails, the method returns) 224.67 434.62 B
3 F
0.28 0.08 (#f) 333.65 434.62 B
1 F
0.28 0.08 (. Otherwise, the slot contents are replaced) 342.97 434.62 B
(with) 99.65 421.62 T
3 F
(new-v) 121.96 421.62 T
(alue) 149.95 421.62 T
1 F
(, and the method returns) 169.51 421.62 T
3 F
(#t) 278.88 421.62 T
1 F
(.) 288.05 421.62 T
4 F
(K) 81.65 396.62 T
(e) 88.6 396.62 T
(ywor) 93.15 396.62 T
(ds) 114.75 396.62 T
1 F
(The follo) 99.65 374.62 T
(wing additional k) 140.01 374.62 T
(e) 216.9 374.62 T
(yw) 221.62 374.62 T
(ords are permitted for) 234.95 374.62 T
3 F
(atomic) 333.31 374.62 T
1 F
( slots:) 365.08 374.62 T
3 F
(conditional-updater:) 99.65 352.62 T
1 F
0.28 0.08 (The name of a module v) 171.65 339.62 B
0.28 0.08 (ariable to which the conditional-updater method should) 281.8 339.62 B
-0.04 (be added, or) 171.65 326.62 P
3 F
-0.04 (#f) 228.35 326.62 P
1 F
-0.04 ( if no conditional-updater method should be de\336ned \050in which case) 237.51 326.62 P
0.28 0.26 (the use of the) 171.65 313.62 B
3 F
0.28 0.26 (atomic) 238.38 313.62 B
1 F
0.28 0.26 ( adjecti) 271.71 313.62 B
0.28 0.26 (v) 305.88 313.62 B
0.28 0.26 (e w) 311.48 313.62 B
0.28 0.26 (as unnecessary\051. If it is not supplied, it will) 328 313.62 B
0.28 0.03 (def) 171.65 300.62 B
0.28 0.03 (ault to) 185.67 300.62 B
3 F
0.28 0.03 (getter) 216.99 300.62 B
0.28 0.03 (-name-conditional-updater) 244.23 300.62 B
1 F
0.28 0.03 (, where) 370.97 300.62 B
3 F
0.28 0.03 (getter) 406.87 300.62 B
0.28 0.03 (-name) 434.1 300.62 B
1 F
0.28 0.03 ( names the get-) 463.56 300.62 B
(ter for the slot.) 171.65 287.62 T
4 F
(Example) 81.65 262.62 T
1 F
(The follo) 99.65 240.62 T
(wing e) 140.01 240.62 T
(xample de\336nes a class with a single slot suitable for conditional updating:) 169.48 240.62 T
3 F
(de\336ne synchr) 99.65 221.62 T
(onized-class <atomic-v) 162.1 221.62 T
(alue> \050<object>\051) 268.16 221.62 T
(atomic slot counter :: <integer>) 121.25 208.62 T
(end class) 99.65 195.62 T
1 F
(This e) 99.65 173.62 T
(xample de\336nes a conditional-updater method with the follo) 126.68 173.62 T
(wing signature:) 387.01 173.62 T
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(20) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
3 11 Q
(de\336ne method counter) 99.65 737.62 T
(-conditional-updater) 204.35 737.62 T
(\050new-v) 135.65 724.62 T
(alue, old-v) 167.31 724.62 T
(alue, object :: <atomic-v) 216.09 724.62 T
(alue>\051) 329.78 724.62 T
(end method) 99.65 711.62 T
(conditional-update!) 63.65 682.62 T
1 F
([Macro]) 495.61 682.62 T
4 F
(Syntax) 81.65 657.62 T
3 F
(conditional-update!\050) 99.65 638.62 T
4 F
(local-name) 195.6 638.62 T
3 F
( =) 245.09 638.62 T
4 F
(place) 256.86 638.62 T
3 F
(\051) 280.69 638.62 T
4 F
(body) 121.25 625.62 T
1 F
([) 99.65 612.62 T
3 F
(success) 103.31 612.62 T
4 F
(success-e) 139.67 612.62 T
(xpr) 180.98 612.62 T
1 F
(]) 195.65 612.62 T
([) 99.65 599.62 T
3 F
(failur) 103.31 599.62 T
(e) 129.39 599.62 T
4 F
(failur) 137.03 599.62 T
(e-e) 161.07 599.62 T
(xpr) 174.28 599.62 T
1 F
(]) 188.95 599.62 T
3 F
(end) 99.65 586.62 T
4 F
(Description) 81.65 561.62 T
1 F
0.28 0.01 (The v) 99.65 539.62 B
0.28 0.01 (alue of the place is e) 125.04 539.62 B
0.28 0.01 (v) 216.42 539.62 B
0.28 0.01 (aluated once to determine the initial v) 221.65 539.62 B
0.28 0.01 (alue, which is then bound to the) 389.52 539.62 B
4 F
0.28 0.13 (local-name) 99.65 526.62 B
1 F
0.28 0.13 ( as a le) 150.43 526.62 B
0.28 0.13 (xical v) 182.36 526.62 B
0.28 0.13 (ariable. The body is then e) 212.9 526.62 B
0.28 0.13 (v) 334.19 526.62 B
0.28 0.13 (aluated to determine the ne) 339.55 526.62 B
0.28 0.13 (w v) 463 526.62 B
0.28 0.13 (alue for the) 479.58 526.62 B
0.28 0.18 (place. The place is then conditionally updated - which means that the follo) 99.65 513.62 B
0.28 0.18 (wing steps are per-) 444.3 513.62 B
(formed atomically:) 99.65 500.62 T
0 9 Q
(1.) 99.65 481.62 T
1 11 Q
(The place is e) 113.4 481.62 T
(v) 173.91 481.62 T
(aluated ag) 179.14 481.62 T
(ain and compared with the initial v) 223.98 481.62 T
(alue in) 377.08 481.62 T
4 F
(local-name) 409.46 481.62 T
1 F
( using) 458.95 481.62 T
3 F
(\134==) 488.29 481.62 T
0 9 Q
(2.) 99.65 462.62 T
1 11 Q
-0.18 (If the v) 113.4 462.62 P
-0.18 (alue w) 144.53 462.62 P
-0.18 (as found to be the same as the initial v) 173.25 462.62 P
-0.18 (alue, then the ne) 339.67 462.62 P
-0.18 (w v) 410.94 462.62 P
-0.18 (alue is stored by assign-) 426.67 462.62 P
(ment, otherwise the conditional update f) 113.4 450.62 T
(ails.) 290.49 450.62 T
0.28 0.1 (If the update w) 99.65 429.62 B
0.28 0.1 (as successful, then) 168.17 429.62 B
3 F
0.28 0.1 (conditional-update!) 255.34 429.62 B
1 F
0.28 0.1 ( returns the result of the) 349.56 429.62 B
3 F
0.28 0.1 (success) 461.49 429.62 B
1 F
0.28 0.1 (e) 498.93 429.62 B
0.28 0.1 (xpres-) 503.75 429.62 B
(sion, or returns the ne) 99.65 416.62 T
(w v) 195 416.62 T
(alue of the place if no) 210.91 416.62 T
3 F
(success) 309.27 416.62 T
1 F
(clause w) 345.63 416.62 T
(as supplied.) 383.7 416.62 T
0.28 0.17 (If the update f) 99.65 394.62 B
0.28 0.17 (ailed, then) 164.94 394.62 B
3 F
0.28 0.17 (conditional-update!) 216.11 394.62 B
1 F
0.28 0.17 ( signals a condition, unless a) 311.65 394.62 B
3 F
0.28 0.17 (failur) 447.24 394.62 B
0.28 0.17 (e) 474.35 394.62 B
1 F
0.28 0.17 ( clause w) 479.4 394.62 B
0.28 0.17 (as) 522.31 394.62 B
(gi) 99.65 381.62 T
(v) 107.93 381.62 T
(en, in which case the v) 113.27 381.62 T
(alue is returned.) 213.19 381.62 T
0.28 0.05 (If the) 99.65 359.62 B
4 F
0.28 0.05 (place) 126.83 359.62 B
1 F
0.28 0.05 ( is a) 150.92 359.62 B
4 F
0.28 0.05 (name) 172.53 359.62 B
1 F
0.28 0.05 (, it must be the name of an) 196.57 359.62 B
3 F
0.28 0.05 (atomic-v) 319.7 359.62 B
0.28 0.05 (ariable) 360.94 359.62 B
1 F
0.28 0.05 ( in the curent module scope. If) 394.31 359.62 B
4 F
0.28 0.04 (place) 99.65 346.62 B
1 F
0.28 0.04 ( is not a name, then it may ha) 123.66 346.62 B
0.28 0.04 (v) 256.02 346.62 B
0.28 0.04 (e the syntax of a call to a function. This permits an) 261.39 346.62 B
4 F
0.28 0.04 (e) 492.51 346.62 B
0.28 0.04 (xtended) 497.21 346.62 B
0.25 (form) 99.65 333.62 P
1 F
0.25 ( for) 120.43 333.62 P
3 F
0.25 (conditional-update!) 139.25 333.62 P
1 F
0.25 (, by analogy with the e) 231.54 333.62 P
0.25 (xtended form for) 332.83 333.62 P
3 F
0.25 (:=) 410.86 333.62 P
1 F
0.25 (. In this case, if the place) 420.79 333.62 P
0.28 0.1 (appears syntactically as) 99.65 320.62 B
3 F
0.28 0.1 (name\050ar) 209.48 320.62 B
0.28 0.1 (g1, ...ar) 249.74 320.62 B
0.28 0.1 (gn\051) 285.9 320.62 B
1 F
0.28 0.1 (, then the macro e) 301.47 320.62 B
0.28 0.1 (xpands into a call to the function) 382.63 320.62 B
3 F
0.28 0.08 (name-conditional-updater\050) 99.65 307.62 B
4 F
0.28 0.08 (ne) 228.2 307.62 B
0.28 0.08 (w-value) 238.58 307.62 B
3 F
0.28 0.08 (,) 273.98 307.62 B
4 F
0.28 0.08 (local-name) 279.92 307.62 B
3 F
0.28 0.08 (, ar) 330.23 307.62 B
0.28 0.08 (g1, ... ar) 346.61 307.62 B
0.28 0.08 (gn\051) 385.75 307.62 B
1 F
0.28 0.08 (. If the result of this function) 401.27 307.62 B
(call is) 99.65 294.62 T
3 F
(#f) 128.37 294.62 T
1 F
(, then the conditional update is deemed to ha) 137.53 294.62 T
(v) 333.76 294.62 T
(e f) 339.1 294.62 T
(ailed.) 350.28 294.62 T
4 F
(Exceptions) 81.65 269.62 T
3 F
0.28 0.38 (conditional-update!) 99.65 247.62 B
1 F
0.28 0.38 ( may signal a condition of the follo) 199.2 247.62 B
0.28 0.38 (wing class \050which is a subclass of) 368.91 247.62 B
3 F
(<err) 99.65 234.62 T
(or>) 120.37 234.62 T
1 F
(\051, unless a) 137.03 234.62 T
3 F
(failur) 184.07 234.62 T
(e) 210.15 234.62 T
1 F
( clause is supplied.) 215.04 234.62 T
3 F
(<conditional-update-err) 99.65 212.62 T
(or>) 212.66 212.62 T
4 F
(Example) 81.65 187.62 T
1 F
(The follo) 99.65 165.62 T
(wing e) 140.01 165.62 T
(xample does an atomic increment of) 169.48 165.62 T
3 F
(*number) 332 165.62 T
(-detected*) 374.37 165.62 T
1 F
(.) 422.63 165.62 T
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(21) 520.53 84.9 T
3 11 Q
(until \050) 99.65 737.62 T
(conditional-update! \050curr) 128.07 737.62 T
(ent-v) 247.35 737.62 T
(al = *number) 271.06 737.62 T
(-detected*\051) 333.76 737.62 T
(curr) 150.05 724.62 T
(ent-v) 170.62 724.62 T
(al + 1) 194.33 724.62 T
(failur) 135.65 711.62 T
(e #f) 161.73 711.62 T
( end conditional-update!\051) 121.25 698.62 T
(end until) 99.65 685.62 T
(conditional-set-variable!) 63.65 656.62 T
1 F
([Macro]) 495.61 656.62 T
4 F
(Syntax) 81.65 631.62 T
3 F
(conditional-set-v) 99.65 612.62 T
(ariable!\050) 177.76 612.62 T
4 F
(atomic-variable-name) 218.09 612.62 T
(, ne) 315.73 612.62 T
(w-value) 331.45 612.62 T
(, comparison-value) 366.17 612.62 T
3 F
(\051) 451.1 612.62 T
4 F
(Description) 81.65 587.62 T
3 F
0.26 (conditional-set-v) 99.65 565.62 P
0.26 (ariable!) 177.76 565.62 P
1 F
0.26 ( e) 214.42 565.62 P
0.26 (xposes the underlying mechanism used by) 222.15 565.62 P
3 F
0.26 (conditional-update!) 412.52 565.62 P
1 F
0.26 ( when) 504.81 565.62 P
0.28 0.01 (conditionally updating an atomic v) 99.65 552.62 B
0.28 0.01 (ariable. The follo) 254.37 552.62 B
0.28 0.01 (wing beha) 330.97 552.62 B
0.28 0.01 (viour is performed atomically with) 376.68 552.62 B
0.28 0.15 (respect to other threads: The atomic v) 99.65 539.62 B
0.28 0.15 (ariable) 272.82 539.62 B
4 F
0.28 0.15 (atomic-variable-name) 306.95 539.62 B
1 F
0.28 0.15 ( is e) 407.66 539.62 B
0.28 0.15 (v) 426.4 539.62 B
0.28 0.15 (aluated and compared) 431.77 539.62 B
0.28 0.03 (with) 99.65 526.62 B
4 F
0.28 0.03 (comparison-value) 122.38 526.62 B
1 F
0.28 0.03 ( using) 202.29 526.62 B
3 F
0.28 0.03 (\134==) 232.38 526.62 B
1 F
0.28 0.03 (. If the v) 248.07 526.62 B
0.28 0.03 (alues are the same, then) 286.19 526.62 B
4 F
0.28 0.03 (atomic-variable-name) 395.83 526.62 B
1 F
0.28 0.03 ( is set to) 494.19 526.62 B
4 F
(ne) 99.65 513.62 T
(w-value) 109.87 513.62 T
1 F
( \050by assignment\051 and the macro returns) 144.69 513.62 T
3 F
(#t) 319.13 513.62 T
1 F
(. Otherwise, the macro returns) 328.29 513.62 T
3 F
(#f) 464.23 513.62 T
1 F
(.) 473.39 513.62 T
4 F
(Example) 81.65 488.62 T
1 F
(The follo) 99.65 466.62 T
(wing e) 140.01 466.62 T
(xample computes and sets the v) 169.48 466.62 T
(alue of) 308.82 466.62 T
3 F
(*lazy*) 341.81 466.62 T
1 F
(, pro) 371.76 466.62 T
(vided that it\325) 391.75 466.62 T
(s v) 447.37 466.62 T
(alue is) 459.62 466.62 T
3 F
(#f) 490.79 466.62 T
1 F
(.) 499.95 466.62 T
3 F
(unless \050*lazy*\051) 99.65 447.62 T
(conditional-set-v) 121.25 434.62 T
(ariable!\050*lazy*, compute-lazy-v) 199.36 434.62 T
(alue\050\051, #f\051) 347.11 434.62 T
(end unless) 99.65 421.62 T
0 10 Q
(1.5.8) 63.65 387.29 T
(Fluid Binding) 90.65 387.29 T
3 11 Q
(fluid-variable) 63.65 358.62 T
1 F
([De\336nition]) 479.71 358.62 T
4 F
(Syntax) 81.65 333.62 T
3 F
(de\336ne \337uid-v) 99.65 314.62 T
(ariable) 160.97 314.62 T
4 F
(bindings) 196.72 314.62 T
3 F
( =) 234.62 314.62 T
4 F
(init) 246.39 314.62 T
3 F
(;) 261.06 314.62 T
4 F
(Description) 81.65 289.62 T
3 F
0.28 0.05 (def) 99.65 267.62 B
0.28 0.05 (ine f) 113.84 267.62 B
0.28 0.05 (luid-v) 134.2 267.62 B
0.28 0.05 (ariable) 161.87 267.62 B
1 F
0.28 0.05 ( def) 195.18 267.62 B
0.28 0.05 (ines module v) 211.83 267.62 B
0.28 0.05 (ariables in the current module which ha) 274.4 267.62 B
0.28 0.05 (v) 451.7 267.62 B
0.28 0.05 (e bindings in the) 457.08 267.62 B
0.28 0.06 (dynamic en) 99.65 254.62 B
0.28 0.06 (vironment. The initialization e) 151.13 254.62 B
0.28 0.06 (xpression is e) 287.57 254.62 B
0.28 0.06 (v) 348.61 254.62 B
0.28 0.06 (aluated once, and is used to pro) 353.9 254.62 B
0.28 0.06 (vide the) 495.8 254.62 B
0.2 (initial v) 99.65 241.62 P
0.2 (alues for the implicit bindings in the dynamic en) 133.5 241.62 P
0.2 (vironment of each thread. These bindings) 347.95 241.62 P
-0.11 (are therefore thread-local. The bindings may be dynamically shado) 99.65 228.62 P
-0.11 (wed with) 393.31 228.62 P
3 F
-0.11 (\337uid-bind) 436.48 228.62 P
1 F
-0.11 (. The v) 482.95 228.62 P
-0.11 (alue) 513.32 228.62 P
0.28 0 (of a f) 99.65 215.62 B
0.28 0 (luid-v) 122.82 215.62 B
0.28 0 (ariable binding may be changed with the normal assignment operator) 148.84 215.62 B
3 F
0.28 0 (:=) 459.14 215.62 B
1 F
0.28 0 (. There is cur-) 469.08 215.62 B
0.28 0.03 (rently no w) 99.65 202.62 B
0.28 0.03 (ay to share bindings, either temporarily or permanently between one or more threads,) 150.54 202.62 B
(short of using a normal v) 99.65 189.62 T
(ariable.) 209.67 189.62 T
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(22) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
4 11 Q
(Example) 81.65 737.62 T
3 F
(de\336ne \337uid-v) 99.65 718.62 T
(ariable *standard-output*) 160.97 718.62 T
(= mak) 121.25 705.62 T
(e\050<standard-output-str) 150.94 705.62 T
(eam>\051;) 259.06 705.62 T
(fluid-bind) 63.65 676.62 T
1 F
([Macro]) 495.61 676.62 T
4 F
(Syntax) 81.65 651.62 T
3 F
(\337uid-bind \050) 99.65 632.62 T
4 F
(place1) 152.54 632.62 T
3 F
( =) 181.86 632.62 T
4 F
(init1) 193.63 632.62 T
3 F
(,) 213.81 632.62 T
4 F
(place2) 219.31 632.62 T
3 F
( =) 248.63 632.62 T
4 F
(init2) 260.4 632.62 T
3 F
(, ...\051) 280.58 632.62 T
4 F
(body) 300.74 632.62 T
3 F
( end;) 322.12 632.62 T
4 F
(Description) 81.65 607.62 T
1 F
0.03 (The body is e) 99.65 585.62 P
0.03 (v) 159.02 585.62 P
0.03 (aluated in an en) 164.25 585.62 P
0.03 (vironment in which the speci\336ed) 233.23 585.62 P
4 F
0.03 (places) 380.31 585.62 P
1 F
0.03 ( are rebound in the dynamic) 408.41 585.62 P
(en) 99.65 572.62 T
(vironment, and initialized to the results of e) 109.59 572.62 T
(v) 301.19 572.62 T
(aluating the initialization e) 306.42 572.62 T
(xpressions.) 423.88 572.62 T
(If the) 99.65 550.62 T
4 F
(place) 125.92 550.62 T
1 F
( is a) 149.74 550.62 T
4 F
(name) 170.21 550.62 T
1 F
(, it must be the name of a) 194.04 550.62 T
3 F
(\337uid-v) 308 550.62 T
(ariable) 338.46 550.62 T
1 F
( in the module scope.) 371.46 550.62 T
-0.04 (If) 99.65 528.62 P
4 F
-0.04 (place) 109.68 528.62 P
1 F
-0.04 ( is not a name, then it may ha) 133.51 528.62 P
-0.04 (v) 262.18 528.62 P
-0.04 (e the syntax of a call to a function. This permits an) 267.52 528.62 P
4 F
-0.04 (e) 492.77 528.62 P
-0.04 (xtended) 497.44 528.62 P
0.28 0.09 (form) 99.65 515.62 B
1 F
0.28 0.09 ( for) 120.79 515.62 B
3 F
0.28 0.09 (f) 140.12 515.62 B
0.28 0.09 (luid-bind) 143.27 515.62 B
1 F
0.28 0.09 (, by analogy with the e) 187.51 515.62 B
0.28 0.09 (xtended form for) 291.04 515.62 B
3 F
0.28 0.09 (:=) 370.7 515.62 B
1 F
0.28 0.09 (. In this case, if the place appears) 380.82 515.62 B
0.28 0.14 (syntactically as) 99.65 502.62 B
3 F
0.28 0.14 (name\050ar) 172.91 502.62 B
0.28 0.14 (g1, ...ar) 213.51 502.62 B
0.28 0.14 (gn\051) 250.1 502.62 B
1 F
0.28 0.14 (, then the macro e) 265.81 502.62 B
0.28 0.14 (xpands into a call to the function) 347.84 502.62 B
3 F
0.28 0.14 (name-) 501.75 502.62 B
0.28 0.04 (f) 99.65 489.62 B
0.28 0.04 (luid-binder\050) 102.75 489.62 B
4 F
0.28 0.04 (init) 160.11 489.62 B
3 F
0.28 0.04 (,) 174.96 489.62 B
4 F
0.28 0.04 (body-method) 180.82 489.62 B
3 F
0.28 0.04 (, ar) 238.72 489.62 B
0.28 0.04 (g1, ... ar) 254.94 489.62 B
0.28 0.04 (gn\051) 293.69 489.62 B
1 F
0.28 0.04 ( where) 309.1 489.62 B
4 F
0.28 0.04 (init) 342.32 489.62 B
1 F
0.28 0.04 ( is the initial v) 357.17 489.62 B
0.28 0.04 (alue for the binding, and) 421.67 489.62 B
4 F
(body-method) 99.65 476.62 T
1 F
( is function with no parameters whose body is the) 157.08 476.62 T
4 F
(body of) 378.28 476.62 T
1 F
(the) 413.72 476.62 T
3 F
(\337uid-bind) 429.91 476.62 T
1 F
(.) 476.39 476.62 T
0.23 (There are no features in the current v) 99.65 454.62 P
0.23 (ersion of the threads library which mak) 263.88 454.62 P
0.23 (e use of the e) 438.04 454.62 P
0.23 (xtended) 496.82 454.62 P
(form of) 99.65 441.62 T
3 F
(\337uid-bind) 135.7 441.62 T
1 F
(.) 182.17 441.62 T
4 F
(Example) 81.65 416.62 T
1 F
(The follo) 99.65 394.62 T
(wing e) 140.01 394.62 T
(xample sho) 169.48 394.62 T
(ws the simple form of) 219.61 394.62 T
3 F
(\337uid-bind) 318.91 394.62 T
1 F
(.) 365.39 394.62 T
3 F
(\337uid-bind \050*standard-output* = new-v) 99.65 375.62 T
(al\050\051\051) 280.31 375.62 T
(top-le) 121.25 362.62 T
(v) 147.97 362.62 T
(el-loop \050\051) 153.36 362.62 T
(end;) 99.65 349.62 T
4 F
(Example 2) 81.65 324.62 T
1 F
(The follo) 99.65 302.62 T
(wing e) 140.01 302.62 T
(xample sho) 169.48 302.62 T
(ws the e) 219.61 302.62 T
(xtended form of) 255.5 302.62 T
3 F
(\337uid-bind) 329.12 302.62 T
1 F
(.) 375.59 302.62 T
3 F
(\337uid-bind \050object.a-slot = new-slot-v) 99.65 283.62 T
(al\050\051\051) 269.59 283.62 T
(inner) 121.25 270.62 T
(-body\050object\051) 145.9 270.62 T
(end;) 99.65 257.62 T
1 F
(This e) 99.65 235.62 T
(xpands into code equi) 126.68 235.62 T
(v) 222.64 235.62 T
(alent to the follo) 227.86 235.62 T
(wing:) 300 235.62 T
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(23) 520.53 84.9 T
3 11 Q
(a-slot-\337uid-binder\050) 99.65 737.62 T
(new-slot-v) 193.25 737.62 T
(al\050\051,) 241.41 737.62 T
(method \050\051 inner) 193.25 724.62 T
(-body\050object\051 end,) 266.17 724.62 T
(object\051) 193.25 711.62 T
0 12 Q
(1.6) 63.65 673.95 T
(Thread Saf) 90.65 673.95 T
(ety in Client Libraries) 152.54 673.95 T
0 10 Q
(1.6.1) 63.65 639.29 T
(General Requirements) 90.65 639.29 T
1 11 Q
0.01 (Library designers are responsible for documenting which features of the library of) 63.65 614.62 P
0.01 (fer in-b) 424.92 614.62 P
0.01 (uilt synchroniza-) 457.39 614.62 P
0.28 0.05 (tion and which do not. There is no def) 63.65 601.62 B
0.28 0.05 (initi) 234.92 601.62 B
0.28 0.05 (v) 252.64 601.62 B
0.28 0.05 (e rule to guide designers on ho) 258.02 601.62 B
0.28 0.05 (w to do this, b) 396.03 601.62 B
0.28 0.05 (ut the follo) 460.32 601.62 B
0.28 0.05 (wing) 509.49 601.62 B
(guidelines may be useful.) 63.65 588.62 T
0.28 0.12 (If a client of the library for) 63.65 563.62 B
0.28 0.12 (gets to use a synchronization feature when one is necessary) 186.45 563.62 B
0.28 0.12 (, then the library) 456.16 563.62 B
0.28 0.02 (designer should ensure that the ef) 63.65 550.62 B
0.28 0.02 (fect of the lack of synchronization is limited to a small unit \050probably a) 213.13 550.62 B
0.28 0.11 (single object\051. In cases where the designer cannot guarantee that the ef) 63.65 537.62 B
0.28 0.11 (fect will be limited, the designer) 384.4 537.62 B
0.14 (should either de\336ne that the library will implement the synchronization internally) 63.65 524.62 P
0.14 (, or will pro) 422.38 524.62 P
0.14 (vide a macro) 474.56 524.62 P
(for clients to use instead.) 63.65 511.62 T
0.09 (Library implementors must ensure that the library pro) 63.65 486.62 P
0.09 (vides implicit synchronization for an) 300.89 486.62 P
0.09 (y hidden global) 463.02 486.62 P
0.28 0.13 (state which is maintained to the library) 63.65 473.62 B
0.28 0.13 (. Library designers may choose whether the library should of) 240.91 473.62 B
0.28 0.13 (fer) 519.17 473.62 B
0.07 (implicit synchronization of the state of objects managed by the library) 63.65 460.62 P
0.07 (. The interf) 372.19 460.62 P
0.07 (ace is more con) 421.4 460.62 P
0.07 (v) 489.89 460.62 P
0.07 (enient if) 495.23 460.62 P
0.28 0.02 (the synchronization is implicit, b) 63.65 447.62 B
0.28 0.02 (ut it may be more ef) 209.7 447.62 B
0.28 0.02 (f) 300.08 447.62 B
0.28 0.02 (icient to rely on e) 303.15 447.62 B
0.28 0.02 (xplicit synchronization by the cli-) 381.44 447.62 B
(ent. Library designers should al) 63.65 434.62 T
(w) 202.54 434.62 T
(ays document the choice the) 210.38 434.62 T
(y mak) 334.85 434.62 T
(e.) 361.93 434.62 T
0 10 Q
(1.6.2) 63.65 400.29 T
(Dylan Librar) 90.65 400.29 T
(y) 149.1 400.29 T
1 11 Q
-0.14 (The de\336nition of the Dylan library is not changed with the addition of the threads library) 63.65 375.62 P
-0.14 (. The implementa-) 450.97 375.62 P
0.28 0.04 (tion will ensure that all hidden global state \050such as the symbol table and an) 63.65 362.62 B
0.28 0.04 (y generic function caches\051 is) 403.55 362.62 B
0.28 0.16 (implicitly synchronized. Those functions in the Dylan library which are def) 63.65 349.62 B
0.28 0.16 (ined to modify the state of) 410.2 349.62 B
-0.19 (objects are not de\336ned to pro) 63.65 336.62 P
-0.19 (vide implicit synchronization. Ho) 190.52 336.62 P
-0.19 (we) 337.55 336.62 P
-0.19 (v) 350.1 336.62 P
-0.19 (er) 355.43 336.62 P
-0.19 (, implementations are e) 363.54 336.62 P
-0.19 (xpected to pro-) 465.44 336.62 P
0.28 0.02 (vide enough implicit synchronization to ensure that the ef) 63.65 323.62 B
0.28 0.02 (fects of an omission of e) 320.28 323.62 B
0.28 0.02 (xplicit synchronization) 429.81 323.62 B
(are suf) 63.65 310.62 T
(\336ciently limited that language inte) 93 310.62 T
(grity and runtime safety are not violated.) 243.77 310.62 T
0 12 Q
(1.7) 63.65 272.95 T
(Place Holder) 90.65 272.95 T
(s) 163.16 272.95 T
1 11 Q
(The features described in this section are not implemented, and are not a part of the library) 63.65 254.62 T
(.) 461.6 254.62 T
-0.13 (This library omits some useful high-le) 63.65 229.62 P
-0.13 (v) 231.09 229.62 P
-0.13 (el functionality that man) 236.43 229.62 P
-0.13 (y programmers may desire. It is hoped that) 343.73 229.62 P
-0.01 (man) 63.65 216.62 P
-0.01 (y of these f) 82.43 216.62 P
-0.01 (acilities can be b) 131.47 216.62 P
-0.01 (uilt on top of the primiti) 204.84 216.62 P
-0.01 (v) 310.56 216.62 P
-0.01 (es de\336ned here in a portable manner) 315.89 216.62 P
-0.01 (, leading to a) 474.85 216.62 P
0.28 0.06 (possible threads-e) 63.65 203.62 B
0.28 0.06 (xtensions library in the future. Here are some e) 143.98 203.62 B
0.28 0.06 (xamples, with suggestions about where) 355.74 203.62 B
(the e) 63.65 190.62 T
(xtensions \336t in relation to e) 84.56 190.62 T
(xisting features:) 204.48 190.62 T
FMENDPAGE
%%EndPage: "23" 23
%%Page: "24" 24
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(24) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
0 10 Q
(1.7.1) 63.65 738.29 T
(Messa) 90.65 738.29 T
(g) 121.12 738.29 T
(e Queue) 127.33 738.29 T
3 11 Q
(<message-queue>) 63.65 707.62 T
1 F
([Class]) 500.48 707.62 T
4 F
(Super) 81.65 682.62 T
(classes) 106.9 682.62 T
3 F
(<str) 99.65 660.62 T
(etch) 118.55 660.62 T
(y-collection>) 137.93 660.62 T
(<mutable-sequence>) 99.65 638.62 T
4 F
(Description) 81.65 613.62 T
1 F
0.28 0.05 (The) 99.65 591.62 B
3 F
0.28 0.05 (<message-queue>) 119.99 591.62 B
1 F
0.28 0.05 ( class permits threads to send messages \050arbitrary Dylan objects\051 to other) 203.61 591.62 B
0.28 0.17 (threads. A thread may block while w) 99.65 578.62 B
0.28 0.17 (aiting for a message. An instance of a) 269.34 578.62 B
3 F
0.28 0.17 (<message-queue>) 446.47 578.62 B
1 F
0.28 0.14 (beha) 99.65 565.62 B
0.28 0.14 (v) 120.78 565.62 B
0.28 0.14 (es lik) 126.25 565.62 B
0.28 0.14 (e a) 150.82 565.62 B
3 F
0.28 0.14 (<deque>) 167.22 565.62 B
1 F
0.28 0.14 ( combined with a) 208.89 565.62 B
3 F
0.28 0.14 (<semaphor) 291.27 565.62 B
0.28 0.14 (e>) 345.09 565.62 B
1 F
0.28 0.14 (, and may possibly be b) 356.54 565.62 B
0.28 0.14 (uilt) 464.91 565.62 B
0.28 0.14 (from these) 483.33 565.62 B
0.28 0.17 (classes. The semaphore count corresponds to the size of the queue. A thread will block on the) 99.65 552.62 B
(semaphore if it attempts to pop a message from the queue when the size is zero.) 99.65 539.62 T
4 F
(Oper) 81.65 514.62 T
(ations) 104.09 514.62 T
3 F
(<message-queue>) 99.65 492.62 T
1 F
( supports all the operations of) 182.46 492.62 T
3 F
(<deque>) 315.67 492.62 T
1 F
(, notably:) 356.32 492.62 T
3 F
(push) 99.65 470.62 T
1 F
(,) 122.28 470.62 T
3 F
(push-last) 127.78 470.62 T
1 F
0.23 (These functions ef) 171.65 457.62 P
0.23 (fecti) 253.1 457.62 P
0.23 (v) 272.37 457.62 P
0.23 (ely call) 277.71 457.62 P
3 F
0.23 (r) 313 457.62 P
0.23 (elease) 317.69 457.62 P
1 F
0.23 ( on the internal semaphore after pushing a) 345.18 457.62 P
(v) 171.65 444.62 T
(alue onto the queue.) 176.87 444.62 T
3 F
(pop) 99.65 422.62 T
1 F
(,) 117.38 422.62 T
3 F
(pop-last) 122.88 422.62 T
1 F
0.28 0.11 (These functions ef) 171.65 422.62 B
0.28 0.11 (fecti) 255.23 422.62 B
0.28 0.11 (v) 275.08 422.62 B
0.28 0.11 (ely call) 280.52 422.62 B
3 F
0.28 0.11 (wait-f) 316.93 422.62 B
0.28 0.11 (or) 344.82 422.62 B
1 F
0.28 0.11 ( on the internal semaphore before pop-) 355.44 422.62 B
(ping a v) 171.65 409.62 T
(alue from the queue.) 206.82 409.62 T
0 10 Q
(1.7.2) 63.65 375.29 T
(Read-Write Loc) 90.65 375.29 T
(ks) 163.79 375.29 T
3 11 Q
(<read-write-lock>) 63.65 344.62 T
1 F
([Class]) 500.48 344.62 T
4 F
(Super) 81.65 319.62 T
(classes) 106.9 319.62 T
3 F
(<lock>) 99.65 297.62 T
4 F
(Description) 81.65 272.62 T
1 F
0.28 0.01 (Instances of) 99.65 250.62 B
3 F
0.28 0.01 (<r) 155.96 250.62 B
0.28 0.01 (ead-write-lock>) 166.94 250.62 B
1 F
0.28 0.01 ( may be lock) 241.21 250.62 B
0.28 0.01 (ed for either reading of writing. Se) 298.6 250.62 B
0.28 0.01 (v) 452.86 250.62 B
0.28 0.01 (eral threads may) 458.21 250.62 B
0.28 0.04 (o) 99.65 237.62 B
0.28 0.04 (wn a read-write lock simultaneously for reading. Alternati) 104.91 237.62 B
0.28 0.04 (v) 364.64 237.62 B
0.28 0.04 (ely) 370.01 237.62 B
0.28 0.04 (, a single thread may o) 382.84 237.62 B
0.28 0.04 (wn a read-) 484.36 237.62 B
(write lock for writing.) 99.65 224.62 T
4 F
(Oper) 81.65 199.62 T
(ations) 104.09 199.62 T
1 F
(The class) 99.65 177.62 T
3 F
(<r) 143.64 177.62 T
(ead-write-lock>) 154.59 177.62 T
1 F
( pro) 228.68 177.62 T
(vides the follo) 245.93 177.62 T
(wing methods:) 308.59 177.62 T
3 F
(wait-f) 99.65 155.62 T
(or) 126.86 155.62 T
1 F
0.28 0.2 (This method accepts the k) 171.65 155.62 B
0.28 0.2 (e) 292.46 155.62 B
0.28 0.2 (yw) 297.38 155.62 B
0.28 0.2 (ord) 311.1 155.62 B
3 F
0.28 0.2 (write?:) 329.58 155.62 B
1 F
0.28 0.2 (. If a true v) 364.56 155.62 B
0.28 0.2 (alue is supplied, then the) 416.52 155.62 B
0.28 0.09 (thread blocks until the lock can be claimed for writing. If) 171.65 142.62 B
3 F
0.28 0.09 (#f) 434.18 142.62 B
1 F
0.28 0.09 ( is suplied, then the) 443.52 142.62 B
(thread blocks until the lock can be claimed for reading. The def) 171.65 129.62 T
(ault v) 450.75 129.62 T
(alue is) 475.23 129.62 T
3 F
(#f) 506.39 129.62 T
1 F
(.) 515.55 129.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 24
%%Page: "25" 25
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(25) 520.53 84.9 T
0 12 Q
(1.8) 63.65 736.95 T
(Implementation Notes) 90.65 736.95 T
0 10 Q
(1.8.1) 63.65 702.29 T
(Finalization) 90.65 702.29 T
1 11 Q
0.28 0 (The Dylan synchronization objects will be implemented as wrappers around lo) 63.65 677.62 B
0.28 0 (wer) 412.6 677.62 B
0.28 0 (-le) 428.87 677.62 B
0.28 0 (v) 440.21 677.62 B
0.28 0 (el operating system) 445.54 677.62 B
-0.1 (structures. The Dylan objects are subject to g) 63.65 664.62 P
-0.1 (arbage collection, b) 261.48 664.62 P
-0.1 (ut the lo) 347.52 664.62 P
-0.1 (w-le) 383.11 664.62 P
-0.1 (v) 402.38 664.62 P
-0.1 (el structuress are not. Hence) 407.71 664.62 P
0.28 0.06 (it will be necessary to ha) 63.65 651.62 B
0.28 0.06 (v) 175.38 651.62 B
0.28 0.06 (e f) 180.77 651.62 B
0.28 0.06 (inalization methods for each of the Dylan classes, which will dispose of the) 191.91 651.62 B
(lo) 63.65 638.62 T
(w-le) 71.93 638.62 T
(v) 91.2 638.62 T
(el structures.) 96.54 638.62 T
0 10 Q
(1.8.2) 63.65 604.29 T
(Garba) 90.65 604.29 T
(g) 119.45 604.29 T
(e Collection Considerations) 125.66 604.29 T
1 11 Q
-0.21 (There are some general constraints that an) 63.65 579.62 P
-0.21 (y combination of a threads implementation and a g) 247.95 579.62 P
-0.21 (arbage collec-) 469.86 579.62 P
-0.27 (tor implementation must agree about. First, allocation must be synchronized by some means so that threads) 63.65 566.62 P
0.28 0.05 (are able to allocate and initialize objects without being concerned that another thread might be doing the) 63.65 553.62 B
0.28 0.16 (same thing. Secondly) 63.65 540.62 B
0.28 0.16 (, the g) 160.99 540.62 B
0.28 0.16 (arbage collector must be able to locate all the roots of the entire program -) 189.76 540.62 B
(including an) 63.65 527.62 T
(y thread-local v) 118.18 527.62 T
(ariables.) 186.94 527.62 T
-0.01 (F) 63.65 502.62 P
-0.01 (or Boehm\325) 69.6 502.62 P
-0.01 (s fully conserv) 116.34 502.62 P
-0.01 (ati) 180.81 502.62 P
-0.01 (v) 191.53 502.62 P
-0.01 (e collector) 196.87 502.62 P
-0.01 (, the collector itself tak) 242.54 502.62 P
-0.01 (es full responsibility for ensuring that allo-) 343.51 502.62 P
0.28 0.03 (cation and root location w) 63.65 489.62 B
0.28 0.03 (orks \050at least for some those platforms for which the Boehm collector supports) 180.27 489.62 B
(threads, e.g. W) 63.65 476.62 T
(in32, I think\051.) 129.49 476.62 T
0.28 0.32 (The responsibilities are shared for Harlequin\325) 63.65 451.62 B
0.28 0.32 (s collector) 279.14 451.62 B
0.28 0.32 (. The designs are not yet f) 327.83 451.62 B
0.28 0.32 (inalized - b) 451.41 451.62 B
0.28 0.32 (ut are) 505.04 451.62 B
(e) 63.65 438.62 T
(xpected to look lik) 68.37 438.62 T
(e the follo) 150.45 438.62 T
(wing:) 194.78 438.62 T
-0.11 (F) 63.65 413.62 P
-0.11 (or allocation, each thread will ha) 69.6 413.62 P
-0.11 (v) 213.01 413.62 P
-0.11 (e a pri) 218.35 413.62 P
-0.11 (v) 245.34 413.62 P
-0.11 (ate b) 250.56 413.62 P
-0.11 (uf) 271.31 413.62 P
-0.11 (fer from which allocate memory) 280.2 413.62 P
-0.11 (. Allocation is performed) 421.39 413.62 P
0.28 0.12 (by incrementing a pointer into the b) 63.65 400.62 B
0.28 0.12 (uf) 227.02 400.62 B
0.28 0.12 (fer \050and the memory manager has responsibility for f) 236.14 400.62 B
0.28 0.12 (inding more) 476.71 400.62 B
-0.19 (space if there is not enough a) 63.65 387.62 P
-0.19 (v) 190.57 387.62 P
-0.19 (ailable\051. The space which has just been allocated must be initialized before it) 195.79 387.62 P
0.28 0.03 (can be processed by the collector - b) 63.65 374.62 B
0.28 0.03 (ut during this initialization phase, the memory manager may be pro-) 226.98 374.62 B
0.24 (cessing other objects. The memory manager will ignore the freshly-allocated memory until it is) 63.65 361.62 P
4 F
0.24 (commited) 488.88 361.62 P
1 F
0.28 0.04 (by the thread \050which the thread is obliged to do before allocating an) 63.65 348.62 B
0.28 0.04 (y more memory\051. Synchronization is) 367.64 348.62 B
(achie) 63.65 335.62 T
(v) 86.58 335.62 T
(ed by means of the follo) 91.92 335.62 T
(wing constraints:) 198.27 335.62 T
2 F
(\245) 99.65 316.62 T
1 F
-0.08 (The allocation / initialization must be performed in a loop, to allo) 113.4 316.62 P
-0.08 (w for the f) 400.05 316.62 P
-0.08 (act that the) 445.82 316.62 P
4 F
-0.08 (commit) 496.6 316.62 P
1 F
-0.39 (might f) 113.4 303.62 P
-0.39 (ail. \050F) 144.99 303.62 P
-0.39 (ailure might occur if the collector has just changed phase, and the allocation b) 170.71 303.62 P
-0.39 (uf) 508.19 303.62 P
-0.39 (fer) 517.08 303.62 P
(is no longer current, for instance\051. This is the basis of synchronization with the collector and) 113.4 290.62 T
(with other threads. Since the initialization code may be e) 113.4 277.62 T
(x) 363.14 277.62 T
(ecuted more than once, it must be) 368.48 277.62 T
(careful about performing side-ef) 113.4 264.62 T
(fects.) 255.77 264.62 T
2 F
(\245) 99.65 248.62 T
1 F
-0.09 (During initialization, the thread must ensure that no v) 113.4 248.62 P
-0.09 (alue stored into the ne) 347.95 248.62 P
-0.09 (wly allocated mem-) 444.46 248.62 P
(ory might become in) 113.4 235.62 T
(v) 204.32 235.62 T
(alid as a result of relocation performed by the memory manager) 209.54 235.62 T
(. Where) 489.37 235.62 T
(objects are kno) 113.4 222.62 T
(wn to be static or untraced, this imposes no constraint. Otherwise, it is possible) 179.72 222.62 T
-0.06 (to ensure that the v) 113.4 209.62 P
-0.06 (alue will not be relocated by putting it in an) 196.6 209.62 P
4 F
-0.06 (ambiguous r) 390.96 209.62 P
-0.06 (oot) 445.71 209.62 P
1 F
-0.06 ( \050e.g. by storing) 459.77 209.62 P
(it on the stack\051.) 113.4 196.62 T
0.28 0.15 (In practice, this means that we will probably implement tw) 63.65 171.62 B
0.28 0.15 (o primiti) 333.7 171.62 B
0.28 0.15 (v) 373.24 171.62 B
0.28 0.15 (e memory allocators in the Dylan) 378.72 171.62 B
0.28 0.01 (runtime. One will allocate memory and initialize it from a prototype object. The other will allocate mem-) 63.65 158.62 B
0.28 0.01 (ory and f) 63.65 145.62 B
0.28 0.01 (ill it with a v) 103.42 145.62 B
0.28 0.01 (alue \050e.g. the canonical uninitialized v) 160.68 145.62 B
0.28 0.01 (alue\051. Programmer) 330.04 145.62 B
0.28 0.01 (-def) 412.8 145.62 B
0.28 0.01 (ined initialization code) 429.96 145.62 B
(can then be safely run with no constraints once the primiti) 63.65 132.62 T
(v) 318.78 132.62 T
(e allocation has \336nished.) 324.12 132.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 25
%%Page: "26" 26
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 10 Q
(26) 63.65 84.9 T
0 9 Q
(Februar) 419 84.9 T
(y 21, 1996 6:29 pm) 452.6 84.9 T
1 11 Q
0.28 0 (Root location poses tw) 63.65 737.62 B
0.28 0 (o particular challenges for the Harlequin collector) 164.94 737.62 B
0.28 0 (. The design implies that the col-) 385.42 737.62 B
0.13 (lector must be able to trace all roots atomically) 63.65 724.62 P
0.13 (. Since this tracing phase may be started from an) 270.52 724.62 P
0.13 (y arbitrary) 485.39 724.62 P
(thread, it may be necessary to impose the follo) 63.65 711.62 T
(wing constraints:) 268.37 711.62 T
2 F
(\245) 99.65 692.62 T
1 F
(It may be necessary to stop all other threads temporarily) 113.4 692.62 T
(. \050Actually it is not important that) 359.83 692.62 T
(threads are stopped - merely that the) 113.4 679.62 T
(y cannot de-reference an) 273.31 679.62 T
(y roots. Stopping threads is just) 381.56 679.62 T
(one w) 113.4 666.62 T
(ay to achie) 139.87 666.62 T
(v) 187.24 666.62 T
(e that\051. An) 192.58 666.62 T
(y mechanism to stop all threads will be implemented in the runt-) 239.15 666.62 T
(ime. It is purposefully not e) 113.4 653.62 T
(xposed in the threads library) 234.84 653.62 T
(.) 359.38 653.62 T
2 F
(\245) 99.65 637.62 T
1 F
(An) 113.4 637.62 T
(y thread must be able to address and \336nd all roots - e) 126.68 637.62 T
(v) 358.59 637.62 T
(en if the roots include thread-local) 363.92 637.62 T
-0.13 (v) 113.4 624.62 P
-0.13 (ariables. This may mean that thread-local v) 118.62 624.62 P
-0.13 (ariables ha) 307.91 624.62 P
-0.13 (v) 354.9 624.62 P
-0.13 (e to be re) 360.24 624.62 P
-0.13 (gistered on thread creation. It) 400.32 624.62 P
(may e) 113.4 611.62 T
(v) 139.7 611.62 T
(en mean that thread-local v) 145.04 611.62 T
(ariables may not be able to use v) 264.51 611.62 T
(alue calls pro) 408.12 611.62 T
(vided by the) 466.61 611.62 T
(OS threads interf) 113.4 598.62 T
(ace for direct storage.) 188.44 598.62 T
0 10 Q
(1.8.3) 63.65 564.29 T
(Interfacing to Foreign Code) 90.65 564.29 T
1 11 Q
0.28 0.08 (It is intended that threads created by the Dylan library may call code written in other languages with no) 63.65 539.62 B
(special constraints. It is also intended that threads created in foreign code may call into Dylan.) 63.65 526.62 T
-0.01 (In the latter case, a <thread> object might not e) 63.65 501.62 P
-0.01 (xist for the thread, so it may ha) 271.3 501.62 P
-0.01 (v) 407.87 501.62 P
-0.01 (e to be created either at the) 413.2 501.62 P
(call-in point, or at the call to current-thread\050\051.) 63.65 488.62 T
0.28 0.01 (What about dynamic loading of Dylan code, when multiple threads already e) 63.65 463.62 B
0.28 0.01 (xist?? May ha) 405.92 463.62 B
0.28 0.01 (v) 468.13 463.62 B
0.28 0.01 (e to initialize) 473.48 463.62 B
(thread-local v) 63.65 450.62 T
(ariables v) 124.16 450.62 T
(ery carefully then.) 166.45 450.62 T
0 10 Q
(1.8.4) 63.65 416.29 T
(Solaris Implementation) 90.65 416.29 T
1 11 Q
(<simple-lock> -> mute) 63.65 391.62 T
(x) 165.2 391.62 T
(<recursi) 63.65 366.62 T
(v) 99.51 366.62 T
(e-lock> -> mute) 104.84 366.62 T
(x) 175.74 366.62 T
(<semaphore> -> semaphore) 63.65 341.62 T
(<noti\336cation> -> condition v) 63.65 316.62 T
(ariable) 191.07 316.62 T
(<thread> -> thread) 63.65 291.62 T
(\337uid-v) 63.65 266.62 T
(ariable -> thread-local v) 92.71 266.62 T
(ariable) 198.52 266.62 T
(conditional-update! -> compare-and-e) 63.65 241.62 T
(xchange ??) 230.97 241.62 T
0 10 Q
(1.8.5) 63.65 207.29 T
(Win32 Implementation) 90.65 207.29 T
1 11 Q
(<simple-lock> -> critical re) 63.65 182.62 T
(gion) 185.04 182.62 T
(<recursi) 63.65 157.62 T
(v) 99.51 157.62 T
(e-lock> -> critical re) 104.84 157.62 T
(gion) 195.58 157.62 T
(<semaphore> -> semaphore) 63.65 132.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 26
%%Page: "27" 27
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D5.7.2) 103.06 766.62 T
(Stud) 321.46 766.62 T
(y of P) 339.11 766.62 T
(erf) 360.66 766.62 T
(ormance of TDF-Based Threaded Systems) 370.72 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 9 Q
(Februar) 63.65 84.9 T
(y 21, 1996 6:29 pm) 97.25 84.9 T
0 10 Q
(27) 520.53 84.9 T
1 11 Q
(<noti\336cation> -> e) 63.65 737.62 T
(v) 146.15 737.62 T
(ent) 151.48 737.62 T
(<thread> -> thread) 63.65 712.62 T
(\337uid-v) 63.65 687.62 T
(ariable -> thread-local v) 92.71 687.62 T
(ariable) 198.52 687.62 T
(conditional-update! -> compare-and-e) 63.65 662.62 T
(xchange \050b) 230.97 662.62 T
(ut not for 386\051; atomic-e) 279.31 662.62 T
(xchange, maybe) 387.3 662.62 T
0 10 Q
(1.8.6) 63.65 628.29 T
(Macintosh Implementation) 90.65 628.29 T
1 11 Q
(<simple-lock> -> critical re) 63.65 603.62 T
(gion) 185.04 603.62 T
(<recursi) 63.65 578.62 T
(v) 99.51 578.62 T
(e-lock> -> critical re) 104.84 578.62 T
(gion) 195.58 578.62 T
(<semaphore> -> b) 63.65 553.62 T
(uilt using critical re) 144.35 553.62 T
(gion as a primiti) 230.04 553.62 T
(v) 301.58 553.62 T
(e) 306.91 553.62 T
(<noti\336cation> -> b) 63.65 528.62 T
(uilt using critical re) 146.82 528.62 T
(gion as a primiti) 232.51 528.62 T
(v) 304.04 528.62 T
(e) 309.38 528.62 T
(<thread> -> thread) 63.65 503.62 T
(\337uid-v) 63.65 478.62 T
(ariable -> thread-local v) 92.71 478.62 T
(ariable ??) 198.52 478.62 T
(conditional-update! -> ??) 63.65 453.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 27
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%PageOrder: Ascend
%%Pages: 27
%%DocumentFonts: Helvetica-Bold
%%+ Times-Roman
%%+ Courier-Bold
%%+ Times-Bold
%%+ Times-Italic
%%EOF
