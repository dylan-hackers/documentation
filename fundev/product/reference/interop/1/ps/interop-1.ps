%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.1
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%-
%- Frame ps_prolog 5.0, for use with Frame 5.0 products
%- This ps_prolog file is Copyright (c) 1986-1996 Adobe Systems, Incoporated.
%- All rights reserved.  This ps_prolog file may be freely copied and 
%- distributed in conjunction with documents created using FrameMaker, 
%- FrameMaker/SGML FrameReader and FrameViewer as long as this 
%- copyright notice is preserved.
%-
%- FrameMaker users specify the proper paper size for each print job in the
%- "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
%- printer that the PS file is sent to does not support the requested paper
%- size, or if there is no paper tray of the proper size currently installed, 
%- then the job will not be printed.  The following flag, if set to true, will
%- cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%-
%- Frame products normally print colors as their true color on a color printer
%- or as shades of gray, based on luminance, on a black-and white printer. The
%- following flag, if set to true, forces all non-white colors to print as pure
%- black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%-
%- Frame products can either set their own line screens or use a printer's 
%- default settings. Three flags below control this separately for no 
%- separations, spot separations and process separations. If a flag
%- is true, then the default printer settings will not be changed. If it is
%- false, Frame products will use their own settings from a table based on
%- the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%-
%- For any given PostScript printer resolution, Frame products have two sets of 
%- screen angles and frequencies for printing process separations, which are 
%- recomended by Adobe. The following variable chooses the higher frequencies
%- when set to true or the lower frequencies when set to false. This is only
%- effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%-
%- The following is a set of predefined optimal frequencies and angles for various
%- common dpi settings. This is taken from "Advances in Color Separation Using
%- PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
%- and corrolated with information which is in various PPD (4.0) files.
%-
%- The "dpiranges" figure is the minimum dots per inch device resolution which
%- can support this setting. The "low" and "high" values are controlled by the
%- setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
%- the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
%- three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%-
%- PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
%- to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
%- (too badly) against the screen frequencies of any separations for that DPI.
% This is computed by taking dpi/9 as the ideal pixels per repetition, and then
% computing a tiling size in printer pixels for each of the four separations as 
% (dpi/screenFreq)*(cos(screenAngle)+sin(screenAngle)) Actually, this is the same 
% for Cyan and Magenta). Then, we take a "nice" LCM of the tile sizes close to
% the desired pattern tile where the beat factor is not more than 2 or 3.
%
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def

/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def

/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%-
%- PostScript Level 2 printers contain an "Accurate Screens" feature which can
%- improve process separation rendering at the expense of compute time. This 
%- flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%-
%- The following PostScript procedure defines the spot function that Frame
%- products will use for process separations. You may un-comment-out one of
%- the alternative functions below, or use your own.
%-
%- Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%-
%- Line function
%- /FMSpotFunction { pop } def
%-
%- Elipse function
%- /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%-		sqrt 1 exch sub } def
%-
%-

/FMversion (5.0) def % matches PS_VERSION in fmprintdriver

% PostScript Level 1 = true, 2 = false
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def

% Set up Color vs. Black-and-White
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
%		statusdict /processcolors known {
%			statusdict /processcolors get exec
%		} {1} ifelse
%		1 gt
		true
	} ifelse
def

/FrameDict 400 dict def % should check this value each time changes made

%
% For NeWS we add a fake errordict, so we can psh files
%
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if

%- The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put % save old rangecheck
errordict /rangecheck {FrameDict /bug true put} put % will flag bug found
FrameDict /bug false put % flag bug not found
mark % since we're not sure what will happen next
%- Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark % junk from readline and rangecheck
errordict /rangecheck FrameDict /tmprangecheck get put % restore rangecheck
FrameDict /bug get { % redefine readline if last one got a rangecheck
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop % get a char
			dup 10 eq {exit} if % exit if LF
			dup 13 eq {exit} if % exit if CR
			gstring exch gindex exch put % store it away
			/gindex gindex 1 add def % bump index
		} loop
		pop % eol character
		gstring 0 gindex getinterval true % simulate real readline
		} bind def
	} if

% outer-world defs

/FMshowpage /showpage load def
/FMquit /quit load def

/FMFAILURE { % enter with two error strings on the stack
	dup = flush % send a copy of the message to the console
	FMshowpage % msg on a page by itself, so it can't be, say, black on black
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage % we might be in the middle of some EPS, where "showpage"
	FMquit % and "quit" are redefined
	} def % only used once at most, so no bind

/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def % only used at startup, so no bind

/FMBADEPSF { % Call with bad operator name on stack (as a string)
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length % parmstr errstr errstr indx
	5 -1 roll % errstr errstr index parmstr
	putinterval % errstr
	FMFAILURE
	} def

% standard concatprocs routine
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def

% Put all local variables here in alphabetical order.
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall

% Start of PDF/Acrobat support

% Bind def
/FmBD {bind def} bind def

systemdict /pdfmark known {
	/fMAcrobat true def

	% FmPD is a conditional PDFMark
	/FmPD /pdfmark load def
	
	% FmPT is a show text operator which only show up when distiller is active
	/FmPT /show load def
	
	% FmPD2 and FmPA are Acrobat 2.0-specific
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		% FmPD2 is like FmPD but for Acrobat 2.0-specific PDF
		/FmPD2 /pdfmark load def
		
		% x y/name FmPA
		% 	is equivalent to
		% [/Dest/name/View[/FitH x y FmDC exch pop]/DEST FmPD
		% It is a shortcut for pagragraph Uinique ID designators whic occurr commonly.
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		% These are No-Ops for Distiller 1.0
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	% these are the No-Ops for regular PostScript
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse

% This convert a set of X Y coordinates from the current user space to the default
% PostScript coordinates needed by some pdfmark variants. We also convert to 
% integer because the distiller doesn't always like floats!
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD

% This converts four numbers into a bounding box making sure the first two are maller than the last two
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD

% End of PDF/Acrobat support

%
% Color separation code
%

% Constants.

/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def

/fMNegative false def % we are inverting the page

% Variables.

/FrameSepIs FMnone def % separation we are printing
% If FrameSepIs is FMcustom, this is the custom color
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def

/FrameCurColors [ 0 0 0 1 0 0 0 ] def % c m y k r g b

% Utility routines

/FrameColorEpsilon .001 def	% epsilon by which values can differ and sill be equal
/eqepsilon {		% v1 v2 eqeps bool
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def

% are the cmyk and cmykrgb arrays on the stack the same color?
/FrameCmpColorsCMYK { % [ c1 m1 y1 k1 ] [ c2 m2 y2 k2 r2 g2 b2] -> bool
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
% are the rgb and cmykrgb arrays on the stack the same color?
/FrameCmpColorsRGB { % [ r1 g1 b1 ] [ c2 m2 y2 k2 r2 g2 b2] -> bool
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def

% convert r g b to c m y k
/RGBtoCMYK { % r g b
	1 exch sub % r g y
	3 1 roll % y r g
	1 exch sub % y r m
	3 1 roll % m y r
	1 exch sub % m y c
	3 1 roll % c m y
	3 copy % c m y c m y
	2 copy % c m y c m y m y
	le { pop } { exch pop } ifelse % c m y c min(m,y)
	2 copy % c m y c min(m,y) c min(m,y)
	le { pop } { exch pop } ifelse % c m y min(c, min(m,y))
	dup dup dup % c m y k k k k
	6 1 roll % c k m y k k k
	4 1 roll % c k m k y k k
	7 1 roll % k c k m k y k
	sub % k c k m k y
	6 1 roll % y k c k m k
	sub % y k c k m
	5 1 roll % m y k c k
	sub % m y k c
	4 1 roll % c m y k 
} bind def
/CMYKtoRGB { % c m y k CMYKtoRGB r g b
	dup dup 4 -1 roll add 						  % c m k k y+k
	5 1 roll 3 -1 roll add 						  % y+k c k m+k
	4 1 roll add 								  % m+k y+k c+k
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  % r m+k y+k
	1 exch sub dup 0 lt {pop 0} if exch 	      % r b m+k
	1 exch sub dup 0 lt {pop 0} if exch	  		  % r g b
} bind def

% Public routines


% Happens at the top of each page that is a separation
/FrameSepInit {
	1.0 RealSetgray
} bind def
% Tell the separation code that this separation is for a custom color
/FrameSetSepColor { % c m y k r g b
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
% Tell the separation code that this separation is Cyan
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
% Tell the separation code that this separation is Magenta
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
% Tell the separation code that this separation is Yellow
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
% Tell the separation code that this separation is Black
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
% Tell the separation code we are not doing a separation
/FrameNoSep { %
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def

% Initialize the separation code with all the custom colors we are
% separating (not process colors)
/FrameSetSepColors { % list of arrays of [c m y k r g b] count 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  % array of arrays of colors we are separating
	exch def end
	} bind def

% is this color array in the array of custom color separations?
/FrameColorInSepListCMYK { % [ c m y k ] -> bool
	FrameSepColors {  % color elem-of-array
       		exch dup 3 -1 roll % color color elem
       		FrameCmpColorsCMYK % color bool
       		{ pop true exit } if
    	} forall % exits with either [color] or true
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { % [ r g b ] -> bool
	FrameSepColors {  % color elem-of-array
       		exch dup 3 -1 roll % color color elem
       		FrameCmpColorsRGB % color bool
       		{ pop true exit } if
    	} forall % exits with either [color] or true
	dup true ne {pop false} if
	} bind def

% Level 1 color operators saved and redefined
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 

% Setgray patch
/setgray { % num
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ % go to white unless the current sep color is black
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { % r g b
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] % r g b [ r g b ]
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor % safe since we will overwrite the color state
		currentrgbcolor  % r g b - Let PostsCript to the conversion.
		setrgbcolor % call our version
	} 
	ifelse
	end
} bind def
FrameDict begin

/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { % c m y k
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put

% Set up a prototype pattern for PostScript Level 2
fMLevel1 { 
	% set up screen functions for the patterns in PS level 1
	% each entry contains an angle, spot function, flipped spot function,
	% gray level and frequency multiplier.
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { % prototype level 2 pattern dictionary
	% define some PostScript procedures for known jaggy patterns.
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		% Always 1 for PS Level 2
		/PaintType 2 def		% Uncolored pattern
		/TilingType 3 def		% constant spacing and faster tiling
		/BBox [ 0 0 8 8 ] def 	% bounding box
		/XStep 8 def			% X offset
		/YStep 8 def			% Y offset
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse

%combineColor puts together the current gray value (which could also be
%a fraction of on bits for a fill pattern and the current color and calls
%the appropriate function
%
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			% Level 2 pattern
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { % separation case
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			% Level 2 pattern
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				% Level 1 patterns are either all there or not there at all
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def

/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
% freq and sangle are used for ps Level 1 pattern building.
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def

%
% screen index depending on dpi
%	- screenIndex smallint
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def

%
% These routines get the standard Adobe frequencies, angles, and spot functions
% depending on the DPI
%
% - getCyanScreen freq angle spotfunction
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def

%
% - getMagentaScreen freq angle spotFunction
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def

%
% - getYellowScreen freq angle spotFunction
% note that some of these use a "tripple dot" function at 1/3 the frequency
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def

%
% - getBlackScreen freq angle spotFunction
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def

%
% - getSpotScreen freq angle spotFunction
/getSpotScreen {
	getBlackScreen
} bind def

%
% - getCompositeScreen freq angle spotFunction
/getCompositeScreen {
	getBlackScreen
} bind def

% FmSetScreen sets the screen for either PostScript Level 1 or Level 2 and optionally
% sets the accuratescreens flag in the latter case
% freq angle spotfunction FMSetScreen -
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def

% This sets the default screen as was set at the beginning of the job
% - setDefaultScreen -
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def

% This sets the current screen depending on FrameSepIs
% - setCurrentScreen -
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def


end

% End of Color separation code
%
	
/FMDOCUMENT { % xscale yscale edown negative paperwidth paperheight manfeed numcopies numfonts
	array /FMfonts exch def % Why isn't this in FrameDict???
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def % invert page
	0 ne /edown exch def % flip page along y axis
	/yscale exch def
	/xscale exch def

	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def % some PS's leave junk on dict ...
		/FMoptop count def % ...or on operand stack...
		setpapername % This stuff may alter the transfer/screen/angle
		manualfeed {true} {papersize} ifelse % true->more work to do
		{manualpapersize} {false} ifelse % true->more work to do
		{desperatepapersize} {false} ifelse % true->failed completely
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for %...if tray not installed
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse % fMLevel1
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def

			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse

	end % FrameDict
} def % only used at startup, so no bind

/FMBEGINPAGE { % pagewidth pageheight landscape color-arrays count
	FrameDict begin % for the whole page...
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { % check for landscape
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
% paint the whole page in "white".  If the page is inverted, then
% this will actually paint our black background
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave % for CLIP
} def % only used infrequently, so no bind

/FMENDPAGE {
	grestore % for CLIP
	pagesave restore
	end % FrameDict
	showpage
	} def % only used infrequently, so no bind

/FMFONTDEFINE { % fontindex nonstd_encoding fontname -- 
	FrameDict begin
	findfont % fontindex nonstd_encoding font
	ReEncode % fontindex font'
	1 index exch % fontindex fontindex font'
	definefont % fontindex font"
	FMfonts 3 1 roll %  FMfonts fontindex font"
	put
	end % FrameDict
	} def % only used infrequently, so no bind

/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end % framedict
	} def % Only called once, so no bind

/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end % FrameDict
	} def % only used infrequently, so no bind

% Set things to a known, quiescent state, for when we switch to another writer
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray % Not FMsetgray; only called outside of our environment!
	} bind def

/FMBEGINEPSF { % <theta> llx lly urx ury fw fh fx fy
	end % FrameDict
	/FMEPSF save def % in userdict
	/showpage {} def % this def is in userdict
%- See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
%- "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def % FMBADEPSF knows this is the longest!
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
%	/initmatrix {(initmatrix) FMBADEPSF} def	% Aldus Freehand 4.0 epsf uses this harmlessly <Gus 4/26/95>
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS % in case we're in a strange state
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall % neat trick
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale % then scale
	llx neg lly neg translate % then compensate for LL offset 
	/FMdicttop countdictstack 1 add def % high-water mark of dict stack
	/FMoptop count def % tricky! "/FMoptop" on stack
	} bind def

/FMENDEPSF {
	count -1 FMoptop {pop pop} for % clear EPS junk from operand stack
	countdictstack -1 FMdicttop {pop end} for % ditto for dict stack
	FMEPSF restore
	FrameDict begin % for the whole page...
	} bind def

FrameDict begin % put most defs here

/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def

/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def

/pagedimen { % name width height
	paperheight sub abs 16 lt exch % 16pt is an arbitrary slop amount
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def

/setpapername { % Already set up: paperwidth paperheight and manualfeed
	/papersizedict 14 dict def % one for /papername, one for /unknown
	papersizedict begin
	/papername /unknown def % in case no match
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def

/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end % return true if more work to do
	} bind def

/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped % return true if more work to do
	} bind def

/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped % return true iff failed
		end
		} {true} ifelse % return true iff failed
	} bind def

/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def

%
% Font re-encoding to include diacritics
% 
/DiacriticEncoding [

/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron

] def

/ReEncode { % nonstd_encoding font -- reencodedfont
	dup % nonstd_encoding font font
	length % nonstd_encoding font dictlength
	dict begin % nonstd_encoding font % currentdict = newdict
	{% forall % forall is over font to be copied
	1 index /FID ne % skip FID
		{def} % defs go into newfontdict which is currentdict
		{pop pop} ifelse % copy all keys including /Encoding
	} forall % nonstd_encoding
	0 eq {/Encoding DiacriticEncoding def} if % --
	currentdict % push a copy of the copied font dict onto operand stack
	end % font' % before popping it off dictionary stack
	} bind def

FMPColor 
	% setup procs for color printing
	{

	/BEGINBITMAPCOLOR { % iw, ih, width, height, theta, x y 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { % iw, ih, width, height, theta, x y 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	% setup procs for B&W printing
	{
	/BEGINBITMAPCOLOR { % iw, ih, width, height, theta, x y 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { % iw, ih, width, height, theta, x y 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse

/K { % c m y k r g b SEPARATION
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
%
% graymode is true if we are just doing gray fills, this way do not keep calling
% setscreen. I don't know what the cost is on calling setscreen with defaults, but
% this is easy to keep track of, and we know for sure we aren't wasting cycles.
% if graymode is false and fMLevel1 is false, then we are using Level 2 patterns.
%
/graymode true def

% used by level 1 patterns
% defaultflip matrixentry fmGetFlit -> eith -1 or 1
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if

/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop % angle spot fspot gray mult
			freq 								% freq
			mul									% times multiplier
			5 2 roll							% angle spot fspot gray mult freq -> gray freq angle spot fspot
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		% landscape
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								% portrait     
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		% take regular or flipped spot function
			fMNegative { 
				{neg} fmConcatProcs 			% invert spot function
			} if
			bind
			% we need to bypass any screen filter and go directly to systemdict
			% to avoid problems with Kodak Precision calibration software
			% <Gus 9/13/93>
			systemdict /setscreen get exec		% leave graylevel on stack
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { % Level 2 version
		pop pop
		dup patCache exch known {
			patCache exch get
		} { % not in cache
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
%			9 orgfreq 
%				organgle sin abs organgle cos abs add div
%				dup 16 div round dup 0 le {pop 1} if  % Unix pattern size
%			    dup  9 div round dup 0 le {pop 1} if  % Mac larger (WYSIWYG) size
%					div div dup matrix scale % This gives Unix pattern size.
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def

/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def

/normalize {
	transform round exch round exch itransform
	} bind def

/dnormalize {
	dtransform round exch round exch idtransform
	} bind def

/lnormalize { % line widths are always odd so that arrow heads work
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def

/H { % THICK
	lnormalize setlinewidth
	} bind def

/Z {
	setlinecap
	} bind def
	
% This is used to fill or stroke white behind a Level 2 pattern
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def

/X { % TEXTURE
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} % Silly to pass parameters here
	{setGrayScaleMode}
	ifelse
	} bind def

/V { % FILL
	PFill gsave eofill grestore
	} bind def

/Vclip {
	clip
	} bind def

/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/N { % PEN
	PStroke
	} bind def

/Nclip {
	strokepath clip newpath
	} bind def

/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def

/L { % POLYLINE
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def

/Y { % POLYGON !!!
	L % POLYLINE
	closepath
	} bind def

/R { % RECT x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y % POLYGON
	} bind def

/rarc % Leaves all sorts of junk on the operand stack for caller to clear off
	{rad % arcto might fail if we're scaled way down
	 arcto
	} bind def

/RR { % ROUNDRECT x1 y1 x2 y2 r
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if % in case rarc failed for degenerate arcs
	cleartomark
	} bind def

/RRR { % ROUNDRECT ROTATED xs ys x1 y1 x2 y2 x3 y3 x4 y4 r
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto % eats xs ys
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def

/C { % CLIP
	grestore
	gsave
	R % RECT
	clip
	setCurrentScreen
} bind def

/CP { % CLIPPOLY p1x p1y p2x p2y ... n 
	grestore
	gsave
	Y % POLYGON
	clip
	setCurrentScreen
} bind def

/F { % FONT
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def

/Q { % POINTSIZE (& font)
	/FMpointsize exch def
	F % could be slightly optimized here
	} bind def

/T { % TEXT <string> <x> <y>
	moveto show
	} bind def

% Callers of RF (rotate/flip) must gsave (or save) first; (g)restore when done
/RF { % <flip> <theta>
	rotate
	0 ne {-1 1 scale} if
	} bind def

/TF { % TEXTFLIPROTATE <string> <flip> <theta> <x> <y>
	gsave
	moveto 
	RF
	show
	grestore
	} bind def

/P { % PADTEXT <pad> <string> <x> <y>
	moveto
	0 32 3 2 roll widthshow
	} bind def

/PF { % PADTEXTFLIPROTATE <pad> <string> <flip> <theta> <x> <y>
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def

/S { % SPREADTEXT <spread> <string> <x> <y>
	moveto
	0 exch ashow
	} bind def

/SF { % SPREADTEXTFLIPROTATE <spread> <string> <flip> <theta> <x> <y>
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def

/B { % PADSPREADTEXT <pad> <spread> <string> <x> <y>
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def

/BF { % PADSPREADTEXTFLIPROTATE <pad> <spread> <string> <flip> <theta> <x> <y>
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def

/G { % ARCFILL theta1 theta2 width height x y
	gsave
	newpath
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	PFill fill
	grestore
	} bind def

/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch % theta1 theta2 width height x y
    normalize 2 index 2 div sub exch 3 index 2 div add exch % theta1 theta2 width height x y
    translate
    scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def

/Gclip { % ARCFILL theta1 theta2 width height x y swid
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	clip newpath
	restorematrix
	} bind def

/GG { % ARCFILL ROTATED theta1 theta2 width height angle x y
	gsave
	newpath
	normalize translate 0.0 0.0 moveto % eats x y
	rotate % eats angle
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath
	PFill
	fill
	grestore
	} bind def

/GGclip { % ARCFILL ROTATED theta1 theta2 width height angle x y
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath
	clip newpath
	restorematrix
	} bind def

/GGstrk { % ARCFILL ROTATED swid theta1 theta2 width height angle x y
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/A { % ARCPEN theta1 theta2 width height x y
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch % theta1 theta2 width height x y
	normalize 2 index 2 div sub exch 3 index 2 div add exch % theta1 theta2 width height x y
	translate 
	scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	restorematrix
	PStroke
	grestore
	} bind def

/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	strokepath clip newpath
	restorematrix
} bind def

/Astrk {
	Gstrk
} bind def

/AA { % ARCPEN ROTATED theta1 theta2 width height angle x y
	gsave
	savematrix
	newpath
	% theta1 theta2 width height angle x y
	3 index 2 div add exch 4 index 2 div sub exch 
	% theta1 theta2 width height angle x y
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate % eats x y
	rotate % eats angle
	scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	restorematrix
	PStroke
	grestore
	} bind def

/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath
	strokepath clip newpath
	restorematrix
} bind def

/AAstrk {
	GGstrk
} bind def

/BEGINPRINTCODE { % -x -y width height
	/FMdicttop countdictstack 1 add def % high-water mark of dict stack
	/FMoptop count 7 sub def % tricky! 7 params on stack, plus "/FMoptop"
	/FMsaveobject save def
	userdict begin % insulate user from FrameDict; not in /FMdicttop count
	/showpage {} def % this def is in userdict
	FMNORMALIZEGRAPHICS % in case we're in a strange state
	3 index neg 3 index neg translate
	} bind def

/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for % clear user junk from operand stack
	countdictstack -1 FMdicttop {pop end} for % ditto for dict stack
	FMsaveobject restore % this is now safe, unless user very malicious
	} bind def

/gn { % get a number in a funny encoding scheme
	0 % result on stack
	{	46 mul % shift old digits
		cf read pop % get next character
		32 sub % zero is the space character
		dup 46 lt {exit} if % quit if we're the last digit
		46 sub add % add in this digit and loop around for next
		} loop
	add % result on stack
	} bind def

/cfs { % create a string of length "sl" filled with "val"s
	/str sl string def % create string as "str"
	0 1 sl 1 sub {str exch val put} for % fill array
	str def % define real array name, too; name is on stack from caller
	} bind def

/ic [ % "case" stmt list of procedures that the image commands should call
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def

/ms { % make all the strings
	/sl exch def % remember length of currently existing strings
	/val 255 def % that's white
	/ws cfs % make "ws" a string filled with white
	/im cfs % and "im" is a complete image scanline
	/val 0 def % that's black
	/bs cfs % make "bs" a string filled with black
	/cs cfs % here's where we'll put complete command lines
	} bind def

400 ms % make strings that will be plenty long for most applications

/ip { % image procedure; reads and executes commands to make scanlines
	is % leave image string and...
	0 % ...image position on stack all through this procedure
	cf cs readline pop % get a string of commands
	{	ic exch get exec % execute next command
		add % all commands leave a length on the stack; update pos
		} forall % step through all commands
	pop % get rid of image position pointer
	% image string left on stack, so it's returned to image primitive
	} bind def
/rip { % this is similar to ip above, except for 24 bit images
	   % this takes an extra argument, the width of the image
	  % do red
	  bis ris copy pop % copy blue to red
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop % remove is and position from stack
	  ris gis copy pop % copy red to green
	  dup is exch % position of green is width bytes into is
	  % do green
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop % copy green to blue
	  dup add is exch % position of blue is 2*width bytes into is
	  % do blue
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def

/rip4 { % this is similar to ip above, except for 32 bit images
	   % this takes an extra argument, the width of the image
	  % do cyan
	  kis cis copy pop % copy black to cyan
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop % remove is and position from stack
	  cis mis copy pop % copy cyan to magenta
	  dup is exch % position of magenta is width bytes into is
	  % do magenta
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop % copy magenta to yellow
	  dup dup add is exch % position of yellow is 2*width bytes into is
	  % do yellow
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop % copy yellow to black
	  3 mul is exch % position of black is 3*width bytes into is
	  % do black
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def


/wh { % fill a number of bytes with "white"
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	ws 0 len getinterval im pos len getinterval copy pop
	pos len % remember where we got to
	} bind def

/bl { % fill a number of bytes with "black"
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	bs 0 len getinterval im pos len getinterval copy pop
	pos len % remember where we got to
	} bind def

/s1 1 string def

/fl { % fill a number of bytes with a specific hex value
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len % remember where we got to
	} bind def

/hx { % read hex bytes directly; on entry, stack has <str> <pos> <len>
	3 copy getinterval % stack has <str> <pos> <len> <substr>
	cf exch readhexstring pop pop % stack back to <str> <pos> <len>
	} bind def

/wbytes { % width depth -> wb      find width in bytes  given 1, 2, 8 or 24 or 32
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { % iw, ih, width, height, theta, x y 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { % iw, ih, width, height, theta, x y 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { % iw, ih, width, height, theta, x y 
	2 {} COMMONBITMAPc
	} bind def
%
% Common routine for imaging compressed images
%
/COMMONBITMAPc { % iw, ih, width, height, theta, x y depth proc
		 % (x,y) is the lower left corner of the image
	/cvtProc exch def
	/depth exch def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def % LW+ has a buggy memory leak!
	cvtProc                % run the desired proc after save has occurred
	/is im 0 lb getinterval def % image substring
	ws 0 lb getinterval is copy pop % whiten it
	/cf currentfile def % evaluate "currentfile" only once
	width height depth [width 0 0 height neg 0 height] % top to bottom
	{ip} image % zap!
	bitmapsave restore % avoid occasional disaster on the LW+
	grestore
	} bind def
/BEGINBITMAPBW { % iw, ih, width, height, theta, x y 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { % iw, ih, width, height, theta, x y 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { % iw, ih, width, height, theta, x y 
	2 {} COMMONBITMAP
	} bind def
%
% Common routine for uncompressed images
%
/COMMONBITMAP { % iw, ih, width, height, theta, x y depth proc
	/cvtProc exch def
	/depth exch def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/bitmapsave save def % LW+ has a buggy memory leak!
	cvtProc              % run the desired proc after save has occurred
	/is width depth wbytes string def
	/cf currentfile def % evaluate "currentfile" only once
	width height depth [width 0 0 height neg 0 height] % top to bottom
	{cf is readhexstring pop} image
	bitmapsave restore % avoid occasional disaster on the LW+
	grestore
	} bind def

%
% All this hairy color setup stuff gus wrote on the mac, I just copied and
% changed the variable names to be humanly readable.

/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def

fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
% The HP PaintJet XL300 ignores the gray transfer curve but still sets its
% default black generation and undercolor removal functions as if it is
% used. This causes black colors not to work. Bug#56844 <Gus 2/22/93>
% - We go back to the old (correct?) way of doing this since this code
% is now bypassed for PS Level 2 printers in favor of colorSetup2 which
% uses PS Level 2 indexed color, which is much cleaner. <Gus 3/3/93>
		/u kk currentundercolorremoval exec def
%-		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
% Here, we set up indexed color for imaging on PS Level 2 without mucking around
% with the transfer functions.

/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse

%
% Setup a transfer function to convert psuedo color values into grayscale
% values based on the color lookup tables.
%
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
%
% image a color image
%
/BITMAPCOLOR { % iw, ih, width, height, theta, x y 
	/depth 8 def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def % evaluate "currentfile" only once
		width height depth [width 0 0 height neg 0 height] % top to bottom
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def % evaluate "currentfile" only once
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
%
% Compressed color image rendering
%
/BITMAPCOLORc { % iw, ih, width, height, theta, x y 
	/depth 8 def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def % image substring
		ws 0 lb getinterval is copy pop % whiten it
		/cf currentfile def % evaluate "currentfile" only once
		width height depth [width 0 0 height neg 0 height] % top to bottom
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def % image substring
		ws 0 lb getinterval is copy pop % whiten it
		/cf currentfile def % evaluate "currentfile" only once
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/ris im 0 width getinterval def	% red part of im
	/gis im width width getinterval def	% green part of im
	/bis im width 2 mul width getinterval def % blue part of im
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/cis im 0 width getinterval def	% cyan part of im
	/mis im width width getinterval def	% magenta part of im
	/yis im width 2 mul width getinterval def % yellow part of im
	/kis im width 3 mul width getinterval def % black part of im
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
%
% image a color image to a b&width device
%
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/ris im 0 width getinterval def	% red part of im
	/gis im width width getinterval def	% green part of im
	/bis im width 2 mul width getinterval def % blue part of im
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/cis im 0 width getinterval def	% cyan part of im
	/mis im width width getinterval def	% magenta part of im
	/yis im width 2 mul width getinterval def % yellow part of im
	/kis im width 3 mul width getinterval def % black part of im
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { % c m y k width
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { % r g b width
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { % iw, ih, width, height, theta, x y 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { % iw, ih, width, height, theta, x y 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end % of FrameDict definitions

% OPI stuff
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def

% Dashed lines stuff
/I { setdash } bind def
/J { [] 0 setdash } bind def

%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 27 FMDOCUMENT
0 0 /Palatino-Roman FMFONTDEFINE
1 0 /Palatino-Bold FMFONTDEFINE
2 0 /Palatino-Italic FMFONTDEFINE
3 0 /Helvetica-Narrow-Bold FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /Courier-BoldOblique FMFONTDEFINE
6 0 /Helvetica-Narrow FMFONTDEFINE
7 0 /Palatino-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "i" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
108 117 486 612 R
7 X
0 0 0 1 0 0 0 K
V
108 570.45 486 612 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 570.45 486 612 R
7 X
0 0 0 1 0 0 0 K
V
108 605.14 270 605.14 2 L
V
3 H
2 Z
0 X
N
108 596.14 270 596.14 2 L
7 X
V
1 H
0 X
N
36 72 576 720 C
0 0 0 0 1 1 1 K
0 2 Q
7 X
(0) 108 558.45 T
0 0 0 1 0 0 0 K
0 18 Q
0 X
0 0 0 1 0 0 0 K
(Harlequin Dylan) 109 558.45 T
0 0 0 0 1 1 1 K
0 2 Q
7 X
0 0 0 0 1 1 1 K
(0) 108 520.45 T
0 0 0 1 0 0 0 K
0 36 Q
0 X
0 0 0 1 0 0 0 K
(C FFI and W) 109 520.45 T
(in32) 308.66 520.45 T
(Refer) 108 482.45 T
(ence) 192.1 482.45 T
0 24 Q
(Library Refer) 108 439.45 T
(ence) 249.29 439.45 T
0 14 Q
(V) 108 407.12 T
(ersion 2.0 Beta) 116.55 407.12 T
108 117 486 612 C
248.06 117 345.94 225 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
%%BeginBinary:  67083    
322 409 77.28 98.16 0 258.36 121.92
 BEGINBITMAPTRUECOLORc


















<"z$J)J)J%x#J&x
CBB97A6C9F6O)D8B0989797A8C5EDO0E8C9AD989798CAFAO"F6D4B9A597A6D4O&F6D7BFA89A97<"z$J)J)J%x#J&x
E8BD2FFFFFFO)FFFFE8D2D2FFFFFFO0FFFFFFE8D2E8FFFFO"FFFFFFFFD2FFFFO&FFFFFFFFE8D2<"z$J)J)J%x#J&x
E9BD4D7E9FBO)EFDDD2D4D4D9E8F8O0F6E9DCD2D4D2E9FDO"FBEDE2D7D4D7EEO&FBEFE5D9D3D4<"z&J's'J.J4JP.
97E2F486C9DB6E4LF6CDA68554372F3B5A80A1BFE4O*FFE8B691442F30456185A1BBE0KFFFFFFFFFAD7BBA5977457302F4480ADDCFFFFO&E8CDB6A392745743322F2F2F2F<"z&J's'J-J.J.
D2EA5D2D2E8FFFFLFFFFFFD2D2BBA5D2D2D2FFFFFFO+FFFFE8D2A5BBD2D2D2FFFFFFO!FFFFFFFFD2D2D2BBA5D2D2FFFFO-FFFFFFFFD2D2D2D2BBA5A5A5A5<"z&J's'J-J.J.
D4EA9B2C2D5E0F4LFBEBD7CDB8ABA9ABBBCBD4E4F4O+F6E0D0B0A9A7B1BECDD4E3F2O!FDEFE3D7D4C6BAA7A9B0CBDCF1O-F6EBE0D6D2C6BAAFA8A9A9A9A9<"z'J'z'J&w(J3JT%
97J2F395A89ABCDFAAEDBF9F704B3032F37517C9DB6DBO F1C29D68402F324B688EA8C5E8HFFFFFFD0A46C3C2F2F2F3B516C8EA3B9D4F6O(E8CDB6A3<"z'J'z'J&w(J0J%
D2JA5D2D2D2FFFFFFAFFFFE8D2D2BB3A5BBD2D2E8FFFFO FFFFE8D2D2A5BBD2D2D2FFFFFFKFFFFD2D2A5A5A5D2D2D2D2FFFFFFFFO1FFFFFFFF<"z&J'z'J&w(J0J%
D4KA9BBCEDAEBFDAF8E4D6C4B4A73A9ABB7C9D5E0F1O F9E6D5C1AEA9A8B4C1D0D9E8F6KECD6C3ABA9A9A9ABB7C2D0D6E2EDFBO1F6EBE0D6<"z'J&z(J&z(J&z)J%
97O!2F304B739FBCE87DBB3946540?2F354B6C9AB3D0FABFACDA4784B82F37516F98B0CDF1?FAC99F6537/2F3B516C8EA3B9D4F6O)FFFFFFFF<"z'J&z(J&z(J&z)
D2O!A5BBD2D2E8FFFF7FFFFE8D2D2?A5BBD2D2E8FFFFFFBFFFFFFD2D28A5BBD2D2E8FFFFFF?FFFFE8D2BB/A5D2D2D2D2FFFFFFFF<"z'J&z(J&z(J&z)
D4O!A9A7B4C6D6E3F67F1DFD0C0AE?A9AAB4C2D3DFECFDBFDEBD6C8B48A9ABB7C4D2DDEBF9?FDE9D6C0AB/A9ABB7C2D0D6E2EDFB<"z&B'z(J&z(J&z)
97O'2F3B618EB0D0FACDAB855737J2F3048658EADCDF18D8AB855432C2F3B5A7C9DB3D4FA4F6BF985E35;2F3B516C8EA3B9D4F6<"z&B'z(J&z(J&z)
D2O'A5D2D2D2FFFFFFFFFFD2D2BBJA5BBD2D2D2FFFFFF8FFFFD2D2BBCA5D2D2D2E8FFFFFF4FFFFE8D2BB;A5D2D2D2D2FFFFFFFF<"z&B'z(J&z(J&z)
D4O'A9ABBED0DDECFDEBDACDB9ABJA9A7B2C0D0DCEBF98EFDACDB8A8CA9ABBBC9D5DFEDFD4FBE4D3BDAA;A9ABB7C2D0D6E2EDFB<"z.z'C&z'@&z)
97O,2F324E78A1C2EDFFEDC29F784B32O(2F406189A3C5EDE8B38F5E37O!2F436185A1B9E0F1B98F5732G2F3B516C8EA3B9D4F6<"z$Q%z'C&z'@&z)
D2O,A5BBD2D2E8D2D2BBO(A5D2D2D2FFFFFFFFFFE8D2BBO!A5D2D2D2FFFFFFFFFFE8D2BBGA5D2D2D2D2FFFFFFFF<"z.z'C&z'@&z)
D4O,A9A8B5C8D4E6F8FFF8E6D6C8B4A8O(A9AEBECED6E8F8F6DFCEBDABO!A9AFBECDD4E2F2F9E1CEB9A8GA9ABB7C2D0D6E2EDFB<"z-z&9&z,z)J%
97O-2F395D89ADD0FAD4B69D785137O.2F3B5780A6EDF1BF9D683EO,2F3248688EADF6FFE9925130O%2F3B516C8EA3B9D4F6?F1B98B51<"z$P%z&9&z%P#z)J%
D2O-A5D2D2D2E8D2D2BBO.A5D2D2D2FFFFFFFFE8D2D2O,A5BBD2D2D2D2BBO%A5D2D2D2D2FFFFFFFF?FFFFE8D2<"z,z&9&z,z)J%
D4O.A9BDCEDCECFDEDE0D5C7B7ABO.A9ABB9CBD7F8F9E4D5C1ACO,A9A8B2C1D0DCFBFFF6CFB6A7O%A9ABB7C2D0D6E2EDFB?F9E1CDB6<"z'W'z(9'z&P(z)I)
97O'2F304B709DB9E8E8BFA3855D3DO&2F304B78A4CDFAFFCDB0986C4E37O*2F324E80ABD0F1D0B39D7C5D43O(2F3B516C8EA3B9D4F6EDB3854B2F2F2F2F<"z'B'z':'z&;(z)I)
D2O'A5BBD2D2E8FFFFFFFFFFD2D2D2O&A5BBD2D2FFFFFFFFFFE8D2D2BBO*A5BBD2D2FFFFFFFFFFE8D2D2D2O(A5D2D2D2D2FFFFFFFFFFFFD2D2A5A5A5A5<"z'B'z':'z&;(z)I)
D4O'A9A7B4C4D5E2F6F6E4D6CDBDACO&A9A7B4C8D6EBFDEBDDD2C2B5ABO*A9A8B5CBDAECF9ECDFD5C9BDAFO(A9ABB7C2D0D6E2EDFBF8DFCDB4A9A9A9A9<"z'PBQ(z&P:Q'z+;R)z)=%s
97O"2F395A85A8CDF6F1C9AD8E684830I2F48709FC9F6E4BFA3896145M2F304B7CA6CDFAFFFFFFFFFAD4B9A185614532O(2F3B516C8EA3B9D4F6E4AD7C482F<"z'J(z&E'z'F)z)=%s
D2O"A5D2D2D2FFFFFF7FFFFFFD2D2D2BBIA5D2D2E8FFFFFFFFFFD2D2D2MA5BBD2D2FFFFFFFFFFFFFFD2D2D2BBO(A5D2D2D2D2FFFFFFFFFFFFD2D2A5<"z&J(z&E'z'F)z)=%s
D4O#A9BBCDD9EBFB7F9E9DCD0C1B2A7IA9B2C4D6E9FBF4E4D6CEBEB1MA9A7B4C9D7EBFDFDEDE2D4CDBEB1A8O(A9ABB7C2D0D6E2EDFBF4DCC9B2A9<#z&QJR'z&PEQ(z&PFS(z)v
A232J2F48689AB6E47D4B39D734E37>2F43689DC2F1FAD0B39D785139B2F4874A1C9F6E0BBA58E684B35O)2F3B517BC4FAC674432F<#z&J'z&J(z&J(z#P"v
E8BBJA5D2D2E8FFFFDFFFFE8D2D2BB>A5D2D2E8FFFF:FFFFFFE8D2D2D2BA5D2D2FFFFFF=FFFFFFD2D2D2BBO)A5D2D2D2A5<#z&J'z&J'z&J(z)v
D8A8JA9B2C1D3E0F4DEDDFD5C6B5AB>A9AFC1D5E6F9:FDECDFD5C7B7CA9B2C6D4E9FB=F2E3D7D0C1B4AAO)A9ABB7C6E7FDE8C5AFA9<(z'PJQ'z&PJR(z&PJR(z&Q,
FFFFD4B3946848?2F375480A6C9F6DE4BBA1805D3B32F3E6598BCED:EDC5A88E68483262F436C9FC2F1=E8C5AB926F5139M2F355A8BB3E0FAD4B9A1856145322F2F2F>&z'J'z&J(z&J(z&<,
FFFFE8D2D2?A5BBD2D2FFFFFFO!FFFFFFD2D2D23A5D2D2E8FFFFFFFFFFFD2D2D2BB6A5D2D2E8FFFFIFFFFFFD2D2D2D2MA5BBD2E8FFFFFFFFFFFFD2D2D2BBA5A5A5>&z'J'z&J(z&J'z&<,
EDDFD0C1B2?A9ABB8CBD7E9FBO!F4E3D4CBBDAB3A9ACC0D3E3F8FF8E8D9D0C1B2A86A9AFC3D6E6F9IF6E8DAD2C4B7O A9AABBCDDFF3FDEDE2D4CDBEB1A8A9A9A9>P'z&QJQ(r&PJR'v&PJR(z&P<S$
F6CDAB89613E42F436896B3DBO!F1C9AB8E6545302F396191B6E8FD7B69F805A3B2F3E689DBCEDIEDCDB09A78573DA2F304E80A8D0E0BBA3C'z&J(r&J'v&J(z&I$
FFFFFFD2D2D24A5D2D2E8FFFFO-FFFFFFD2D2D2BBA5D2D2E8FFFFO$FFFFE8D2D2D2A5D2D2E8FFFFO'FFFFFFE8D2D2D2AA5BBD2D2FFFFFFFFFFC'z&J(s%J'v&J(z&I$
FBEBDACEBEAC4A9AFC1D2DFF1O-F9E9DAD0C0B1A7A9BED0E0F6O$EFE0D6CBBBABA9ACC1D5E3F8O'F8EBDDD3C7BAACAA9A7B5CBD9ECF2E3D6CQ's'PJQ)PJQ,PJR(z*I$
EDC5A18057372F355180A1C5F1O-FAD0B3733254A6E0O$F1CDAD946C4B352F61A8E8O'F6D0B39F805D4362F43709FC6F6FFFFFFFFFFFFFFI's'J)J,J(z&
FFFFFFD2D2BBA5BBD2D2FFFFFFO8FFFFFFE8BBE8FFFFO/FFFFFFE8D2D2BBA5E8FFFFO3FFFFFFE8D2D2D26A5D2D2E8FFFFI's'J)J,J(z&
F8E8D4CBB9ABA9AAB7CBD4E8F9O8FDECDFC4A8B5DAF3O/F9EBDCD0C2B4AAA9BCDBF6O3FBECDFD6CBBDAF6A9AFC4D6E8FBIQ)QJ0J1JS(t&P
E4B98F3F3273B0D8O6D8B0895A372F2F2F2F40658EB0D0FAO*FFFFE8B38B5A352F2F2F3B5D80A1B9E4O.D7B9A1896548322F396596B9EDJ)J0J/J(t&
9FFFFE8BBBBE8FFFFO<FFFFD2D2BBA5A5A5A5D2D2D2FFFFFFO,FFFFE8D2BBA5A5A5D2D2D2FFFFFFO6FFFFFFD2D2D2BBA5D2D2E8FFFFJ)J0J/J(u%
9F4E2D0B0A8C3DDEFO<EFDDCEBBABA9A9A9A9AEC0D0DDECFDO,F6DFCDBBAAA9A9A9ABBDCBD4E2F4O6EFE2D4CEC0B2A8A9C0D2E1F8J0J&y'J&y(JR*P
6EDBC9D68482F2F2F2F375480A1C5EDO3D8B0895A372F304B6C9DB6E0O"F6C69F68402F354E6C9AB0D0F6O/E0C2A58E463068B0DCJ0J&y'J&y(J*
6FFFFE8D2D2A5A5A5A5BBD2D2FFFFFFO3FFFFD2D2BBA5BBD2D2E8FFFFO"FFFFE8D2D2A5BBD2D2E8FFFFFFO6FFFFFFD2D2BBD2FFFFJ0J&y'J&y(J*
6F8E3D5C1B2A9A9A9A9ABB8CBD4E8F8O3EFDDCEBBABA9A7B4C2D5E0F3O"FBE8D6C1AEA9AAB5C2D3DDECFBO6F2E6D7D0B1A7C1DDF1G&z'J&z'J&z'J2
E0B396653E/2F40618EADD0FAO(D8B0895A3792F375480A1C2EDFD8AB804E3092F456189A3C5E8O/EDB68F5A372F2F2F2F40576F92A5BBD4F6G&z'J&z'J&z'J2
FFFFE8D2D2/A5D2D2D2FFFFFFO(FFFFD2D2BB9A5BBD2D2FFFFFFFFFFFD2D2BB9A5D2D2D2FFFFFFO/FFFFE8D2BBA5A5A5A5D2D2D2D2FFFFFFFFG&z'J&z'J&z'J2
F3DFD2C0AC/A9AEBED0DCECFDO(EFDDCEBBAB9A9ABB8CBD4E6F8FEFDACBB5A79A9B1BECED6E8F6O/F8E0CEBBABA9A9A9A9AEBAC4D2D7E3EDFBB&z'J&z'J&z'J%z)
D8B089613992F304B6C9DB6E0LD0AD895A37D2F3E6189ADCDF6;EDB6916137D2F39517C9DB6D4O%CDA4744512F3B516C89A1B6D0EDB&z'J&z'J&z'J%z)
FFFFD2D2D29A5BBD2D2E8FFFFLFFFFD2D2BBDA5D2D2D2FFFFFF;FFFFE8D2BBDA5D2D2D2E8FFFFO%FFFFD2D21A5D2D2D2D2FFFFFFFFB%z'J&z'J&z&J%z)
EFDDCEBE:A9A7B4C2D5E0F3LECDCCEBBABDA9ACBECEDCEBFB;F8E0D0BEABEA9B7C9D5E0EDO%EBD6C6B11A9ABB7C2CED4E0ECF8<'z'J&z'G&z(J&z)
FACDA8855435D2F375480A1C5EDAD0AB855435O 2F3048689AB3DBFAC9A17045O!2F3248688EADC9F1GEDB68F5A35=2F374B65809DB0C9E8<'z'J&z'G&z(J&z)
FFFFFFD2D2BBDA5BBD2D2FFFFFFAFFFFD2D2BBO A5BBD2D2E8FFFFFFFFFFD2D2O!A5BBD2D2D2FFFFFFGFFFFE8D2BB=A5BBD2D2D2E8FFFFFF<'z'J&z'G&z(J&z)
FDEBD9CDB8AADA9ABB8CBD4E8F8AECDACDB8AAO A9A7B2C1D3DFF1FDE9D4C4B1O!A9A8B2C1D0DCE9F9GF8E0CEBBAA=A9ABB4C0CBD5DDE9F6<"z'J&z'=&z'J&z)
97O!2F40618EADD0FA6D0AB855435O+2F354E7C9FBFE8DCB0855432O,2F3B5D80A1B9E4<FACDA17043J2F32455D7C98ABC2E0<"z'J&z'=&z'J&z)
D2O!A5D2D2D2FFFFFF6FFFFD2D2BBO+A5BBD2D2E8FFFFFFFFD2D2BBO,A5D2D2D2FFFFFF<FFFFFFD2D2JA5BBD2D2D2E8FFFFFF<"z'J&z'=&z'J&z)
D4O!A9AEBED0DCECFD6ECDACDB8AAO+A9AAB5C9D6E4F6F1DDCDB8A8O,A9ABBDCBD4E2F4<FDEBD4C4AFJA9A8B1BDC9D2DAE6F2<"z'B&z(z(G&z%
97O&2F304B6C9DB6E0D0AB855435O62F3B5FA6FADC7F3DO72F354E6C9AB0D0F6E8B38B5735O)2F40577497<"z'B&z(z(G&z%
D2O&A5BBD2D2E8FFFFFFFFD2D2BBO6A5D2E8FFFFFFFFE8O7A5BBD2D2E8FFFFFFFFFFE8D2BBO)A5D2D2D2D2<"z'B&z'z(G&z%
D4O&A9A7B4C2D5E0F3ECDACDB8AAO6A9ABBBDAFDF1C9O8A9AAB5C2D3DDECFBF6DFCDB9AAO)A9AEBAC6D4<"z-z0z'<&z
97O,2F375480A1C5EDFFD0AB855435O82F43709FC6F6FFFFFFFFFACDAD89613EO92F456189A3C5E8FACDA17043O22F<"z$Q$z&:'z'<&z
D2O,A5BBD2D2D2D2BBO8A5D2D2E8FFFFFFFFFFD2D2D2O9A5D2D2D2FFFFFFFFFFFFD2D2O2A5<"z-z&:'z'<&z
D4O,A9ABB8CBD4E8F8FFECDACDB8AAO8A9AFC4D6E8FBFDEBDCCEBEACO9A9B1BECED6E8F6FDEBD4C4AFO2A9<"z.z&P:Q'z)z
97O,2F324B78A1C2F1FFDBB69D734E35O22F396596B9EDEDC2A1805135O82F3564B6E4B3895432O62F<"z$Q%z&E'z)z
D2O,A5BBD2D2E8D2D2BBO2A5D2D2E8FFFFFFFFFFD2D2BBO8A5BBFFFFFFFFD2D2BBO6A5<"z.z%E'z)z
D4O,A9A8B4C8D4E6F9FFF1E0D5C6B5AAO3A9C0D2E1F8F8E6D4CBB7AAO8A9AABCE1F4DFCEB8A8O6A9<"z'W'z&PEQ'z/z
97O'2F375785ABCDFADBB69D6C4B32O'2F355789B0E0DBB39A684830O.2F4574A4CDFFFFFFE4C5AB926F5139O42F<"z'B'z&J'z%9(z
D2O'A5BBD2D2FFFFFFFFFFE8D2D2BBO'A5BBD2D2FFFF:FFFFE8D2D2BBO.A5D2D2FFFFFFFFFFD2D2D2D2O4A5<"z'B'z&J'z%9'z
D4O'A9ABB9CDDAEBFDF1E0D5C2B4A8O'A9AAB9CEDDF3:F1DFD3C1B2A7O.A9B1C6D6EBF4E8DAD2C4B7O5A9<&z&QBQ'z&PJP'z*9R(z%
F6C9A17448L2F3E658FB3DBD4B39A6C4B32J2F304B80A6D0:F6CDAB89613BO$2F35578BB3E8FFFFFFFFEDCDB09A785A3DO)2F305191BF<&z&J'z&J'z&D(z%
FFFFFFD2D2LA5D2D2E8FFFF8FFFFE8D2D2BBJA5BBD2D2FFFFDFFFFFFD2D2D2O$A5BBD2E8FFFFFFFFFFE8D2D2D2O)A5BBD2E8FF<&z&J'z&J'z&D(z%
FBE9D4C6B2LA9ACC0CEDFF18EDDFD3C2B4A8JA9A7B4CBD7ECDFBEBDACEBEABO$A9AAB9CDDFF6F8EBDDD3C7BBACO)A9A7B6D0E4<P&z&PJQ'z*JQ'z*DR)z(
F1C29D6843B2F48709DBCE88D4B094684830@2F43709FC6F6FFFFFFFFDEDBFA17C5135H2F4370A1CDFAFFFFFFFFF6D4B69F80614530L2F4581B3F1FFFFFFA&z&J'z&J'z&J)z%
FFFFE8D2D2BA5D2D2E8FFFFCFFFFE8D2D2BB@A5D2D2E8FFFFO FFFFFFD2D2BBHA5D2D2FFFFFF9FFFFFFE8D2D2D2BBLA5D2D2FFFFA&z&J'z&J'z&J)z%
F9E6D5C1AFBA9B2C4D5E3F6CEDDDD0C1B2A7@A9AFC4D6E8FBO F8E4D4C9B7AAHA9AFC4D4EBFD9FBEDE0D6CBBEB1A7LA9B1CBDFF9AP&z'PJP(z&PJQ'z&PJS(z)
EDB696653972F354E80A3C9F6CFAD0B09468483052F396596B9EDO DBB39A684830=2F32548BB3E89DCBBA389684B35A2F3C71A8E0FFFFFFFFF&z'J(z&J'z&J(z%
FFFFE8D2D27A5BBD2D2FFFFFFMFFFFFFE8D2D2BB5A5D2D2E8FFFFO+FFFFE8D2D2BB=A5BBD2E8FFFFFFFFFFFD2D2D2BBAA5D2D2FFFFF%z'J(z%J'z&J(z%
F8E0D2C08A9AAB5CBD6E9FBMFDECDDD0C1B2A76A9C0D2E1F8O+F1DFD3C1B2A7=A9A8B8CDDFF6FF1E3D6CEC1B4AAAA9ABC4D9F3FP&x&QJQ'v&PJP'z*JR(z)
E0B38B5A372F395D89B0D0MF6CDAD8E65452F355789B0E0O+F6CDAB89613B42F406C9FC9FAFFFFFFFFFE4C5AB926F513962F355E9FD1FFFFFFFFJ&x&J'v&J'z&J(z%
5FFFFE8D2BBA5D2D2D2FFFFO+FFFFFFD2D2D2A5BBD2D2FFFFO5FFFFFFD2D2D24A5D2D2E8FFFFO#FFFFFFD2D2D2D26A5BBD2E8FFJ&y%J'v&J'z&J'z%
5F3DFCDBBABA9BDCEDDECO+FBEBDCD0C0B1A9AAB9CEDDF3O5FBEBDACEBEAB4A9AEC3D6E9FDO#F4E8DAD2C4B77A9AABDD6EDJP.PJQ,PJQ't&PJR(v)
5D4AB8554322F2F2F436896B6E4O+F6CDAD8E653A2F4980A6D0O5EDBFA17C51352F325489B3E4O#EDCDB09A78573D2F305191BFFAFFFFFFJ.J,J't&J(v&
:FFFFD2D2BBA5A5A5D2D2E8FFFFO6FFFFFFD2D2BBA5D2D2FFFFO@FFFFFFD2D2BBA5BBD2D2FFFFO/FFFFFFE8D2D2D2A5BBD2E8FFFFJ.J,J't&J(v&
:EEDACDB8A8A9A9A9AFC1D2E0F4O6FBEBDCD0C0ADA9B3CBD7ECO@F8E4D4C9B7AAA9A8B8CEDFF4O/F8EBDDD3C7BAACA9A7B6D0E4FDJ.J.JQ/JR1
:FFFFF1C99C4B3A8FBCEDFFFFFFO6FFD8AB8551322F37517C9FB9E4O>DBB39A68482F306ABDF6FFFFFFFFO/F6D0B69F805D452F4381B3F1FFFFFFFFJ)J-J+J-
<FFFFFFD2BBE8FFFFO:FFFFD2D2BBA5BBD2D2E8FFFFODFFFFE8D2D2A5BBE8FFFFO:FFFFFFE8D2D2D2A5D2D2FFFFJ)J-J+J-
<F9E9D3B2ADD0E3F8O:EFDACDB6A8A9ABB7C9D6E2F4ODF1DFD3C1B2A9A7C1E4FBO:FBECE0D6CBBDB1A9AFCBDFF9J&s&J&w'J.J0
7F1C29F70482F43689DBCEDO0E8B38F5E372F37517C9FB9E4O?C29F6C432F2F2F30486C9DB9E8O6FFFFFFF6BC87492F3953789DB3D4FAJ&s&J&w'J/J-
7FFFFE8D2D2A5D2D2E8FFFFO0FFFFE8D2BBA5BBD2D2E8FFFFO>FFFFE8D2D2A5A5A5BBD2D2E8FFFFO9FFFFE8D2A5D2D2D2E8FFFFFFJ&s&J&w'J/J-
7F9E6D6C4B2A9AFC1D5E3F8O0F6DFCEBDABA9ABB7C9D6E2F4O>F9E6D6C3AFA9A9A9A7B2C2D5E2F6O9FBE3CBB3A9A9B8C7D5DFEDFDH&z&J&z'J'x'J%u(
F1C29F704822F43689DBCEDO&F1C29D684072F375180A1BFE8O3FACDA4784B302F395D89ADD0FAO0D49F5E322F30456589A5C2E8H&z&J&z'J'x'J%u(
FFFFE8D2D22A5D2D2E8FFFFO&FFFFE8D2D27A5BBD2D2FFFFFFO3FFFFFFD2D2BBA5D2D2D2FFFFFFO0FFE8D2BBA5BBD2D2D2FFFFFFH&z&J&z'J'y&J%u(
F9E6D6C4B22A9AFC1D5E3F8O&F9E6D5C1AE7A9ABB7CBD4E4F6O3FDEBD6C8B4A7A9BDCEDCECFDO0EED6BDA8A9A7B1C0CED7E6F6C&z&J&z"y'J&z'J%z(
EDBC9D6845<2F43689DBCEDJFACDA4784B32F542F395780A1BFE8O)D8AB85513272F324E789FBFEDO'EDB1784052F3751739AB3D0FAC&z&J&z"y'J&z'J%z(
FFFFE8D2D2<A5D2D2E8FFFFJFFFFFFD2D23A5D2A5D2D2D2FFFFFFO)FFFFD2D2BB7A5BBD2D2E8FFFFO'FFFFD2D25A5BBD2D2E8FFFFFFC&z&J&z"z&J&z'J%z(
F8E3D5C1B1<A9AFC1D5E3F8JFDEBD6C8B43A9B8/A9B9CBD4E4F6O)EFDACDB6A87A9A8B5C8D6E4F8O'F8DEC8AE5A9ABB7C6D3DFECFD>&z&J&z$z'J&z&J%z#
EDBC9D6843F2F43689DBCEDAD8B085543272FB0D06222F395780A1BFE8LE0B38F5A37B2F40658FB0D8MC6915430?2F4361>&z&J&z$z'J&z&J%z#
FFFFE8D2D2FA5D2D2E8FFFFAFFFFD2D2BB7A5FFFFD22A5D2D2D2FFFFFFLFFFFE8D2BBBA5D2D2E8FFFFMFFE8D2BB?A5D2D2>&z&J&z$z&J&z&J%z#
F8E3D5C1AFFA9AFC1D5E3F8AEFDDCDB8A87A9DDEBBD3A9B9CBD4E4F6LF3DFCEBBABBA9AEC0CEDDEFME8D0B8A7?A9AFBE<#z&J&z&z'J&z'J%z
AE43O"2F43689DBCED7E8B6916139<2F85FFFFC25A62F395785A3C5EDAEDBC96653EL2F355180A3C9F1CE0A86C37E2F<#z&J&z"8#z'J&z'J%z
E8D2O"A5D2D2E8FFFF7FFFFE8D2D2<A5D2FFD26A5D2D2D2FFFFFFAFFFFE8D2D2LA5BBD2D2FFFFFFCFFFFD2BBEA5<#z&J%z"8#z&J&z'J%z
DDAFO"A9AFC1D5E3F87F6E0D0BE=A9CDE5BA7A9B9CDD6E8F8AF8E3D2C0ACLA9AAB7CBD6E9F9CF3D9C3ABEA9<"z&C&z"8%z'J&z&J%z
97O(2F43689DBCEDF1C29F6843A2F4BFFFFBF4D:2F3B5D85A3C5ED6F6C69F7043O)2F45689AB6E0:F6BC8749I2F<"z&C&z":#z'J&z&J%z
D2O(A5D2D2E8FFFFFFFFE8D2D2AA5D2FFD2:A5D2D2D2FFFFFF6FFFFE8D2D2O)A5D2D2E8FFFF:FFFFE8D2IA5<"z&C&z":#z'J&z&J%z
D4O(A9AFC1D5E3F8F9E6D6C1AFAA9B4E3B4:A9ABBDCDD6E8F86FBE8D6C4AFO)A9B1C1D3E0F3:FBE3CBB3IA9<"z&:&z#9%z'A'z'G%z
97O-2F43689DBCEDCDA67C4B30E2F30F1FFFFB54D>2F3B5D85A3C5EDFACDA67C4B30O22F375A85A8CDFAD49F5E32L2F<"z&:&z#;#z'A'z'G%z
D2O-A5D2D2E8FFFFFFFFD2D2BBEA5BBFFFFD2>A5D2D2D2FFFFFFFFFFFFD2D2BBO2A5BBD2D2FFFFFFFFE8D2BBLA5<"z&:&z#;#z'A'z'G%z
D4O-A9AFC1D5E3F8EBD7C9B4A7EA9A7F9DFB4>A9ABBDCDD6E8F8FDEBD7C9B4A7O2A9ABBBCDD9EBFDEED6BDA8LA9<"z*z";%z-z'>%z
97O02F4570BAFFF6B4855435H2FB9FFFAA844B2F3B5D89A8C9F1FFD8AD855435O<2F304B709DBCE8EDB17840O"2F<"z*z"<$z$Q$z'>%z
D2O0A5D2D2FFFFFFFFD2D2BBHA5FFFFFFD2BA5D2D2D2D2D2BBO<A5BBD2D2E8FFFFFFFFD2D2O"A5<"z*z"<$z-z'>%z
D4O0A9B1C4E1FFFBDFCDB8AAHA9E1FDD9B0BA9ABBDCED9E9F9FFEFDCCDB8AAO<A9A7B4C4D5E3F6F8DEC8AEO"A9<"z&T&z"<&z-z%8$z
97O+2F396596B9EDD0AB854E32C2F91FFFFFAA83DA2F3C659DC2F6FAD0B094684830OA2F3B618FEDC15F30O%2F<"z&?&z">$z$P%z%8$z
D2O+A5D2D2E8FFFFFFFFD2D2BBCA5E8FFFFBBAA5D2D2E8E8D2D2BBOAA5D2D2E8FFFFFFBBO%A5<"z%?&z">$z-z%8$z
D4O,A9C0D2E1F8ECDACDB5A8CA9D0FDD9AEAA9ABC0D5E6FBFDECDDD0C1B2A7OAA9ABBED0F8E6B9A7O%A9<"z&P?+z">&z&V'z'8)z
97O&2F355485B0DCFFFFFFFFFACDA6804E32>2F57FFFFF69C3D:2F304E85ADDCFAD0B08E6545O:2F325798C6FAFFFFFFE8B99D704B32O 2F<"z&H'z"@$z&A'z&;'z
D2O&A5BBD2D2FFFFFFFFFFD2D2BB>A5D2FFE8BB:A5BBD2D2FFFFFFFFFFD2D2D2O:A5BBD2E8FFFFFFFFE8D2D2BBO A5<"z&H'z"@$z&A'z&;'z
D4O&A9AAB8CDDDF1FDEBD7CBB5A8>A9B9FBD6AE:A9A7B5CDDCF1FDECDDD0C0B1O:A9A8B9D3E8FDF6E2D5C4B4A8O A9<"z*HP'z#?&z*AQ'z*;P'z
97O"2F4878A4CDFAFFFFFFFFFACDA6804E3292F35FAFFFFF68E3742F3C659DC2F6FFFFFFFFF6CDAD8E6545O02F30518BBFF6FFFFFFFFFAD0AD8E613EI2F<"z&J'z#A$z&J'z&D'z
D2O"A5D2D2FFFFFF;FFFFFFD2D2BB9A5BBFFFFE8BB4A5D2D2E8FFFF5FFFFFFD2D2D2O0A5BBD2E8FFFFFFFFFFD2D2D2IA5<"z&J'z#A$z&J'z&D'z
D4O"A9B2C8D6EBFD;FDEBD7CBB5A89A9AAFDFBCFAB4A9ABC0D5E6FB5FBEBDCD0C0B1O0A9A7B6CDE4FBFDECDCD0BEACIA9<"z&PJP'z"A&x&PJQ'z)DQ'z
97K2F3E659DBFF1;FACDA6784B3052FC6FFFFED8E352F304E85ADDC5F6CDAB896140O'2F4B85B7F1FFFFFFFFEDBFA17C4E35C2F<"z&J'z"C$x&J'z%J'z
D2KA5D2D2E8FFFFEFFFFFFD2D2BB5A5FFFFE8BBA5BBD2D2FFFF@FFFFFFD2D2D2O'A5D2D2FFFF8FFFFFFD2D2BBCA5<"z&J'z"C$x&J'z%J'z
D4KA9ACC0D5E4F9EFDEBD7C8B4A75A9E8F8CFAAA9A7B5CDDCF1@FBEBDACEBEAEO'A9B4CDE0F98F8E4D4C9B5AACA9<&z&PJP'z"C&r*JQ'z)JQ&z
FAC9A17848B2F355A8BB3E0EF6C9A1784B3002F9FFFFFE581322F3C659DC2F6FFFFFFFF@F1C9A8896140K2F407CADE4FFFFFFFF8D8B3946545>2F<&z&J'z"E$r&J'z%J&z
FFFFFFD2D2BA5BBD2E8FFFFO!FFFFFFD2D2BB0A5E8FFE8BBA5D2D2E8FFFFJFFFFFFD2D2D2KA5D2D2FFFFBFFFFE8D2D2>A5<&z&J'z"E$r&J'z%J&z
FDE9D4C8B2BA9AABBCDDFF3O!FBE9D4C8B4A70A9D6F4C9A8A9ABC0D5E6FBJF9E9D9CEBEAEKA9AEC9DCF4BEFDFD0C0B1>A9<P&z&PJP'v"E+PJQ'z)JP'z
F1C29D684382F304B80A6D0O!F6C9A1784B302F65FFFFE57630304E85ADDCJF1C9A3855D3BA2F3C6CA8DCFFFFFFFFBF1C9A385573782FA&z&J'v"G)J'z%J'z
FFFFE8D2D28A5BBD2D2FFFFO+FFFFFFD2D2BBA5D2FFE8BBBBD2D2FFFFO'FFFFFFD2D2D2AA5D2D2FFFFKFFFFFFD2D2BB8A5A&z&J'v"G)J'z%J'z
F9E6D5C1AF8A9A7B4CBD7ECO+FBE9D4C8B4A7A9C0F4C5A7A7B5CDDCF1O'F9E9D6CDBDABAA9ABC3D9F1KF9E9D6CDB9AB8A9AP&z*JP&r"G)JQ'z)JQ'z
E8B6966139/2F43689FC2F6FFFFFFFFO+F6C99F70482F3CFFFFE4F6FFFFFFFFO'EDC5A3855D3B72F37659FD4FFFFFFFFKE0B69D6C483022FF&z&J&r"I#J'z%J'z
FFFFE8D2D2/A5D2D2E8FFFFO4FFFFE8D2D2A5D2FFFFO1FFFFFFD2D2D27A5BBD2E8FFO'FFFFE8D2D2BB2A5F%z&J&r"I#J'z%J'z
F6E0D2BE0A9AFC1D6E6FBO4FBE9D6C4B2A9ABF4FBO1F8E8D6CDBDAB7A9ABC0D6EEO'F3E0D5C2B2A72A9FP0PJP*H#JQ'x)JP'x
E0B0895A352F2F2F2F2F375E8FB6E8O4F1C29F70482F2F2FD4FFFFO1EDC2A18057392F325E98C6FAFFFFFFO'FACDAB895D3B2FJ0J*J'x&J'x
5FFFFD2D2BBA5A5A5A5A5BBD2E8FFFFO>FFFFE8D2D2A5A5A5FFOKFFFFFFD2D2D2A5BBD2E8FFFFO/FFFFFFD2D2D2A5J0J*J&y&J'x
5F3DDCEBBAAA9A9A9A9A9ABBDCEE0F6O>F9E6D6C4B2A9A9A9EEOKF8E6D4CBB9A9A8BDD3E8FDO/FDEBDACEBDABA9JP&PJP%JQ3JQ'r
5D0995A9DD8O>F1C29FD0OKE8BFA18057392F2F2F305191BFF6FFFFFFFFO/E8BC9F784E322FJ&J%J/J'r
:FFFFD2FFFFOHFFFFE8FFP#FFFFFFD2D2D2A5A5A5BBD2E8FFFFO9FFFFE8D2D2BBA5J&J%J/J'r
:ECD3BBD5EFOHF9E6D6EBP#F6E4D4CBB9A9A9A9A9A7B6D0E4FBO9F6E3D6C8B5A8A9J-J%JP*JQ(
6FAC9A170452F2F305185B3EDOEFFFFFFFFP#F1A3483F94BFE8FFFFO9D0B08F65402F2FJ-J(J(
6FFFFFFD2D2A5A5BBD2D2FFFFR#FFFFD2BBFFFFFFOAFFFFE8D2D2A5A5J-J(J(
6FDE9D4C4B1A9A9A7B6CDDFF8R#F9D9B1B0CFE4F6OAECDDCEC0AEA9A9H&v%J&J2JP#
DCB08554322F457CABDCO@E8B691614EP$FABF9154302F2F2F2F2F2F3B5D89A8C9F6O;F1C5H&v%J&J2J#
FFFFD2D2BBA5D2D2FFFFO@FFFFE8D2E8P$FFFFE8D2BBA5A5A5A5A5A5D2D2D2FFFFFFO@FFFFH&v%J&J2J#
F1DDCDB8A8A9B1C9DAF1O@F6E0D0BEB3P$FDE4D0B8A7A9A9A9A9A9A9ABBDCED9E9FBO@F9E8C&z%J,J%z&J#
F1BC96653942F4070A4D4O7F6C29F68432F2F2F2F2FE4P CD9F5E3502F456894B3D4O;E09DC&z%J,J%z&J#
FFFFE8D2D24A5D2D2FFFFO7FFFFE8D2D2A5A5A5A5A5FFP FFE8D2BB0A5D2D2E8FFFFO;FFE8C%z%J,J%z&J#
F9E3D2C05A9AEC4D6EEO7FBE6D6C1AFA9A9A9A9A9F4P EBD6BDAA0A9B1C1D0DFEDO;F3D6>&z&J&t"J%z'J&
FACDA47848=2F37659FC9FAO.CDA67C4B302FB3OJDCA66C3C92F324E739FB9E4O2D1944C2F2F>&z&J&t"J%z'J&
FFFFFFD2D2=A5BBD2E8FFFFO.FFFFD2D2BBA5FFOJFFFFD2D29A5BBD2D2E8FFFFO2FFE8D2A5A5>&z&J&t"J%z'J&
FDEBD6C8B2=A9ABC0D6E9FDO.EBD7C9B4A7A9DFOJF1D7C3AB9A9A8B5C6D6E2F4O2EDD1B4A9A9<$z&J&y"J%z'J)
BD5435E2F355E91BFF6O%E0B08957352F85OFEDAD7C43C2F395785A3C9F1O)C387432F2F2F2F2F<$z&J&y"J%z'J)
E8D2BBEA5BBD2E8FFFFO%FFFFD2D2BBA5D2OFFFFFD2D2CA5D2D2D2FFFFFFO)FFE8D2A5A5A5A5A5<$z&J&y"J%z&J)
E4B8AAEA9AABDD0E4FBO%F3DDCEB9AAA9CDOFF8DCC9AFDA9B9CDD6E9F9O)E6CBAFA9A9A9A9A9<"z&J&z"J%z'J%s
97K2F30518BB6EDJEDBC96653932F51OBF6B98B4BM2F40658EB0D0FAMF6B9783C2F<"z&J&z"J%z'J%s
D2KA5BBD2E8FFFFJFFFFE8D2D23A5D2OBFFFFE8D2MA5D2D2D2FFFFFFMFFFFD2D2A5<"z&J%z"J%z'J%s
D4KA9A7B6CDE0F8JF8E3D2C04A9B6OBFBE1CDB4MA9AEC0D0DDECFDMFBE1C8ABA9<"z%J&z#J&z'J%v
97O"2F4B80ADE4AF6C99F704582F30F1O=FAC6945732O'2F304B6C9DB6E0EF1AB6C352F<"z%J&z#J&z'J%v
D2O"A5D2D2FFFFAFFFFE8D2D28A5BBFFO=FFFFE8D2BBO'A5BBD2D2E8FFFFEFFFFD2BBA5<"z%J&z#J&z'J%v
D4O"A9B4CBDCF4AFBE9D6C4B18A9A7F9O=FDE8D1B9A8O'A9A7B4C2D5E0F3EF9DAC3AAA9<"z%J&z"J%z'J%y
97O&2F4374A8D49D0AB804E32=2FBFO:D4A26535O12F375180A1C2ED<E0A65B322F<"z%J&z"J%z'J%y
D2O&A5D2D2FFFF9FFFFD2D2BB=A5FFO:FFE8D2BBO1A5BBD2D2FFFFFF<FFFFD2BBA5<"z%J&z"J%z'J%y
D4O&A9AFC6D9EE9ECDACBB5A8=A9E4O:EED8C0AAO1A9ABB7CBD4E6F8<F3D7BBA8A9<"z%F&z"J&J%z'I$z
97O*2F3C689FCDE4B38F5A37B2F91EFABA93B3DB:E0A8743CO;2F3B6189ABCDF6D9985422F<"z%F&z"JPJ%z'I$z
D2O*A5D2D2E8FFFFFFE8D2BBBA5E8E:FFFFD2D2O;A5D2D2D2FFFFFFFFE8D22A5<"z%F&z"J&J%z'I$z
D4O*A9ABC1D6EBF4DFCEBBABBA9D0EFDE3CEDFF1:F3D9C6ABO;A9ABBECEDAEBFBEFD3B82A9<"z&<&z"J+G%z&A$z
97O.2F375E98C2F6F1BF9D653EG2F5EEFFFFE57630375A89ABD0EDB38145OE2F486896B3D8CA8D4552F<"z&<&z"J)G%z&A$z
D2O.A5BBD2E8FFFFFFFFE8D2D2GA5D2GFFE8BBBBD2D2FFFFFFFFD2D2OEA5D2D2E8FFFFFFE8D25A5<"z&<&z"J)G%z&A$z
D4O.A9ABBDD3E6FBF9E4D5C0ACGA9BDGF4C5A7ABBBCEDAECF8DFCBB1OEA9B2C1D2DFEFE9CEB15A9<"z*z#J/=&z,z
97O22F325794E5FFFA9F5130J2F35FAFFFFFDA74302F2F2F324E80A3C9F6F6BF8B5130OM2F354E789FBCE8FFFABC813E82F<"z*z#J-=&z%P#z
D2O2A5BBD2E8FFFFFFFFD2BBJA5BBFFHFFE8BBA5A5A5BBD2D2FFFFFFFFFFE8D2BBOMA5BBD2D2E8D2D28A5<"z*z#J-=&z,z
D4O2A9A8B9D1F4FFFDD6B6A7JA9AAFDHF0C3A7A9A9A9A8B5CBD6E9FBFBE4CDB6A7OMA9AAB5C8D6E3F6FFFDE3CBAC8A9<"z&P&z"J%r*z*z
97O02F4870A1C9F6F1BC915A35G2FCDHFFFFD4682F304B709FD1ED9D5E32P'2F498DDFEDB99F7C513762F<"z&;&z"J#r*z*z
D2O0A5D2D2FFFFFFFFFFE8D2BBGA5FFJFFD2A5BBD2D2E8FFFFE8D2BBP'A5D2E8FFFFFFE8D2D2BB6A5<"z&;&z"J#r*z*z
D4O0A9B2C4D4E9FBF9E3D0BBAAGA9EBJEDC0A9A7B4C4D6EDF8D6BDA8P'A9B3CEF2F8E2D6C9B7AB6A9<"z&P;*z"J5z$T'z
97O+2F3E659DBCEDFFFFFFFFFAC69F6537C2F9FJ5FFFFD0622F2F2F2F2F355E9FD1FFFFFACDA6804E32P!2F5498D9E4B99F7C533902F<"z&D&z"J,8'z$?'z
D2O+A5D2D2E8FFFFFFFFE8D2BBCA5E8LFFD2A5A5A5A5A5BBD2E8FFFFFFFFD2D2BBP!A5D2E8FFFFFFE8D2D2D20A5<"z&D&z"J,8'z$?&z
D4O+A9ACC0D5E3F8FDE8D6C0ABCA9D6LEBBDA9A9A9A9A9AABDD6EDFDEBD7CBB5A8P!A9B8D3EFF4E2D6C9B81A9<"z&PDP%z"J,8P'z(?Q'u
97O&2F375A8FB3E4D4A47440?2F68LFFFFC25A518DBFF6FFFFFFFACDA6804E32OF2F325BA6E4FFFFFFE8BFA18057392F<"z&J%z"J'@'z%H'u
D2O&A5BBD2E8FFFF8FFFFD2D2?A5D2O FFD2D2E8FFFFFFFFFFD2D2BBOFA5BBD2FFFFFFFFFFD2D2D2A5<"z&J%z"J'@'z%H&v
D4O&A9ABBBCEDFF48EED6C6AE?A9C1O E5BAB6CEE4FBFDEBD7CBB5A8OFA9A8BBD7F4F6E4D4CBB9A9<"z&PJ)z"JQ@P'z(HQ+
97O!2F325185ABD88FFFFFFFFE0AD7C4B;2F3CO FACDA6804E32O>2F3571ABF1FFFFFFE8BFA1805D3B2F2F2F2F<"z&J%z"J'z%J+
D2O!A5BBD2D2FFFFAFFFFD2D2;A5D2O5FFFFFFD2D2BBO>A5BBD2FFFF;FFFFFFD2D2D2A5A5A5A5<"z&J%z"J'z%J+
D4O!A9A8B6CDDAEFAF3DCC9B4;A9ABO5FDEBD7CBB5A8O>A9AAC4DAF9;F6E4D4CBBDABA9A9A9A9<"z*J*z"JP'z(JQ%
97K2F4B78A1CDFAFFFFFFFFAFFFFFFFFEDB38B513272FDCO4FACDA6805135O62F3C78BCF6FFFFFF;EDC5A385<"z&J&z"J'z%J%
D2KA5D2D2FFFFFFIFFFFE8D2BB7A5FFO9FFFFFFD2D2BBO6A5D2D2FFFFDFFFFFFD2<"z&J&z"J'z%J%
D4KA9B4C8D4EBFDIF8DFCDB6A87A9F1O9FDEBD7CBB7AAO6A9ABC8E3FBDF8E8D6CD<"z&PJ*z"JQ&z(J%
97F2F40689DC2F1IFFFFFFFFF6BF965E3532FA8O9D0AB855435O.2F438BC3FFFFFFFFDFFFFFFFF<"z&J&z"J&z$
D2FA5D2D2E8FFFFO$FFFFE8D2BB3A5FFO?FFFFD2D2BBO.A5D2E8FF<"z&J&z"J&z$
D4FA9AEC1D5E6F9O$FBE4D2BDAA3A9D9O?ECDACDB8AAO.A9AFCDE6<"z&PJ*z"JP&z'
97A2F396191B6E8O$FFFFFFFFFACD9F683C/2F7CO?D0AB855435O&2F4F94D1FFFFFF<"z&J&z"J&z$
D2AA5D2D2E8FFFFO-FFFFE8D2D2/A5D2ODFFFFD2D2BBO&A5D2E8FF<"z%J&z"J&z$
D4BA9BED0E0F6O-FDEBD6C1AB/A9C9ODECDACDB8AAO&A9B5D1ED<"z&PJP%v"JP&z(
97<2F355485B0D8O-D4A874432F45ODD0AB855435K2F305B9DE0FFFFFF<"z&J%v"J&z%
D2<A5BBD2D2FFFFO7FFFFD2D2A5D2OIFFFFD2D2BBKA5BBD2E8FF<"z&J%v"J&z%
D4<A9AAB8CDDDEFO7EED9C6AFA9B1OIECDACDB8AAKA9A7BBD6F3<"z&PJ)s"JP&z(
9772F304B7CA6CDO7FFFFFFFFE4AD854B2FEDOHD0AB855435C2F3266ABE9FFFFFF<"z&J%s"J&z%
D27A5BBD2D2FFFFO@FFFFD2D2A5FFOMFFFFD2D2BBCA5BBD2FFFF<"z&J%s"J&z%
D47A9A7B4C9D7EBO@F4DCCDB4A9F8OMECDACDB8AACA9A8C0DAF6<$z*J.JP&z(
D3814512F43709FC2F6FFFFFFFFO@FFFFFFFFF1B98B57322F2F2FB3OMD0AB855737;2F3A74B4F6FFFFFF<$z&J*J&z%
FFD2D21A5D2D2E8FFFFOHFFFFE8D2BBA5A5A5FFP$FFFFD2D2BB;A5BBD2FFFF<$z&J*J&z%
ECCBB11A9AFC4D6E6FBOHF9E1CDB9A8A9A9A9DFP$ECDACDB9AB;A9ADC6DFFB<(s&PJ*JP&z(
FFFFFFE0A8713C2F396596B9EDOHFFFFFFFFF6C2986192P$D8B0895A3732F3E83BCFAFFFFFF?%s&J&J&z%
FFFFD2D2A5D2D2E8FFFFP#FFFFE8D2E8P)FFFFD2D2BB3A5D2E8FFFF?%t%J&J&z%
F3D9C4ABA9C0D2E1F8P#FBE6D3BED1P)EFDDCEBBAB3A9ACC9E3FD?-PJPJP&v(
FFFFFFFFD19F5E2F5A89B3E0P#P)D8B0895A372F498DCEFFFFFFFFC)J&v$
FFE8D2A5D2D2FFFFR;FFFFD2D2BBA5D2E8FFC)J&v$
EDD6BDA9BBCEDFF3R;EFDDCEBBABA9B3CEEBA+JP/
F6C69F683E2F4078ADE9R;D8B0895A372F2F2F549BD9FFFFFFA+J,
FFFFE8D2D2A5D2D2FFFFR@FFFFD2D2BBA5A5A5D2E8FFA+J,
FBE8D6C1ACA9AEC8DCF6R@EFDDCEBBABA9A9A9B8D4EF=&t%J,
E4B38954322F4B8BBCF6R<FFFFFFFFE0783077B3E0FF=&t%J'
FFFFD2D2BBA5D2E8FFFFR@FFE8BBE8FFFF=&t%J'
F4DFCEB8A8A9B4CDE3FBR@F3C7A7C4DFF3<"z%J/
9A12F325B98CAR:D998542F2F2F2F2F2F3C6596B6ED<"z%J/
E81A5BBD2E8FFR:FFE8D2A5A5A5A5A5A5D2D2E8FFFF<"z%J/
D31A9A8BBD3E9R:EFD3B8A9A9A9A9A9A9ABC0D2E0F8<"z%J&J$y&
9752F376CA4DCOLFAC691575FP0D9944C2F43689DC2F1<"z%J&J$y&
D25A5BBD2FFFFOLFFFFE8D2E8P0FFE8D2A5D2D2E8FFFF<"z%J&J$y&
D45A9ABC3D6F1OLFDE8D0B9BBP0EFD1B4A9AFC1D5E6F9<"z%J)J$z&
9792F437CB1EDOED9A469372F2F2F37P-D9944C62F4878A1C9F6<"z%J)J$z&
D29A5D2D2FFFFOEFFFFD2BBA5A5A5BBP-FFE8D26A5D2D2FFFFFF<"z%J)J$z&
D49A9AFC9DEF8OEEFD6C2ABA9A9A9ABP-EFD1B46A9B2C8D4E9FB<"z%J%s"J$z&
97=2F518BBFF6O=EDAD7C402FCDP)CE8D45=2F324E80A6D0<"z%J%s"J$z&
D2=A5D2E8FFFFO=FFFFD2D2A5FFP)FFE8D2=A5BBD2D2FFFF<"z%J%s"J$z&
D4=A9B6CDE4FBO=F8DCC9AEA9EBP)EBCEB1=A9A8B5CBD7EC<"z%J%w"J$z&
97@2F325E9BCDO6F6BF8D512FA1P&CE8D43E2F355485B0D8<"z%J%w"J$z&
D2@A5BBD2E8FFO6FFFFE8D2A5FFP&FFE8D2EA5BBD2D2FFFF<"z%J%w"J$z&
D4@A9A8BDD4EBO6FBE4CEB6A9D4P&EBCEAFEA9AAB8CDDDEF<"z%J%z"J$z&
97D2F3C6CA8DCO/D19F5E35/2F6CP#CA8D43M2F37618FB3E4<"z%J%z"J$z&
D2DA5D2D2FFFFO/FFE8D2BB/A5D2P#FFE8D2MA5BBD2E8FFFF<"z%J%z"J$z&
D4DA9ABC3D9F1O/EDD6BDAA/A9C3P#E9CEAFMA9ABBECEDFF4<"z%J%z"J$z&
97H2F457CB3F1O'E4AB743C32F3EP C3833EO'2F3E6596BCED<"z%J%z"J$z&
D2HA5D2D2FFFFO'FFFFD2D23A5D2P FFE8D2O'A5D2D2E8FFFF<"z%J%z"J$z&
D4HA9B1C9DFF9O'F4DAC6AB3A9ACP E6C9ACO'A9ACC0D2E3F8<"z&J%z"J$z&
97K2F305191BFFAMF1B9874982FDCOJC3833EO/2F436C9FC2F1<"z&J%z"J$z&
D2KA5BBD2E8FFFFMFFFFE8D28A5FFOJFFE8D2O/A5D2D2E8FFFF<"z&J%z"J$z&
D4KA9A7B6D0E4FDMF9E1CBB38A9F1OJE6C9ACO/A9AFC3D6E6F9<"z%J%z"J%z'
97O!2F355E9FD1GC6985732;2FADOFFABC813EO62F304B78A1CDFA<"z%J%z"J%z'
D2O!A5BBD2E8FFGFFE8D2BB;A5FFOFFFFFD2D2O6A5BBD2D2FFFFFF<"z%J%z"J%z'
D4O!A9AABDD6EDGE8D3B9A8;A9DCOFFDE3CBACO6A9A7B4C8D4EBFD<"z%J%z"J%z&
97O%2F3C71A8E4?DCA66C37?2F7COCFABC783AO>2F324E80ABD0<"z%J%z"J%z&
D2O%A5D2D2FFFF?FFFFD2BB?A5D2OCFFFFD2BBO>A5BBD2D2FFFF<"z%J%z"J%z&
D4O%A9ABC4D9F4?F1D7C3AB?A9C9OCFDE3C8ADO>A9A8B5CBDAEC<"z%J%z"J%z&
97O)2F4585B7F17EDB37C43C2F4BO@FABC783AOF2F355789B0D8<"z%J%z"J%z&
D2O)A5D2D2FFFF7FFFFD2D2CA5D2O@FFFFD2BBOFA5BBD2D2FFFF<"z%J%z"J%z&
D4O)A9B1CDE0F97F8DFC9AFCA9B4O@FDE3C8ADOFA9AAB9CEDDEF<"z&E&z"J%z&
97O,2F305491C3FAFAC3915130G2FEDO<F6B47137P 2F39618FB6E8<"z&E&z"J%z&
D2O,A5BBD2E8FFFFFFFFE8D2BBGA5FFO<FFFFD2BBP A5D2D2E8FFFF<"z&E&z"J%z%
D4O,A9A7B8D0E6FDFDE6D0B6A7GA9F8O<FBDFC4ABP!A9BECEE0F6<"z%?%z"J"z&
97O02F3565A2D4D4A26235K2FB6O<8DP(2F3E659DBCED<"z%?%z"J"z&
D2O0A5BBD2E8FFFFE8D2BBKA5FFO<E8P(A5D2D2E8FFFF<"z%?%z"J"z&
D4O0A9AAC0D8EEEED8BEAAKA9E0O<CEP(A9ACC0D5E3F8<"z*z"J"z$
97O42F3E74ABF1FFE9AD743EO!2F8BO<D6P-2F4576E5<"z#P#z"J"z$
D2O4A5D2D2D2D2O!A5E8O<FFP-A5D2E8FF<"z*z"J"z$
D4O4A9ACC6DAF9FFF6DCC6ACO!A9CDO<EEP-A9B1C5F4<"z&8%z"J$z%
97O32F3A6CA4D9FFBC8B5130O 2F54O<FF6230P*2F449CEDFF<"z%8&z"J#z$
D2O3A5BBD2FFFFFFFFE8D2BBO A5D2O=E8BBP*A5D2E8FF<"z%8&z"J#z$
D4O3A9ADC3D6EFFBE3CDB6A7O A9B8O=BCA7P*A9B0D6F8<"z)8)z#J'z&
97O/2F355E9FCDFFFFFFFFFFFFFFFFEDB38145K2F32F6O<FFF6C2986539P$2F5FB7FFFFFF<"z%@%z#J&z#
D2O/A5BBD2E8FFFFFFD2D2KA5BBFFO=FFFFE8D2D2P$A5D2FF<"z%@%z#J%z#
D4O/A9AABDD6EBF8DFCBB1KA9A8FBO=FBE6D3C0P%A9BDE0<"z)@)z"JP%z&
97O+2F325791C3FAFFFFFFFFFFFFFFE4A87440H2FC6O=D8AB804BOK2F357FD6FFFF<"z&G%z"J%z$
D2O+A5BBD2E8FFFFFFFFD2D2HA5FFOBFFFFD2D2OKA5BBE8FF<"z&G%z"J%z$
D4O+A9A8B9D0E6FDF4D9C6AEHA9E8OBEFDACBB4OKA9AAC8EE<"z)G)z"J*z&
97O(2F4B8BB9F1FFFFFFFFFFFFFFFFD4A46937D2F98OBFFFFFFFFF1BC966137OD2F449CEDFFFF<"z%J%z"J&z$
D2O(A5D2E8FFFF9FFFFD2BBDA5E8OFFFFFE8D2BBODA5D2E8FF<"z%J%z"J&z$
D4O(A9B4CDE1F99EED6C2ABDA9D3OFF9E3D2BEABODA9B0D6F8<"z)J)z"JP%z&
97O$2F457CB1EDFFFFFFFF9FFFFFFFFCD985E35@2F65OFD4A87848O>2F5FB7FFFFFF<"z%J%z"J%z#
D2O$A5D2D2FFFFAFFE8D2BB@A5D2OKFFFFD2D2O>A5D2FF<"z%J%z"J%z#
D4O$A9B1C9DEF8AEBD3BDAA@A9C0OKEED9C8B2O>A9BDE0<"z)J)z"J*z&
97O 2F3C74A8DCFFFFFFFFAFFFFFFF6BF915130<2F37OKFFFFFFFFEDB9915E35O62F357FD6FFFF<"z%J&z"J&z$
D2O A5D2D2FFFFHFFFFE8D2BB<A5BBP!FFFFE8D2BBO6A5BBE8FF<"z%J&z"J&z$
D4O A9ABC6D9F1HFBE4D0B6A7<A9ABP!F8E1D0BDAAO6A9AAC8EE<"z)J)z"JP%z&
97J2F3765A2D4FFFFFFFFHFFFFFFFFF1B9854B:2FD0P CDA47445O02F449CEDFFFF<"z%J%z"J%z$
D2JA5BBD2E8FFO"FFFFD2D2:A5FFP%FFFFD2D2O0A5D2E8FF<"z%J%z"J%z$
D4JA9ABC0D8EEO"F9E1CDB4:A9ECP%EBD6C6B1O0A9B0D6F8<"z)J)z"J*z&
97F2F325E98C6FFFFFFFFO"FFFFFFFFE4AD784062FA4P%FFFFFFFFEDB38B5735O)2F5FB7FFFFFF<"z%J%z"J&z#
D2FA5BBD2E8FFO*FFFFD2D26A5FFP)FFFFE8D2BBO)A5D2FF<"z%J%z"J&z#
D4FA9A8BDD3E8O*F4DCC8AE6A9D6P)F8DFCDB9AAO)A9BDE0<"z)J)z"J*z&
97B2F30518DBFF6FFFFFFO*FFFFFFFFDCA66C3C22F70P)FFFFFFFFFACDA16C40O"2F357FD6FFFF<"z&J%z"J&z$
D2BA5BBD2E8FFFFO1FFFFD2D22A5D2P-FFFFFFD2D2O"A5BBE8FF<"z&J%z"J&z$
D4BA9A7B6CEE4FBO1F1D7C3AB2A9C4P-FDEBD4C3AEO"A9AAC8EE<"z)J)y"JP&z&
97?2F4985B7F1FFFFFFFFO1FFFFFFFFCD9F5E352F40P-E4B3895432I2F449CEDFFFF<"z%J%y"J&z$
D2?A5D2D2FFFFO9FFE8D2BBA5D2P2FFFFD2D2BBIA5D2E8FF<"z%J%y"J&z$
D4?A9B3CDE0F9O9EBD6BDAAA9AEP2F4DFCEB8A8IA9B0D6F8<"z)J)v"J*z&
97;2F4078ADE4FFFFFFFFO9FFFFFFFAC69157322FE0P1FFFFFFFFF6C69F683EC2F5FB7FFFFFF<"z%J&v"J&z#
D2;A5D2D2FFFFO@FFFFE8D2BBA5FFP5FFFFE8D2D2CA5D2FF<"z%J&v"J&z#
D4;A9AEC8DCF4O@FDE8D0B9A8A9F3P5FBE8D6C1ACCA9BDE0<"z)J)s"JP&z&
9772F3C6CA4DCFFFFFFFFO@FFFFFFFFF1B98B4B2FADP5E0AD854E30;2F357FD6FFFF<"z%J%s"J&z$
D27A5D2D2FFFFOHFFFFE8D2A5FFP:FFFFD2D2BB;A5BBE8FF<"z%J%s"J&z$
D47A9ABC3D6F1OHF9E1CDB4A9DCP:F3DCCDB5A7;A9AAC8EE<%z)J.J*z&
FABC783A02F35629FCDFFFFFFFFOHFFFFFFFFEDB17C452F2F2F2F85P:FFFFFFFFF6C29D653C52F449CEDFFFF<%z%J*J&z$
FFFFD2BB0A5BBD2E8FFP"FFFFD2D2A5A5A5A5D2P>FFFFE8D2D25A5D2E8FF<%z%J*J&z$
FDE3C8AD0A9AABED6EBP"F8DEC9B1A9A9A9A9CDP>FBE6D5C0AB5A9B0D6F8<(t)J*JP&y&
FFFFFFFABC783A2F325791C6FAFFFFFFP"FFFFFFFFDCA8743C4BP>D8AB804B302F5FB7FFFFFF?%t&J&J&y#
FFFFD2BBA5BBD2E8FFFFP)FFFFD2D2D2PCFFFFD2D2BBA5D2FF?%t&J&J&y#
FDE3C8ADA9A8B9D0E8FDP)F1D9C6ABB4PCEFDACBB4A7A9BDE0?3J&J*r&
FFFFFFFABC783A2F2F2F4F8BB9F6FFFFFFFFP)FFFFFFFFD4PCFFFFFFFFF1BF9661372F357FD6FFFFB,J"J&r$
FFFFD2BBA5A5A5D2E8FFFFP1FFPGFFFFE8D2BBA5BBE8FFB,J"J&r$
FDE3C8ADA9A9A9B5CDE1FBP1EEPGF9E4D2BEABA9AAC8EEB,J"JP+
FFFFFFFA8178EDFFFFFFFFP1FFPGD4A87C482F449CEDFFFFE%J)
FFFFFFFFS4FFFFD2D2A5D2E8FFE%J)
FDCAC6F8S4EED9C9B2A9B0D6F8B*J)
F6B4783A2F2F3E83C3S2FFFFFFE07A85ADE0B*J&
FFFFD2BBA5A5D2E8FFS5FFE8D2FFFFB*J&
FBDFC8ADA9A9ACC9E6S5F3C7CDDCF3?%s$J-
E9A666322F3E83C3S0C46A302F2F2F2F3E689FC9FA?%s$J-
FFFFD2BBA5D2E8FFS0FFD2BBA5A5A5A5D2D2E8FFFF?%s$J-
F6D7C0A8A9ACC9E6S0E6C2A7A9A9A9A9ACC1D6E9FD<$z%J$v&
E29854/2F3E7CBCFAS)F6A24D2F32578BB3E8<$z%J$v&
FFE8D2/A5D2D2FFFFS)FFFFD2A5BBD2E8FFFF<$z%J$v&
F3D3B8/A9ACC9E3FDS)FBD6B4A9A8B9CDDFF6<"z%J#J$z%
9742F3A78BCFAP*E9E9PFDD853722F4574A4D0<"z%J#J$z%
D24A5BBD2FFFFP*FFFFPFFFE8BB2A5D2D2FFFF<"z%J#J$z%
D44A9ADC8E3FDP*F6F6PFF1CBAB2A9B1C6D6EC<"z%J&J$z&
9772F3A78BCFAP$E0A25B309FPDBE683082F375E91BCF1<"z%J&J$z&
D27A5BBD2FFFFP$FFE8D2BBE8PDFFD2BB8A5BBD2E8FFFF<"z%J&J$z&
D47A9ADC8E3FDP$F3D8BBA7D6PDE3C0A78A9ABBDD0E3F9<"z%J)J$z%
97:2F3A78BCFAOLD998542F2F2F2F65PAF1A04A@2F4B80ABD8<"z%J)J$z%
D2:A5BBD2FFFFOLFFE8D2A5A5A5A5D2PAFFE8D2@A5D2D2FFFF<"z%J)J$z%
D4:A9ADC8E3FDOLEFD3B8A9A9A9A9C0PAF9D7B2@A9B4CBDAEF<"z%J$r"J$z&
97=2F3A78BCFAOFCE914C2F39P?DA8137F2F3C659DC2F6<"z%J$r"J$z&
D2=A5BBD2FFFFOFFFE8D2A5D2P?FFE8BBFA5D2D2E8FFFF<"z%J$sJ$z&
D4=A9ADC8E3FDOFEBD0B4A9P?F0C9ABFA9ABC0D5E6FB<"z%J$v"J#z&
97@2F3A78BCFAO@C38D432FD4P<BA63M2F325185B3E4<"z%J$v"J#z&
D2@A5BBD2FFFFO@FFE8D2A5FFP<FFD2MA5BBD2D2FFFF<"z%J$v"J#z&
D4@A9ADC8E3FDO@E6CEAFA9EEP<E1BEMA9A8B6CDDFF4<"z%J%y"J$z&
97C2F3A78BCFAO9FABC833E2FA6P9ED9C46O&2F406CA1CDFA<"z%J%y"J$z&
D2CA5BBD2FFFFO9FFFFE8D2A5FFP9FFE8D2O&A5D2D2FFFFFF<"z%J%y"J$z&
D4CA9ADC8E3FDO9FDE3C9ACA9D7P9F8D6B1O&A9AEC3D4EBFD<"z%J%z"J$z#
97F2F3A78BCFAO3F6B7783A12F74P7D67F35O,2F355A<"z%J%z"J$z#
D2FA5BBD2FFFFO3FFFFD2BB1A5D2P7FFE8BBO,A5BBD2<"z%J%z"J$z#
D4FA9ADC8E3FDO3FBE0C8AD1A9C6P7EEC8AAO,A9AABB<"z%J%z"J#z
97I2F3A78B9F6O-F1AD713542F43P5B75FO12F<"z%J%z"J#z
D2IA5BBD2FFFFO-FFFFD2BB4A5D2P5FFD2O1A5<"z%J%z"J#z
D4IA9ADC8E1FBO-F9DCC4AA4A9AFP5E0BDO1A9<"z%J%z"J$z
97L2F3571B4F6O'E9AB663282FE4P1ED9941O32F<"z%J%z"J$z
D2LA5BBD2FFFFO'FFFFD2BB8A5FFP1FFE8D2O3A5<"z%J%z"J$z
D4LA9AAC4DFFBO'F6DAC0A88A9F4P1F8D4AEO3A9<"z%J%z"J$z
97O!2F3571B4F6O!E0A65B30;2FB0P/D27A32O52F<"z%J%z"J$z
D2O!A5BBD2FFFFO!FFFFD2BB;A5FFP/FFE8BBO5A5<"z%J%z"J$z
D4O!A9AAC4DFFBO!F3D7BBA7;A9DDP/EDC6A8O5A9<"z%J$z"J$z
97O$2F3571B4F6ID99D54?2F85P,FAB55CO82F<"z%J$z"J$z
D2O$A5BBD2FFFFIFFE8D2?A5D2P,FFFFD2O8A5<"z%J$z"J$z
D4O$A9AAC4DFFBIEFD6B8?A9CDP,FDDFBBO8A9<"z%J$z"J$z
97O'2F3571B4F6CD1944CB2F4EP*E9963EO:2F<"z%J$z"J$z
D2O'A5BBD2FFFFCFFE8D2BA5D2P*FFE8D2O:A5<"z%J$z"J$z
D4O'A9AAC4DFFBCEDD1B4BA9B5P*F6D3ACO:A9<"z%J$z#J$z
97O*2F3571B4F6=CA8D43E2F30F1P'D07732O<2F<"z%J$z#J$z
D2O*A5BBD2FFFF=FFE8D2EA5BBFFP'FFE8BBO<A5<"z%J$z#J$z
D4O*A9AAC4DFFB=E9CEAFEA9A7F9P'EBC4A8O<A9<"z%J%z"J$z
97O-2F3571B4F66FAC3833EI2FBCP$FAAE56O?2F<"z%J%z"J$z
D2O-A5BBD2FFFF6FFFFE8D2IA5FFP$FFFFD2O?A5<"z%J%z"J$z
D4O-A9AAC4DFFB6FDE6C9ACIA9E3P$FDDCB8O?A9<"z%F%z"J$z
97O02F3571B4F6F6BC783AL2F91P"E5923DOA2F<"z%F%z"J$z
D2O0A5BBD2FFFFFFFFD2BBLA5E8P"FFE8BBOAA5<"z%F%z"J$z
D4O0A9AAC4DFFBFBE3C8ADLA9D0P"F4D1AEOAA9<"z%@%z"J$z
97O32F3571B4F6F1B47135O!2F5AP CB7232OC2F<"z%@%z"J$z
D2O3A5BBD2FFFFFFFFD2BBO!A5D2P FFD2BBOCA5<"z%@%z"J$z
D4O3A9AAC4DFFBF9DFC4AAO!A9BBP E9C5A8OCA9<"z%:%z#J$z
97O62F3569ABF1F1AB6632O$2F35FAOJF6AC52OF2F<"z%:%z#J$z
D2O6A5BBD2FFFFFFFFD2BBO$A5BBFFOJFFFFD2OFA5<"z%:%z#J$z
D4O6A9AAC2DAF9F9DAC0A8O$A9AAFDOJFBDBB6OFA9<"z'z"J#<$z
97O92F3268DACA5B30O(2FC9O@F6E9E58B3DOH2F<"z'z"J#<$z
D2O9A5BBE8FFFFD2BBO(A5FFO@FFFFFFE8BBOHA5<"z'z"J#<$z
D4O9A9A8BEF0E8BBA7O(A9E9O@FBF6F4CEAEOHA9<"z*z"J*z
97O72F3266A6E9FFFFD9944CO'2F9FO@FA3C579DD9FFC76E30OJ2F<"z%8$z"J*z
D2O7A5BBD2FFFFFFE8D2O'A5E8O@FFE8D2E8FFFFFFD2BBOJA5<"z%8$z"J*z
D4O7A9A8C0D7F6EFD1B4O'A9D6O@FDA8B9D6EFFFE8C3A7OJA9<"z(8'z"J*z
97O42F3571B1F1FFFFFFFFFFFFD68D43O$2F68O@FF7F2F3D8EF1B98B51OJ2F<"z%>$z"J)z
D2O4A5BBD2FFFFFFE8D2O$A5D2OAE8A5BBE8FFFFE8D2OJA5<"z%>$z"J)z
D4O4A9AAC4DEF9EECEAFO$A9C1OAC8A9AECFF9E1CDB6OJA9<"z(>'z"J$P%z
97O12F3E78BCFAFFFFFFFFFFFFCE8D43O!2F3COACB9CF6EDB38145OF2F<"z%D$z"J$;%z
D2O1A5D2D2FFFFFFE8D2O!A5D2OAFFE8FFFFFFD2D2OFA5<"z%D$z"J$;%z
D4O1A9ACC8E3FDEBCEAFO!A9ABOAE9D6FBF8DFCBB1OFA9<"z(D'z"J$;)z
97O.2F438BC3FFFFFFFFFFFFFFCE8D43M2FD8O@FFFFFFFFFFFFFFE4AD7440OB2F<"z$J$z"J%z
D2O.A5D2E8FF5FFE8D2MA5FFOLFFFFD2D2OBA5<"z$J$z"J%z
D4O.A9AFCDE65EBCEAFMA9EFOLF4DCC6AEOBA9<"z'J'z"J)z
97O+2F4C94D1FFFFFF5FFFFFFCE8D43J2FA8OLFFFFFFFFDCA46C3CO>2F<"z$J$z"J%z
D2O+A5D2E8FF;FFE8D2JA5FFP"FFFFD2D2O>A5<"z$J$z"J%z
D4O+A9B4D1ED;EBCEAFJA9D9P"F1D6C3ABO>A9<"z(J'z"J)z
97O'2F30579DE0FFFFFF;FFFFFFCE8D43G2F78P"FFFFFFFFD19F6535O:2F<"z%J$z"J%z
D2O'A5BBD2E8FFAFFE8D2GA5D2P&FFE8D2BBO:A5<"z%J$z"J%z
D4O'A9A7B9D6F3AEBCEAFGA9C8P&EDD6C0AAO:A9<"z(J'z"J)z
97O$2F3266A6E9FFFFFFAFFFFFFCE8D43D2F45P&FFFFFFFAC6985732O62F<"z%J$z"J&z
D2O$A5BBD2FFFFGFFE8D2DA5D2P)FFFFE8D2BBO6A5<"z%J$z"J&z
D4O$A9A8C0D7F6GEBCEAFDA9B1P)FDE8D3B9A8O6A9<"z(J'z"J*z
97O!2F3571B1F1FFFFFFGFFFFFFCE8D43B2FE8P(FFFFFFFFF6BF8D5130O22F<"z%J$z"J&z
D2O!A5BBD2FFFFMFFE8D2BA5FFP,FFFFE8D2BBO2A5<"z%J$z"J&z
D4O!A9AAC4DEF9MEBCEAFBA9F6P,FBE4CEB6A7O2A9<"z(J'z"J)z
97L2F3E78BCFAFFFFFFMFFFFFFCE8D43?2FB3P,FFFFFFFFF1B7854BO/2F<"z%J$z"J%z
D2LA5D2D2FFFFO%FFE8D2?A5FFP0FFFFD2D2O/A5<"z%J$z"J%z
D4LA9ACC8E3FDO%EBCEAF?A9DFP0F9E0CDB4O/A9<"z(J'z"J)z
97I2F438BC3FFFFFFFFO%FFFFFFCE8D43<2F85P0FFFFFFFFE4AD7C43O+2F<"z$J$z"J%z
D2IA5D2E8FFO,FFE8D2<A5D2P4FFFFD2D2O+A5<"z$J$z"J%z
D4IA9AFCDE6O,EBCEAF<A9CDP4F4DCC9AFO+A9<"z'J'z"J)z
97F2F4C94D1FFFFFFO,FFFFFFC3833E92F51P4FFFFFFFFDCA8713CO'2F<"z$J$z"J%z
D2FA5D2E8FFO2FFE8D29A5D2P8FFFFD2D2O'A5<"z$J$z"J%z
D4FA9B4D1EDO2E6C9AC9A9B6P8F1D9C4ABO'A9<"z(J'z#J)z
97B2F30579DE0FFFFFFO2FFFFFFC3833E62F30F6P7FFFFFFFFD4A46537O#2F<"z%J$z#J%z
D2BA5BBD2E8FFO8FFE8D26A5BBFFP;FFFFD2BBO#A5<"z%J$z#J%z
D4BA9A7B9D6F3O8E6C9AC6A9A7FBP;EED6C0ABO#A9<"z(J'z"J)z
97?2F3266A6E9FFFFFFO8FFFFFFC3833E42FBFP;FFFFFFFFCA985E35M2F<"z%J$z"J%z
D2?A5BBD2FFFFO>FFE8D24A5FFP?FFE8D2BBMA5<"z%J$z"J%z
D4?A9A8C0D7F6O>E6C9AC4A9E4P?E9D3BDAAMA9<"z(J'z"J)z
97<2F3571B1F1FFFFFFO>FFFFFFC3833E12F96P?FFFFFFF6BF915730I2F<"z%J$z"J&z
D2<A5BBD2FFFFODFFE8D21A5E8PBFFFFE8D2BBIA5<"z%J$z"J&z
D4<A9AAC4DEF9ODE6C9AC1A9D2PBFBE4D0B9A7IA9<"z(J'y"J)z
9792F3E78BCFAFFFFFFODFFFFFFC3833E2F5EPBFFFFFFFFF1B98B4BF2F<"z%J$y"J%z
D29A5D2D2FFFFOJFFE8D2A5D2PFFFFFE8D2FA5<"z%J$y"J%z
D49A9ACC8E3FDOJE6C9ACA9BDPFF9E1CDB4FA9<"z(J'v"J)z
9762F438BC3FFFFFFFFOJFFFFFFC3833E2F35PFFFFFFFFFEDB17C45B2F<"z$J$v"J%z
D26A5D2E8FFP#FFE8D2A5BBPJFFFFD2D2BA5<"z$J$v"J%z
D46A9AFCDE6P#E6C9ACA9AAPJF8DEC9B1BA9<"z'J't"J)z
9732F4F94D1FFFFFFP#FFFFFFC3833E2FCDPIFFFFFFFFE4A87440>2F<"z$J$t"J%z
D23A5D2E8FFP)FFE8D2A5FFPMFFFFD2D2>A5<"z$J$t"J%z
D43A9B5D1EDP)E6C9ACA9EBPMF4D9C6AE>A9<"z(J.J)z
97/2F305B9DE0FFFFFFP)FFFFFFC3833E2F2F2F2F2F2F9FPMFFFFFFFFD4A46C37:2F<"z%J+J%z
D2/A5BBD2E8FFP/FFE8D2A5A5A5A5A5A5E8Q#FFFFD2BB:A5<"z%J+J%z
D4/A9A7BBD6F3P/E6C9ACA9A9A9A9A9A9D6Q#EED6C3AB:A9<"w(J+J)z
972F3266A8E9FFFFFFP/FFFFFFC37F3A2F2F2F6CQ#FFFFFFFFCD9F5E3562F<"w%J(J%z
D2A5BBD2FFFFP5FFE8BBA5A5A5D2Q'FFE8D2BB6A5<"w%J(J%z
D4A9A8C0D9F6P5E6C8ADA9A9A9C3Q'EBD6BDAA6A9<"t(J(J)z
972F3771B4F1FFFFFFP5FFFFFABC783A3EQ'FFFFFFFAC691573222F<"t%J&J&z
D2A5BBD2FFFFP:FFFFD2BBD2Q*FFFFE8D2BB2A5<"t%J&J&z
D4A9ABC4DFF9P:FDE3C8ADACQ*FDE8D0B9A82A9</J'J*y
972F2F2F2F2F2F3E7CBCFAFFFFFFP:FFFFFFFABCF6Q)FFFFFFFFF6BC8B51302F<,J$J&y
D2A5A5A5A5A5A5D2D2FFFFP@FFFFFFQ-FFFFE8D2BBA5<,J$J&y
D4A9A9A9A9A9A9ACC9E3FDP@FDE3FBQ-FBE3CDB6A7A9<,J$J)v
972F2F2F438DC3FFFFFFFFP@FFFFFFQ-FFFFFFFFEDB385452F<(J%v
D2A5A5A5D2E8FFT*FFFFD2D2A5<(J%v
D4A9A9A9AFCEE6T*F8DFCDB1A9<(J)r
974F94D4FFFFFFT*FFFFFFFFE4AD78402F<%J%r
D2D2E8FFT1FFFFD2D2A5<%J%r
D4B5D1EET1F4DCC8AEA9<%J,
FAFFFFFFT1FFFFFFFFDCA66C3C2F2F2F<"J(
FFT8FFFFD2D2A5A5A5<"J(
FDT8F1D7C3ABA9A9A9<"J(
FFT8FFFFFFFFD19F65J$
TCFFE8D2J$
TCEDD6C0J$
TCFFFFFF

<$
9F81DA<$
E8E8FF<$
D6C9F0<&J"
972F2F63B7T:F6<&J"
D2A5A5D2FFT:FF<&J"
D4A9A9BEE0T:FB<)J#
972F2F2F2F449CEDT6BD44<)J#
D2A5A5A5A5D2E8FFT6FFD2<)J#
D4A9A9A9A9B0D6F8T6E2B0<+J%
972F2F2F2F2F2F327AD2T2DF672F2F<+J%
D2A5A5A5A5A5A5BBE8FFT2FFE8A5A5<+J%
D4A9A9A9A9A9A9A8C6EDT2F2BDA9A9<"t$J'
972F58B2FAT-F690322F2F2F<"t$J'
D2A5D2FFFFT-FFE8BBA5A5A5<"t$J'
D4A9BADDFDT-FBD1A8A9A9A9<"v$J(
972F3E92E5T*B4432F2F2F2F2F<"v$J(
D2A5D2E8FFT*FFBBA5A5A5A5A5<"v$J(
D4A9ACD1F4T*DFB1A9A9A9A9A9<"x$J#r
972F3272C7T&DA622F<"x$J#r
D2A5BBD2FFT&FFD2A5<"x$J#r
D4A9A8C5E8T&F0BDA9<"z$J#J$s
9702F4FACF6P;DDE5Q2F68A322F<"z$J#J$s
D20A5D2FFFFP;FFFFQ2FFE8BBA5<"z$J#J$s
D40A9B5DBFBP;F1F4Q2FBCEA8A9<"z$J%J#u
9722F3A89E0P7BE6830A4Q1B4432F<"z$J%J#u
D22A5BBE8FFP7FFD2BBFFQ1FFBBA5<"z$J%J#u
D42A9ADCCF3P7E3C0A7D6Q1DFB1A9<"z$J(J#w
9742F306ABEP2F6A24A2F2F2F6CQ/D7622F<"z$J(J#w
D24A5BBD2FFP2FFFFD2A5A5A5D2Q/FFD2A5<"z$J(J#w
D44A9A7C2E3P2FBD6B2A9A9A9C3Q/EEBDA9<"z$J*J$x
9772F4AA2F1P-DD85372F2F2F2F2F40Q-F186302F<"z$J*J$x
D27A5D2FFFFP-FFE8BBA5A5A5A5A5D2Q-FFE8BBA5<"z$J*J$x
D47A9B2D6F9P-F1CBABA9A9A9A9A9AEQ-F9CCA7A9<"z$J$s"J#z
9792F3781DAP)BE68302FE0Q+AE3F/2F<"z$J$s"J#z
D29A5BBE8FFP)FFD2BBA5FFQ+FFBB/A5<"z$J$s"J#z
D49A9ABC9F0P)E3C0A7A9F3Q+DBB0/A9<"z#J$v"J#z
97<2F5FB7P$F6A24A2FADQ)D75E12F<"z#J$v"J#z
D2<A5D2FFP$FFFFD2A5FFQ)FFD21A5<"z#J$v"J#z
D4<A9BDE0P$FBD6B2A9DCQ)EEBB1A9<"z$J$x"J$z
97>2F4499EDOMDD85372F80Q'ED863022F<"z$J$x"J$z
D2>A5D2E8FFOMFFE8BBA5D2Q'FFE8BB2A5<"z$J$x"J$z
D4>A9B0D4F8OMF1CBABA9CBQ'F8CCA72A9<"z$J$z"J#z
97@2F327AD0OIBE6830/2F4BQ&AB3D42F<"z$J$z"J#z
D2@A5BBE8FFOIFFD2BB/A5D2Q&FFBB4A5<"z$J$z"J#z
D4@A9A8C6EBOIE3C0A7/A9B4Q&DAAE4A9<"z$J$z"J#z
97C2F56B2FAOCF6A44D32FEDQ#D45762F<"z$J$z"J#z
D2CA5D2FFFFOCFFFFD23A5FFQ#FFD26A5<"z$J$z"J#z
D4CA9B8DDFDOCFBD7B43A9F8Q#EDB86A9<"z$J$z"J$z
97E2F3D92E5O?E0893A52FB9Q!ED803072F<"z$J$z"J$z
D2EA5BBE8FFO?FFE8BB5A5FFQ!FFE8BB7A5<"z$J$z"J$z
D4EA9AED1F4O?F3CCAD5A9E1Q!F8C9A77A9<"z$J$z"J#z
97G2F326EC7O;C46A3072F8BQ AB3D92F<"z$J$z"J#z
D2GA5BBD2FFO;FFD2BB7A5E8Q FFBB9A5<"z$J$z"J#z
D4GA9A8C3E8O;E6C2A77A9CDQ DAAE9A9<"z$J$z"J#z
97J2F4FA9F6O5F6A44D:2F57PLCD55;2F<"z$J$z"J#z
D2JA5D2FFFFO5FFFFD2:A5D2PLFFD2;A5<"z$J$z"J#z
D4JA9B5D9FBO5FBD7B4:A9B9PLEAB7;A9<"z$J$z#J$z
97L2F3A89E0O1E0893A<2F32F6PIED7A30<2F<"z$J$z#J$z
D2LA5BBE8FFO1FFE8BB<A5BBFFPIFFE8BB<A5<"z$J$z#J$z
D4LA9ADCCF3O1F3CCAD<A9A8FBPIF8C7A7<A9<"z$J$z"J#z
97O 2F3068BEO-C46A30?2FC6PHA33A>2F<"z$J$z"J#z
D2O A5BBD2FFO-FFD2BB?A5FFPHFFBB>A5<"z$J$z"J#z
D4O A9A7C0E3O-E6C2A7?A9E8PHD7AD>A9<"z$J$z"J#z
97O#2F4AA0F1O'F6A44DB2F9DPFCD55@2F<"z$J$z"J#z
D2O#A5D2E8FFO'FFFFD2BA5E8PFFFD2@A5<"z$J$z"J#z
D4O#A9B2D7F9O'FBD7B4BA9D5PFEAB7@A9<"z$J$z"J$z
97O%2F377FD6O#E0893AD2F65PDE97630A2F<"z$J$z"J$z
D2O%A5BBE8FFO#FFE8BBDA5D2PDFFE8BBAA5<"z$J$z"J$z
D4O%A9ABC8EEO#F3CCADDA9C0PDF6C5A7AA9<"z$J$z"J$z
97O(2F5FB7FALC46A30F2F37PBFAA237C2F<"z$J$z"J$z
D2O(A5D2FFFFLFFD2BBFA5BBPBFFE8BBCA5<"z$J$z"J$z
D4O(A9BDE0FDLE6C2A7FA9ABPBFDD9ABCA9<"z$J$z"J"J#z
97O*2F4199EDGF6AC4FJ2FD4OFF1GCA51E2F<"z$J$z"J"J#z
D2O*A5D2E8FFGFFFFD2JA5FFOFFFGFFD2EA5<"z$J$z"J"J#z
D4O*A9AED4F8GFBDBB5JA9EEOFF9GE8B5EA9<"z$J$z"J&J#z
97O,2F3277D0CE58B3DL2FA4OFCE3E83C3FAAE976G2F<"z$J$z"J&J#z
D2O,A5BBE8FFCFFE8BBLA5FFOFFFD2E8FFFFAFFE8GA5<"z$J$z"J&J#z
D4O,A9A8C4EBCF4CEAELA9D6OFEBACC9E6FDAF6C5GA9<"z$J$z"J)J$z
97O/2F56AEFA>C76E30O 2F74OFFF4C2F2F3A78BCFA<FAA237H2F<"z$J$z"J(J$z
D2O/A5D2FFFF>FFD2BBO A5D2OGD2A5A5BBD2FFFF<FFE8BBHA5<"z$J$z"J(J$z
D4O/A9B8DCFD>E8C3A7O A9C6OGB4A9A9ADC8E3FD<FDD9ABHA9<"z$J$z"J+J#z
97O12F3D92E59F6AC4FO#2F40OG942F2F2F2F2F3A74B4F68C64BJ2F<"z$J$z"J+J#z
D2O1A5BBE8FF9FFFFD2O#A5D2OGE8A5A5A5A5A5BBD2FFFF8FFD2JA5<"z$J$z"J+J#z
D4O1A9AED1F49FBDBB5O#A9AEOGD1A9A9A9A9A9ADC6DFFB8E6B2JA9<"z$J$z%J"s%I#z
97O32F306EC75E58B3DO&2F5E91BFF6OCDD2F3571B4F1E570L2F<"z$J$z%J"s%I#z
D2O3A5BBD2FF5FFE8BBO&A5D2E8FFFFOCFFA5BBD2FFFFFFE8LA5<"z$J$z%J"s%I#z
D4O3A9A7C3E85F4CEAEO&A9BDD0E4FBOCF1A9AAC4DFF9F4C2LA9<"z$F$z&J#u%D$z
97O62F4FA4F6C76E30O+2F30518BB3EDO?FF542F3266ABF1FA9A37M2F<"z$F$z&J"u%D$z
D2O6A5D2FFFFFFD2BBO+A5BBD2E8FFFFO@D2A5BBD2FFFFFFE8BBMA5<"z$F$z&J"u%D$z
D4O6A9B5D7FBE8C3A7O+A9A7B6CDDFF8O@B8A9A8C0DAF9FDD5ABMA9<"z$A$z%J"x%@#z
97O82F3A89DDF6AC4FO32F4B7CADE0O<9D2F3262A6E9C64BO!2F<"z$A$z%J"x%@#z
D2O8A5BBE8FFFFFFD2O3A5D2D2FFFFO<E8A5BBD2FFFFFFD2O!A5<"z$A$z%J"x%@#z
D4O8A9ADCCF1FBDBB5O3A9B4C9DCF3O<D6A9A8BED7F6E6B2O!A9<"z$=$z%J#z%;#z
97O:2F3068BAE58B3DO92F4074A4D4O8E530/2F305BA6E4E26EO#2F<"z$=$z%J#z%;#z
D2O:A5BBD2FFFFE8BBO9A5D2D2FFFFO8FFBB/A5BBD2FFFFFFE8O#A5<"z$=$z%J#z%;#z
D4O:A9A7C0E1F4CEAEO9A9AEC6D6EEO8F4A7/A9A7BBD7F4F3C0O#A9<"z$8$z&J#z'z
97O=2F46A0F1CB6E30O?2F39659FC9FAO3FF5B32F549DE0FA9335O$2F<"z$8$z&J"z'z
D2O=A5D2E8FFFFD2BBO?A5D2D2E8FFFFO4D23A5D2E8FFFFE8BBO$A5<"z$8$z%J"z'z
D4O=A9B1D7F9E9C3A7O@A9C0D6E9FDO4BB3A9B8D6F3FDD2AAO$A9<"z%z&J"z"z
97O?2F44DC8E30OE2F355E91BFF6O0A662F39O&2F<"z%z&J"z"z
D2O?A5E8FFFFBBOEA5BBD2E8FFFFO0FF6A5D2O&A5<"z%z&J"z
D4O?A9AEF1CFA7OEA9AABDD0E4FBO0D7O=A9<"z)z&J#z
97O=2F56B2FAFFFFE0893DOG2F30518BB3EDO,ED32O<2F<"z$8$z&J#z
D2O=A5D2FFFFFFE8BBOGA5BBD2E8FFFFO,FFBBO<A5<"z$8$z&J#z
D4O=A9B8DDFDF3CCAEOGA9A7B6CDDFF8O,F8A8O<A9<"z'8&z%J#z
97O:2F3277D0FFFFFFFFFFF6AC4FOJ2F4B7CADE0O(FF66O<2F<"z$=$z%J"z
D2O:A5BBE8FFFFFFD2OJA5D2D2FFFFO)D2O<A5<"z$=$z%J"z
D4O:A9A8C4EBFBDBB5OJA9B4C9DCF3O)C0O<A9<"z&='z%J"z
97O82F3E96E9FFFFFFFFFFC76E32OK2F4074A4D4O%ABO<2F<"z$B$z%J"z
D2O8A5D2E8FFFFD2BBOKA5D2D2FFFFO%FFO<A5<"z$B$z%J"z
D4O8A9ACD3F6E8C3A8OKA9AEC6D6EEO%DAO<A9<"z&B&z&J#z
97O62F56B2FAFFFFFFFFE5923DOM2F3C659FCDFAO F635O;2F<"z$F$z&J#z
D2O6A5D2FFFFFFE8BBOMA5D2D2E8FFFFO FFBBO;A5<"z$F$z&J#z
D4O6A9B8DDFDF4D1AEOMA9ABC0D6EBFDO FBAAO;A9<"z'F&z&J#z
97O32F3272CBFFFFFFFFFFFAAE56P!2F355E96BFF6JFF71O;2F<"z$J$z&J"z
D2O3A5BBD2FF5FFFFD2P!A5BBD2E8FFFFKD2O;A5<"z$J$z&J"z
D4O3A9A8C5E95FDDCB8P!A9AABDD2E4FBKC4O;A9<"z&J'z&J"z
97O12F3D92E5FFFF5FFFFFFD07732P"2F32518BB6EDGB4O;2F<"z$J$z&J"z
D2O1A5BBE8FF:FFE8BBP"A5BBD2E8FFFFGFFO;A5<"z$J$z&J"z
D4O1A9AED1F4:EBC4A8P"A9A8B6CDE0F8GDFO;A9<"z&J&z%J#z
97O/2F52AEFAFFFF:FFFFE99641P%2F4B80ADE4CFA3AO:2F<"z$J$z%J#z
D2O/A5D2FFFF>FFE8D2P%A5D2D2FFFFCFFBBO:A5<"z$J$z%J#z
D4O/A9B6DCFD>F6D3AEP%A9B4CBDCF4CFDADO:A9<"z'J&z%J#z
97O,2F3272CBFFFFFF>FFFFFAB55CP'2F4074A6D4?FF78O:2F<"z$J$z%J"z
D2O,A5BBD2FFCFFFFD2P'A5D2D2FFFF@D2O:A5<"z$J$z%J"z
D4O,A9A8C5E9CFDDFBBP'A9AEC6D7EE@C8O:A9<"z&J'z&J"z
97O*2F3D92E5FFFFCFFFFFFD27A35P(2F3C659FCDFA;C0O:2F<"z$J$z&J"z
D2O*A5BBE8FFHFFE8BBP(A5D2D2E8FFFF;FFO:A5<"z$J$z&J"z
D4O*A9AED1F4HEDC6AAP(A9ABC0D6EBFD;E5O:A9<"z&J&z&J#z
97O(2F4FACF6FFFFHFFFFED9C44P*2F355E96BFF67FF3EO92F<"z$J$z&J"z
D2O(A5D2FFFFLFFE8D2P*A5BBD2E8FFFF8D2O9A5<"z$J$z&J"z
D4O(A9B5DBFBLF8D6B0P*A9AABDD2E4FB8ACO9A9<"z'J&z&J"z
97O%2F306EC7FFFFFFLFFFFFFB763P,2F32518BB6ED483O92F<"z$J#z&J"z
D2O%A5BBD2FFO$FFD2P,A5BBD2E8FFFF4E8O9A5<"z$J#z&J"z
D4O%A9A7C3E8O$E0BEP,A9A8B6CDE0F84C9O9A9<"z&J&z%F"z
97O#2F3D8BE5FFFFO$FFFFDA8137P.2F4B80ADE4CBO92F<"z$J$z%F"z
D2O#A5BBE8FFO(FFE8BBP.A5D2D2FFFFFFO9A5<"z$J$z%F"z
D4O#A9AECEF4O(F0C9ABP.A9B4CBDCF4E9O9A9<"z&J&z%B#z
97O!2F4FACF6FFFFO(FFFFF1A04AP02F4074A6D4FF43O82F<"z$J$z%C"z
D2O!A5D2FFFFO,FFE8D2P0A5D2D2FFFFD2O8A5<"z$J$z%C"z
D4O!A9B5DBFBO,F9D7B2P0A9AEC6D7EEAFO8A9<"z'J'z%?"z
97L2F306AC7FFFFFFO,FFFFFFBE6830P12F3C659FCD8DO82F<"z$J$z%?"z
D2LA5BBD2FFO2FFD2BBP1A5D2D2E8FFE8O8A5<"z$J$z%?"z
D4LA9A7C2E8O2E3C0A7P1A9ABC0D6EBCEO8A9<"z&J&z&:"z
97J2F3A89E0FFFFO2FFFFDD893AP32F355E98BFF6D6O82F<"z$J$z&:"z
D2JA5BBE8FFO6FFE8BBP3A5BBD2E8FFFFFFO8A5<"z$J$z&:"z
D4JA9ADCCF3O6F1CCADP3A9AABDD3E4FBEEO8A9<"z&J&z(z
97H2F4DA4F6FFFFO6FFFFF6A44DP52F32548BB9EDFF4CO72F<"z$J$z(z
D2HA5D2FFFFO:FFFFD2P5A5BBD2E8FFFFFFD2O7A5<"z$J$z(z
D4HA9B4D7FBO:FBD7B4P5A9A8B8CDE1F8FFB4O7A9<"z'J'z#z
97E2F306AC4FFFFFFO:FFFFFFC46E30P72F4B49O72F<"z$J$z#z
D2EA5BBD2FFO@FFD2BBP7A5D2BBO7A5<"z$J$z#z
D4EA9A7C2E6O@E6C3A7P7A9B4B4O7A9<"z&J&z
97C2F3A89E0FFFFO@FFFFE58B3DR 2F<"z$J$z
D2CA5BBE8FFODFFE8BBR A5<"z$J$z
D4CA9ADCCF3ODF4CEAER A9<"z&J&z
97A2F4AA4F6FFFFODFFFFF6AE52QL2F<"z$J$z
D2AA5D2FFFFOHFFFFD2QLA5<"z$J$z
D4AA9B2D7FBOHFBDCB6QLA9<"z'J'z
97>2F3068BEFFFFFFOHFFFFFFCB7232QI2F<"z$J$z
D2>A5BBD2FFP FFD2BBQIA5<"z$J$z
D4>A9A7C0E3P E9C5A8QIA9<"z&J&z
97<2F3785DDFFFFP FFFFE5963EQG2F<"z$J$z
D2<A5BBE8FFP$FFE8D2QGA5<"z$J$z
D4<A9ABCBF1P$F4D3ACQGA9<"z&J&z
97:2F4AA2F6FFFFP$FFFFFAB256QE2F<"z$J$z
D2:A5D2FFFFP(FFFFD2QEA5<"z$J$z
D4:A9B2D6FBP(FDDDB8QEA9<"z'J'z
9772F3068BEFFFFFFP(FFFFFFD07A32QB2F<"z$J$z
D27A5BBD2FFP.FFE8BBQBA5<"z$J$z
D47A9A7C0E3P.EBC6A8QBA9<"z&J&z
9752F3781DDFFFFP.FFFFED9941Q@2F<"z$J$z
D25A5BBE8FFP2FFE8D2Q@A5<"z$J$z
D45A9ABC9F1P2F8D4AEQ@A9<"z&J&z
9732F46A0F1FFFFP2FFFFFAB75FQ>2F<"z$J$z
D23A5D2E8FFP6FFFFD2Q>A5<"z$J$z
D43A9B1D7F9P6FDE0BDQ>A9<"z&J'z
9712F63BAFFFFFFP6FFFFFFD67F35Q;2F<"z#J$z
D21A5D2FFP<FFE8BBQ;A5<"z#J$z
D41A9BEE1P<EEC8AAQ;A9<"y&J&z%z
972F3781DAFFFFP<FFFFEDA046O12F17171717P$2F<"y$J$z%z
D2A5BBE8FFP@FFE8D2O1A57B7B7B7BP$A5<"y$J$z%z
D4A9ABC9F0P@F8D7B1O1A98B8B8B8BP$A9<"w&J&z"rf"z
972F46A0F1FFFFP@FFFFFFBA63O 2F23170BP#2F<"w$J#z"r-z
D2A5D2E8FFPEFFD2O A5907B796D69515151517E736D5B66P#A5<"w$J#z"r-z
D4A9B1D7F9PEE1BEO A99A8B716E6D6E6E6E6E736F6E6D7CP#A9<"u&J&zr"j"z
972F5FBAFFFFFFPEFFFFDD8537=2F170B:23P"2F<"u#J$zr,z#z
D2A5D2FFPJFFE8BB=A57B766D5F5151515167716D59/515990P"A5<"u#J$zr,z#z
D4A9BDE1PJF1CBAB=A98B7D6E6E6E6E6E6E706E6E6D/6E6D9AP"A9<"r&J&w"rj"z
972F357FD6FFFFPJFFFFF6A24A2F2317J23P!2F<"r$J$w"r*z"z
D2A5BBE8FFQ FFFFD2A5907B6D5D51515151516D6DA5190P!A5<"r$J$w"r#z"z
D4A9AAC8EEQ FBD6B2A99A8B6E6DH6E9AP!A9<,J*jz
972F2F2F2F2F449CEDFFFFQ FFFFFFB1311717170BO+P!2F<*J/z"z
D2A5A5A5A5A5D2E8FFQ%F99B7B7B7B745B51515151515F69O"5159P!A5<*J/z"z
D4A9A9A9A9A9B0D6F8Q%DFA18B8B8B7C6D6E6E6E6E6E6E6DO"6E6DP!A9<*J3j"z
972F2F2F5FB7FFFFFFPDF3EBDDD9C8C6B5B5A29F8F8A7D766C6C4316O.0BP 2F<'J4z"z
D2A5A5A5D2FFPGFBF8F3F2ECEBE5E5DEDED9D7D2CFCCCCB6815AO-5166P A5<'J#z"z
D4A9A9A9BDE0Q*8F6FO-6E7CP A9<'J/z#j"z
97357FD6FFFFP8F0EBDBD9C6C4B5B0A29C8F887D7436C562CO-0BOM2F<%J/z$z"z
D2BBE8FFP:F9F8F3F2EBEAE5E3DEDCD9D6D2CF3CCC3976AO,5166OMA5<%J#z"z
D4AAC8EEQ.9F78O,6E7COMA9<%J,z#j"z
D9EDFFFFP.E3C6C2B5AEA2988F837D72E6C360DO+17OL2F<#J,z$z#z
FFFFP0F5EBEAE5E3DEDBD9D4D2CEECCAE7958O)51657BOLA5<#J"z#z
EFF8Q387O*6E6D8BOLA9<#J"z#j"z
FFFFP0C0O#6C4C23O*23OK2FJ"z$z"z
P8E9O#CCBE905FO)5190OKA5J#z"z
Q=9775O)6E9AOKA9J#z#j"z
P8F370O$6C6236O)23OJ2FJ#z$z#z
P8FBCDO$CCC8A971O'515990OJA5J"z#z
Q@7FO'6E6D9AOJA9J#z#j"z
P8FF9AO'6C4716O&0BOJ2FJ"z$z#z
P9DCO'CCB8895AO$515966OJA5J#z#z
QB916FO$6E6D7COJA9J"z#j"z
P9D1O)6C5931O%0BOI2FJ"z$z"z
P9EFO)CCC59B6BO$5166OIA5J#z"z
QDA27AO$6E7COIA9J#z#j"z
P9FC78O+6C3B11O#17OH2FJ#z$z#z
P9FED0O+CCB07C58O!51597BOHA5J"z#z
QG8AO"6E6D8BOHA9J#z#j"z
P9FFADO-6C4C28O"23OG2FJ"z$z"z
P:E3O-CCBF935FO!5190OGA5J#z"z
QI9A75O!6E9AOGA9<#Jz$j"z
B9CDP3O/6C673605O 23OF2F<#J"z$z"z
E8FFP2F5O/CCCAAA74O 5190OFA5<#J"z"z
E2EAQD82O 6E9AOFA9<%J#z#jz
973076E9P0FF88O16C471BMOF2F<%J"z$z#z
D2BBE8FFP1D5O1CCB98B5BJ515951OFA5<%J#z#z
D4A7C5F6QD9271J6E6D6EOFA9<'J"z#j"z
972F2F379EFAP/C0O36C5E20K0BOE2F<'J"z#z"z
D2A5A5BBE8FFP/E9O3CCC69CK5166OEA5<'Jz"z
D4A9A9ABD7FDQEK6E7COEA9<(J#z"j"z
972F2F2F2F4BC2P.F370O26C31M0BOD2F<(J#z#z#z
D2A5A5A5A5D2FFP.FBCDO2CCA75FK515966ODA5<(J"z#z
D4A9A9A9A9B2E5QC75K6E6D7CODA9<*J#z#j"z
972F2F2F2F2F2F6EDFP,FF9AO06C4C08O!23OC2F<*J"z#z#z
D2A5A5A5A5A5A5E8FFP-DCO0CCBA73O 515B90OCA5<*J"z#z
D4A9A9A9A9A9A9C0F2Q?81O 6E6D9AOCA9<"r$J"z#j"z
972F3290F6P+D1O.6C591BO$23OB2F<"r$J"z$z"z
D2A5BBE8FFP+EFO.CCC58D58O#5190OBA5<"r$J"z"z
D4A9A8D1FBQ;94O$6E9AOBA9<"t#J#z"jz
972F43B4P*FC78O,6C31O'OB2F<"t#J#z#z"z
D2A5BBFFP*FED0O,CCA75FO%5159OBA5<"t#J"z"z
D4A9B1DFQ975O%6E6DOBA9<"v#J#z#j"z
972F5ED7P(FFADO*6C4C08O(0BOA2F<"v#J"z#z"z
D2A5D2FFP)E3O*CCBA73O(5166OAA5<"v#J"z"z
D4A9BBEEQ581O(6E7COAA9<"w$Jz#j"z
972F3080EDP(O(6C591BO+0BO@2F<"w$J"z$z"z
D2A5BBE8FFP'F5O(CCC58D58O*5166O@A5<"w$J"z"z
D4A9A7C9F8Q194O+6E7CO@A9<"y#J#z"j"z
972F3DA3P&FF88O&6C31O.17O?2F<"y#J"z#z#z
D2A5BBFFP'D5O&CCA75FO,51597BO?A5<"y#J"z#z
D4A9AED7Q/75O,6E6D8BO?A9<"z#J"z#j"z
9702F55CAP%C0O$6C4C08O023O>2F<"z#J"z#z"z
D20A5D2FFP%E9O$CCBA73O05190O>A5<"z#J"z"z
D40A9B7E8Q+81O06E9AO>A9<"z#J#z#j"z
9722F74E5P#F370O!6C591BO323O=2F<"z#J#z$z#z
D22A5E8FFP#FBCDO!CCC58D58O1515990O=A5<"z#J"z#z
D42A9C3F4Q'94O26E6D9AO=A9<"z$J#z"j"z
9732F3797FAP!FF9AO 6C31O50BO=2F<"z$J"z#z"z
D23A5BBE8FFP"DCO CCA75FO45166O=A5<"z$J"z"z
D43A9ABD4FDQ$75O46E7CO=A9<"z#J"z#j"z
9752F48BFP!D1L6C4C08O70BO<2F<"z#J"z#z"z
D25A5D2FFP!EFLCCBA73O75166O<A5<"z#J"z"z
D45A9B1E3Q!81O76E7CO<A9<"z#J#z#j"z
9772F67DAOMFC78I6C591BO:17O;2F<"z#J#z$z#z
D27A5E8FFOMFED0ICCC58D58O851637BO;A5<"z#J"z#z
D47A9BDF0PK94O96E6C8BO;A9<"z$J#z"j"z
9782F328AF6OKFFADH6C31O=23O:2F<"z$J"z#z"z
D28A5BBE8FFOLE3HCCA75FO<5190O:A5<"z$J"z"z
D48A9A8CEFBPH75O<6E9AO:A9<"z#J"z#j"z
97:2F3FAEOKE1F6C4C08O?23O92F<"z#J"z#z"z
D2:A5BBFFOKF5FCCBA73O?5190O9A5<"z#J"z"z
D4:A9B0DBPE81O?6E9AO9A9<"z#J#z#jz
97<2F5AD4OIFF86C6C591BOBO92F<"z#J"z$z#z
D2<A5D2FFOJD5CCCC58D58O?515951O9A5<"z#J"z#z
D4<A9BAEDPA94O@6E6D6EO9A9<"z$J"z"j"z
97=2F307AEDOHBDB6C31OD0BO82F<"z$J"z#z"z
D2=A5BBE8FFOHE8BCCA75FOC5166O8A5<"z$J"z"z
D4=A9A7C7F8P>75OC6E7CO8A9<"z$J#z#j"z
97?2F3AA2FAOFF36D?6C4C08OF0BO72F<"z$J"z#z#z
D2?A5BBE8FFOFFB@CCBA73OE515966O7A5<"z$J"z#z
D4?A9ADD9FDP:81OE6E6D7CO7A9<"z#J#z#j"z
97A2F51C6OEFF98=6C591BOI23O62F<"z#J"z$z"z
D2AA5D2FFOFDB=CCC58D58OH5190O6A5<"z#J"z"z
D4AA9B5E6P794OI6E9AO6A9<"z#J"z"j"z
97C2F70E2ODCF<6C31OL23O52F<"z#J"z#z"z
D2CA5E8FFODEE<CCA75FOK5190O5A5<"z#J"z"z
D4CA9C2F3P475OK6E9AO5A9<"z$J#z#jz
97D2F3593F6OBFC7696C4C08P O52F<"z$J#z#z#z
D2DA5BBE8FFOBFECF9CCBA73OL51595BO5A5<"z$J"z#z
D4DA9AAD2FBP081OL6E6D6DO5A9<"z#J#z#j"z
97F2F44BDOAFFAB76C591BP"0BO42F<"z#J"z$z"z
D2FA5D2FFOBE27CCC58D58P!5166O4A5<"z#J"z"z
D4FA9B0E2P-94P"6E7CO4A9<"z#J"z"j"z
97H2F62DAO@E166C31P%0BO32F<"z#J"z#z"z
D2HA5D2FFO@F56CCA75FP$5166O3A5<"z#J"z"z
D4HA9BDF0P*75P$6E7CO3A9<"z$J#z#j"z
97I2F3086F1O>FF8636C4C08P'17O22F<"z$J"z#z#z
D2IA5BBE8FFO?D53CCBA73P&51597BO2A5<"z$J"z#z
D4IA9A7CCF9P&81P&6E6D8BO2A9<"z#J"z#j"z
97K2F3DABO>BD16C591BP*23O12F<"z#J"z$z"z
D2KA5BBFFO>E81CCC58D58P)5190O1A5<"z#J"z"z
D4KA9AEDAP#94P*6E9AO1A9<"z#J#z"j"z
97M2F57CDO<F36D/6C31P-23O02F<"z#J"z#z#z
D2MA5D2FFO<FB0CCA75FP+515990O0A5<"z#J"z#z
D4MA9B8EAP 75P+6E6D9AO0A9<"z$J#x#j"z
97O 2F3076E9O:FF986C4C08P.0BO02F<"z$J"x#z"z
D2O A5BBE8FFO;DBCCBA73P.5166O0A5<"z$J"z"z
D4O A9A7C5F6OJ81P.6E7CO0A9<"z$J"v#j"z
97O"2F379EFAO9CF6C591BP10BO/2F<"z$J"v$z"z
D2O"A5BBE8FFO9EECCC58D58P05166O/A5<"z$J"z"z
D4O"A9ABD7FDOF94P16E7CO/A9<"z#J#t"j"z
97O$2F4BBFO8FC766C31P417O.2F<"z#J#t#z#z
D2O$A5D2FFO8FECFCCA75FP251597BO.A5<"z#J"z#z
D4O$A9B2E3OD75P26E6D8BO.A9<"z#J#r#j"z
97O&2F6EDFO6FFAB6C4C08P623O-2F<"z#J"r#z"z
D2O&A5E8FFO7E2CCBA73P65190O-A5<"z#J"z"z
D4O&A9C0F2O@81P66E9AO-A9<"z$J)j"z
97O'2F3290F6O5E16C6C6C6C6C591BP923O,2F<"z$J*z#z
D2O'A5BBE8FFO5F5CCCCCCCCCCC58D58P7515990O,A5<"z$J"z#z
D4O'A9A8D1FBO<94P86E6D9AO,A9<"z#J'jz
97O)2F43B0O4FF866C6C6C31P<O,2F<"z#J'z#z
D2O)A5BBFFO5D5CCCCCCA75FP9515B51O,A5<"z#J"z#z
D4O)A9B1DDO:75P96E6D6EO,A9<"z#J%j"z
97O+2F5ED7O3BD6C4C08P=0BO+2F<"z#J%z"z
D2O+A5D2FFO3E8CCBA73P=5166O+A5<"z#J"z"z
D4O+A9BBEEO681P=6E7CO+A9<"z$J#j"z
97O,2F3080EDO1EE1BP@0BO*2F<"z$J$z#z
D2O,A5BBE8FFO1FB8F58P>515966O*A5<"z$J#z#z
D4O,A9A7C9F8O1F994P?6E6D7CO*A9<"z#J#j"z
97O.2F3DA3O/B944PB23O)2F<"z#J#z"z
D2O.A5BBFFO/FFD2PB5190O)A5<"z#J#z"z
D4O.A9AED7O/E0B0PB6E9AO)A9<"z#J&j%z
97O02F51CAO+D7622F2F17P>17171717O)2F<"z#J&z%z
D2O0A5D2FFO+FFD2A5A57BP>517B7B7B7BO)A5<"z#J&z%z
D4O0A9B5E8O+EEBDA9A98BP>6E8B8B8B8BO)A9<"z#J(j'z
97O22F74E5O'ED83302F2F2F23P2171717171717O32F<"z#J(z.z
D2O2A5E8FFO'FFE8BBA5A5A590P+515B5151515151597B7B7B7B7B7BO3A5<"z#J(z.z
D4O2A9C3F4O'F8CBA7A9A9A99AP+6E6D6E6E6E6E6E6D8B8B8B8B8B8BO3A9<"z$J+j'z
97O32F3797FAO#FAA33D2F2F2F2F2F2F0BP%171717171717O?2F<"z$J+z(z
D2O3A5BBE8FFO#FFFFBBA5A5A5A5A5A566P$515B7B7B7B7B7B7BO?A5<"z$J+z(z
D4O3A9ABD4FDO#FDD7AEA9A9A9A9A9A97CP$6E6D8B8B8B8B8B8BO?A9<"z#J#s"j(z
97O52F48BDO!C6512F17OF0B171717171723OK2F<"z#J#s"z(z
D2O5A5D2FFO!FFD2A57BOF51667B7B7B7B7B90OKA5<"z#J#s"z(z
D4O5A9B1E2O!E6B5A98BOF6E7C8B8B8B8B8B9AOKA9<"z#J#vj(z
97O72F67DAKE2702FO:0B171717171723P)2F<"z#J#vz.z
D2O7A5E8FFKFFE8A5O4515951515151516E7B7B7B7B7B90P)A5<"z#J#vz.z
D4O7A9BDF0KF3C2A9O46E6D6E6E6E6E6E7C8B8B8B8B8B9AP)A9<"z$J$w"j(z
97O82F328AF6GF690352F0BO-17171717171723P52F<"z$J$w"z(z
D2O8A5BBE8FFGFFE8BBA566O-517B7B7B7B7B7B90P5A5<"z$J$w"z(z
D4O8A9A8CEFBGFBD1AAA97CO-6E8B8B8B8B8B8B9AP5A9<"z#J#y"j'z
97O:2F3FAEEB0432F17O!171717171717PB2F<"z#J#y#z'z
D2O:A5BBFFEFFBBA57B59O 517B7B7B7B7B7BPBA5<"z#J#y#z'z
D4O:A9B0DBEDDB1A98B6DO 6E8B8B8B8B8B8BPBA9<"z#J#zj'z
97O<2F57D4AD45E12FC171717171717Q 2F<"z#J#zz(z
D2O<A5D2FFAFFD21A5B51597B7B7B7B7B7BQ A5<"z#J#zz(z
D4O<A9B8EDAEDBB1A9B6E6D8B8B8B8B8B8BQ A9<"z$J$z"j(z
97O=2F307AED=ED7E3022F1750B171717171723Q,2F<"z$J$z"z(z
D2O=A5BBE8FF=FFE8BB2A57B551667B7B7B7B7B90Q,A5<"z$J$z"z(z
D4O=A9A7C7F8=F8C8A72A98B56E7C8B8B8B8B8B9AQ,A9<"z$J$z"d(z
97O?2F3AA2FA9FAA23A42F230B171717171723Q82F<"z$J$z"t(z
D2O?A5BBE8FF9FFE8BB4A59051667B7B7B7B7B90Q8A5<"z$J$z"t(z
D4O?A9ADD9FD9FDD9AD4A99A6E7C8B8B8B8B8B9AQ8A9<"z#J#z%z
97OA2F4DC67C24B72F17171723QD2F<"z#J#z%z
D2OAA5D2FF7FFD27A57B7B7B90QDA5<"z#J#z%z
D4OAA9B4E67E5B27A98B8B8B9AQDA9<"z#I#z
97OC2F70E2DF6ER32F<"z#I#z
D2OCA5E8FFFFE8R3A5<"z#I#z
D4OCA9C2F3F2C0R3A9<"z$E$z
97OD2F3593F6F68E32R42F<"z$E$z
D2ODA5BBE8FFFFE8BBR4A5<"z$E$z
D4ODA9AAD2FBFBCFA8R4A9<"z#C#z
97OF2F44B9AE3FR62F<"z#C#z
D2OFA5D2FFFFBBR6A5<"z#C#z
D4OFA9B0E0DBB0R6A9<"z#?#z
97OH2F62DAD057R82F<"z#?#z
D2OHA5D2FFFFD2R8A5<"z#?#z
D4OHA9BDF0EBB8R8A9<"z$;$z
97OI2F3086F1E97A30R92F<"z$;$z
D2OIA5BBE8FFFFE8BBR9A5<"z$;$z
D4OIA9A7CCF9F6C7A7R9A9<"z#8$z
97OK2F3DABFA9A37R;2F<"z#8$z
D2OKA5BBFFFFE8BBR;A5<"z#8$z
D4OKA9AEDAFDD5ABR;A9<"z$z
97OM2F59D848R=2F<"z$z
D2OMA5E8FFD2R=A5<"z$z
D4OMA9B7EFB1R=A9<"z&z
97OL2F62DAFFCA4BR<2F<"z&z
D2OLA5D2FFFFFFD2R<A5<"z&z
D4OLA9BDF0FFE8B2R<A9<"z*z
97OJ2F44B9FFFFFFFFFA9635R:2F<"z#:$z
D2OJA5D2FFFFE8BBR:A5<"z#:$z
D4OJA9B0E0FDD4AAR:A9<"z%:%z
97OH2F3290F6FFFFFFE267R92F<"z$=#z
D2OHA5BBE8FFFFE8R9A5<"z$=#z
D4OHA9A8D1FBF3BDR9A9<"z%=%z
97OG2F6EE2FFFFFFFFB843R72F<"z#A#z
D2OGA5E8FFFFBBR7A5<"z#A#z
D4OGA9C0F3E0B1R7A9<"z%A%z
97OE2F4BBFFFFFFFF68630R52F<"z#D$z
D2OEA5D2FFFFE8BBR5A5<"z#D$z
D4OEA9B2E3FBCCA7R5A9<"z%D%z
97OC2F379AFAFFFFFFD75BR42F<"z$G#z
D2OCA5BBE8FFFFD2R4A5<"z$G#z
D4OCA9ABD5FDEEBAR4A9<"z%G%z
97OB2F76E5FFFFFFFFAB3AR22F<"z#J#z
D2OBA5E8FF5FFBBR2A5<"z#J#z
D4OBA9C5F45DAADR2A9<"z%J$z
97O@2F55CAFFFF5FFED7AR12F<"z#J#z
D2O@A5D2FF8FFE8R1A5<"z#J#z
D4O@A9B7E88F8C7R1A9<"z%J%z
97O>2F3AA3FFFF8FFFFCA4FR/2F<"z#J#z
D2O>A5BBFF<FFD2R/A5<"z#J#z
D4O>A9ADD7<E8B4R/A9<"z%J%z
97O<2F3080EDFF<FFFA9A37R-2F<"z$J$z
D2O<A5BBE8FF>FFE8BBR-A5<"z$J$z
D4O<A9A7C9F8>FDD5ABR-A9<"z%J%z
97O;2F5AD4FFFF>FFFFE26ER,2F<"z#J#z
D2O;A5D2FFBFFE8R,A5<"z#J#z
D4O;A9BAEDBF3C0R,A9<"z%J%z
97O92F3FAEFFFFBFFFFBD44R*2F<"z#J#z
D2O9A5BBFFFFFD2R*A5<"z#J#z
D4O9A9B0DBFE2B0R*A9<"z%J%z
97O72F328AF1FFFFFF68A32R(2F<"z$J$z
D2O7A5BBE8FFHFFE8BBR(A5<"z$J$z
D4O7A9A8CEF9HFBCEA8R(A9<"z%J%z
97O62F62DAFFFFHFFFFD75ER'2F<"z#J#z
D2O6A5D2FFLFFD2R'A5<"z#J#z
D4O6A9BDF0LEEBBR'A9<"z%J%z
97O42F44BDFFFFLFFFFAB3DR%2F<"z#J#z
D2O4A5D2FFO"FFBBR%A5<"z#J#z
D4O4A9B0E2O"DAAER%A9<"z%J%z
97O22F3593F6FFO"FFED7D30R#2F<"z$J$z
D2O2A5BBE8FFO$FFE8BBR#A5<"z$J$z
D4O2A9AAD2FBO$F8C8A7R#A9<"z%J%z
97O12F6EE2FFFFO$FFFFCD51R"2F<"z#J#z
D2O1A5E8FFO(FFD2R"A5<"z#J#z
D4O1A9C0F3O(EAB5R"A9<"z%J%z
97O/2F4BC6FFFFO(FFFA9D37R 2F<"z#J$z
D2O/A5D2FFO+FFE8BBR A5<"z#J$z
D4O/A9B2E6O+FDD7ABR A9<"z%J%z
97O-2F379EFAFFO+FFFFE56EQM2F<"z$J#z
D2O-A5BBE8FFO.FFE8QMA5<"z$J#z
D4O-A9ABD7FDO.F4C0QMA9<"z%J%z
97O,2F76E9FFFFO.FFFFBF44QK2F<"z#J#z
D2O,A5E8FFO2FFD2QKA5<"z#J#z
D4O,A9C5F6O2E3B0QKA9<"z%J%z
97O*2F55CDFFFFO2FFF69032QI2F<"z#J$z
D2O*A5D2FFO5FFE8BBQIA5<"z#J$z
D4O*A9B7EAO5FBD1A8QIA9<"z%J%z
97O(2F3DA3FFFFO5FFFFDA62QH2F<"z#J#z
D2O(A5BBFFO9FFD2QHA5<"z#J#z
D4O(A9AED7O9F0BDQHA9<"z%J%z
97O&2F3080EDFFO9FFFFAE3FQF2F<"z$J#z
D2O&A5BBE8FFO<FFBBQFA5<"z$J#z
D4O&A9A7C9F8O<DBB0QFA9<"z%J%z
97O%2F5ED7FFFFO<FFED8030QD2F<"z#J$z
D2O%A5D2FFO?FFE8BBQDA5<"z#J$z
D4O%A9BBEEO?F8C9A7QDA9<"z%J%z
97O#2F43AEFFFFO?FFFFCD55QC2F<"z#J#z
D2O#A5BBFFOCFFD2QCA5<"z#J#z
D4O#A9B1DBOCEAB7QCA9<"z%J%z
97O!2F328AF6FFOCFFFAA237QA2F<"z$J$z
D2O!A5BBE8FFOEFFE8BBQAA5<"z$J$z
D4O!A9A8CEFBOEFDD9ABQAA9<"z%J%z
97O 2F67DAFFFFOEFFFFE970Q@2F<"z#J#z
D2O A5E8FFOIFFE8Q@A5<"z#J#z
D4O A9BDF0OIF6C2Q@A9<"z%J%z
97L2F44BDFFFFOIFFFFC348Q>2F<"z#J#z
D2LA5D2FFOMFFD2Q>A5<"z#J#z
D4LA9B0E2OME5B1Q>A9<"z%J%z
97J2F3593FAFFOMFFFA9032Q<2F<"z$J$z
D2JA5BBE8FFP!FFE8BBQ<A5<"z$J$z
D4JA9AAD2FDP!FDD1A8Q<A9<"z%J%z
97I2F70E2FFFFP!FFFFDF62Q;2F<"z#J#z
D2IA5E8FFP%FFD2Q;A5<"z#J#z
D4IA9C2F3P%F2BDQ;A9<"z%J%z
97G2F4DC6FFFFP%FFFFB23FQ92F<"z#J#z
D2GA5D2FFP)FFBBQ9A5<"z#J#z
D4GA9B4E6P)DDB0Q9A9<"z%J%z
97E2F37A2FAFFP)FFF18330Q72F<"z$J$z
D2EA5BBE8FFP+FFE8BBQ7A5<"z$J$z
D4EA9ABD9FDP+F9CAA7Q7A9<"z&J%z
97C2F307AE9FFFFP+FFFFD455Q62F<"z$J#z
D2CA5BBE8FFP/FFD2Q6A5<"z$J#z
D4CA9A7C7F6P/EDB7Q6A9<ZJZ
GP/Q8














































J#
SF6B8EJ#
SFBCCA
=e"J"u"J%J,9$
C7P.A60C92PG6400008E<EE8C8C8C8C8C8CA6DF8CCBEE8CB5=u"J"u"J%J,9$
7AEBP.DF8BD1PGBA6B6CCA<F9D5D5D5D5D5D5DFF3D5ECF9D5E4
=e"J"e"J'J,9$
C0P.8C7FPF64000000008E;D6404020004040558C003B8B0040=u"J"u"J'J,9$
6BE8P.D56BC4PFBA6B6B6B6CCA;F09E9E90709E9EB4D56E9CCD6E9E
=e"J"e"J"a"J-8$
C0P.8C7FPE648E:FFFFFF8C00FFFFFF8C0700F63B0C40=u"J"u"J)J#9%8$
6BE8P.D56BC4PEBA6B6B6B6B6B6CCA=D57AD5897CFC9C929E
=e"J"e"J"c"J#9*
C0P.8C7FPD648E<8C008C0C4192FFF6006F40=u"J"u"J"r#J#9*
6BE8P.D56BC4PDBA6B6CCA<D57AD58B9FD3FFFC7ABE9E
=e"J"e"J"c"J#9*
C0P.8C7FPD378E<8C008C0C8B50FF923B7F40=u"J"u"J"r#J#9*
6BE8P.D56BC4PD986B6CCA<D57AD58BCDA4FFD39CC49E
=e"J"e"J#a#J#9*
C0P.8C7FPDEE278EFF<8C008C0CE600FF498B7F40=u"J"u"J*J#9*
6BE8P.D56BC4PDF98B6B6B6B6B6B6CCA=D57AD58BF67CFFA2CDC49E
=e"J"e"J*J#9*
C0P.8C7FPDFFDF12000000008EFF=8C008C0CFF289000EE7F40=u"J"u"J(J#9*
6BE8P.D56BC4PEF3806B6B6B6CCA>D57AD58BFF95D77AF9C49E
=e"J"e"J(J#9*
C0P.8C7FPEFFCB0000008EFF>8C008C0CFF7F123BFF7F40=u"J"u"J&J#9*
6BE8P.D56BC4PFEC766B6CCA?D57AD58BFFC2879CFFC49E
=e"J"e"J&J#9*
C0P.8C7FPFFFB6008EFF?8C008C0CFFD8008BFF7F40=u"J"u"J$J#9*
6BE8P.D56BC4PGE272CA@D57AD58BFFF16BCDFFC49E
=e"J"e"J$J#9*
C0P.8C7FPGFFDDFF@C57FC585FFFF7FEEFFBF9F=u"J"u"J"J#9#8&
6BE8P.D56BC4PHF3AEABCEAC5BEF9FFE1CE
=e"J"e"J"J#9#8P
C0P.8C7FPHFFAFFFFFFFF=u"J"u"
6BE8P.D56BC4
=e"J"e"
C0P.8C7F=u"J"u"
6BE8P.D56BC4
=e"J"e"
C0P.8C7F=u"J"u"
6BE8P.D56BC4
=e"J"e"
C0P.8C7F=u"J"u"
6BE8P.D56BC4
=e"J"e"J"z"B%J"u"
C0P.8C7FO$F6>C0EED6C0C0DF=BF7F9F=u"J"u"J"z"B%J"u"
6BE8P.D56BC4O$FC>E8F9F0E8E8F3=E1B5CE
=e"z#C"z#?"t"=&s"9"e"=$z%>$j":"e"C"u":"e":z"
6037F8BEEDF98C9FEE9F7FBFC7C0928C867FBF8C7FD16F1890C12578BF6F67D12?8C8C7FB540777F40?7F99=u"z#C"z#?"t"=&s"9"u"=$z%>%z":"u"C"u":"u":"z#
6BB73C4D3F9F39D5DCF9CEB5E1EBE8D7D5D3C4E1D56BC4EFB59098B8DA6CDFCFCC4896C>6BD5D56BB5E49EC0C46B9EBC=B5BCDA
=j#A"j#="d'j"9"e"<"j#<#j":"e"C"e":"e":j#
@59F68C;1992407FB37F672606/7F8C7F79?19BFE627A8C8C7F8C407F40@12B6=z$A"z$="t(y"9"u"<#z#<#z":"u"C"u":"u":"z#
?6B72AFFCD5:6B6C8ECD9E6BC4E4C6AC9583746BB5D56BC4C370>6B84E5F68FA6BD5D56BB5D56B9EC46B9E7A?6B83DE
=j#@"j#;"j"9"e";"gsh#;"j":"e"C"e":"e":fu"g"
A27F68C=27D140>7F8C7F9E0C06E637B8C8C7F8C407F400C069E=z#@"z#;"t"z"9"u";#t#s"w#;"z":"u"C"u":"u":"uu#u#
A6B91FCD5=6B8FEF9E6B7046BB5D56BC4D26C6B6C808B7A6B7BF69AB6BD5D56BB5D56B9EC46B9E7A6B8B86726B6CD2
=f#T#e"@"z#f#:"j,9"e";"d#U#f":"f$Ve":"e"C"e":"e":fV#f"
2F98E65260EE1C0B27620F640413607F85A6C0EEFFFFFFFF8C7F063FD8D84C6FAF0C92E68C8C7F8C407F40F66DDF=v#?#u"@"z$u#:"z)="u";"t#@#v":"v$Au":"u"C"u":"u":"uA$t#
6B90D8F6AE6BB3F91E8E3BF766B86FC9E36B728DA9BECEDFE8F9D56BC47F6BA1F1F1AA6BB7E26B7DCFF66BD5D56BB5D56B9EC46B9E7A6BFCBE706B74F3
=e$?$e"?Z"f":"j$S="e":"d$@$e":"f$Ae":"e"C"e":"e":fA$e"
27F6FFFFFF46EE4C5854001276B38C7F9919FFFFFFFF4C1376C5FFFF8C8C7F8C407F40FFFF816F=u#B"t#J#u":"z$E"u":"t"D"u":"u#Cu":"u"C"u":"u":"uC"u"
6B8DFCA46B72F9=EA726BC79E06B89BBE4D56BC4DA6B88A66B8DB56B6EEA6BD5D56BB5D56B9EC46B9E7A6BC66BB8
=e#B"e"J#e":"i&E"e":"d"D"f:"e#Ce":"e"C"e":"e":fC"e"
85FF998B=FF59264052C2FFFFFF8C7F7F7FC13913FF8C8C7F8C407F40FF12=u"C"u"J"u":"x$H"u":"t"D"u":"u"Du":"u"C"u":"u":"uD"t"
6BCEDA6BD1>A76B959E6B6EA8E9D56BC4BE6BB5E96B7A9C6B8D6BD5D56BB5D56B9EC46B9E7A6B766B8B
=e"C"e"J"e":"g%H"e":"d"D"f:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C402FC5FFFF8C7F7F7FFF0C408C8C7F8C407F400C=u"C"u"J"u":"w#J"u":"t"Eu":"u"Du":"u"C"u":"u":"uD"t"
6BE8E86BC4>B56B8B9E6B91EA4D56BC4B56BB56B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B72
=e"C"e"J"e":"f$J"e":"d"Ef:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C403FFFFF48C7F7F7F0C408C8C7F8C407F400C=u"C"u"J"u":"v"J"u":"t"Eu":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BA76D56BC4B56BB56B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"e#J"e":"d"Ef:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C403FFF68C7F7F7F0C408C8C7F8C407F400C=u"C"u"J"u":"u"J"u":"t"Eu":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BA17D56BC4B56BB56B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"e"J"e":"d"Ef:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C40DF78C7F7F7F0C408C8C7F8C407F400C=u"C"u"J"u":"t#J"u":"t"Eu":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6B74F37D56BC4B56BB56B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"d#J"e":"d"Ef:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C4050FF78C7F7F7F0C408C8C7F8C407F400C=u"C"u"J"u":"t"J"u":"t"Eu":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BA48D56BC4B56BB56B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"d"J"e":"d"zf:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C407F88C7F7F46/8C0C408C8C7F8C407F400C=u"C"u"J"u":"t"J"u":"t"zu":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BB58D56BC4B56BA0/D56B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"d"J"e":"j:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C407F88C7F7FD0C408C8C7F8C407F400C=u"C"u"J"u":"t"J"u":"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BB58D56BC4B5C6B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"d"J"e":"j:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C407F88C7F7FD0C408C8C7F8C407F400C=u"C"u"J"u":"t"J"u":"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BB58D56BC4B5C6B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"J"e":"d"J"e":"j:"e"De":"e"C"e":"e":fD"e
C0C07F>7F0C407F88C7F7FD0C408C8C7F8C407F400C=u"C"u"J"u":"t"J"u":"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4>B56B8B9E6BB58D56BC4B5C6B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e">%j":"d"J"e":"j:"e"De":"e"C"e":"e":fD"e
C0C07FF68B480C=0C407F88C7F7FD0C408C8C7F8C407F400C=u"C"u">&z"u":"t"J"u":"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4FCCDA18B7C17A726B8B9E6BB58D56BC4B5C6B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"=#j":"d"J"e":"j:"e"De":"e"C"e":"e":fD"e
C0C07FCB19@0C407F88C7F7FD0C408C8C7F8C407F400C=u"C"u"=#z":"t"J"u":"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4EC86@6B8B9E6BB58D56BC4B5C6B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<#ewf":"d"J"e":"j:"e"De":"e"C"e":"e":fD"e
C0C07FE6120C0C407F88C7F7FD0C408C8C7F8C407F400C=u"C"u"<#t"w"u":"t"J"u":"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4F6806B7A8B766B8B9E6BB58D56BC4B5C6B7A8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<"d#W"e":"d"J"e":"d"z":"e"De":"e"C"e":"e":fD"e
C0C07F6F12E6400C407F88C7F7F2097F800C408C8C7F8C407F400C=u"C"u"<"t#B"u":"t"J"u":"t"z":"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4B76B81F69E6B8B9E6BB58D56BC4B56B8A9C4CA8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<"d#B"e":"d"J"e":"d"Z:"e"De":"e"C"e":"e":fD"e
C0C07F0676FF400C407F88C7F7F40:0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC4836BB79E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F40>0C408C8C7F8C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4B56B9E>8B6B9E6BD5D56BB5D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"d"J"e"De":"e"C"e":"e":fD"e
C0C07F7F400C407F88C7F7F18>0C328CC0768C407F400C=u"C"u"<"t"C"u":"t"J"u":"t"J"u"Du":"u"C"u":"u":"uD"u
6BE8E86BC47A6BC49E6B8B9E6BB58D56BC4C26B90>8B6B996BD5E86BB2D56B9EC46B9E7A6B8B6B
=e"C"e"<e"C"e":"d"J"e":"e"J"fDe":"e"C"e":"e":fD"e
C0C07F76400C407F88C7FC1EE=1F8CFF198C407F400C=u"C"u"<"t"C"u":"t"J"u":"t#J"u"Du";"t"C"u":"u":"uD"u
6BE8E86BC47C6BB79E6B8B9E6BB58D56BC4E96B70F9=926B7C6BD5706B8ED56B9EC46B9E7A6B8B6B
=e"C"e"<"d#B"e":"d"J"e":#d"J"f"Ce";"e"B"e":"e":fD"e
C0C07F2D12F6400C407F88C7FFF203F=675E8C3BB68C407F400C=u"C"u"<"t#B"u":"t"J"u";"t"J"v"Cu";"t#B"u":"u":"uD"u
6BE8E86BC4976B83FC9E6B8B9E6BB58D56BC48E6BA3=B06BB76BD59C6B6CE0D56B9EC46B9E7A6B8B6B
=e"C"e"<"e#A"e":"d"J"e";"e#J"g$ue";"f"A"e":"e":fD"e
C0C07F9837C1400C407F88C7FAE379F;AF2F85B9C08CB6898C407F400C=u"C"u"<"u#A"u":"t"J"u";#t#J#v$uu";#t#A"u":"u":"uD"u
6BE8E86BC4D06B98E99E6B8B9E6BB58D56BC4DC6C6B98DA;E26C6B95CDE6E86BD5E26C6B76CAD56B9EC46B9E7A6B8B6B
=e"C"e"<#j":"d"J"e";#j>#j";#j":"e":fD"e
C0C07FFF3FA18407F88C7FFF64>FF4CB8CFF6BA407F400C=u"C"u"="z":"t"J"u"<"z?"z"<"v"u"u":"u":"uD"u
6BE8E86BC4A3A6B909E6BB58D56BC4BA>6BAEB6BD5BC6B727A766B9EC46B9E7A6B8B6B
=e"C"e"=#j":"d"J"e"<#j?#j"<$j":"e":fD"e
C0C07FFF60@6F407F88C7FFF79=FF60A8CFF9006?407F400C=u"C"u">#z":"t"J"u"=#z@#z"=#z":"u":"uD"u
6BE8E86BC4B772?6BBD9E6BB58D56BC4C172<6BB76E@6BD5CB7D?6B9EC46B9E7A6B8B6B
=u"C"u">%z#:"t"J"u"=&z@&r"ve"=$z":"u":"uD"e
40D6CF0C92FFE68060<4067F677409F8C57FBFFFDF7F4F1F90CFFD87F4F260C2C408CFFFF99>7F9FA6407747400C=u"C"u"?$z#:"t"J"u">%zA%r"v"t"?#z":"u":"uD"s#
9EF0EE8BD1F6C8A9<9EB4FCC09ECE8EAB5E1F3C2A49298BF1C2A4958B979E706BD5DABE=B5CED99EC0A99E8B6B6E7A
=VCW?Z:VJW>ZAZe"?Z:W:VDV
A8=78C@J"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
Je"
R78CJ"t"
R77A6BD5
JV
R7




















ENDBITMAP
%%EndBinary
0 0 0 1 0 0 0 K
108 117 486 612 C
36 72 576 720 C
0 0 0 1 0 0 0 K
[/Creator(FrameMaker xm5.1.1P1b)/DOCINFO FmPD2
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.i/DEST FmPD2
[/Dest/F.titledoc/DEST FmPD2
[/Dest/L.titledoc/DEST FmPD2
108 536/I1.1.130292 FmPA
FMENDPAGE
%%EndPage: "i" 1
%%Page: "ii" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 126 504 684 R
V
1 9 Q
0 X
(Copyright and T) 72 678 T
(rademarks) 139.01 678 T
2 F
(Harlequin Dylan: Library Refer) 72 663 T
(ence: C FFI and W) 187.2 663 T
(in32) 254.94 663 T
0 F
(V) 72 648 T
(ersion 2.0 Beta) 77.5 648 T
(May 1999) 72 633 T
(Part number: 3DPDTZ-15MF) 72 618 T
(Copyright \251 1997\3201999 by Harlequin Gr) 72 603 T
(oup plc.) 232.57 603 T
(Companies, names and data used in examples her) 72 588 T
(ein ar) 271.03 588 T
(e \336ctitious unless otherwise noted.) 293.34 588 T
-0.04 (All Rights Reserved. No part of this publication may be r) 72 573 P
-0.04 (epr) 297.85 573 P
-0.04 (oduced, stor) 310.96 573 P
-0.04 (ed in a r) 360.13 573 P
-0.04 (etrieval system, or transmit-) 392.33 573 P
-0.16 (ted, in any form or by any means, electr) 72 563 P
-0.16 (onic, mechanical, photocopying, r) 228.58 563 P
-0.16 (ecor) 362.33 563 P
-0.16 (ding, or otherwise, without the) 378.94 563 P
(prior written permission of Harlequin Gr) 72 553 T
(oup plc.) 235.61 553 T
(The information in this publication is pr) 72 538 T
(ovided for information only and is subject to change without notice.) 230.99 538 T
(Harlequin Gr) 72 528 T
(oup plc and its af) 125.31 528 T
(\336liates assume no r) 194.02 528 T
(esponsibility or liability for any loss or damage that may) 270.38 528 T
(arise fr) 72 518 T
(om the use of any information in this publication. The softwar) 99.44 518 T
(e described in this book is furnished) 346.06 518 T
(under license and may only be used or copied in accor) 72 508 T
(dance with the terms of that license.) 288.12 508 T
(Dylan is a trademark of Apple Computer) 72 493 T
(, Inc.) 235.44 493 T
(Harlequin is a trademark of Harlequin Gr) 72 478 T
(oup plc.) 238.01 478 T
(Other brand or pr) 72 463 T
(oduct names ar) 142.9 463 T
(e the r) 203.88 463 T
(egister) 228.56 463 T
(ed trademarks or trademarks of their r) 254.95 463 T
(espective holders.) 407.93 463 T
(US Government Use) 72 448 T
(The Harlequin Dylan Softwar) 72 433 T
(e is a computer softwar) 189.91 433 T
(e pr) 282.71 433 T
(ogram developed at private expense and is subject) 298.07 433 T
-0.05 (to the following Restricted Rights Legend: \322Use, duplication, or disclosur) 72 423 P
-0.05 (e by the United States Government) 362.78 423 P
(is subject to r) 72 413 T
(estrictions as set forth in \050i\051 F) 123.99 413 T
(AR 52.227-14 Alt III or \050ii\051 F) 238.07 413 T
(AR 52.227-19, as applicable.  Use by) 347.02 413 T
-0.04 (agencies of the Department of Defense \050DOD\051 is subject to Harlequin\325s customary commer) 72 403 P
-0.04 (cial license as con-) 431.26 403 P
(tained in the accompanying license agr) 72 393 T
(eement, in accor) 226.86 393 T
(dance with DF) 291.32 393 T
(AR 227.7202-1\050a\051.  For purposes of the) 348.97 393 T
(F) 72 383 T
(AR, the Softwar) 76.34 383 T
(e shall be deemed to be `unpublished\325 and licensed with disclosur) 139.55 383 T
(e pr) 401.58 383 T
(ohibitions, rights) 416.94 383 T
(r) 72 373 T
(eserved under the copyright laws of the United States.  Harlequin Incorporated, One Cambridge Center) 75.39 373 T
(,) 487.26 373 T
(Cambridge,) 72 363 T
(Massachusetts 02142.\323) 72 353 T
(http://www) 72 248 T
(.harlequin.com/) 123.36 248 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Eur) 72 219 T
(ope:) 86.32 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(Harlequin Limited) 72 204 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Barrington Hall) 72 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Barrington) 72 184 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Cambridge CB2 5RG) 72 174 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(UK) 72 164 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(telephone +44 1223 873 800) 72 149 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(fax +44 1223 873 873) 72 139 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(North America:) 216 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(Harlequin Incorporated) 216 204 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(One Cambridge Center) 216 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Cambridge, MA 02142) 216 184 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(USA) 216 174 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(telephone +1 617 374 2400) 216 159 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(fax +1 617 252 6505) 216 149 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Asia Paci\336c:) 360 219 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(Harlequin Australia Pty) 360 204 T
(. Ltd.) 457.65 204 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Level 12) 360 194 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12 Moor) 360 184 T
(e Str) 392.98 184 T
(eet) 410.6 184 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Canberra, ACT 2601) 360 174 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Australia) 360 164 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(telephone +61 2 6206 5522) 360 149 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(fax +61 2 6206 5525) 360 139 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.ii/DEST FmPD2
[/Dest/F.copyrightdoc/DEST FmPD2
[/Dest/L.copyrightdoc/DEST FmPD2
189 398/I2.1.850090 FmPA
72 628/I2.1.850174 FmPA
FMENDPAGE
%%EndPage: "ii" 2
%%Page: "iii" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 540 522 630 R
7 X
0 0 0 1 0 0 0 K
V
0 30 Q
0 X
(Contents) 108 553.83 T
108 540 522 630 C
0 0 0 1 0 0 0 K
108 588.83 405 619 C
0 0 0 1 0 0 0 K
104.67 603.83 266.67 603.83 2 L
3 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
104.67 594.83 266.67 594.83 2 L
1 H
N
0 0 0 1 0 0 0 K
108 540 522 630 C
36 72 576 720 C
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(iii) 283.51 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 468 R
7 X
V
3 13 Q
0 X
(1) 108 459.33 T
(The C-FFI Library) 135 459.33 T
(1) 236.26 459.33 T
0 11 Q
(Intr) 135 439.67 T
(oduction) 152.84 439.67 T
(1) 207.28 439.67 T
(Overview) 135 425.67 T
(1) 194.33 425.67 T
(T) 135 411.67 T
(erminology) 140.73 411.67 T
(9) 208.11 411.67 T
(Basic options in C-FFI macr) 135 397.67 T
(os) 268.69 397.67 T
(9) 290.36 397.67 T
(Designator classes) 135 383.67 T
(10) 235.2 383.67 T
(De\336ning types) 135 369.67 T
(32) 217.55 369.67 T
(Functions) 135 355.67 T
(45) 193.89 355.67 T
(Allocating and deallocating C storage) 135 341.67 T
(58) 329.15 341.67 T
(Utility designator classes) 135 327.67 T
(62) 267.61 327.67 T
3 13 Q
(2) 108 305.33 T
(The Harlequin Dylan Win32 API Libraries) 135 305.33 T
(69) 354.17 305.33 T
0 11 Q
(Intr) 135 285.67 T
(oduction) 152.84 285.67 T
(69) 207.28 285.67 T
(Supported W) 135 271.67 T
(in32 libraries) 199.7 271.67 T
(70) 273.86 271.67 T
(Content and or) 135 257.67 T
(ganization of the W) 208.33 257.67 T
(in32 API libraries) 303.31 257.67 T
(71) 399.13 257.67 T
(Naming and mapping conventions) 135 243.67 T
(72) 316.14 243.67 T
(De\336ning callback functions) 135 229.67 T
(75) 278.87 229.67 T
(Err) 135 215.67 T
(or messages) 150.21 215.67 T
(76) 220.17 215.67 T
(Handling Dylan conditions in a W) 135 201.67 T
(in32 application) 301.75 201.67 T
(77) 390.8 201.67 T
(Dealing with the C function W) 135 187.67 T
(inMain) 283.54 187.67 T
(78) 329.66 187.67 T
(Combining bit mask constants) 135 173.67 T
(79) 293.73 173.67 T
(Other minor details) 135 159.67 T
(80) 241.56 159.67 T
(Index of W) 135 145.67 T
(in32 names excluded fr) 188.34 145.67 T
(om the Dylan libraries) 300.92 145.67 T
(81) 420.69 145.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.iii/DEST FmPD2
[/Dest/F.interop1TOCdoc/DEST FmPD2
[/Rect[108 455 486 467]/Border[0 0 0]/Dest/G4.886461/LNK FmPD2
[/Rect[108 436 486 447]/Border[0 0 0]/Dest/G4.886462/LNK FmPD2
[/Rect[108 422 486 433]/Border[0 0 0]/Dest/G4.886476/LNK FmPD2
[/Rect[108 408 486 419]/Border[0 0 0]/Dest/G4.886638/LNK FmPD2
[/Rect[108 394 486 405]/Border[0 0 0]/Dest/G4.886644/LNK FmPD2
[/Rect[108 380 486 391]/Border[0 0 0]/Dest/G4.886650/LNK FmPD2
[/Rect[108 366 486 377]/Border[0 0 0]/Dest/G4.1038252/LNK FmPD2
[/Rect[108 352 486 363]/Border[0 0 0]/Dest/G4.887470/LNK FmPD2
[/Rect[108 338 486 349]/Border[0 0 0]/Dest/G4.946964/LNK FmPD2
[/Rect[108 324 486 335]/Border[0 0 0]/Dest/G4.1055760/LNK FmPD2
[/Rect[108 301 486 313]/Border[0 0 0]/Dest/G5.888029/LNK FmPD2
[/Rect[108 282 486 293]/Border[0 0 0]/Dest/G5.888030/LNK FmPD2
[/Rect[108 268 486 279]/Border[0 0 0]/Dest/G5.888036/LNK FmPD2
[/Rect[108 254 486 265]/Border[0 0 0]/Dest/G5.888048/LNK FmPD2
[/Rect[108 240 486 251]/Border[0 0 0]/Dest/G5.888974/LNK FmPD2
[/Rect[108 226 486 237]/Border[0 0 0]/Dest/G5.889773/LNK FmPD2
[/Rect[108 212 486 223]/Border[0 0 0]/Dest/G5.889791/LNK FmPD2
[/Rect[108 198 486 209]/Border[0 0 0]/Dest/G5.891198/LNK FmPD2
[/Rect[108 184 486 195]/Border[0 0 0]/Dest/G5.891203/LNK FmPD2
[/Rect[108 170 486 181]/Border[0 0 0]/Dest/G5.889842/LNK FmPD2
[/Rect[108 156 486 167]/Border[0 0 0]/Dest/G5.888865/LNK FmPD2
[/Rect[135 142 486 153]/Border[0 0 0]/Dest/G5.891631/LNK FmPD2
[/Title(A)/Rect[99 117 495 477]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "iii" 3
%%Page: "iv" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
72 81 504 117 R
V
1 9 Q
0 X
(iv) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.iv/DEST FmPD2
[/Dest/L.interop1TOCdoc/DEST FmPD2
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "iv" 4
%%Page: "1" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(1) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
0 30 Q
0 X
(1) 180 628 T
108 586.45 504 614 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 586.45 504 614 R
7 X
0 0 0 1 0 0 0 K
V
108 607.14 270 607.14 2 L
V
3 H
2 Z
0 X
N
108 598.14 270 598.14 2 L
7 X
V
1 H
0 X
N
36 72 576 720 C
0 0 0 0 1 1 1 K
0 2 Q
7 X
(1) 108 566.45 T
0 0 0 1 0 0 0 K
0 30 Q
0 X
0 0 0 1 0 0 0 K
(The C-FFI Library) 109 566.45 T
108 710/G4.886461 FmPA
108 126 486 432 R
7 X
V
3 16 Q
0 X
(1.1  Intr) 108 421.33 T
(oduction) 154.43 421.33 T
108 565/G4.886462 FmPA
0 11 Q
-0.4 (The C-FFI \050) 108 400.67 P
2 F
-0.4 (C for) 162.18 400.67 P
-0.4 (eign function interface) 183.89 400.67 P
0 F
-0.4 (\051 library pr) 283.12 400.67 P
-0.4 (ovides a means of interfacing a) 335.04 400.67 P
(Dylan application with code written in the C language. The C-FFI library is) 108 386.67 T
(available to applications as the module C-FFI in the library C-FFI.) 108 372.67 T
-0.35 (The C-FFI library consists of macr) 108 352.67 P
-0.35 (os, classes, and functions that you can use to) 270.57 352.67 P
(write a complete description of the Dylan interface to a C library) 108 338.67 T
(. Compiling) 419.99 338.67 T
(this description generates a set of Dylan classes and functions thr) 108 324.67 T
(ough which) 424.13 324.67 T
-0.41 (Dylan code can manipulate the C library\325s data and call its functions. Interface) 108 310.67 P
(descriptions can also allow C code to call into Dylan; compiling such a) 108 296.67 T
(description generates entry points compatible with C\325s calling conventions.) 108 282.67 T
3 16 Q
(1.2) 108 247.33 T
(Over) 133.54 247.33 T
(vie) 163.57 247.33 T
(w) 181.63 247.33 T
108 391/G4.886476 FmPA
0 11 Q
(This section is an overview of the C-FFI library) 108 226.67 T
(, intr) 334.38 226.67 T
(oducing the most com-) 357.22 226.67 T
(monly used constr) 108 212.67 T
(ucts as the basis for examples.) 198.02 212.67 T
(The C-FFI library pr) 108 192.67 T
(ovides a set of macr) 205.61 192.67 T
(os that can be used to describe a C) 301.62 192.67 T
-0.22 (interface in a form that the Harlequin Dylan compiler can understand; we call) 108 178.67 P
(these macr) 108 164.67 T
(os the) 160.18 164.67 T
2 F
(C interface de\336nition language) 191.61 164.67 T
0 F
(.) 328.11 164.67 T
(The C interface de\336nition language pr) 108 144.67 T
(ovides macr) 293.02 144.67 T
(os that corr) 352.09 144.67 T
(espond to each) 406.72 144.67 T
(of C\325s type, function, variable, and constant de\336ning forms. These macr) 108 130.67 T
(os) 454.76 130.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.1/DEST FmPD2
[/Dest/F.cffidoc/DEST FmPD2
109 730/I4.1.1059967 FmPA
109 730/I4.1.1060123 FmPA
134 576/I4.1.1059969 FmPA
134 576/I4.1.1060103 FmPA
134 576/I4.1.1060101 FmPA
134 402/M4.9.14214.1Heading.12.Overview FmPA
134 402/I4.1.963133 FmPA
134 402/I4.1.1086945 FmPA
[/Title(A)/Rect[99 504 513 657]/ARTICLE FmPD2
[/Title(A)/Rect[99 117 495 441]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "1" 5
%%Page: "2" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(2) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(de\336ne Dylan classes that designate and encapsulate instances of C types,) 126 640.67 T
(Dylan methods thr) 126 626.67 T
(ough which to manipulate C variables and call out to C) 217.73 626.67 T
-0.39 (functions, and functions with C-compatible entry points thr) 126 612.67 P
-0.39 (ough which to call) 412.97 612.67 P
(in to Dylan fr) 126 598.67 T
(om C.) 190.99 598.67 T
(In addition to the interface de\336nition language, the C-FFI library pr) 126 578.67 T
(ovides) 453.05 578.67 T
(r) 126 564.67 T
(un-time methods and functions for allocating, manipulating and destr) 130.26 564.67 T
(oying) 470.59 564.67 T
(instances of C data str) 126 550.67 T
(uctur) 232.85 550.67 T
(es. For example, using these facilities you can allo-) 258.74 550.67 T
(cate C str) 126 536.67 T
(ucts and arrays, and access and set their elements.) 171.04 536.67 T
3 13 Q
(1.2.1  C types in Dylan) 126 503.33 T
0 11 Q
(When you use the interface de\336nition language to describe a C type to the) 126 483.67 T
-0.25 (Dylan compiler) 126 469.67 P
-0.25 (, the compiler generates a new Dylan class. This class is said to) 200.65 469.67 P
2 F
-0.36 (designate) 126 455.67 P
0 F
-0.36 ( the C type, which means that it carries with it the essential pr) 167.56 455.67 P
-0.36 (operties) 462.66 455.67 P
(of the C type such as its size and alignment.) 126 441.67 T
(Y) 126 421.67 T
(ou can use this) 132.32 421.67 T
2 F
(designator class) 207.17 421.67 T
0 F
( in subsequent interface de\336nition forms to) 277.34 421.67 T
-0.24 (specify which elements involve the designated C type. A designator class also) 126 407.67 P
(carries with it the information on how to interpr) 126 393.67 T
(et the untyped C data as a) 359.78 393.67 T
(tagged Dylan object.) 126 379.67 T
(The C-FFI library contains pr) 126 359.67 T
(ede\336ned designator classes for C\325s fundamental) 267.01 359.67 T
(types like) 126 345.67 T
4 9.5 Q
(int) 175.53 345.67 T
0 11 Q
( and) 192.63 345.67 T
4 9.5 Q
(double) 216.76 345.67 T
0 11 Q
(. The names of these pr) 250.96 345.67 T
(ede\336ned Dylan classes ar) 363.04 345.67 T
(e) 485.82 345.67 T
(formed fr) 126 331.67 T
(om the C name of the fundamental type being designated. The des-) 172.28 331.67 T
(ignator class name for a particular C type formed using Dylan\325s standar) 126 317.67 T
(d) 474.61 317.67 T
(class-naming convention; it is pr) 126 303.67 T
(e\336xed with \322C-\323, hyphenated if it contains) 283.44 303.67 T
(mor) 126 289.67 T
(e than one wor) 145.87 289.67 T
(d, and enclosed in angle brackets. For example, the C-FFI) 218.28 289.67 T
(library pr) 126 275.67 T
(ovides the class) 172.3 275.67 T
4 9.5 Q
(<C-int>) 250.79 275.67 T
0 11 Q
( to designate the C type) 290.7 275.67 T
4 9.5 Q
(int) 408.15 275.67 T
0 11 Q
(; it designates) 425.25 275.67 T
4 9.5 Q
-0.44 (double) 126 261.67 P
0 11 Q
-0.22 ( by the class) 160.2 261.67 P
4 9.5 Q
-0.44 (<C-double>) 220.71 261.67 P
0 11 Q
-0.22 (, and) 277.71 261.67 P
4 9.5 Q
-0.44 (unsigned) 304.15 261.67 P
-0.44 (long) 352.29 261.67 P
0 11 Q
-0.22 ( by the class) 375.09 261.67 P
4 9.5 Q
-0.44 (<C-unsigned-) 435.6 261.67 P
(long>) 126 247.67 T
0 11 Q
(.) 154.5 247.67 T
1 F
(Note:) 126 227.67 T
0 F
( Since Dylan variable names ar) 153.19 227.67 T
(e compar) 302.71 227.67 T
(ed without sensitivity to case,) 347.6 227.67 T
(the capitalization of the \322C\323 in the names above, and in other Dylan names) 126 213.67 T
(appearing in this document, is not binding and can safely be ignor) 126 199.67 T
(ed.) 448.26 199.67 T
-0.12 (The C-FFI library also pr) 126 179.67 P
-0.12 (ovides pr) 245.24 179.67 P
-0.12 (ede\336ned classes designating pointers to C\325s) 290.71 179.67 P
(fundamental numeric types. T) 126 165.67 T
(o do so, it adds a) 272.01 165.67 T
4 9.5 Q
(*) 356.56 165.67 T
0 11 Q
( to the fundamental C type) 362.26 165.67 T
(designator) 126 151.67 T
(. For example) 177 151.67 T
4 9.5 Q
(<C-double*>) 245.7 151.67 T
0 11 Q
( designates the C type) 308.4 151.67 T
4 9.5 Q
(double) 418.18 151.67 T
(*) 455.13 151.67 T
0 11 Q
(.) 460.83 151.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.2/DEST FmPD2
156 656/I4.1.1059973 FmPA
156 656/I4.1.1060037 FmPA
207 573/I4.1.901452 FmPA
251 427/I4.1.1059545 FmPA
251 427/I4.1.1059543 FmPA
221 413/I4.1.1059515 FmPA
221 413/I4.1.1059513 FmPA
436 413/I4.1.1059821 FmPA
436 413/I4.1.1059819 FmPA
246 303/I4.1.1059521 FmPA
246 303/I4.1.1059519 FmPA
126 511/I4.1.1086954 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "2" 6
%%Page: "3" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.2) 481.15 677.67 T
(Overview) 502.52 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(3) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(The following is an example of de\336ning and using designator classes. Sup-) 108 640.67 T
(pose we have the following C str) 108 626.67 T
(uct:) 267.41 626.67 T
4 9 Q
(typedef struct {) 135 606 T
(unsigned short x_coord;) 145.8 595 T
(unsigned short y_coord;) 145.8 584 T
(} Point;) 135 573 T
0 11 Q
(W) 108 552.67 T
(e describe C str) 117.99 552.67 T
(ucts to Dylan using the macr) 192.25 552.67 T
(o) 331.61 552.67 T
4 9.5 Q
(define C-struct) 340.36 552.67 T
0 11 Q
(:) 425.86 552.67 T
4 9 Q
(define C-struct <Point>) 135 532 T
(slot x-coord :: <C-unsigned-short>;) 145.8 521 T
(slot y-coord :: <C-unsigned-short>;) 145.8 510 T
(end C-struct;) 135 499 T
0 11 Q
(This form de\336nes a new designator class) 108 478.67 T
4 9.5 Q
(<Point>) 308.04 478.67 T
0 11 Q
( for a str) 347.93 478.67 T
(uctur) 388.21 478.67 T
(e type corr) 414.09 478.67 T
(e-) 465.82 478.67 T
(sponding to the C type) 108 464.67 T
4 9.5 Q
(Point) 222.1 464.67 T
0 11 Q
(. W) 250.6 464.67 T
(e designate the types of the slots of) 266.09 464.67 T
4 9.5 Q
(<Point>) 438.31 464.67 T
0 11 Q
(using the Dylan classes designating the C types used in the de\336nition of) 108 450.67 T
4 9.5 Q
-0.09 (Point) 108 436.67 P
0 11 Q
-0.04 (. In this case, both slots ar) 136.5 436.67 P
-0.04 (e of the C type) 260.38 436.67 P
4 9.5 Q
-0.09 (unsigned) 333.5 436.67 P
-0.09 (short) 381.81 436.67 P
0 11 Q
-0.04 ( which is desig-) 410.31 436.67 P
(nated by the pr) 108 422.67 T
(ede\336ned class) 181.94 422.67 T
4 9.5 Q
(<C-unsigned-short>) 252.66 422.67 T
0 11 Q
(. The information about) 355.26 422.67 T
-0.44 (the C type) 108 408.67 P
4 9.5 Q
-0.92 (unsigned) 159.56 408.67 P
-0.92 (short) 207.46 408.67 P
0 11 Q
-0.44 ( carried by this designator class allows the compiler) 235.96 408.67 P
-0.1 (to compute the size, alignment, and layout of the str) 108 394.67 P
-0.1 (uct. The compiler r) 360.05 394.67 P
-0.1 (ecor) 451.65 394.67 P
-0.1 (ds) 471.96 394.67 P
(the str) 108 380.67 T
(uct\325s size and alignment and associates them with) 138.51 380.67 T
4 9.5 Q
(<Point>) 383.88 380.67 T
0 11 Q
(. The desig-) 423.78 380.67 T
(nator class) 108 366.67 T
4 9.5 Q
(<Point>) 162.25 366.67 T
0 11 Q
( can then be used in the de\336nition of other types, func-) 202.15 366.67 T
(tions, and variables. For example, we could describe) 108 352.67 T
4 9 Q
(typedef struct {) 135 332 T
(Point start;) 145.8 321 T
(Point end;) 145.8 310 T
(} LineSegment;) 135 299 T
0 11 Q
(like this:) 108 278.67 T
4 9 Q
(define C-struct <LineSegment>) 135 258 T
(slot start :: <Point>;) 145.8 247 T
(slot end   :: <Point>;) 145.8 236 T
(end C-struct;) 135 225 T
0 11 Q
-0.32 (As well as acting as a static information carrier for use in other FFI de\336nitions,) 108 204.67 P
(a designator class can also be instantiable, in which case Dylan uses an) 108 190.67 T
(instance of the designator class to r) 108 176.67 T
(epr) 277.8 176.67 T
(esent an object of the C type it desig-) 293.82 176.67 T
(nates when that object is passed fr) 108 162.67 T
(om the \322C world\323 to the \322Dylan world\323.) 273.75 162.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.3/DEST FmPD2
340 704/I4.1.1058888 FmPA
340 704/I4.1.1059925 FmPA
308 630/I4.1.1059893 FmPA
308 630/I4.1.1059891 FmPA
253 574/I4.1.1059845 FmPA
253 574/I4.1.1059843 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "3" 7
%%Page: "4" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(4) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
1 11 Q
0 X
(Note:) 126 640.67 T
0 F
( Only classes that designate C pointer types can be instantiated in this) 153.19 640.67 T
(way) 126 626.67 T
(. Instances of C\325s fundamental numeric value types like) 145.57 626.67 T
4 9.5 Q
(int) 417.23 626.67 T
0 11 Q
(,) 434.33 626.67 T
4 9.5 Q
(char) 439.83 626.67 T
0 11 Q
(, and) 461.81 626.67 T
4 9.5 Q
(double) 126 612.67 T
0 11 Q
( ar) 160.2 612.67 T
(e just converted to an equivalent Dylan object with the same value.) 172.6 612.67 T
-0.38 (The) 126 598.67 P
4 9.5 Q
-0.78 (<Point>) 146.79 598.67 P
0 11 Q
-0.38 ( class is not an instantiable class in Dylan because ther) 186.69 598.67 P
-0.38 (e is nothing) 445.63 598.67 P
(in Dylan that corr) 126 584.67 T
(esponds to a C str) 212.04 584.67 T
(uct. However) 298.78 584.67 T
(, the C-FFI does pr) 364 584.67 T
(ovide a) 453.82 584.67 T
(Dylan r) 126 570.67 T
(epr) 162.63 570.67 T
(esentation of a pointer to a C str) 178.66 570.67 T
(uct.) 333.78 570.67 T
(T) 126 550.67 T
(o illustrate, her) 131.73 550.67 T
(e is an example interaction involving a C str) 204.99 550.67 T
(uct containing) 418.41 550.67 T
(some pointer) 126 536.67 T
(-typed slots and some slots whose types ar) 189.62 536.67 T
(e fundamental) 396.77 536.67 T
(numeric types:) 126 522.67 T
4 9 Q
(define C-struct <Example>) 153 502 T
(slot count) 163.8 491 T
(:: <C-int>;) 261 491 T
(slot statistic) 163.8 480 T
(:: <C-double>;) 261 480 T
(slot data) 163.8 469 T
(:: <C-char*>;) 261 469 T
(slot next) 163.8 458 T
(:: <Example*>;) 261 458 T
(pointer-type-name) 163.8 447 T
(:: <Example*>;) 261 447 T
(end C-struct;) 153 436 T
0 11 Q
(This example de\336nes the two designator types) 126 415.67 T
4 9.5 Q
(<Example>) 354.56 415.67 T
0 11 Q
( and) 405.86 415.67 T
4 9.5 Q
(<Example*>) 429.98 415.67 T
0 11 Q
(;) 486.98 415.67 T
(the slots) 126 401.67 T
4 9.5 Q
(count) 168.88 401.67 T
0 11 Q
( and) 197.38 401.67 T
4 9.5 Q
(statistic) 221.5 401.67 T
0 11 Q
( have fundamental numeric types while) 272.8 401.67 T
4 9.5 Q
(data) 469.22 401.67 T
0 11 Q
(and) 126 387.67 T
4 9.5 Q
(next) 147.37 387.67 T
0 11 Q
( have pointer types. The getter and setter methods for the slots ar) 170.17 387.67 T
(e) 486.3 387.67 T
(de\336ned for instances of) 126 373.67 T
4 9.5 Q
(<Example*>) 242.29 373.67 T
0 11 Q
(.) 299.29 373.67 T
(Suppose ther) 126 353.67 T
(e is a function) 189.72 353.67 T
4 9.5 Q
(current-example) 260.13 353.67 T
0 11 Q
( that r) 345.63 353.67 T
(eturns an initialized) 374.36 353.67 T
4 9.5 Q
(<Example*>) 126 339.67 T
0 11 Q
( str) 183 339.67 T
(uct. The following transactions illustrate what you get when) 198.26 339.67 T
(you r) 126 325.67 T
(ead the slots of the str) 151.65 325.67 T
(uctur) 257.7 325.67 T
(e it r) 283.59 325.67 T
(eturns:) 305.29 325.67 T
5 9 Q
(?) 153 305 T
4 F
( define variable example = current-example\050\051;) 158.4 305 T
(// Defined example) 153 294 T
5 F
(?) 153 275 T
4 F
( example.count;) 158.4 275 T
(4) 153 264 T
5 F
(?) 153 245 T
4 F
( instance?\050example.count, <integer>\051;) 158.4 245 T
(#t) 153 234 T
5 F
(?) 153 215 T
4 F
(example.statistic;) 163.8 215 T
(10.5) 153 204 T
5 F
(?) 153 185 T
4 F
( instance?\050example.statistic, <float>\051;) 158.4 185 T
(#t) 153 174 T
0 11 Q
-0.35 (The interactions above show that if we access str) 126 153.67 P
-0.35 (uctur) 358.75 153.67 P
-0.35 (e slots that wer) 384.63 153.67 P
-0.35 (e de\336ned) 456.89 153.67 P
(as being of one of C\325s fundamental numeric types, we get a Dylan number of) 126 139.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.4/DEST FmPD2
301 792/I4.1.886511 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "4" 8
%%Page: "5" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.2) 481.15 677.67 T
(Overview) 502.52 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(5) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(the equivalent value. The same thing happens if an imported C function) 108 640.67 T
(r) 108 626.67 T
(eturns a fundamental numeric type: a Dylan number with the same value) 112.15 626.67 T
(appears in Dylan. Similarly) 108 612.67 T
(, when setting slots in str) 239.87 612.67 T
(ucts expecting numbers) 360.67 612.67 T
(or passing objects out to C functions expecting numeric ar) 108 598.67 T
(guments, you) 389.49 598.67 T
-0.38 (should pr) 108 584.67 P
-0.38 (ovide a Dylan number) 154.76 584.67 P
-0.38 (, and the C-FFI will convert it automatically to) 262.14 584.67 P
(its C equivalent.) 108 570.67 T
5 9 Q
(?) 135 550 T
4 F
( example.data;) 140.4 550 T
({<C-char> pointer #xff5e00}) 135 539 T
5 F
(?) 135 520 T
4 F
( instance?\050example.data, <C-char*>\051;) 140.4 520 T
(#t) 135 509 T
5 F
(?) 135 490 T
4 F
( example.next;) 140.4 490 T
({<Example> pointer #xff5f00}) 135 479 T
5 F
(?) 135 460 T
4 F
( instance?\050example.next, <Example*>\051;) 140.4 460 T
(#t) 135 449 T
0 11 Q
-0.09 (The interactions above show that accessing str) 108 428.67 P
-0.09 (uctur) 331.9 428.67 P
-0.09 (e slots with a pointer type) 357.79 428.67 P
(r) 108 414.67 T
(esults in an instance of the Dylan class that designates that type. Again, the) 112.15 414.67 T
(same thing happens if an imported C function r) 108 400.67 T
(eturns a pointer type: an) 339.25 400.67 T
(instance of the corr) 108 386.67 T
(esponding designator class is cr) 200.47 386.67 T
(eated. Similarly) 354.48 386.67 T
(, when set-) 429.35 386.67 T
(ting slots in str) 108 372.67 T
(ucts expecting pointers or passing objects out to C functions) 179.79 372.67 T
(expecting pointer ar) 108 358.67 T
(guments, you should pr) 205.58 358.67 T
(ovide an instance of the Dylan) 322.1 358.67 T
(designator class for that pointer type, and the C-FFI will convert it automati-) 108 344.67 T
(cally to the raw C pointer value.) 108 330.67 T
(Later sections describe all the macr) 108 310.67 T
(os available for de\336ning C types and the) 277.69 310.67 T
(functions available for manipulating them.) 108 296.67 T
3 13 Q
(1.2.2  C functions in Dylan) 108 263.33 T
0 11 Q
-0.24 (When you use the interface de\336nition language to describe a C function to the) 108 243.67 P
(Dylan compiler) 108 229.67 T
(, the compiler generates a new Dylan function. This) 182.9 229.67 T
2 F
(wrapper) 435.92 229.67 T
(function) 108 215.67 T
0 F
( accepts Dylan ar) 145.49 215.67 T
(guments and r) 228.52 215.67 T
(eturns Dylan r) 299.17 215.67 T
(esults. It converts each) 369.45 215.67 T
-0.3 (of its ar) 108 201.67 P
-0.3 (guments fr) 143.66 201.67 P
-0.3 (om a Dylan object to a corr) 196.3 201.67 P
-0.3 (esponding C value befor) 324.81 201.67 P
-0.3 (e calling) 443.33 201.67 P
(the C function it wraps. The C-FFI converts any r) 108 187.67 T
(esults that the C function) 345.77 187.67 T
(r) 108 173.67 T
(eturns into Dylan objects befor) 112.15 173.67 T
(e r) 261.21 173.67 T
(eturning them to the caller) 273.37 173.67 T
(.) 401.73 173.67 T
(In or) 108 153.67 T
(der for Dylan to be able to call into C corr) 131.01 153.67 T
(ectly) 332.35 153.67 T
(, C functions must be) 354.18 153.67 T
(described to Dylan in the same detail a C header \336le would pr) 108 139.67 T
(ovide a calling) 409.39 139.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.5/DEST FmPD2
138 416/I4.1.1059975 FmPA
138 416/I4.1.1060033 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "5" 9
%%Page: "6" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(6) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(C pr) 126 640.67 T
(ogram. Speci\336cally) 147.31 640.67 T
(, for every function we must pr) 238.56 640.67 T
(ovide the C name and) 389.61 640.67 T
(the type of its ar) 126 626.67 T
(guments and r) 204.61 626.67 T
(esults. As with str) 275.26 626.67 T
(uct de\336nitions, these types) 362.37 626.67 T
(ar) 126 612.67 T
(e indicated by naming the designator classes corr) 135.65 612.67 T
(esponding to the C types) 374.48 612.67 T
(involved in the C-FFI description of the C function.) 126 598.67 T
(The following is an example of de\336ning and using wrapper functions. Sup-) 126 578.67 T
(pose we have the following) 126 564.67 T
4 9.5 Q
(extern) 262.36 564.67 T
0 11 Q
( C function declaration:) 296.56 564.67 T
4 9 Q
(extern double cos \050double angle\051;) 153 544 T
0 11 Q
(W) 126 523.67 T
(e describe C functions to Dylan using the C-FFI macr) 135.99 523.67 T
(o) 392.93 523.67 T
4 9.5 Q
(define C-function) 401.68 523.67 T
0 11 Q
(:) 498.58 523.67 T
4 9 Q
(define C-function C-cos) 153 503 T
(parameter angle) 163.8 492 T
(:: <C-double>;) 250.2 492 T
(result) 163.8 481 T
(cos) 217.8 481 T
(:: <C-double>;) 250.2 481 T
(c-name: "cos") 163.8 470 T
(end C-function;) 153 459 T
0 11 Q
(The name appearing immediately after the) 126 438.67 T
4 9.5 Q
(define C-function) 336.46 438.67 T
0 11 Q
( is the name) 433.36 438.67 T
(we want to give to the Dylan variable to which our wrapper function will be) 126 424.67 T
(bound. W) 126 410.67 T
(e call it) 173.33 410.67 T
4 9.5 Q
(C-cos) 210.43 410.67 T
0 11 Q
(. W) 238.93 410.67 T
(e also give the actual C name of the function we) 254.41 410.67 T
(want to wrap as the value of the keywor) 126 396.67 T
(d) 321.88 396.67 T
4 9.5 Q
(c-name:) 331.35 396.67 T
0 11 Q
(.) 371.25 396.67 T
(Once we have compiled the de\336nition \321 and assuming the compiled version) 126 376.67 T
(of the C library implementing) 126 362.67 T
4 9.5 Q
(cos) 273.95 362.67 T
0 11 Q
( has been linked in with the Dylan applica-) 291.05 362.67 T
(tion \321 we can call the wrapper function just like any other Dylan function:) 126 348.67 T
5 9 Q
(?) 153 328 T
4 F
( C-cos\0500.0\051;) 158.4 328 T
(1.0) 153 317 T
0 11 Q
(As we noted above, when values ar) 126 296.67 T
(e passed back and forth between Dylan) 298.35 296.67 T
(and C, the C-FFI performs automatic conversions. In this case, the type of the) 126 282.67 T
(parameter and the r) 126 268.67 T
(esult ar) 222.41 268.67 T
(e both fundamental numeric types which means) 258.17 268.67 T
-0.2 (that the C-FFI will accept and r) 126 254.67 P
-0.2 (eturn Dylan \337oats, converting to and fr) 275.29 254.67 P
-0.2 (om raw) 464.17 254.67 P
(C \337oats as necessary) 126 240.67 T
(.) 224.55 240.67 T
-0.11 (As well as making C functions available to Dylan code, the C-FFI allows us to) 126 220.67 P
(make Dylan functions available to call fr) 126 206.67 T
(om C code. W) 322.13 206.67 T
(e do this by de\336ning a) 389.52 206.67 T
2 F
-0.14 (C-callable) 126 192.67 P
0 F
-0.14 (wrapper function. A C-callable wrapper is a Dylan function that a C) 172.4 192.67 P
(pr) 126 178.67 T
(ogram can call. The C-callable wrapper has a C calling convention. When a) 136.76 178.67 T
(C pr) 126 164.67 T
(ogram calls a C-callable wrapper) 147.31 164.67 T
(, the C-FFI performs the necessary data) 306.28 164.67 T
(conversions and then invokes a Dylan function.) 126 150.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.6/DEST FmPD2
402 675/I4.1.1058920 FmPA
402 675/I4.1.1059909 FmPA
336 590/I4.1.1058924 FmPA
336 590/I4.1.1059911 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "6" 10
%%Page: "7" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.2) 481.15 677.67 T
(Overview) 502.52 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(7) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(Y) 108 640.67 T
(ou can pass C-callable wrappers into C code for use as callbacks. Y) 114.32 640.67 T
(ou can) 436.73 640.67 T
-0.07 (also give them names visible in C, so that C clients of Dylan code can call into) 108 626.67 P
(Dylan dir) 108 612.67 T
(ectly by invoking a named function.) 154.55 612.67 T
(The ar) 108 592.67 T
(gument and r) 138.81 592.67 T
(esult conversions performed by C-callable wrappers ar) 204.8 592.67 T
(e) 471.32 592.67 T
(just like those done within Dylan wrapper functions. The macr) 108 578.67 T
(o that de\336nes) 412.72 578.67 T
-0.09 (C-callable wrappers is called) 108 564.67 P
4 9.5 Q
-0.19 (define C-callable-wrapper) 250.1 564.67 P
0 11 Q
-0.09 ( and we describe it) 392.41 564.67 P
(in detail later) 108 550.67 T
(. For now) 171.67 550.67 T
(, consider the following simple example. Suppose we) 216.96 550.67 T
(have a C) 108 536.67 T
4 9.5 Q
(extern) 152.93 536.67 T
0 11 Q
( function declaration) 187.13 536.67 T
4 9.5 Q
(AddDouble) 290.78 536.67 T
0 11 Q
(:) 342.08 536.67 T
4 9 Q
(extern double AddDouble \050double x, double y\051;) 135 516 T
0 11 Q
(This function is intended to r) 108 495.67 T
(eturn the sum of two) 248.71 495.67 T
4 9.5 Q
(double) 353.4 495.67 T
0 11 Q
( values. Instead of) 387.6 495.67 T
(implementing the function in C, we can implement it in Dylan using Dylan\325s) 108 481.67 T
(generic function) 108 467.67 T
4 9.5 Q
(+) 189.76 467.67 T
0 11 Q
(. All we need to do is de\336ne a C-callable wrapper for) 195.46 467.67 T
4 9.5 Q
(+) 454.45 467.67 T
0 11 Q
(, as) 460.15 467.67 T
(follows:) 108 453.67 T
4 9 Q
(define C-callable-wrapper AddDoubleObject of \134+) 135 433 T
(parameter x :: <C-double>;) 145.8 422 T
(parameter y :: <C-double>;) 145.8 411 T
(c-name: "AddDouble";) 145.8 400 T
(end C-callable-wrapper;) 135 389 T
0 11 Q
(W) 108 368.67 T
(e can now call) 117.99 368.67 T
4 9.5 Q
(AddDouble) 189.41 368.67 T
0 11 Q
( in C. Our wrapper will be invoked, the C ar) 240.71 368.67 T
(gu-) 455.35 368.67 T
(ments will be converted and passed to Dylan\325s + generic function, and then) 108 354.67 T
(the r) 108 340.67 T
(esult of the computation will be converted and passed back to C:) 130.15 340.67 T
4 9 Q
({) 135 320 T
(extern double AddDouble \050double x, double y\051;) 145.8 309 T
(double result;) 145.8 298 T
(result = AddDouble\0501.0, 2.0\051;) 145.8 276 T
(}) 135 265 T
0 11 Q
(The C-FFI binds the Dylan variable) 108 244.67 T
4 9.5 Q
(AddDoubleObject) 281.69 244.67 T
0 11 Q
( to a Dylan object r) 367.19 244.67 T
(epr) 458.31 244.67 T
(e-) 474.34 244.67 T
(senting the function pointer of the C-callable wrapper) 108 230.67 T
(. This r) 368.61 230.67 T
(efer) 402.02 230.67 T
(ence allows) 420.37 230.67 T
(the C-callable wrapper to be passed to a C function expecting a callback ar) 108 216.67 T
(gu-) 468.73 216.67 T
(ment.) 108 202.67 T
3 13 Q
(1.2.3  C v) 108 169.33 T
(ariab) 154.03 169.33 T
(les in Dylan) 179.42 169.33 T
0 11 Q
-0.14 (When you use the interface de\336nition language to describe a C variable to the) 108 149.67 P
-0.14 (Dylan compiler) 108 135.67 P
-0.14 (, the compiler generates new Dylan getter and setter functions) 182.76 135.67 P
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.7/DEST FmPD2
250 716/I4.1.1058930 FmPA
250 716/I4.1.1059905 FmPA
190 619/I4.1.1058936 FmPA
190 619/I4.1.1059897 FmPA
138 322/I4.1.1059977 FmPA
138 322/I4.1.1060041 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "7" 11
%%Page: "8" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(8) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(for r) 126 640.67 T
(eading and setting the variable\325s value fr) 146.91 640.67 T
(om Dylan. If the variable is con-) 344.99 640.67 T
(stant, it de\336nes a getter function only) 126 626.67 T
(.) 305.71 626.67 T
(The getter function converts the C value to a Dylan value befor) 126 606.67 T
(e r) 431.67 606.67 T
(eturning it) 443.83 606.67 T
(accor) 126 592.67 T
(ding to the variable\325s declar) 151.42 592.67 T
(ed type. Similarly) 286.47 592.67 T
(, the setter function con-) 371.32 592.67 T
-0.4 (verts its ar) 126 578.67 P
-0.4 (gument, as Dylan value, into a C value befor) 175.87 578.67 P
-0.4 (e setting the C variable.) 389.05 578.67 P
(These conversions happen accor) 126 564.67 T
(ding to the same r) 282.87 564.67 T
(ules that apply to other C-) 370.56 564.67 T
(Dylan world transition points, such as ar) 126 550.67 T
(gument passing or str) 324.19 550.67 T
(uctur) 430.17 550.67 T
(e slot) 456.05 550.67 T
(access.) 126 536.67 T
-0.18 (In or) 126 516.67 P
-0.18 (der for Dylan to be able to access a C variable corr) 148.83 516.67 P
-0.18 (ectly) 389.65 516.67 P
-0.18 (, we must describe) 411.49 516.67 P
(the variable to Dylan in the same detail that a C header \336le would give to a C) 126 502.67 T
-0.31 (pr) 126 488.67 P
-0.31 (ogram that uses it. Speci\336cally) 136.76 488.67 P
-0.31 (, we must pr) 282.12 488.67 P
-0.31 (ovide the C name and the type of) 341.99 488.67 P
(the variable. As with str) 126 474.67 T
(uct and function de\336nitions, we indicate C types by) 242.41 474.67 T
(naming the appr) 126 460.67 T
(opriate Dylan designator classes.) 206.96 460.67 T
(Her) 126 440.67 T
(e is an example of de\336ning and using C variables. Suppose we have the) 144.57 440.67 T
(following) 126 426.67 T
4 9.5 Q
(extern) 175.72 426.67 T
0 11 Q
( C variable declaration:) 209.92 426.67 T
4 9 Q
(extern double mean;) 153 406 T
0 11 Q
(W) 126 385.67 T
(e describe C variables to Dylan using the C-FFI macr) 135.99 385.67 T
(o) 391.46 385.67 T
4 9.5 Q
(define C-variable) 400.22 385.67 T
0 11 Q
(:) 497.12 385.67 T
4 9 Q
(define C-variable C-mean :: <C-double>) 153 365 T
(  c-name: "mean";) 153 354 T
(end C-variable;) 153 343 T
0 11 Q
-0.07 (The name immediately after the) 126 322.67 P
4 9.5 Q
-0.14 (define C-variable) 283.81 322.67 P
0 11 Q
-0.07 ( is the name of the Dylan) 380.57 322.67 P
(variable to which the getter for our C variable will be bound. In this case it is) 126 308.67 T
4 9.5 Q
(C-mean) 126 294.67 T
0 11 Q
(.) 160.2 294.67 T
-0.3 (W) 126 274.67 P
-0.3 (e give the C name of the variable as the value of the keywor) 135.99 274.67 P
-0.3 (d) 422.08 274.67 P
4 9.5 Q
-0.62 (c-name:) 431.25 274.67 P
0 11 Q
-0.3 (. Once) 471.15 274.67 P
-0.18 (we have compiled the de\336nition \321 and assuming the compiled version of the) 126 260.67 P
(C library de\336ning) 126 246.67 T
4 9.5 Q
(mean) 215.61 246.67 T
0 11 Q
( has been linked in with the Dylan application \321 we) 238.41 246.67 T
(can call the getter function just like any other Dylan function:) 126 232.67 T
4 9 Q
(? C-mean\050\051;) 153 212 T
(1.5) 153 201 T
0 11 Q
(By default, the C-FFI also de\336nes a setter function for the variable. The setter) 126 180.67 T
(name uses Dylan\325s convention of appending \322-setter\323 to the getter name.) 126 166.67 T
4 9 Q
(? C-mean\050\051 := 0.0;) 153 146 T
(0.0) 153 135 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.8/DEST FmPD2
400 537/I4.1.1058943 FmPA
400 537/I4.1.1059939 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "8" 12
%%Page: "9" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.3) 469.54 677.67 T
(Terminology) 490.91 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(9) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(? C-mean\050\051;) 135 642 T
(0.0) 135 631 T
0 11 Q
(As described above, when values ar) 108 610.67 T
(e passed back and forth between Dylan) 282.33 610.67 T
(and C, the C-FFI performs automatic conversions. In this case, the type of the) 108 596.67 T
(variable is a fundamental numeric type which means that the C-FFI accepts) 108 582.67 T
(and r) 108 568.67 T
(eturns Dylan \337oats, converting to and fr) 133.52 568.67 T
(om raw C \337oats as necessary) 328.3 568.67 T
(.) 467.08 568.67 T
1 F
(Note:) 108 548.67 T
0 F
( W) 135.19 548.67 T
(e could achieve the same r) 147.93 548.67 T
(esult by using the) 275.68 548.67 T
4 9.5 Q
(define C-address) 364.51 548.67 T
0 11 Q
(macr) 108 534.67 T
(o, which de\336nes a constant that is a pointer to the storage allocated for) 132.24 534.67 T
(the C variable.) 108 520.67 T
3 16 Q
(1.3  T) 108 485.33 T
(erminology) 140.78 485.33 T
108 629/G4.886638 FmPA
0 11 Q
-0.22 (For the r) 108 464.67 P
-0.22 (est of this chapter) 148.93 464.67 P
-0.22 (, we adopt the following terminology) 233.34 464.67 P
-0.22 (, hopefully not) 412.57 464.67 P
(too inconsistent with common C terminology:) 108 450.67 T
2 F
(Base type) 135 430.67 T
0 F
-0.3 (Basic units of data storage \050C\325s variously sized integers,) 216 430.67 P
(characters, and \337oating point numbers\051 and aggr) 216 416.67 T
(egate) 453.83 416.67 T
(r) 216 402.67 T
(ecor) 220.15 402.67 T
(ds \050str) 240.45 402.67 T
(ucts and unions\051.) 270.76 402.67 T
2 F
(Derived type) 135 382.67 T
0 F
(.) 192.15 382.67 T
(A type based on some other type \050C\325s pointer) 216 382.67 T
(, array) 435.42 382.67 T
(,) 465.5 382.67 T
(and function types\051.) 216 368.67 T
2 F
(Fundamental numeric type) 135 342.67 T
0 F
(.) 255.62 342.67 T
-0.21 (One of C\325s integer or \337oating point types. This does not) 216 324.67 P
(include pointer types, str) 216 310.67 T
(uctur) 337.48 310.67 T
(e types, or union types.) 363.37 310.67 T
3 16 Q
(1.4  Basic options in C-FFI macr) 108 275.33 T
(os) 306.82 275.33 T
108 419/G4.886644 FmPA
0 11 Q
(The de\336ning macr) 108 254.67 T
(os of the C-FFI shar) 196.92 254.67 T
(e a consistent cor) 291.63 254.67 T
(e set of options which) 374.35 254.67 T
(ar) 108 240.67 T
(e worth describing her) 117.65 240.67 T
(e:) 227.38 240.67 T
(\245) 117 220.67 T
(A) 135 220.67 T
2 F
(c-name) 146.31 220.67 T
0 F
( ar) 178.29 220.67 T
(gument. Every de\336ning form allows you to specify the cor-) 190.68 220.67 T
(r) 135 206.67 T
(esponding C entity thr) 139.15 206.67 T
(ough the keywor) 248.88 206.67 T
(d) 331.62 206.67 T
4 9.5 Q
(c-name:) 341.1 206.67 T
0 11 Q
(. It is optional in) 381 206.67 T
(some forms but r) 135 192.67 T
(equir) 217.74 192.67 T
(ed in others. Y) 243.15 192.67 T
(ou can de\336ne types that have no) 312.34 192.67 T
(named opposite number in C, and the) 135 178.67 T
2 F
(c-name) 322.29 178.67 T
0 F
( option is always optional) 354.26 178.67 T
(in type de\336nitions. On the other hand, you must always name an) 135 164.67 T
(imported C function or variable so that Dylan knows the corr) 135 150.67 T
(ect name) 432.67 150.67 T
(fr) 135 136.67 T
(om the compiled C library to link with.) 142.81 136.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.9/DEST FmPD2
365 700/I4.1.1058950 FmPA
365 700/I4.1.1059899 FmPA
134 640/I4.1.1059979 FmPA
134 640/I4.1.1060155 FmPA
134 430/I4.1.1059981 FmPA
134 430/I4.1.1060029 FmPA
134 430/I4.1.1060027 FmPA
134 430/I4.1.1060025 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "9" 13
%%Page: "10" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(10) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(In general, any C entity you can declar) 153 640.67 T
(e in C using) 340.45 640.67 T
4 9.5 Q
(extern) 401.14 640.67 T
0 11 Q
( can only be) 435.34 640.67 T
(found by the C-FFI if you pass a) 153 626.67 T
2 F
(c-name) 311.84 626.67 T
0 F
( ar) 343.82 626.67 T
(gument to the corr) 356.21 626.67 T
(esponding) 446.41 626.67 T
(C-FFI de\336nition.) 153 612.67 T
(\245) 135 592.67 T
(A) 153 592.67 T
2 F
(pointer-type-name) 164.31 592.67 T
0 F
( ar) 246.19 592.67 T
(gument. All the type-de\336ning forms allow you to) 258.59 592.67 T
(name the type for a pointer to the type being de\336ned. This is normally) 153 578.67 T
(speci\336ed thr) 153 564.67 T
(oughout the) 213.16 564.67 T
4 9.5 Q
(pointer-type-name:) 275.3 564.67 T
0 11 Q
( keywor) 377.9 564.67 T
(d option.) 417.48 564.67 T
3 16 Q
(1.5  Designator c) 126 529.33 T
(lasses) 230.77 529.33 T
126 673/G4.886650 FmPA
0 11 Q
-0.03 (As Section 1.2 explained, the C-FFI de\336nes some Dylan classes to designate C) 126 508.67 P
-0.41 (types and to describe how they ar) 126 494.67 P
-0.41 (e passed to and fr) 287.55 494.67 P
-0.41 (om Dylan. These) 371.64 494.67 P
2 F
-0.41 (designator) 455.22 494.67 P
(classes) 126 480.67 T
0 F
( carry with them static information about the C type they designate.) 155.54 480.67 T
-0.4 (The C-FFI library pr) 126 460.67 P
-0.4 (ovides an initial set of designator classes corr) 222.4 460.67 P
-0.4 (esponding to) 438.32 460.67 P
(C\325s fundamental types, as well as macr) 126 446.67 T
(os for generating designator classes) 315.02 446.67 T
(corr) 126 432.67 T
(esponding to C\325s pointer types and for extending the translation between) 145.38 432.67 T
(C data and Dylan objects.) 126 418.67 T
(Designator classes that corr) 126 398.67 T
(espond to fundamental numeric types ar) 259.15 398.67 T
(e not) 457.1 398.67 T
(instantiable. When you pass a numeric value to Dylan fr) 126 384.67 T
(om C, the C-FFI sim-) 399.26 384.67 T
-0.43 (ply generates a Dylan number with the same value. Similarly) 126 370.67 P
-0.43 (, a Dylan number) 418.29 370.67 P
(passed to C is converted to a C number of the appr) 126 356.67 T
(opriate type and value.) 372.76 356.67 T
-0 (Each of the fundamental designator classes indicate a conversion to or fr) 126 336.67 P
-0 (om a) 477.29 336.67 P
(unique Dylan class. The conversions that take place ar) 126 322.67 T
(e described in detail in) 388.82 322.67 T
(the documentation for each designator class.) 126 308.67 T
(The main r) 126 288.67 T
(easons for this design ar) 178.88 288.67 T
(e incr) 296.27 288.67 T
(eased ef) 322.92 288.67 T
(\336ciency) 361.83 288.67 T
(, simpli\336ed imple-) 398.02 288.67 T
(mentation, and added convenience when working with numeric values. The) 126 274.67 T
(designator classes for the numeric types could have been made instantiable) 126 260.67 T
(and placed beneath the appr) 126 246.67 T
(opriate number pr) 264.45 246.67 T
(otocol classes in Dylan, but) 353.67 246.67 T
(these extra r) 126 232.67 T
(epr) 185.21 232.67 T
(esentations in such a fundamental ar) 201.24 232.67 T
(ea could cause pr) 379.46 232.67 T
(oblems) 463.63 232.67 T
-0.31 (for Dylan compilers. In addition, to make these instantiable designator classes) 126 218.67 P
-0.11 (convenient to work with, the C-FFI would also have to de\336ne methods on the) 126 204.67 P
-0.23 (standar) 126 190.67 P
-0.23 (d arithmetic and comparison operators. It is simpler to r) 162.52 190.67 P
-0.23 (epr) 432.55 190.67 P
-0.23 (esent these) 448.58 190.67 P
(fundamental types with existing Dylan objects.) 126 176.67 T
-0.11 (However) 126 156.67 P
-0.11 (, the designator classes that corr) 170.62 156.67 P
-0.11 (espond to pointer types) 324.93 156.67 P
2 F
-0.11 (ar) 442.41 156.67 P
-0.11 (e) 451.38 156.67 P
0 F
-0.11 ( instantia-) 455.66 156.67 P
(ble. When you pass a pointer fr) 126 142.67 T
(om C to Dylan, the C-FFI constr) 277.8 142.67 T
(ucts an) 432.35 142.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.10/DEST FmPD2
152 684/I4.1.1059983 FmPA
152 684/I4.1.1060085 FmPA
152 684/I4.1.886649 FmPA
152 684/M4.9.20449.1Heading.15.Designator.classes FmPA
152 684/I4.1.978806 FmPA
[/Rect[142 505 194 516]/Border[0 0 0]/Page 5/View[/XYZ null 134 402 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "10" 14
%%Page: "11" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(1) 531.33 100 T
(1) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(instance of the appr) 108 640.67 T
(opriate designator class that contains the raw addr) 203.95 640.67 T
(ess. A) 449.53 640.67 T
-0.28 (wrapped pointer like this can be passed out to some C code that is expecting a) 108 626.67 P
(compatible pointer \321 the C-FFI extracts the raw addr) 108 612.67 T
(ess befor) 368.01 612.67 T
(e handing it to) 410.52 612.67 T
(C code. The documentation for the abstract class) 108 598.67 T
4 9.5 Q
(<C-pointer>) 346.08 598.67 T
0 11 Q
( describes the) 408.78 598.67 T
(compatibility r) 108 584.67 T
(ules for pointer types.) 179.9 584.67 T
(This featur) 108 564.67 T
(e of pointer designator classes allows Dylan code to be typed to a) 160.56 564.67 T
(speci\336c kind of pointer) 108 550.67 T
(. For example, you can de\336ne methods that specialize) 219.13 550.67 T
(on dif) 108 536.67 T
(fer) 136.54 536.67 T
(ent kinds of pointer on the same generic function.) 149.62 536.67 T
3 13 Q
(1.5.1  Designator type pr) 108 503.33 T
(oper) 231.63 503.33 T
(ties) 254.94 503.33 T
0 11 Q
(T) 108 483.67 T
(o understand how designator classes work, it is useful to know about their) 113.73 483.67 T
-0.05 (pr) 108 469.67 P
-0.05 (operties. A few of these pr) 118.76 469.67 P
-0.05 (operties ar) 246.21 469.67 P
-0.05 (e accessible pr) 297.51 469.67 P
-0.05 (ogrammatically) 366.54 469.67 P
-0.05 (, but oth-) 441.9 469.67 P
(ers ar) 108 455.67 T
(e implicit and only r) 134.68 455.67 T
(eally exist in the compiler) 233.04 455.67 T
(. Some of the pr) 357 455.67 T
(operties) 433.19 455.67 T
(may be empty) 108 441.67 T
(.) 176.26 441.67 T
(A) 108 421.67 T
2 F
(r) 119.31 421.67 T
(efer) 123.39 421.67 T
(enced type) 139.09 421.67 T
0 F
( is the designator type to which a pointer r) 185.43 421.67 T
(efers. A designa-) 391.42 421.67 T
(tor) 108 407.67 T
(\325s) 122.75 407.67 T
2 F
(r) 133.22 407.67 T
(efer) 137.3 407.67 T
(enced-type) 153 407.67 T
0 F
( only has a value for subtypes of) 200.26 407.67 T
4 9.5 Q
(<C-statically-typed-) 360.17 407.67 T
(pointer>) 108 393.67 T
0 11 Q
(. Pr) 153.6 393.67 T
(ograms can access the r) 169.89 393.67 T
(efer) 283.29 393.67 T
(enced type thr) 301.64 393.67 T
(ough the function) 371.4 393.67 T
4 9.5 Q
(referenced-type) 108 379.67 T
0 11 Q
(.) 193.5 379.67 T
(A designator class\325s) 108 359.67 T
2 F
(pointer-type) 207.25 359.67 T
0 F
( only has a value for each of those types that) 261.64 359.67 T
(has a pointer designator type that r) 108 345.67 T
(efers to it. Most of the constr) 278.6 345.67 T
(ucts that) 416.83 345.67 T
(de\336ne a new designator type also de\336ne a pointer) 108 331.67 T
(-type for that designator) 350.46 331.67 T
(.) 468.04 331.67 T
(Many of the macr) 108 317.67 T
(os that de\336ne designators accept a) 193.84 317.67 T
4 9.5 Q
(pointer-type-name:) 363.11 317.67 T
0 11 Q
-0.08 (keywor) 108 303.67 P
-0.08 (d to bind the) 144.83 303.67 P
2 F
-0.08 (pointer-type) 209.48 303.67 P
0 F
-0.08 ( of the de\336ned designator to a given variable.) 263.86 303.67 P
(The pointer) 108 289.67 T
(-type is not pr) 164.39 289.67 T
(ogrammatically available because it may not have) 232.5 289.67 T
-0.13 (been de\336ned. Y) 108 275.67 P
-0.13 (ou can assur) 182.37 275.67 P
-0.13 (e that ther) 242.64 275.67 P
-0.13 (e is a pointer) 291.62 275.67 P
-0.13 (-type for a particular desig-) 353.33 275.67 P
(nator by using the macr) 108 261.67 T
(o) 223.55 261.67 T
4 9.5 Q
(define c-pointer-type) 232.31 261.67 T
0 11 Q
(.) 352.01 261.67 T
(A designator class\325s) 108 241.67 T
2 F
(import type) 207.25 241.67 T
0 F
( and) 258.89 241.67 T
2 F
(export type) 283.01 241.67 T
0 F
( ar) 332.81 241.67 T
(e instantiable Dylan types) 345.2 241.67 T
(that describe the Dylan instantiation of a designator class when it is used in a) 108 227.67 T
(position that) 108 213.67 T
2 F
(imports) 172.25 213.67 T
0 F
( values fr) 206.47 213.67 T
(om C, or) 251.26 213.67 T
2 F
(exports) 296.13 213.67 T
0 F
( values to C.) 328.52 213.67 T
(Nearly all of the C-FFI\325s designators have import and export types that ar) 108 193.67 T
(e) 464.93 193.67 T
-0.31 (equivalent. Some, such as) 108 179.67 P
4 9.5 Q
-0.64 (<C-string>) 234.22 179.67 P
0 11 Q
-0.31 (, have dif) 291.22 179.67 P
-0.31 (fer) 335.63 179.67 P
-0.31 (ent import and export types) 348.7 179.67 P
(because it is possible to pass a pointer to a Dylan object to C dir) 108 165.67 T
(ectly without) 415.79 165.67 T
(cr) 108 151.67 T
(eating a C pointer object, or copying the underlying data, but when import-) 117.03 151.67 T
(ing a string fr) 108 137.67 T
(om C it is not practical to copy the contents and cr) 173.59 137.67 T
(eate a Dylan) 416.64 137.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.11/DEST FmPD2
346 750/I4.1.1059593 FmPA
346 750/I4.1.1059591 FmPA
138 656/I4.1.1059985 FmPA
138 656/I4.1.1060089 FmPA
138 656/I4.1.1060087 FmPA
138 656/M4.9.39469.2Heading.151.Designator.type.properties FmPA
138 656/I4.1.978802 FmPA
119 573/I4.1.963288 FmPA
119 573/I4.1.1059961 FmPA
360 559/I4.1.1059713 FmPA
360 559/I4.1.1059711 FmPA
207 511/I4.1.886661 FmPA
207 511/I4.1.1059951 FmPA
232 413/I4.1.1058966 FmPA
232 413/I4.1.1059923 FmPA
207 393/I4.1.886663 FmPA
207 393/I4.1.1059949 FmPA
283 393/I4.1.886664 FmPA
283 393/I4.1.1059945 FmPA
234 331/I4.1.1059725 FmPA
234 331/I4.1.1059723 FmPA
108 573/I4.1.1086963 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "11" 15
%%Page: "12" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(12) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(string. By default, the import and export types for any subtype of) 126 640.67 T
4 9.5 Q
(<C-) 445.97 640.67 T
-0.01 (pointer>) 126 626.67 P
0 11 Q
-0.01 ( ar) 171.6 626.67 P
-0.01 (e the class itself. Y) 183.99 626.67 P
-0.01 (ou can override this by de\336ning a new subclass) 271.06 626.67 P
(with the macr) 126 612.67 T
(o) 193.36 612.67 T
4 9.5 Q
(define C-mapped-subtype.) 202.12 612.67 T
0 11 Q
(Y) 126 592.67 T
(ou can de\336ne a designator) 132.32 592.67 T
(\325s) 261.19 592.67 T
2 F
(import-function) 271.66 592.67 T
0 F
( and) 342.76 592.67 T
2 F
(export-function) 366.88 592.67 T
0 F
( by using the) 436.13 592.67 T
(macr) 126 578.67 T
(o) 150.24 578.67 T
4 9.5 Q
(define) 159 578.67 T
(c-mapped-subtype) 195.95 578.67 T
0 11 Q
(. These functions ar) 287.15 578.67 T
(e mer) 381.58 578.67 T
(ely the pr) 408.73 578.67 T
(ocedural) 454.83 578.67 T
(speci\336cations for translating the C data to Dylan and back. The) 126 564.67 T
2 F
(import) 434.35 564.67 T
0 F
( and) 464.29 564.67 T
2 F
(export) 126 550.67 T
0 F
( functions ar) 154.1 550.67 T
(e inherited when you de\336ne a subclass for a designator) 214.69 550.67 T
(.) 481.73 550.67 T
3 13 Q
(1.5.2  Designator c) 126 517.33 T
(lass basics) 220.02 517.33 T
3 14 Q
(<C-v) 126 469.67 T
(alue>) 150.99 469.67 T
2 13 Q
(Sealed abstract class) 397.86 470.33 T
6 12 Q
(Descr) 135 445 T
(iption) 160.84 445 T
0 11 Q
(The abstract super) 207 445 T
(class of all designator classes. It is a sub-) 296.39 445 T
(class of) 207 431 T
4 9.5 Q
(<object>) 245.08 431 T
0 11 Q
(. It has neither an) 290.68 431 T
2 F
(export-type) 377.42 431 T
0 F
( nor an) 428.13 431 T
2 F
(import-) 465.03 431 T
(type) 207 417 T
0 F
(, so you cannot use it when designating a transition) 225.94 417 T
(between C and Dylan.) 207 403 T
3 14 Q
(<C-v) 126 355 T
(oid>) 150.86 355 T
2 13 Q
(Sealed abstract class) 397.86 355.67 T
6 12 Q
(Descr) 135 330.33 T
(iption) 160.84 330.33 T
0 11 Q
(The abstract super) 207 330.33 T
(class of all designator classes. It is a sub-) 296.39 330.33 T
-0.03 (class of) 207 316.33 P
4 9.5 Q
-0.07 (<C-value>) 245.01 316.33 P
0 11 Q
-0.03 (. It has neither an) 296.31 316.33 P
2 F
-0.03 (export-type) 382.88 316.33 P
0 F
-0.03 ( nor an) 433.59 316.33 P
2 F
-0.03 (import-) 470.39 316.33 P
(type) 207 302.33 T
0 F
(, so you cannot use it when designating a transition) 225.94 302.33 T
(between C and Dylan.) 207 288.33 T
(This class is only useful in that it is the) 207 268.33 T
2 F
(r) 396.66 268.33 T
(efer) 400.74 268.33 T
(enced-type) 416.44 268.33 T
0 F
( for) 463.7 268.33 T
4 9.5 Q
(<C-) 483.21 268.33 T
(void*>.) 207 254.33 T
3 14 Q
(siz) 126 206.33 T
(e-of) 141.43 206.33 T
2 13 Q
(Function) 456.08 207 T
6 12 Q
(Summar) 135 181.67 T
(y) 172.48 181.67 T
0 11 Q
(T) 207 181.67 T
(akes a designator class and r) 212.73 181.67 T
(eturns the size of the C type) 351.02 181.67 T
(that the class designates.) 207 167.67 T
6 12 Q
(Signature) 135 140 T
4 9 Q
(size-of) 207 140 T
7 F
(designator-class) 250.2 140 T
4 F
( =>) 316.2 140 T
7 F
(size) 337.8 140 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.12/DEST FmPD2
446 792/I4.1.1059605 FmPA
446 792/I4.1.1059603 FmPA
202 764/I4.1.1058976 FmPA
202 764/I4.1.1059919 FmPA
272 744/I4.1.886666 FmPA
272 744/I4.1.1059947 FmPA
367 744/I4.1.963412 FmPA
367 744/I4.1.1059943 FmPA
156 670/I4.1.1059987 FmPA
156 670/I4.1.886669 FmPA
126 623/I4.1.1058586 FmPA
126 623/I4.1.1058584 FmPA
126 508/I4.1.1058592 FmPA
126 508/I4.1.1058590 FmPA
126 360/I4.1.1058348 FmPA
126 360/I4.1.1058722 FmPA
126 360/M4.9.31007.Inlineinterface.sizeof FmPA
126 360/I4.1.1057620 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "12" 16
%%Page: "13" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(13) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
6 12 Q
0 X
(Arguments) 117 640 T
2 11 Q
(designator-class) 189 640 T
0 F
(A subclass of) 270 640 T
4 9.5 Q
(<C-value>) 336.77 640 T
0 11 Q
(.) 388.07 640 T
6 12 Q
(V) 117 612 T
(alues) 122.89 612 T
2 11 Q
(size) 189 612 T
0 F
(An instance of) 270 612 T
4 9.5 Q
(<integer>) 342.79 612 T
0 11 Q
(.) 394.09 612 T
6 12 Q
(Descr) 117 584 T
(iption) 142.84 584 T
0 11 Q
(T) 189 584 T
(akes a designator class and r) 194.73 584 T
(eturns the size of the C type) 333.02 584 T
(that the class designates.) 189 570 T
(The) 189 550 T
4 9.5 Q
(size-of) 210.16 550 T
0 11 Q
( function can be applied to any designator class.) 250.06 550 T
(However) 189 536 T
(, if it is applied to) 233.62 536 T
4 9.5 Q
(<C-void>) 321.09 536 T
0 11 Q
(,) 366.69 536 T
4 9.5 Q
(<C-value>) 372.19 536 T
0 11 Q
(, or) 423.49 536 T
4 9.5 Q
(<C-) 442.09 536 T
(struct>) 189 522 T
0 11 Q
(, it r) 228.9 522 T
(eturns zer) 248.08 522 T
(o. It corr) 296.65 522 T
(esponds to C\325s) 337.58 522 T
4 9.5 Q
(sizeof) 411.28 522 T
0 11 Q
( opera-) 445.48 522 T
(tor and r) 189 508 T
(eturns an integer) 231.21 508 T
(,) 312.88 508 T
2 F
(size) 318.38 508 T
0 F
(, in the same units as) 334.88 508 T
4 9.5 Q
(sizeof) 438.79 508 T
0 11 Q
-0.48 (does on the tar) 189 494 P
-0.48 (get platform. It can be useful when allocating a) 259.37 494 P
(C object whose declar) 189 480 T
(ed size is not accurate and has to be) 294.69 480 T
(adjusted manually) 189 466 T
(.) 278.46 466 T
3 14 Q
(alignment-of) 108 418 T
2 13 Q
(Function) 438.08 418.67 T
6 12 Q
(Summar) 117 393.33 T
(y) 154.48 393.33 T
0 11 Q
(T) 189 393.33 T
(akes a designator class and r) 194.73 393.33 T
(eturns the alignment of the C) 333.02 393.33 T
(type that the class designates.) 189 379.33 T
6 12 Q
(Signature) 117 351.67 T
4 9 Q
(alignment-of) 189 351.67 T
7 F
(designator-class) 259.2 351.67 T
4 F
( =>) 325.2 351.67 T
7 F
(alignment) 346.8 351.67 T
6 12 Q
(Arguments) 117 324.67 T
2 11 Q
(designator-class) 189 324.67 T
0 F
(A subclass of) 270 324.67 T
4 9.5 Q
(<C-value>) 336.77 324.67 T
0 11 Q
(.) 388.07 324.67 T
6 12 Q
(V) 117 296.67 T
(alues) 122.89 296.67 T
2 11 Q
(alignment) 189 296.67 T
0 F
(An instance of) 270 296.67 T
4 9.5 Q
(<integer>) 342.79 296.67 T
0 11 Q
(.) 394.09 296.67 T
6 12 Q
(Descr) 117 268.67 T
(iption) 142.84 268.67 T
0 11 Q
(T) 189 268.67 T
(akes a designator class and r) 194.73 268.67 T
(eturns the alignment of the C) 333.02 268.67 T
(type that the class designates. The) 189 254.67 T
4 9.5 Q
(alignment-of) 356.88 254.67 T
0 11 Q
( function) 425.28 254.67 T
(can be applied to any designator class. It r) 189 240.67 T
(eturns the align-) 392.77 240.67 T
(ment as an integer) 189 226.67 T
(, in the same units as) 277.66 226.67 T
4 9.5 Q
(size-of) 381.57 226.67 T
0 11 Q
( does.) 421.47 226.67 T
3 13 Q
(1.5.3  Fundamental n) 108 193.33 T
(umeric type designator c) 213.37 193.33 T
(lasses) 339.36 193.33 T
0 11 Q
(This section describes the pr) 108 173.67 T
(e-de\336ned designator classes for fundamental C) 245.14 173.67 T
(numeric types. On page 10 we saw that none of these designator types ar) 108 159.67 T
(e) 462.23 159.67 T
-0.4 (instantiable: a number on one side of the interface is converted to a number on) 108 145.67 P
(the other side with the same value.) 108 131.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.13/DEST FmPD2
108 571/I4.1.1058350 FmPA
108 571/I4.1.1058612 FmPA
138 346/I4.1.1059989 FmPA
138 346/I4.1.1060099 FmPA
138 346/I4.1.1060097 FmPA
138 346/I4.1.1060095 FmPA
138 346/I4.1.932558 FmPA
117 736/I4.1.1086972 FmPA
117 421/I4.1.1086984 FmPA
[/Rect[382 223 421 234]/Border[0 0 0]/Page 16/View[/XYZ null 126 360 FmDC exch pop null]/LNK FmPD
[/Rect[227 156 238 167]/Border[0 0 0]/Page 14/View[/XYZ null 152 684 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "13" 17
%%Page: "14" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(14) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(Ther) 126 640.67 T
(e ar) 148.56 640.67 T
(e some additional details to note about integer r) 166.23 640.67 T
(epr) 398.33 640.67 T
(esentations.) 414.35 640.67 T
(Because Dylan\325s integer r) 126 626.67 T
(epr) 248.98 626.67 T
(esentations do not match C\325s exactly) 265.01 626.67 T
(, for each of) 440.64 626.67 T
-0.08 (the C integer types ther) 126 612.67 P
-0.08 (e ar) 239.56 612.67 P
-0.08 (e thr) 257.15 612.67 P
-0.08 (ee designator classes that can be used to trans-) 279.22 612.67 P
(late Dylan r) 126 598.67 T
(epr) 182.94 598.67 T
(esentations to that C integer) 198.96 598.67 T
(. The categories ar) 334.35 598.67 T
(e) 422.25 598.67 T
2 F
(plain) 430.27 598.67 T
0 F
(,) 452.89 598.67 T
2 F
(unsafe) 458.39 598.67 T
0 F
(,) 487.12 598.67 T
(and) 126 584.67 T
2 F
(raw) 147.37 584.67 T
0 F
( integers.) 164.48 584.67 T
2 F
(Plain) 126 564.67 T
0 F
( integer designators \321 of which the class) 149.84 564.67 T
4 9.5 Q
(<C-unsigned-short>) 351.4 564.67 T
0 11 Q
( is an) 454 564.67 T
-0.02 (example \321 translate C integer values to instances of) 126 550.67 P
4 9.5 Q
-0.03 (<integer>) 382.2 550.67 P
0 11 Q
-0.02 (. If the integer) 433.5 550.67 P
-0.28 (being translated is too big for the destination, the C-FFI signals an err) 126 536.67 P
-0.28 (or) 458.95 536.67 P
-0.28 (. Ther) 468.48 536.67 P
-0.28 (e) 496.26 536.67 P
(ar) 126 522.67 T
(e two ways this can happen.) 135.65 522.67 T
(\245) 135 502.67 T
(On export, the C-FFI signals an err) 153 502.67 T
(or if the Dylan value has mor) 320.86 502.67 T
(e signif-) 462.82 502.67 T
(icant bits than the C integer) 153 488.67 T
(.) 286.18 488.67 T
(This can happen if, for example, the designator is) 153 470.67 T
4 9.5 Q
(<C-unsigned-short>) 394.89 470.67 T
0 11 Q
(,) 497.49 470.67 T
-0.24 (and the Dylan value is negative, or if) 153 456.67 P
4 9.5 Q
-0.5 (unsigned) 332.88 456.67 P
-0.5 (short) 380.99 456.67 P
0 11 Q
-0.24 ( on that platform is) 409.49 456.67 P
-0.18 (16 bits wide, but the Dylan integer has mor) 153 442.67 P
-0.18 (e than 16 signi\336cant bits. The) 361.12 442.67 P
-0.04 (check will be omitted if the compiler can determine that no Dylan value) 153 428.67 P
(outside the safe range can r) 153 414.67 T
(each ther) 285.75 414.67 T
(e. This can be done using a limited) 329.96 414.67 T
(integer type.) 153 400.67 T
(\245) 135 380.67 T
(On import into Dylan, the C-FFI signals an err) 153 380.67 T
(or if it cannot r) 377.26 380.67 T
(epr) 449.19 380.67 T
(esent) 465.21 380.67 T
(the C value using a Dylan) 153 366.67 T
4 9.5 Q
(<integer>) 281.62 366.67 T
0 11 Q
(.) 332.92 366.67 T
(This can happen with any C integer type that is mor) 153 348.67 T
(e than 30 bits wide.) 405.85 348.67 T
-0.28 (The size of a Dylan) 153 334.67 P
4 9.5 Q
-0.57 (<integer>) 247.32 334.67 P
0 11 Q
-0.28 ( depends on the particular platform, but it) 298.62 334.67 P
(is guaranteed to be at least 30 bits in length.) 153 320.67 T
(The C-FFI never signals an err) 126 300.67 T
(or for the) 272.48 300.67 T
2 F
(unsafe) 320.35 300.67 T
0 F
( designator classes \321 of which) 349.08 300.67 T
(the class) 126 286.67 T
4 9.5 Q
(<C-unsafe-unsigned-short>) 169.67 286.67 T
0 11 Q
( is an example \321 but if the destination) 312.17 286.67 T
-0.27 (is too small for the value, the most signi\336cant bits of the value ar) 126 272.67 P
-0.27 (e chopped of) 435.64 272.67 P
-0.27 (f) 497.85 272.67 P
-0.25 (to \336t into the destination. Because ther) 126 258.67 P
-0.25 (e is no checking, using the unsafe desig-) 310.91 258.67 P
(nator classes brings a very small performance impr) 126 244.67 T
(ovement, but nonetheless) 374.15 244.67 T
(you should not use them unless you ar) 126 230.67 T
(e certain you will not lose any bits.) 314.4 230.67 T
2 F
(Raw) 126 210.67 T
0 F
( designator classes \321 of which the class) 146.16 210.67 T
4 9.5 Q
(<C-raw-unsigned-int>) 341.72 210.67 T
0 11 Q
( is an) 455.72 210.67 T
(example \321 r) 126 196.67 T
(epr) 187.89 196.67 T
(esent the integer on the Dylan side as a) 203.91 196.67 T
4 9.5 Q
(<machine-word>) 396.21 196.67 T
0 11 Q
(. An) 476.02 196.67 T
(instance of) 126 182.67 T
4 9.5 Q
(<machine-word>) 181.08 182.67 T
0 11 Q
( is guaranteed to have enough bits to r) 260.88 182.67 T
(epr) 447.16 182.67 T
(esent) 463.19 182.67 T
(any C) 126 168.67 T
4 9.5 Q
(long) 157.32 168.67 T
0 11 Q
( value, or any C) 180.12 168.67 T
4 9.5 Q
(void) 259.6 168.67 T
(*) 285.15 168.67 T
0 11 Q
( value. Note that a) 290.85 168.67 T
4 9.5 Q
(<machine-word>) 382.75 168.67 T
0 11 Q
( value) 462.55 168.67 T
(may still have mor) 126 154.67 T
(e signi\336cant bits than some C integer types, and so the C-) 216.68 154.67 T
-0.4 (FFI may still signal an over\337ow err) 126 140.67 P
-0.4 (or if the) 293.66 140.67 P
4 9.5 Q
-0.83 (<machine-word>) 333.18 140.67 P
0 11 Q
-0.4 ( value, interpr) 412.98 140.67 P
-0.4 (eted) 480.81 140.67 P
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.14/DEST FmPD2
351 716/I4.1.1059833 FmPA
351 716/I4.1.1059831 FmPA
395 622/I4.1.1059827 FmPA
395 622/I4.1.1059825 FmPA
170 438/I4.1.1059791 FmPA
170 438/I4.1.1059789 FmPA
342 362/I4.1.1059671 FmPA
342 362/I4.1.1059669 FmPA
396 348/I4.1.1059881 FmPA
396 348/I4.1.1059879 FmPA
181 334/I4.1.1059887 FmPA
181 334/I4.1.1059885 FmPA
383 320/I4.1.1059869 FmPA
383 320/I4.1.1059867 FmPA
126 716/I4.1.1086996 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "14" 18
%%Page: "15" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(15) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(as indicated by the designator) 108 640.67 T
(, has mor) 253.1 640.67 T
(e signi\336cant bits than may be held in) 297.78 640.67 T
(the indicated C type.) 108 626.67 T
(T) 108 606.67 T
(able 1.1 shows all raw) 113.73 606.67 T
(, plain, and unsafe integer designator types exported) 219.35 606.67 T
(fr) 108 592.67 T
(om the C-FFI module.) 115.81 592.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 538.01 486 546 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
0 11 Q
0 X
0 0 0 1 0 0 0 K
(T) 149.73 549.67 T
(able 1.1  The integer designator classes and their mappings.) 155.46 549.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Designator name) 160.35 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(C type) 310.85 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dylan type\050s\051) 388.92 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(<C-int>) 130.63 495.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int) 285.3 495.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 495.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-int>) 130.63 476.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int) 285.3 476.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 380.53 476.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-int>) 130.63 457.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(int) 285.3 457.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 457.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-signed-int>) 130.63 438.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed int) 285.3 438.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 380.53 438.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-signed int>) 130.63 419.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed int) 285.3 419.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 419.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-signed-int>) 130.63 400.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed int) 285.3 400.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 400.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-unsigned-int>) 130.63 381.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned int) 285.3 381.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 380.53 381.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-unsigned-int>) 130.63 362.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned int) 285.3 362.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 362.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsigned-int>) 130.63 343.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned int) 285.3 343.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 343.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsigned-long>) 130.63 324.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned long) 285.3 324.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 324.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-signed-long>) 130.63 305.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed long) 285.3 305.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 305.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-unsigned-long>) 130.63 286.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned long) 285.3 286.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 286.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-signed-long>) 130.63 267.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed long) 285.3 267.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 267.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-unsigned-long>) 130.63 248.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned long) 285.3 248.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 380.53 248.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-signed-long>) 130.63 229.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed long) 285.3 229.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 380.53 229.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsigned-short>) 130.63 210.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned short) 285.3 210.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 210.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-signed-short>) 130.63 191.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed short) 285.3 191.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 191.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-unsigned-short>) 130.63 172.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned short) 285.3 172.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 172.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-signed-short>) 130.63 153.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed short) 285.3 153.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 380.53 153.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-unsigned-short>) 130.63 134.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned short) 285.3 134.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 380.53 134.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
279.3 532.01 279.3 127.01 2 L
V
0.25 H
0 Z
N
374.53 532.01 374.53 127.01 2 L
V
N
124.63 507.01 469.37 507.01 2 L
V
N
124.63 488.01 469.37 488.01 2 L
V
N
124.63 469.01 469.37 469.01 2 L
V
N
124.63 450.01 469.37 450.01 2 L
V
N
124.63 431.01 469.37 431.01 2 L
V
N
124.63 412.01 469.37 412.01 2 L
V
N
124.63 393.01 469.37 393.01 2 L
V
N
124.63 374.01 469.37 374.01 2 L
V
N
124.63 355.01 469.37 355.01 2 L
V
N
124.63 336.01 469.37 336.01 2 L
V
N
124.63 317.01 469.37 317.01 2 L
V
N
124.63 298.01 469.37 298.01 2 L
V
N
124.63 279.01 469.37 279.01 2 L
V
N
124.63 260.01 469.37 260.01 2 L
V
N
124.63 241.01 469.37 241.01 2 L
V
N
124.63 222.01 469.37 222.01 2 L
V
N
124.63 203.01 469.37 203.01 2 L
V
N
124.63 184.01 469.37 184.01 2 L
V
N
124.63 165.01 469.37 165.01 2 L
V
N
124.63 146.01 469.37 146.01 2 L
V
N
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.15/DEST FmPD2
198 701/M4.9.60010.TableTitle.TABLE.1.Integer.designator.types.and.their.mappings FmPA
198 701/I4.1.917809 FmPA
131 645/I4.1.1059551 FmPA
131 645/I4.1.1059549 FmPA
131 626/I4.1.1059629 FmPA
131 626/I4.1.1059627 FmPA
381 626/I4.1.1059875 FmPA
381 626/I4.1.1059873 FmPA
131 607/I4.1.1059743 FmPA
131 607/I4.1.1059741 FmPA
131 588/I4.1.1059641 FmPA
131 588/I4.1.1059639 FmPA
131 569/I4.1.1059749 FmPA
131 569/I4.1.1059747 FmPA
131 550/I4.1.1059695 FmPA
131 550/I4.1.1059693 FmPA
131 531/I4.1.1059665 FmPA
131 531/I4.1.1059663 FmPA
131 512/I4.1.1059779 FmPA
131 512/I4.1.1059777 FmPA
131 493/I4.1.1059809 FmPA
131 493/I4.1.1059807 FmPA
131 474/I4.1.1059815 FmPA
131 474/I4.1.1059813 FmPA
131 455/I4.1.1059701 FmPA
131 455/I4.1.1059699 FmPA
131 436/I4.1.1059785 FmPA
131 436/I4.1.1059783 FmPA
131 417/I4.1.1059761 FmPA
131 417/I4.1.1059759 FmPA
131 398/I4.1.1059677 FmPA
131 398/I4.1.1059675 FmPA
131 379/I4.1.1059647 FmPA
131 379/I4.1.1059645 FmPA
131 360/I4.1.1059839 FmPA
131 360/I4.1.1059837 FmPA
131 341/I4.1.1059707 FmPA
131 341/I4.1.1059705 FmPA
131 322/I4.1.1059797 FmPA
131 322/I4.1.1059795 FmPA
131 303/I4.1.1059767 FmPA
131 303/I4.1.1059765 FmPA
131 284/I4.1.1059683 FmPA
131 284/I4.1.1059681 FmPA
209 778/I4.1.1087005 FmPA
108 758/I4.1.1087014 FmPA
223 744/I4.1.1087024 FmPA
[/Rect[108 603 150 614]/Border[0 0 0]/Page 19/View[/XYZ null 198 701 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "15" 19
%%Page: "16" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(16) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(For each of the fundamental integer designator types,) 126 388.67 T
4 9.5 Q
(<C-) 389.03 388.67 T
2 11 Q
(xxx) 406.13 388.67 T
4 9.5 Q
(>) 422.63 388.67 T
0 11 Q
(, ther) 428.33 388.67 T
(e is also a) 453.24 388.67 T
(type designating pointers to that type called) 126 374.67 T
4 9.5 Q
(<C-) 343.12 374.67 T
2 11 Q
(xxx) 360.22 374.67 T
4 9.5 Q
(*>) 376.72 374.67 T
0 11 Q
(. In addition, the C-FFI) 388.12 374.67 T
(de\336nes methods for) 126 360.67 T
4 9.5 Q
(pointer-value) 225.6 360.67 T
0 11 Q
( and) 299.7 360.67 T
4 9.5 Q
(pointer-value-setter) 323.83 360.67 T
0 11 Q
(, with appr) 437.01 360.67 T
(o-) 490.5 360.67 T
(priate translation behavior for each of the types designating pointers to the) 126 346.67 T
(fundamental integer designator types.) 126 332.67 T
3 14 Q
(<C-n) 126 284.67 T
(umber>) 151.73 284.67 T
2 13 Q
(Sealed abstract class) 397.86 285.34 T
6 12 Q
(Descr) 135 260.01 T
(iption) 160.84 260.01 T
0 11 Q
(The abstract super) 207 260.01 T
(class of all classes that designate a funda-) 296.39 260.01 T
(mental numeric C type. Super) 207 246.01 T
(class is) 352.68 246.01 T
4 9.5 Q
(<C-value>) 388.96 246.01 T
0 11 Q
(.) 440.26 246.01 T
3 14 Q
(<C-\337oat>) 126 198.01 T
2 13 Q
(Sealed abstract class) 397.86 198.67 T
6 12 Q
(Descr) 135 173.34 T
(iption) 160.84 173.34 T
0 11 Q
(The class of C \337oating point values.) 207 173.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(<C-raw-signed-short>) 148.63 586.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed short) 303.3 586.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 398.53 586.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsigned-char>) 148.63 567.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned char) 303.3 567.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 398.53 567.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-signed-char>) 148.63 548.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed char) 303.3 548.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 398.53 548.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-unsigned-char>) 148.63 529.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned char) 303.3 529.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 398.53 529.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-signed-char>) 148.63 510.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed char) 303.3 510.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 398.53 510.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-unsigned-char>) 148.63 491.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned char) 303.3 491.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 398.53 491.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-signed-char>) 148.63 472.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(signed char) 303.3 472.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 398.53 472.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-char>) 148.63 453.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char) 303.3 453.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 398.53 453.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-unsafe-char>) 148.63 434.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char) 303.3 434.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<integer>) 398.53 434.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<C-raw-char>) 148.63 415.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(char) 303.3 415.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<machine-word>) 398.53 415.01 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 629.01 504 637 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
0 11 Q
0 X
0 0 0 1 0 0 0 K
(T) 167.73 640.67 T
(able 1.1  The integer designator classes and their mappings.) 173.46 640.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Designator name) 178.35 607.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(C type) 328.85 607.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dylan type\050s\051) 406.92 607.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
297.3 623.01 297.3 408.01 2 L
V
0.25 H
0 Z
N
392.53 623.01 392.53 408.01 2 L
V
N
142.63 598.01 487.37 598.01 2 L
V
N
142.63 579.01 487.37 579.01 2 L
V
N
142.63 560.01 487.37 560.01 2 L
V
N
142.63 541.01 487.37 541.01 2 L
V
N
142.63 522.01 487.37 522.01 2 L
V
N
142.63 503.01 487.37 503.01 2 L
V
N
142.63 484.01 487.37 484.01 2 L
V
N
142.63 465.01 487.37 465.01 2 L
V
N
142.63 446.01 487.37 446.01 2 L
V
N
142.63 427.01 487.37 427.01 2 L
V
N
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.16/DEST FmPD2
149 736/I4.1.1059653 FmPA
149 736/I4.1.1059651 FmPA
149 717/I4.1.1059803 FmPA
149 717/I4.1.1059801 FmPA
149 698/I4.1.1059689 FmPA
149 698/I4.1.1059687 FmPA
149 679/I4.1.1059773 FmPA
149 679/I4.1.1059771 FmPA
149 660/I4.1.1059755 FmPA
149 660/I4.1.1059753 FmPA
149 641/I4.1.1059659 FmPA
149 641/I4.1.1059657 FmPA
149 622/I4.1.1059635 FmPA
149 622/I4.1.1059633 FmPA
149 603/I4.1.1059509 FmPA
149 603/I4.1.1059507 FmPA
149 584/I4.1.1059737 FmPA
149 584/I4.1.1059735 FmPA
149 565/I4.1.1059623 FmPA
149 565/I4.1.1059621 FmPA
226 512/I4.1.1059175 FmPA
226 512/I4.1.1059953 FmPA
324 512/I4.1.1059178 FmPA
324 512/I4.1.1059957 FmPA
126 438/I4.1.1058544 FmPA
126 438/I4.1.1058542 FmPA
389 397/I4.1.1059851 FmPA
389 397/I4.1.1059849 FmPA
126 351/I4.1.1058526 FmPA
126 351/I4.1.1058524 FmPA
126 351/M4.9.12194.Inlineinterface.Cfloat FmPA
126 351/I4.1.1060158 FmPA
126 540/I4.1.1087036 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "16" 20
%%Page: "17" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(17) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 14 Q
0 X
(<C-doub) 108 638.67 T
(le>) 154.77 638.67 T
2 13 Q
(Sealed abstract class) 379.86 639.33 T
6 12 Q
(Descr) 117 614 T
(iption) 142.84 614 T
0 11 Q
(The class of C double-pr) 189 614 T
(ecision values.) 307.13 614 T
3 13 Q
(1.5.4) 108 580.33 T
(P) 137.64 580.33 T
(ointer designator c) 144.34 580.33 T
(lasses and related functions) 240.11 580.33 T
0 11 Q
(This section describes the pr) 108 560.67 T
(e-de\336ned classes that designate C pointer types.) 245.14 560.67 T
(Subclasses of the abstract classes documented her) 108 546.67 T
(e ar) 348.78 546.67 T
(e instantiable, and C) 366.45 546.67 T
(pointers ar) 108 532.67 T
(e r) 160.48 532.67 T
(epr) 172.65 532.67 T
(esented in Dylan by instances of these classes.) 188.67 532.67 T
1 F
(Note:) 108 512.67 T
0 F
( Pointer designator classes ar) 135.19 512.67 T
(e de\336ned for all the designator classes in) 275.95 512.67 T
(T) 108 498.67 T
(able 1.1, but ar) 113.73 498.67 T
(e not listed her) 184.48 498.67 T
(e. T) 256.46 498.67 T
(o form the name of the pointer designator) 272.96 498.67 T
(class for a particular designator class, append a \322*\323 to the part of the name) 108 484.67 T
(enclosed in angle brackets. Thus for) 108 470.67 T
4 9.5 Q
(<C-int>) 284.66 470.67 T
0 11 Q
( the pointer designator class is) 324.56 470.67 T
4 9.5 Q
(<C-int*>) 108 456.67 T
0 11 Q
(.) 153.6 456.67 T
3 14 Q
(<C-pointer>) 108 408.67 T
2 13 Q
(Primary open abstract class) 341.22 409.33 T
6 12 Q
(Descr) 117 384 T
(iption) 142.84 384 T
0 11 Q
(The abstract super) 189 384 T
(class of all classes that designate a C) 278.39 384 T
(pointer type. It is a subclass of) 189 370 T
4 9.5 Q
(<C-value>) 338.62 370 T
0 11 Q
(. Instances of con-) 389.92 370 T
-0.42 (cr) 189 356 P
-0.42 (ete subclasses of) 198.03 356 P
4 9.5 Q
-0.87 (<C-pointer>) 279.04 356 P
0 11 Q
-0.42 ( encapsulate a raw C addr) 341.74 356 P
-0.42 (ess.) 466.32 356 P
(The make methods on subclasses of) 189 342 T
4 9.5 Q
(<C-pointer>) 365.18 342 T
0 11 Q
( accept the) 427.88 342 T
(keywor) 189 328 T
(d ar) 225.83 328 T
(gument) 244.95 328 T
4 9.5 Q
(address:) 285.42 328 T
0 11 Q
(, which must be a Dylan) 331.02 328 T
4 9.5 Q
(<inte-) 451.51 328 T
(ger>) 189 314 T
0 11 Q
( or) 211.8 314 T
4 9.5 Q
(<machine-word>) 227.65 314 T
0 11 Q
( r) 307.45 314 T
(epr) 314.35 314 T
(esentation of the C addr) 330.38 314 T
(ess.) 447.07 314 T
3 14 Q
(pointer) 108 266 T
(-ad) 146.7 266 T
(dress) 163.82 266 T
2 13 Q
(Function) 438.08 266.67 T
6 12 Q
(Summar) 117 241.33 T
(y) 154.48 241.33 T
0 11 Q
(Recovers the addr) 189 241.33 T
(ess fr) 276.85 241.33 T
(om an instance of) 302 241.33 T
4 9.5 Q
(<C-pointer>) 390.2 241.33 T
0 11 Q
( and) 452.9 241.33 T
(r) 189 227.33 T
(eturns it as a Dylan) 193.15 227.33 T
4 9.5 Q
(<machine-word>) 289.98 227.33 T
0 11 Q
(.) 369.78 227.33 T
6 12 Q
(Signature) 117 199.67 T
4 9 Q
(pointer-address) 189 199.67 T
7 F
(C-pointer) 275.4 199.67 T
4 F
( =>) 314.07 199.67 T
7 F
(addr) 335.67 199.67 T
(ess) 354.02 199.67 T
6 12 Q
(Arguments) 117 172.67 T
2 11 Q
(c-pointer) 189 172.67 T
0 F
(An instance of) 270 172.67 T
4 9.5 Q
(<C-pointer>) 342.79 172.67 T
0 11 Q
(.) 405.49 172.67 T
6 12 Q
(V) 117 144.67 T
(alues) 122.89 144.67 T
2 11 Q
(addr) 189 144.67 T
(ess) 208.96 144.67 T
0 F
(An instance of) 270 144.67 T
4 9.5 Q
(<machine-word>) 342.79 144.67 T
0 11 Q
(.) 422.59 144.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.17/DEST FmPD2
108 792/I4.1.1058514 FmPA
108 792/I4.1.1058512 FmPA
108 792/M4.9.19315.Inlineinterface.Cdouble FmPA
108 792/I4.1.1060159 FmPA
138 733/I4.1.1059991 FmPA
138 733/I4.1.1060115 FmPA
138 733/I4.1.1060113 FmPA
138 733/I4.1.886995 FmPA
285 622/I4.1.1059539 FmPA
285 622/I4.1.1059537 FmPA
108 608/I4.1.1059557 FmPA
108 608/I4.1.1059555 FmPA
108 562/I4.1.1058550 FmPA
108 562/I4.1.1058548 FmPA
339 521/I4.1.1059857 FmPA
339 521/I4.1.1059855 FmPA
108 419/I4.1.1058362 FmPA
108 419/I4.1.1058710 FmPA
138 733/I4.1.1087108 FmPA
[/Rect[108 495 150 506]/Border[0 0 0]/Page 19/View[/XYZ null 198 701 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "17" 21
%%Page: "18" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(18) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Descr) 135 640 T
(iption) 160.84 640 T
0 11 Q
(Recovers the addr) 207 640 T
(ess fr) 294.85 640 T
(om an instance of) 320 640 T
4 9.5 Q
(<C-pointer>) 408.2 640 T
0 11 Q
( and) 470.9 640 T
(r) 207 626 T
(eturns it as a Dylan) 211.15 626 T
4 9.5 Q
(<machine-word>) 307.98 626 T
0 11 Q
(.) 387.78 626 T
3 14 Q
(pointer) 126 578 T
(-cast) 164.7 578 T
2 13 Q
(G.f. method) 442.98 578.67 T
6 12 Q
(Summar) 135 553.33 T
(y) 172.48 553.33 T
0 11 Q
(Converts a pointer fr) 207 553.33 T
(om one pointer type to another) 308.27 553.33 T
(.) 458.7 553.33 T
6 12 Q
(Signature) 135 525.33 T
4 9 Q
-0.29 (pointer-cast) 207 525.33 P
7 F
-0.12 (pointer-designator-class) 276.91 525.33 P
-0.12 (C-pointer) 380.52 525.33 P
4 F
-0.29 ( =>) 419.2 525.33 P
7 F
-0.12 (new-C-pointer) 440.22 525.33 P
6 12 Q
(Arguments) 135 498.33 T
2 11 Q
(pointer-designator-class) 207 498.33 T
0 F
(Asubclass of) 313.52 498.33 T
4 9.5 Q
(<C-pointer>) 377.54 498.33 T
0 11 Q
(.) 440.24 498.33 T
2 F
(c-pointer) 207 478.33 T
0 F
(An instance of) 288 478.33 T
4 9.5 Q
(<C-pointer>) 360.79 478.33 T
0 11 Q
(.) 423.49 478.33 T
6 12 Q
(V) 135 450.67 T
(alues) 140.89 450.67 T
2 11 Q
(new-c-pointer) 207 450.67 T
0 F
(An instance of) 288 450.67 T
4 9.5 Q
(<C-pointer>) 360.79 450.67 T
0 11 Q
(.) 423.49 450.67 T
6 12 Q
(Descr) 135 422.67 T
(iption) 160.84 422.67 T
0 11 Q
-0.45 (Converts a pointer fr) 207 422.67 P
-0.45 (om one pointer type to another) 306.91 422.67 P
-0.45 (. The new) 455.09 422.67 P
(pointer will have the same addr) 207 408.67 T
(ess as the old pointer) 361.83 408.67 T
(.) 463.38 408.67 T
3 14 Q
(n) 126 360.67 T
(ull-pointer) 132.92 360.67 T
2 13 Q
(Function) 456.08 361.33 T
6 12 Q
(Summar) 135 336 T
(y) 172.48 336 T
0 11 Q
(Returns a null pointer whose type is given by the pointer) 207 336 T
(-) 483.95 336 T
(designator) 207 322 T
(-class.) 258.61 322 T
6 12 Q
(Signature) 135 294.33 T
4 9 Q
(null-pointer) 207 294.33 T
7 F
(pointer-designator-class) 277.2 294.33 T
4 F
( =>) 375.7 294.33 T
7 F
(null-pointer) 397.3 294.33 T
6 12 Q
(Arguments) 135 267.33 T
2 11 Q
(pointer-designator-class) 207 267.33 T
0 F
(Asubclass of) 313.52 267.33 T
4 9.5 Q
(<C-pointer>) 377.54 267.33 T
0 11 Q
(.) 440.24 267.33 T
2 F
(c-pointer) 207 247.33 T
0 F
(An instance of) 288 247.33 T
4 9.5 Q
(<C-pointer>) 360.79 247.33 T
0 11 Q
(.) 423.49 247.33 T
6 12 Q
(V) 135 219.67 T
(alues) 140.89 219.67 T
2 11 Q
(new-c-pointer) 207 219.67 T
6 12 Q
(Descr) 135 191.67 T
(iption) 160.84 191.67 T
0 11 Q
(Returns a null pointer whose type is given by) 207 191.67 T
2 F
(pointer-designa-) 430.72 191.67 T
-0.44 (tor-class) 207 177.67 P
0 F
-0.44 (. Note that dif) 244.47 177.67 P
-0.44 (fer) 310.62 177.67 P
-0.44 (ent calls to) 323.7 177.67 P
4 9.5 Q
-0.9 (null-pointer) 376.95 177.67 P
0 11 Q
-0.44 ( may r) 445.35 177.67 P
-0.44 (eturn) 475.45 177.67 P
(the same object.) 207 163.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.18/DEST FmPD2
126 731/M4.9.22459.REntry.pointercast FmPA
126 731/I4.1.1067117 FmPA
126 514/I4.1.1058366 FmPA
126 514/I4.1.1058706 FmPA
135 792/I4.1.1087125 FmPA
126 731/I4.1.1087137 FmPA
126 731/I4.1.1087159 FmPA
126 731/I4.1.1087171 FmPA
135 575/I4.1.1087186 FmPA
126 514/I4.1.1087198 FmPA
135 344/I4.1.1087211 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "18" 22
%%Page: "19" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(19) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 14 Q
0 X
(n) 108 638.67 T
(ull-pointer?) 114.92 638.67 T
2 13 Q
(Function) 438.08 639.33 T
6 12 Q
(Summar) 117 614 T
(y) 154.48 614 T
0 11 Q
(Returns tr) 189 614 T
(ue if a pointer is null) 237.84 614 T
6 12 Q
(Signature) 117 586 T
4 9 Q
(null-pointer?) 189 586 T
7 F
(C-pointer) 264.6 586 T
4 F
( =>) 303.27 586 T
7 F
(boolean) 324.87 586 T
6 12 Q
(Arguments) 117 559 T
2 11 Q
(c-pointer) 189 559 T
0 F
(An instance of) 270 559 T
4 9.5 Q
(<C-pointer>) 342.79 559 T
0 11 Q
(.) 405.49 559 T
6 12 Q
(V) 117 531 T
(alues) 122.89 531 T
2 11 Q
(boolean) 189 531 T
0 F
(An instance of) 270 531 T
4 9.5 Q
(<boolean>) 342.79 531 T
0 11 Q
(.) 394.09 531 T
6 12 Q
(Descr) 117 503 T
(iption) 142.84 503 T
0 11 Q
(Returns) 189 503 T
4 9.5 Q
(#t) 230 503 T
0 11 Q
( if a pointer is null and) 241.4 503 T
4 9.5 Q
(#f) 354.36 503 T
0 11 Q
( otherwise.) 365.76 503 T
3 14 Q
(<C-v) 108 454.67 T
(oid*>) 132.86 454.67 T
2 13 Q
(Open concr) 382.96 455.33 T
(ete class) 443.52 455.33 T
6 12 Q
(Descr) 117 430 T
(iption) 142.84 430 T
0 11 Q
(The class designating C\325s) 189 430 T
4 9.5 Q
(void*) 314.03 430 T
0 11 Q
( pointer type. It is a subclass) 342.53 430 T
(of) 189 416 T
4 9.5 Q
(<C-pointer>) 201.42 416 T
0 11 Q
(. No) 264.12 416 T
4 9.5 Q
(pointer-value) 287.52 416 T
0 11 Q
( methods ar) 361.62 416 T
(e de\336ned on) 419.12 416 T
(this class.) 189 402 T
3 14 Q
(<C-staticall) 108 354 T
(y-typed-pointer>) 169.42 354 T
2 13 Q
(Open abstract class) 384.18 354.67 T
6 12 Q
(Descr) 117 329.33 T
(iption) 142.84 329.33 T
0 11 Q
(The abstract super) 189 329.33 T
(class of all classes designating a C pointer) 278.39 329.33 T
(type for a non-) 189 315.33 T
4 9.5 Q
(void) 260.82 315.33 T
0 11 Q
( base. It is a subclass of) 283.62 315.33 T
4 9.5 Q
(<C-pointer>) 397.76 315.33 T
0 11 Q
(.) 460.45 315.33 T
3 14 Q
(de\336ne C-pointer) 108 267.33 T
(-type) 195.81 267.33 T
2 13 Q
(De\336nition macr) 397.16 268 T
(o) 480.23 268 T
6 12 Q
(Summar) 117 242.67 T
(y) 154.48 242.67 T
0 11 Q
(De\336nes a constant bound to a pointer class designating) 189 242.67 T
(pointers to a designator class name.) 189 228.67 T
6 12 Q
(Signature) 117 201 T
4 9 Q
(define C-pointer-type) 189 201 T
7 F
(pointer-class-name) 307.8 201 T
4 F
( =>) 385.3 201 T
7 F
(designator-class-) 406.9 201 T
(name) 189 190 T
6 12 Q
(Arguments) 117 164 T
2 11 Q
(pointer-class-name) 189 164 T
0 F
(A Dylan variable name.) 272.92 164 T
6 12 Q
(V) 117 136 T
(alues) 122.89 136 T
2 11 Q
(designator-class) 189 136 T
0 F
(A Dylan name.) 270 136 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.19/DEST FmPD2
108 792/I4.1.1058368 FmPA
108 792/I4.1.1058708 FmPA
108 608/I4.1.1058598 FmPA
108 608/I4.1.1058596 FmPA
108 507/I4.1.1058556 FmPA
108 507/I4.1.1058554 FmPA
398 467/I4.1.1059575 FmPA
398 467/I4.1.1059573 FmPA
108 421/I4.1.1058376 FmPA
108 421/I4.1.1058684 FmPA
117 655/I4.1.1087223 FmPA
108 608/I4.1.1087235 FmPA
[/Rect[288 412 362 423]/Border[0 0 0]/Page 26/View[/XYZ null 126 670 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "19" 23
%%Page: "20" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(20) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Descr) 135 640 T
(iption) 160.84 640 T
0 11 Q
(De\336nes a constant bound to a pointer class designating) 207 640 T
(pointers to) 207 626 T
2 F
(designator-class-name) 262.18 626 T
0 F
(. Note that the pointer type) 360.76 626 T
(may alr) 207 612 T
(eady exist. The class de\336ned will be open, abstract) 243.93 612 T
(and instantiable. Objects r) 207 598 T
(eturned by) 333.07 598 T
4 9.5 Q
(make\050) 388.99 598 T
2 11 Q
(pointer-class-) 417.49 598 T
(name) 207 584 T
4 9.5 Q
(\051) 230.84 584 T
0 11 Q
( will be instances of a sealed concr) 236.54 584 T
(ete subclass of) 402.6 584 T
2 F
(pointer-class-name) 207 570 T
0 F
(.) 290.92 570 T
3 14 Q
(ref) 126 522 T
(erenced-type) 140.57 522 T
2 13 Q
(Function) 456.08 522.67 T
6 12 Q
(Summar) 135 497.33 T
(y) 172.48 497.33 T
0 11 Q
(Returns the class designating the contents type of the desig-) 207 497.33 T
(nated C pointer type.) 207 483.33 T
6 12 Q
(Signature) 135 455.67 T
4 9 Q
(referenced-type) 207 455.67 T
7 F
(pointer-designator-class) 293.4 455.67 T
4 F
( =>) 391.9 455.67 T
7 F
(designator-class) 413.51 455.67 T
6 12 Q
(Arguments) 135 428.67 T
2 11 Q
(pointer-designator-class) 207 428.67 T
0 F
(A subclass of) 288 410.67 T
4 9.5 Q
(<C-pointer>) 354.77 410.67 T
0 11 Q
(.) 417.47 410.67 T
6 12 Q
(V) 135 383 T
(alues) 140.89 383 T
2 11 Q
(designator-class) 207 383 T
0 F
(A subclass of) 288 383 T
4 9.5 Q
(<C-value>) 354.77 383 T
6 12 Q
(Descr) 135 355 T
(iption) 160.84 355 T
0 11 Q
(Returns the class designating the contents type of the C) 207 355 T
(pointer type designated by) 207 341 T
2 F
(pointer-designator-class) 340.65 341 T
0 F
(. The same) 447.17 341 T
(designator class is r) 207 327 T
(eturned whenever) 301.98 327 T
4 9.5 Q
(referenced-type) 394.05 327 T
0 11 Q
( is) 479.55 327 T
(called with the same ar) 207 313 T
(gument.) 319.19 313 T
3 14 Q
(c-type-cast) 126 265 T
2 13 Q
(Function) 456.08 265.67 T
6 12 Q
(Summar) 135 240.33 T
(y) 172.48 240.33 T
0 11 Q
(Converts a value to a value of a speci\336ed type, accor) 207 240.33 T
(ding to) 461.21 240.33 T
(the semantics of a C type cast.) 207 226.33 T
6 12 Q
(Signature) 135 198.67 T
4 9 Q
(c-type-cast) 207 198.67 T
7 F
(type) 271.8 198.67 T
(value) 294.7 198.67 T
4 F
( =>) 316.71 198.67 T
7 F
(value) 338.31 198.67 T
6 12 Q
(Arguments) 135 171.67 T
2 11 Q
(type) 207 171.67 T
0 F
(See Description.) 288 171.67 T
2 F
(value) 207 151.67 T
0 F
(An instance of) 288 151.67 T
4 9.5 Q
(<object>) 360.79 151.67 T
0 11 Q
(.) 406.39 151.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.20/DEST FmPD2
126 675/I4.1.1058378 FmPA
126 675/I4.1.1058718 FmPA
135 792/I4.1.1087249 FmPA
135 507/I4.1.1087261 FmPA
362 464/I4.1.1087273 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "20" 24
%%Page: "21" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(21) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
6 12 Q
0 X
(V) 117 640 T
(alues) 122.89 640 T
2 11 Q
(value) 189 640 T
0 F
(An instance of) 270 640 T
4 9.5 Q
(<object>) 342.79 640 T
0 11 Q
(.) 388.39 640 T
6 12 Q
(Descr) 117 612 T
(iption) 142.84 612 T
0 11 Q
(Returns the value of the second ar) 189 612 T
(gument, converted to the) 354.34 612 T
(type speci\336ed by the \336rst ar) 189 598 T
(gument, in accor) 323.96 598 T
(dance with the) 404.95 598 T
(semantics of a C type cast. This is convenient to use when) 189 584 T
(translating C code to Dylan. It may also be helpful for con-) 189 570 T
-0.24 (verting a value to the form r) 189 556 P
-0.24 (equir) 324.25 556 P
-0.24 (ed by a C-function wrapper) 349.66 556 P
(ar) 189 542 T
(gument.) 198.65 542 T
-0.34 (The \336rst ar) 189 522 P
-0.34 (gument can be either a C type designator or one of) 241.14 522 P
(the Dylan classes) 189 508 T
4 9.5 Q
(<boolean>) 275.09 508 T
0 11 Q
(,) 326.39 508 T
4 9.5 Q
(<character>) 331.89 508 T
0 11 Q
(,) 394.59 508 T
4 9.5 Q
(<machine-word>) 400.09 508 T
0 11 Q
(,) 479.89 508 T
(or any subclass of) 189 494 T
4 9.5 Q
(<number>) 278.33 494 T
0 11 Q
(. For a C type designator) 323.93 494 T
(, the) 442.77 494 T
(value is converted to the Dylan class which it maps to.) 189 480 T
4 9.5 Q
(<C-) 455.8 480 T
0 11 Q
([) 189 466 T
4 9.5 Q
(un) 192.66 466 T
0 11 Q
(]) 204.06 466 T
4 9.5 Q
(signed-short>) 207.73 466 T
0 11 Q
( and) 281.83 466 T
4 9.5 Q
(<C-) 305.95 466 T
0 11 Q
([) 323.05 466 T
4 9.5 Q
(un) 326.71 466 T
0 11 Q
(]) 338.11 466 T
4 9.5 Q
(signed-char>) 341.77 466 T
0 11 Q
( tr) 410.17 466 T
(uncate the) 420.77 466 T
(value as well as ensuring that it is an) 189 452 T
4 9.5 Q
(<integer>) 370.4 452 T
0 11 Q
(.) 421.7 452 T
(For example, with a function declar) 189 432 T
(ed in C as) 361.57 432 T
4 9 Q
(Foo\050long x\051;) 199.8 411.33 T
0 11 Q
(and called as) 189 391 T
4 9 Q
(Foo\050\050long\051 p\051;) 199.8 370.33 T
0 11 Q
(if the Dylan declaration is) 189 350 T
4 9 Q
(define C-function Foo) 199.8 329.33 T
(parameter x :: <C-both-long>;) 210.6 318.33 T
(c-name: "Foo";) 210.6 307.33 T
(end;) 199.8 296.33 T
0 11 Q
(then the equivalent call will be:) 189 276 T
4 9 Q
(Foo\050c-type-cast\050<C-both-long>, p\051\051;) 199.8 255.33 T
0 11 Q
-0.38 (which will ensur) 189 235 P
-0.38 (e that the C semantics ar) 269.7 235 P
-0.38 (e pr) 386.51 235 P
-0.38 (eserved without) 404.91 235 P
(needing to analyze exactly what the type cast is doing.) 189 221 T
(The functions) 108 181 T
4 9.5 Q
(pointer-value) 177.35 181 T
0 11 Q
( and) 251.46 181 T
4 9.5 Q
(pointer-value-setter) 275.58 181 T
0 11 Q
( perform the primi-) 389.58 181 T
-0.12 (tive Dylan-to-C and C-to-Dylan conversions as documented with the designa-) 108 167 P
(tor class of the pointer) 108 153 T
(\325s contents type \050see T) 217.01 153 T
(able 1.1\051. The C-FFI signals an) 322.71 153 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.21/DEST FmPD2
108 332/I4.1.1058380 FmPA
108 332/I4.1.1058712 FmPA
108 332/M4.9.58276.Inlineinterface.pointervalue FmPA
108 332/I4.1.1057889 FmPA
117 764/I4.1.1087282 FmPA
[/Rect[317 149 359 160]/Border[0 0 0]/Page 19/View[/XYZ null 198 701 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "21" 25
%%Page: "22" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(22) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(err) 126 640.67 T
(or if it cannot convert the object you attempt to stor) 139.76 640.67 T
(e in the pointer to a) 389.01 640.67 T
(compatible type.) 126 626.67 T
(These two functions ar) 126 606.67 T
(e part of a pr) 236.45 606.67 T
(otocol for extending the C type conver-) 298.69 606.67 T
(sions. Y) 126 592.67 T
(ou can de\336ne new methods for) 162.76 592.67 T
4 9.5 Q
(pointer-value) 316.22 592.67 T
0 11 Q
( and) 390.32 592.67 T
4 9.5 Q
(pointer-value-) 414.45 592.67 T
(setter) 126 578.67 T
0 11 Q
( for types de\336ned by) 160.2 578.67 T
4 9.5 Q
(define C-subtype) 263.45 578.67 T
0 11 Q
( that ar) 354.65 578.67 T
(e subtypes of) 388.87 578.67 T
4 9.5 Q
(<C-) 455.68 578.67 T
(pointer>) 126 564.67 T
0 11 Q
(.) 171.6 564.67 T
3 14 Q
(pointer) 126 516.67 T
(-v) 164.7 516.67 T
(alue) 174.69 516.67 T
2 13 Q
(Open generic function) 386.49 517.33 T
6 12 Q
(Summar) 135 492 T
(y) 172.48 492 T
0 11 Q
(Der) 207 492 T
(efer) 224.93 492 T
(ences a c-typed pointer using its encapsulated raw C) 243.28 492 T
(addr) 207 478 T
(ess.) 230.09 478 T
6 12 Q
(Signature) 135 450.33 T
4 9 Q
(pointer-value) 207 450.33 T
7 F
(C-typed-pointer) 282.6 450.33 T
4 F
( #key) 347.28 450.33 T
7 F
(index) 379.68 450.33 T
4 F
( =>) 401.18 450.33 T
7 F
(object) 422.78 450.33 T
6 12 Q
(Arguments) 135 423.33 T
2 11 Q
(c-typed-pointer) 207 423.33 T
0 F
(An instance of) 288 423.33 T
4 9.5 Q
(<C-statically-typed-) 360.79 423.33 T
(pointer>) 288 409.33 T
6 12 Q
(V) 135 381.67 T
(alues) 140.89 381.67 T
2 11 Q
(object) 207 381.67 T
0 F
(An instance of) 288 381.67 T
4 9.5 Q
(<object>) 360.79 381.67 T
0 11 Q
(.) 406.39 381.67 T
6 12 Q
(Descr) 135 353.67 T
(iption) 160.84 353.67 T
0 11 Q
(Der) 207 353.67 T
(efer) 224.93 353.67 T
(ences) 243.28 353.67 T
2 F
(c-typed-pointer) 272.52 353.67 T
0 F
( using its encapsulated raw C) 340.54 353.67 T
-0.21 (addr) 207 339.67 P
-0.21 (ess, and r) 230.09 339.67 P
-0.21 (eturns a Dylan object r) 275.29 339.67 P
-0.21 (epr) 384.15 339.67 P
-0.21 (esenting the object at) 400.17 339.67 P
(that addr) 207 325.67 T
(ess. If you supply) 251.91 325.67 T
2 F
(index) 340.22 325.67 T
0 F
(, the pointer is tr) 364.67 325.67 T
(eated as a) 444.7 325.67 T
(pointer to an array) 207 311.67 T
(, and the function r) 296.75 311.67 T
(eturns the appr) 389.3 311.67 T
(opriate) 463.83 311.67 T
(element indexed by the corr) 207 297.67 T
(ect unit size.) 342.81 297.67 T
(It is an err) 207 277.67 T
(or if) 256.07 277.67 T
2 F
(C-typed-pointer) 278.79 277.67 T
0 F
( does not point to a valid) 349.67 277.67 T
(addr) 207 263.67 T
(ess or is a null pointer) 230.09 263.67 T
(.) 336.2 263.67 T
6 12 Q
(See also) 135 236 T
4 9.5 Q
(pointer-value-setter) 207 236 T
0 11 Q
(,  page 22.) 320.19 236 T
3 14 Q
(pointer) 126 175 T
(-v) 164.7 175 T
(alue-setter) 174.69 175 T
2 13 Q
(Open generic function) 386.49 175.67 T
6 12 Q
(Summar) 135 150.33 T
(y) 172.48 150.33 T
0 11 Q
(Allows you to set pointer values.) 207 150.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.22/DEST FmPD2
263 730/I4.1.1061134 FmPA
263 730/I4.1.1061135 FmPA
456 730/I4.1.1061136 FmPA
456 730/I4.1.1061137 FmPA
126 670/M4.9.19531.REntry.pointervalue FmPA
126 670/I4.1.1061763 FmPA
207 429/I4.1.1058382 FmPA
207 429/I4.1.1058716 FmPA
126 328/M4.9.44634.REntry.pointervaluesetter FmPA
126 328/I4.1.1061091 FmPA
135 506/I4.1.1087294 FmPA
[/Rect[207 232 366 243]/Border[0 0 0]/Page 26/View[/XYZ null 126 328 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "22" 26
%%Page: "23" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(23) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
6 12 Q
0 X
(Signature) 117 640 T
4 9 Q
-0.66 (pointer-value-setter) 189 640 P
7 F
-0.28 (new-value) 301.73 640 P
-0.28 (C-typed-pointer) 348.47 640 P
4 F
-0.66 ( #key) 413.16 640 P
7 F
-0.28 (index) 444.23 640 P
4 F
-0.66 ( =>) 465.73 640 P
7 F
(new-value) 189 629 T
6 12 Q
(Arguments) 117 603 T
2 11 Q
(new-value) 189 603 T
0 F
(An instance of <object>.) 270 603 T
2 F
(c-typed-pointer) 189 583 T
0 F
(An instance of) 270 583 T
4 9.5 Q
(<C-statically-typed-) 342.79 583 T
(pointer>) 270 569 T
0 11 Q
(.) 315.6 569 T
2 F
(index) 189 549 T
0 F
(An instance of) 270 549 T
4 9.5 Q
(<integer>) 342.79 549 T
0 11 Q
(.) 394.09 549 T
6 12 Q
(V) 117 521.33 T
(alues) 122.89 521.33 T
2 11 Q
(new-value) 189 521.33 T
0 F
(An instance of) 270 521.33 T
4 9.5 Q
(<object>) 342.79 521.33 T
0 11 Q
(.) 388.39 521.33 T
6 12 Q
(Descr) 117 493.33 T
(iption) 142.84 493.33 T
0 11 Q
(Allows you to set pointer values. If you supply) 189 493.33 T
2 F
(index) 420.03 493.33 T
0 F
(, the) 444.49 493.33 T
(pointer is tr) 189 479.33 T
(eated as a pointer to an array) 245.52 479.33 T
(, and the function) 385.53 479.33 T
(r) 189 465.33 T
(eturns the appr) 193.15 465.33 T
(opriate element indexed by the corr) 267.67 465.33 T
(ect unit) 440.75 465.33 T
(size.) 189 451.33 T
(It is an err) 189 431.33 T
(or if) 238.07 431.33 T
2 F
(C-typed-pointer) 260.79 431.33 T
0 F
( does not point to a valid) 331.67 431.33 T
(addr) 189 417.33 T
(ess or is a null pointer) 212.09 417.33 T
(.) 318.2 417.33 T
3 14 Q
(pointer) 108 369.33 T
(-v) 146.7 369.33 T
(alue-ad) 156.69 369.33 T
(dress) 196.79 369.33 T
2 13 Q
(Open generic function) 368.49 370 T
6 12 Q
(Summar) 117 344.67 T
(y) 154.48 344.67 T
0 11 Q
(Returns a pointer of the same type as a C-typed pointer) 189 344.67 T
( that) 458.17 344.67 T
(points to the object offset into) 189 330.67 T
(the C-typed pointer) 335.27 330.67 T
(.) 430.39 330.67 T
6 12 Q
(Signature) 117 303 T
4 9 Q
(pointer-value-address) 189 303 T
7 F
(C-typed-pointer) 307.8 303 T
4 F
( #key) 372.48 303 T
7 F
(index) 404.88 303 T
4 F
( =>) 426.38 303 T
7 F
(object) 447.98 303 T
6 12 Q
(Arguments) 117 276 T
2 11 Q
(c-typed-pointer) 189 276 T
0 F
(An instance of) 270 276 T
4 9.5 Q
(<C-statically-typed-) 342.79 276 T
(pointer>) 270 262 T
2 11 Q
(index) 189 242 T
0 F
(An instance of) 270 242 T
4 9.5 Q
(<integer>) 342.79 242 T
0 11 Q
(.) 394.09 242 T
6 12 Q
(V) 117 214.33 T
(alues) 122.89 214.33 T
2 11 Q
(object) 189 214.33 T
0 F
(An instance of) 270 214.33 T
4 9.5 Q
(<object>) 342.79 214.33 T
0 11 Q
(.) 388.39 214.33 T
6 12 Q
(Descr) 117 186.33 T
(iption) 142.84 186.33 T
0 11 Q
(Returns a pointer of the same type as) 189 186.33 T
2 F
(C-typed-pointer) 371.98 186.33 T
0 F
( that) 442.87 186.33 T
(points to the) 189 172.33 T
2 F
(index) 252.57 172.33 T
0 8.8 Q
(th) 277.02 176.73 T
0 11 Q
( object offset into) 285.01 172.33 T
2 F
(C-typed-pointer) 370.46 172.33 T
0 F
(. The fol-) 440.53 172.33 T
(lowing expr) 189 158.33 T
(ession is guaranteed to be tr) 247.55 158.33 T
(ue:) 383.5 158.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.23/DEST FmPD2
189 583/I4.1.1061195 FmPA
189 583/I4.1.1061196 FmPA
108 523/I4.1.1058384 FmPA
108 523/I4.1.1058714 FmPA
117 645/I4.1.1087306 FmPA
117 338/I4.1.1087318 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "23" 27
%%Page: "24" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(24) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 F
0 X
(pointer-value\050) 207 642 T
7 F
(C-typed-pointer) 282.6 642 T
4 F
(, index: i\051) 347.28 642 T
(= pointer-value \050pointer-value-address\050) 217.8 631 T
7 F
(C-typed-pointer) 428.4 631 T
4 F
(,) 493.08 631 T
(index: i\051\051) 207 620 T
3 14 Q
(element) 126 573.67 T
2 13 Q
(G.f. method) 442.98 574.33 T
6 12 Q
(Summar) 135 549 T
(y) 172.48 549 T
0 11 Q
(Der) 207 549 T
(efer) 224.93 549 T
(ences a c-typed pointer using its encapsulated raw C) 243.28 549 T
(addr) 207 535 T
(ess.) 230.09 535 T
6 12 Q
(Signature) 135 507.33 T
4 9 Q
(element) 207 507.33 T
7 F
(C-typed-pointer) 250.2 507.33 T
(index) 320.28 507.33 T
4 F
( =>) 341.78 507.33 T
7 F
(object) 363.38 507.33 T
6 12 Q
(Arguments) 135 480.33 T
2 11 Q
(c-typed-pointer) 207 480.33 T
0 F
(An instance of) 288 480.33 T
4 9.5 Q
(<C-statically-typed-) 360.79 480.33 T
(pointer>) 288 466.33 T
0 11 Q
(.) 333.6 466.33 T
6 12 Q
(V) 135 438.67 T
(alues) 140.89 438.67 T
2 11 Q
(object) 207 438.67 T
0 F
(An instance of) 288 438.67 T
4 9.5 Q
(<object>) 360.79 438.67 T
0 11 Q
(.) 406.39 438.67 T
6 12 Q
(Descr) 135 410.67 T
(iption) 160.84 410.67 T
0 11 Q
(Der) 207 410.67 T
(efer) 224.93 410.67 T
(ences a c-typed pointer using its encapsulated raw C) 243.28 410.67 T
(addr) 207 396.67 T
(ess. Synonymous with a call to) 230.09 396.67 T
4 9.5 Q
(pointer-value) 382.01 396.67 T
0 11 Q
( that) 456.11 396.67 T
(includes the optional index. Thus it does the same thing as:) 207 382.67 T
4 9 Q
(pointer-value\050) 207 362 T
7 F
(C-statically-typed-pointer) 282.6 362 T
4 F
(, index:) 389.78 362 T
7 F
(index) 438.38 362 T
4 F
(\051) 459.88 362 T
3 14 Q
(element-setter) 126 315.67 T
2 13 Q
(G.f. method) 442.98 316.33 T
6 12 Q
(Summar) 135 291 T
(y) 172.48 291 T
0 11 Q
(Allows you to set pointer values.) 207 291 T
6 12 Q
(Signature) 135 263 T
4 9 Q
(element-setter) 207 263 T
7 F
(new) 288 263 T
(C-typed-pointer) 309.9 263 T
(index) 379.98 263 T
4 F
( =>) 401.48 263 T
7 F
(object) 423.08 263 T
6 12 Q
(Arguments) 135 236 T
2 11 Q
(c-typed-pointer) 207 236 T
0 F
(An instance of) 288 236 T
4 9.5 Q
(<C-statically-typed-) 360.79 236 T
(pointer>) 288 222 T
0 11 Q
(.) 333.6 222 T
2 F
(index) 207 202 T
0 F
(An instance of) 288 202 T
4 9.5 Q
(<integer>) 360.79 202 T
0 11 Q
(.) 412.09 202 T
6 12 Q
(V) 135 174.33 T
(alues) 140.89 174.33 T
2 11 Q
(object) 207 174.33 T
0 F
(An instance of) 288 174.33 T
4 9.5 Q
(<object>) 360.79 174.33 T
0 11 Q
(.) 406.39 174.33 T
6 12 Q
(Descr) 135 146.33 T
(iption) 160.84 146.33 T
0 11 Q
(Synonymous with a call to) 207 146.33 T
4 9.5 Q
(pointer-value-setter) 338.82 146.33 T
0 11 Q
( that) 452.82 146.33 T
(includes the optional index. Thus it does the same thing as:) 207 132.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.24/DEST FmPD2
126 727/I4.1.1058386 FmPA
126 727/I4.1.1058696 FmPA
126 469/I4.1.1058388 FmPA
126 469/I4.1.1058698 FmPA
135 563/I4.1.1087330 FmPA
135 298/I4.1.1087342 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "24" 28
%%Page: "25" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(25) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(pointer-value-setter\050) 189 642 T
7 F
(new) 302.4 642 T
4 F
(,) 318.9 642 T
7 F
(C-statically-typed-pointer) 329.7 642 T
4 F
(, index:) 436.88 642 T
7 F
(index) 189 631 T
4 F
(\051) 210.5 631 T
3 14 Q
(=) 108 584.67 T
2 13 Q
(G.f method) 428.23 585.33 T
6 12 Q
(Summar) 117 560 T
(y) 154.48 560 T
0 11 Q
(Returns) 189 560 T
4 9.5 Q
(#t) 230 560 T
0 11 Q
( if two pointers ar) 241.4 560 T
(e equal.) 327.76 560 T
6 12 Q
(Signature) 117 532 T
4 9 Q
(=) 189 532 T
7 F
(C-pointer-1) 199.8 532 T
(C-pointer-2) 251.87 532 T
4 F
( =>) 298.55 532 T
7 F
(boolean) 320.15 532 T
6 12 Q
(Arguments) 117 505 T
2 11 Q
(c-pointer-1) 189 505 T
0 F
(An instance of) 270 505 T
4 9.5 Q
(<C-pointer>) 342.79 505 T
0 11 Q
(.) 405.49 505 T
2 F
(c-pointer-2) 189 485 T
0 F
(An instance of) 270 485 T
4 9.5 Q
(<C-pointer>) 342.79 485 T
0 11 Q
(.) 405.49 485 T
6 12 Q
(V) 117 457.33 T
(alues) 122.89 457.33 T
2 11 Q
(boolean) 189 457.33 T
0 F
(An instance of) 270 457.33 T
4 9.5 Q
(<boolean>) 342.79 457.33 T
0 11 Q
(.) 394.09 457.33 T
6 12 Q
(Descr) 117 429.33 T
(iption) 142.84 429.33 T
0 11 Q
(Returns) 189 429.33 T
4 9.5 Q
(#t) 230 429.33 T
0 11 Q
( if two pointers ar) 241.4 429.33 T
(e equal. This is equivalent to:) 327.76 429.33 T
4 9 Q
(\050pointer-address\050) 199.8 408.67 T
7 F
(C-pointer-1) 291.6 408.67 T
4 F
(\051 = pointer-address\050) 338.27 408.67 T
7 F
(C-) 446.27 408.67 T
(pointer-2) 189 397.67 T
4 F
(\051\051) 226.01 397.67 T
0 11 Q
(Note that operations corr) 189 377.33 T
(esponding to C pointer arithmetic) 311.3 377.33 T
(ar) 189 363.33 T
(e not de\336ned on) 198.65 363.33 T
4 9.5 Q
(<C-pointer>) 280.36 363.33 T
0 11 Q
(. If pointer arithmetic opera-) 343.05 363.33 T
(tions ar) 189 349.33 T
(e r) 225.26 349.33 T
(equir) 237.42 349.33 T
(ed, use) 262.83 349.33 T
4 9.5 Q
(pointer-value) 299.64 349.33 T
0 11 Q
( with an) 373.74 349.33 T
4 9.5 Q
(index:) 416.25 349.33 T
0 11 Q
( ar) 450.45 349.33 T
(gu-) 462.85 349.33 T
(ment.) 189 335.33 T
6 12 Q
(See also) 117 307.67 T
4 9.5 Q
(pointer-value) 189 307.67 T
0 11 Q
(,  page 22.) 263.1 307.67 T
3 14 Q
(<) 108 259.33 T
2 13 Q
(G.f method) 428.23 260 T
6 12 Q
(Summar) 117 234.67 T
(y) 154.48 234.67 T
0 11 Q
(Returns) 189 234.67 T
4 9.5 Q
(#t) 230 234.67 T
0 11 Q
( if the second ar) 241.4 234.67 T
(gument is less than the \336rst.) 318.11 234.67 T
6 12 Q
(Signature) 117 206.67 T
4 9 Q
(<) 189 206.67 T
7 F
(C-pointer-1) 199.8 206.67 T
(C-pointer-2) 251.87 206.67 T
4 F
( =>) 298.55 206.67 T
7 F
(boolean) 320.15 206.67 T
6 12 Q
(Arguments) 117 179.67 T
2 11 Q
(c-pointer-1) 189 179.67 T
0 F
(An instance of) 270 179.67 T
4 9.5 Q
(<C-pointer>) 342.79 179.67 T
0 11 Q
(.) 405.49 179.67 T
2 F
(c-pointer-2) 189 159.67 T
0 F
(An instance of) 270 159.67 T
4 9.5 Q
(<C-pointer>) 342.79 159.67 T
0 11 Q
(.) 405.49 159.67 T
6 12 Q
(V) 117 132 T
(alues) 122.89 132 T
2 11 Q
(boolean) 189 132 T
0 F
(An instance of) 270 132 T
4 9.5 Q
(<boolean>) 342.79 132 T
0 11 Q
(.) 394.09 132 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.25/DEST FmPD2
108 738/I4.1.1058392 FmPA
108 738/I4.1.1058604 FmPA
108 413/I4.1.1058394 FmPA
108 413/I4.1.1058504 FmPA
108 738/I4.1.1087354 FmPA
117 581/I4.1.1087386 FmPA
[/Rect[189 304 309 315]/Border[0 0 0]/Page 26/View[/XYZ null 126 670 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "25" 29
%%Page: "26" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(26) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Descr) 135 640 T
(iption) 160.84 640 T
0 11 Q
(Returns) 207 640 T
4 9.5 Q
(#t) 248 640 T
0 11 Q
( if the second ar) 259.4 640 T
(gument is less than the \336rst. This) 336.11 640 T
(allows pointer comparison operations to be performed on) 207 626 T
(instances of) 207 612 T
4 9.5 Q
(<C-pointer>) 266.74 612 T
0 11 Q
(.) 329.44 612 T
(Note that operations corr) 207 592 T
(esponding to C pointer arithmetic) 329.3 592 T
(ar) 207 578 T
(e not de\336ned on) 216.65 578 T
4 9.5 Q
(<C-pointer>) 298.36 578 T
0 11 Q
(. If pointer arithmetic opera-) 361.05 578 T
(tions ar) 207 564 T
(e r) 243.26 564 T
(equir) 255.42 564 T
(ed, use) 280.83 564 T
4 9.5 Q
(pointer-value) 317.64 564 T
0 11 Q
( with an) 391.74 564 T
4 9.5 Q
(index:) 434.25 564 T
0 11 Q
( ar) 468.45 564 T
(gu-) 480.85 564 T
(ment.) 207 550 T
6 12 Q
(See also) 135 522.33 T
4 9.5 Q
(pointer-value) 207 522.33 T
0 11 Q
(,  page 22.) 281.1 522.33 T
(The following functions comprise the conceptual foundation on which the) 126 502 T
(pointer accessing pr) 126 488 T
(otocol is based. In the signatur) 223.26 488 T
(es of these functions,) 371.17 488 T
2 F
(byte-) 475.15 488 T
-0.06 (index) 126 474 P
0 F
-0.06 ( is in terms of addr) 150.45 474 P
-0.06 (ess units \050typically bytes\051 and) 241.71 474 P
2 F
-0.06 (scaled-index) 388.34 474 P
0 F
-0.06 ( is scaled by) 442.93 474 P
-0.09 (the size of the units involved. In the setters,) 126 460 P
2 F
-0.09 (new) 338.7 460 P
0 F
-0.09 ( is the new value to which the) 357.04 460 P
-0.14 (value in the pointed-at location will be set. These functions can be used to def-) 126 446 P
(er) 126 432 T
(ence any general instance of) 135.42 432 T
4 9.5 Q
(<C-pointer>) 274.69 432 T
0 11 Q
(.) 337.39 432 T
3 14 Q
(C-c) 126 384 T
(har) 144.4 384 T
(-at) 162.05 384 T
2 13 Q
(Function) 456.08 384.67 T
6 12 Q
(Signature) 135 359.33 T
4 9 Q
(C-char-at) 207 359.33 T
7 F
(C-pointer) 261 359.33 T
4 F
( #key) 299.67 359.33 T
7 F
(byte-index) 332.07 359.33 T
(scaled-index) 379.81 359.33 T
4 F
( =>) 429.8 359.33 T
7 F
(machine-) 451.4 359.33 T
(word) 207 348.33 T
3 14 Q
(C-c) 126 302 T
(har) 144.4 302 T
(-at-setter) 162.05 302 T
2 13 Q
(Function) 456.08 302.67 T
6 12 Q
(Signature) 135 277.33 T
4 9 Q
(C-char-at-setter) 207 277.33 T
7 F
(new) 298.8 277.33 T
(C-pointer) 320.7 277.33 T
4 F
( #key) 359.37 277.33 T
7 F
(byte-index) 391.77 277.33 T
(scaled-index) 439.51 277.33 T
4 F
(=>) 217.8 266.33 T
7 F
(machine-word) 234 266.33 T
3 14 Q
(C-signed-c) 126 220 T
(har) 185.22 220 T
(-at) 202.87 220 T
2 13 Q
(Function) 456.08 220.67 T
6 12 Q
(Signature) 135 195.33 T
4 9 Q
(C-signed-char-at) 207 195.33 T
7 F
(C-pointer) 298.8 195.33 T
4 F
( #key) 337.47 195.33 T
7 F
(byte-index) 369.87 195.33 T
(scaled-index) 417.61 195.33 T
4 F
( =>) 467.6 195.33 T
7 F
(machine-word) 207 184.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.26/DEST FmPD2
267 763/I4.1.1059581 FmPA
267 763/I4.1.1059579 FmPA
126 537/I4.1.1058396 FmPA
126 537/I4.1.1058660 FmPA
126 455/I4.1.1062081 FmPA
126 455/I4.1.1062082 FmPA
135 792/I4.1.1087398 FmPA
[/Rect[207 518 327 529]/Border[0 0 0]/Page 26/View[/XYZ null 126 670 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "26" 30
%%Page: "27" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(27) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 14 Q
0 X
(C-signed-c) 108 638.67 T
(har) 167.22 638.67 T
(-at-setter) 184.87 638.67 T
2 13 Q
(Function) 438.08 639.33 T
6 12 Q
(Signature) 117 614 T
4 9 Q
-0.36 (C-signed-char-at-setter) 189 614 P
7 F
-0.15 (new) 318.24 614 P
-0.15 (C-pointer) 339.78 614 P
4 F
-0.36 ( #key) 378.45 614 P
7 F
-0.15 (byte-index) 410.13 614 P
-0.15 (scaled-) 457.51 614 P
(index) 189 603 T
4 F
(=>) 199.8 592 T
7 F
(machine-word) 216 592 T
3 14 Q
(C-unsigned-c) 108 545.67 T
(har) 181.25 545.67 T
(-at) 198.9 545.67 T
2 13 Q
(Function) 438.08 546.33 T
6 12 Q
(Signature) 117 521 T
4 9 Q
(C-unsigned-char-at) 189 521 T
7 F
(C-pointer) 291.6 521 T
4 F
( #key) 330.27 521 T
7 F
(byte-index) 362.67 521 T
(scaled-index) 410.41 521 T
4 F
( =>) 460.4 521 T
7 F
(machine-word) 189 510 T
3 14 Q
(C-unsigned-c) 108 463.67 T
(har) 181.25 463.67 T
(-at-setter) 198.9 463.67 T
2 13 Q
(Function) 438.08 464.33 T
6 12 Q
(Signature) 117 439 T
4 9 Q
(C-unsigned-char-at-setter) 189 439 T
7 F
(new) 329.4 439 T
(C-pointer) 351.3 439 T
4 F
( #key) 389.97 439 T
7 F
(byte-index) 422.37 439 T
(scaled-index) 189 428 T
4 F
( =>) 238.99 428 T
7 F
(machine-word) 260.6 428 T
3 14 Q
(C-unsigned-shor) 108 381.67 T
(t-at) 200.06 381.67 T
2 13 Q
(Function) 438.08 382.33 T
6 12 Q
(Signature) 117 357 T
4 9 Q
(C-unsigned-short-at) 189 357 T
7 F
(C-pointer) 297 357 T
4 F
( #key) 335.67 357 T
7 F
(byte-index) 368.07 357 T
(scaled-index) 415.81 357 T
4 F
(=>) 199.8 346 T
7 F
(machine-word) 216 346 T
3 14 Q
(C-unsigned-shor) 108 299.67 T
(t-at-setter) 200.06 299.67 T
2 13 Q
(Function) 438.08 300.33 T
6 12 Q
(Signature) 117 275 T
4 9 Q
(C-unsigned-short-at-setter) 189 275 T
7 F
(new) 334.8 275 T
(C-pointer) 356.7 275 T
4 F
( #key) 395.37 275 T
7 F
(byte-index) 427.77 275 T
(scaled-index) 189 264 T
4 F
(=>) 255.2 264 T
7 F
(machine-word) 271.39 264 T
3 14 Q
(C-signed-shor) 108 217.67 T
(t-at) 186.04 217.67 T
2 13 Q
(Function) 438.08 218.33 T
6 12 Q
(Signature) 117 193 T
4 9 Q
(C-signed-short-at) 189 193 T
7 F
(C-pointer) 286.2 193 T
4 F
( #key) 324.87 193 T
7 F
(byte-index) 357.27 193 T
(scaled-index) 405.01 193 T
4 F
( =>) 455 193 T
7 F
(machine-word) 189 182 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.27/DEST FmPD2
108 792/I4.1.1062021 FmPA
108 792/I4.1.1062022 FmPA
108 617/I4.1.1058398 FmPA
108 617/I4.1.1058662 FmPA
108 535/I4.1.1058400 FmPA
108 535/I4.1.1058644 FmPA
108 535/I4.1.1058404 FmPA
108 535/I4.1.1058616 FmPA
108 535/I4.1.1058408 FmPA
108 535/I4.1.1058672 FmPA
108 453/I4.1.1058410 FmPA
108 453/I4.1.1058674 FmPA
108 371/I4.1.1058412 FmPA
108 371/I4.1.1058656 FmPA
108 371/I4.1.1058416 FmPA
108 371/I4.1.1058640 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "27" 31
%%Page: "28" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(28) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 14 Q
0 X
(C-signed-shor) 126 638.67 T
(t-at-setter) 204.04 638.67 T
2 13 Q
(Function) 456.08 639.33 T
6 12 Q
(Signature) 135 614 T
4 9 Q
(C-signed-short-at-setter) 207 614 T
7 F
(new) 342 614 T
(C-pointer) 363.9 614 T
4 F
( #key) 402.57 614 T
7 F
(byte-index) 434.97 614 T
(scaled-index) 207 603 T
4 F
(=>) 273.2 603 T
7 F
(machine-word) 289.39 603 T
3 14 Q
(C-shor) 126 556.67 T
(t-at) 163.21 556.67 T
2 13 Q
(Function) 456.08 557.33 T
6 12 Q
(Signature) 135 532 T
4 9 Q
(C-short-at) 207 532 T
7 F
(C-pointer) 266.4 532 T
4 F
( #key) 305.07 532 T
7 F
(byte-index) 337.47 532 T
(scaled-index) 385.21 532 T
4 F
( =>) 435.2 532 T
7 F
(machine-) 456.8 532 T
(word) 207 521 T
3 14 Q
(C-shor) 126 474.67 T
(t-at-setter) 163.21 474.67 T
2 13 Q
(Function) 456.08 475.33 T
6 12 Q
(Signature) 135 450 T
4 9 Q
(C-short-at-setter) 207 450 T
7 F
(new) 304.2 450 T
(C-pointer) 326.1 450 T
4 F
( #key) 364.77 450 T
7 F
(byte-index) 397.17 450 T
(scaled-index) 444.91 450 T
4 F
(=>) 207 439 T
7 F
(machine-word) 223.2 439 T
3 14 Q
(C-unsigned-long-at) 126 392.67 T
2 13 Q
(Function) 456.08 393.33 T
6 12 Q
(Signature) 135 368 T
4 9 Q
(C-unsigned-long-at) 207 368 T
7 F
(C-pointer) 309.6 368 T
4 F
( #key) 348.27 368 T
7 F
(byte-index) 380.67 368 T
(scaled-index) 428.41 368 T
4 F
( =>) 478.4 368 T
7 F
(machine-word) 207 357 T
3 14 Q
(C-unsigned-long-at-setter) 126 310.67 T
2 13 Q
(Function) 456.08 311.33 T
6 12 Q
(Signature) 135 286 T
4 9 Q
(C-unsigned-long-at-setter) 207 286 T
7 F
(new) 347.4 286 T
(C-pointer) 369.3 286 T
4 F
( #key) 407.97 286 T
7 F
(byte-index) 440.37 286 T
(scaled-index) 207 275 T
4 F
( =>) 256.99 275 T
7 F
(machine-word) 278.6 275 T
3 14 Q
(C-signed-long-at) 126 228.67 T
2 13 Q
(Function) 456.08 229.33 T
6 12 Q
(Signature) 135 204 T
4 9 Q
(C-signed-long-at) 207 204 T
7 F
(C-pointer) 298.8 204 T
4 F
( #key) 337.47 204 T
7 F
(byte-index) 369.87 204 T
(scaled-index) 417.61 204 T
4 F
( =>) 467.6 204 T
7 F
(machine-word) 207 193 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.28/DEST FmPD2
126 792/I4.1.1062298 FmPA
126 792/I4.1.1062299 FmPA
126 628/I4.1.1058418 FmPA
126 628/I4.1.1058642 FmPA
126 546/I4.1.1058420 FmPA
126 546/I4.1.1058668 FmPA
126 464/I4.1.1058422 FmPA
126 464/I4.1.1058670 FmPA
126 382/I4.1.1058424 FmPA
126 382/I4.1.1058652 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "28" 32
%%Page: "29" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(29) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 14 Q
0 X
(C-signed-long-at-setter) 108 638.67 T
2 13 Q
(Function) 438.08 639.33 T
6 12 Q
(Signature) 117 614 T
4 9 Q
-0.36 (C-signed-long-at-setter) 189 614 P
7 F
-0.15 (new) 318.24 614 P
-0.15 (C-pointer) 339.78 614 P
4 F
-0.36 ( #key) 378.45 614 P
7 F
-0.15 (byte-index) 410.13 614 P
-0.15 (scaled-) 457.51 614 P
(index) 189 603 T
4 F
( =>) 210.5 603 T
7 F
(machine-word) 232.1 603 T
3 14 Q
(C-long-at) 108 556.67 T
2 13 Q
(Function) 438.08 557.33 T
6 12 Q
(Signature) 117 532 T
4 9 Q
(C-long-at) 189 532 T
7 F
(C-pointer) 243 532 T
4 F
( #key) 281.67 532 T
7 F
(byte-index) 314.07 532 T
(scaled-index) 361.81 532 T
4 F
( =>) 411.8 532 T
7 F
(machine-) 433.4 532 T
(word) 189 521 T
3 14 Q
(C-long-at-setter) 108 474.67 T
2 13 Q
(Function) 438.08 475.33 T
6 12 Q
(Signature) 117 450 T
4 9 Q
-1.01 (C-long-at-setter) 189 450 P
7 F
-0.42 (new) 279.79 450 P
-0.42 (C-pointer) 300.67 450 P
4 F
-1.01 ( #key) 339.34 450 P
7 F
-0.42 (byte-index) 369.71 450 P
-0.42 (scaled-index) 416.43 450 P
4 F
-1.01 ( =>) 466.43 450 P
7 F
(machine-word) 189 439 T
3 14 Q
(C-unsigned-int-at) 108 392.67 T
2 13 Q
(Function) 438.08 393.33 T
6 12 Q
(Signature) 117 368 T
4 9 Q
-0 (C-unsigned-int-at) 135 347 P
7 F
-0 (C-pointer) 232.2 347 P
4 F
-0 ( #key) 270.87 347 P
7 F
-0 (byte-index) 303.27 347 P
-0 (scaled-index) 351 347 P
4 F
-0 ( =>) 401 347 P
7 F
-0 (machine-word) 422.6 347 P
3 14 Q
(C-unsigned-int-at-setter) 108 300.67 T
2 13 Q
(Function) 438.08 301.33 T
6 12 Q
(Signature) 117 276 T
4 9 Q
(C-unsigned-int-at-setter) 189 276 T
7 F
(new) 324 276 T
(C-pointer) 345.9 276 T
4 F
( #key) 384.57 276 T
7 F
(byte-index) 416.97 276 T
(scaled-index) 189 265 T
4 F
( =>) 238.99 265 T
7 F
(machine-word) 260.6 265 T
3 14 Q
(C-signed-int-at) 108 218.67 T
2 13 Q
(Function) 438.08 219.33 T
6 12 Q
(Signature) 117 194 T
4 9 Q
(C-signed-int-at) 189 194 T
7 F
(C-pointer) 275.4 194 T
4 F
( #key) 314.07 194 T
7 F
(byte-index) 346.47 194 T
(scaled-index) 394.21 194 T
4 F
( =>) 444.2 194 T
7 F
(machine-word) 189 183 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.29/DEST FmPD2
108 792/I4.1.1058426 FmPA
108 792/I4.1.1058654 FmPA
108 710/I4.1.1058428 FmPA
108 710/I4.1.1058632 FmPA
108 628/I4.1.1058430 FmPA
108 628/I4.1.1058634 FmPA
108 546/I4.1.1058432 FmPA
108 546/I4.1.1058664 FmPA
108 454/I4.1.1058434 FmPA
108 454/I4.1.1058666 FmPA
108 372/I4.1.1058436 FmPA
108 372/I4.1.1058648 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "29" 33
%%Page: "30" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(30) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 14 Q
0 X
(C-signed-int-at-setter) 126 638.67 T
2 13 Q
(Function) 456.08 639.33 T
6 12 Q
(Signature) 135 614 T
4 9 Q
(C-signed-int-at-setter) 207 614 T
7 F
(new) 331.2 614 T
(C-pointer) 353.1 614 T
4 F
( #key) 391.77 614 T
7 F
(byte-index) 424.17 614 T
(scaled-) 471.91 614 T
(index) 207 603 T
4 F
( =>) 228.5 603 T
7 F
(machine-word) 250.1 603 T
3 14 Q
(C-int-at) 126 556.67 T
2 13 Q
(Function) 456.08 557.33 T
6 12 Q
(Signature) 135 532 T
4 9 Q
-0.77 (C-int-at) 207 532 P
7 F
-0.32 (C-pointer) 254.83 532 P
4 F
-0.77 ( #key) 293.5 532 P
7 F
-0.32 (byte-index) 324.36 532 P
-0.32 (scaled-index) 371.32 532 P
4 F
-0.77 ( =>) 421.31 532 P
7 F
-0.32 (machine-word) 441.37 532 P
3 14 Q
(C-int-at-setter) 126 484.67 T
2 13 Q
(Function) 456.08 485.33 T
6 12 Q
(Signature) 135 460 T
4 9 Q
-0.24 (C-int-at-setter) 207 460 P
7 F
-0.1 (new) 293.16 460 P
-0.1 (C-pointer) 314.81 460 P
4 F
-0.24 ( #key) 353.48 460 P
7 F
-0.1 (byte-index) 385.4 460 P
-0.1 (scaled-index) 432.89 460 P
4 F
-0.24 ( =>) 482.89 460 P
7 F
(machine-word) 207 449 T
3 14 Q
(C-doub) 126 402.67 T
(le-at) 166.07 402.67 T
2 13 Q
(Function) 456.08 403.33 T
6 12 Q
(Signature) 135 378 T
4 9 Q
(C-double-at) 207 378 T
7 F
(C-pointer) 271.8 378 T
4 F
( #key) 310.47 378 T
7 F
(byte-index) 342.87 378 T
(scaled-index) 390.61 378 T
4 F
( =>) 440.6 378 T
7 F
(\337oat) 462.2 378 T
3 14 Q
(C-doub) 126 330.67 T
(le-at-setter) 166.07 330.67 T
2 13 Q
(Function) 456.08 331.33 T
6 12 Q
(Signature) 135 306 T
4 9 Q
(C-double-at-setter) 207 306 T
7 F
(new-double-\337oat) 309.6 306 T
(C-pointer) 384.35 306 T
4 F
( #key) 423.02 306 T
7 F
(byte-index) 455.42 306 T
(scaled-index) 207 295 T
4 F
( =>) 256.99 295 T
7 F
(\337oat) 278.6 295 T
3 14 Q
(C-\337oat-at) 126 248.67 T
2 13 Q
(Function) 456.08 249.33 T
6 12 Q
(Signature) 135 224 T
4 9 Q
(C-float-at) 207 224 T
7 F
(C-pointer) 266.4 224 T
4 F
( #key) 305.07 224 T
7 F
(byte-index) 337.47 224 T
(scaled-index) 385.21 224 T
4 F
( =>) 435.2 224 T
7 F
(\337oat) 456.8 224 T
3 14 Q
(C-\337oat-at-setter) 126 176.67 T
2 13 Q
(Function) 456.08 177.33 T
6 12 Q
(Signature) 135 152 T
4 9 Q
(C-float-at-setter) 207 152 T
7 F
(new-single-\337oat) 304.2 152 T
(C-pointer) 375.6 152 T
4 F
( #key) 414.27 152 T
7 F
(byte-index) 446.67 152 T
(scaled-index) 207 141 T
4 F
( =>) 256.99 141 T
7 F
(\337oat) 278.6 141 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.30/DEST FmPD2
126 792/I4.1.1058438 FmPA
126 792/I4.1.1058650 FmPA
126 710/I4.1.1058440 FmPA
126 710/I4.1.1058628 FmPA
126 638/I4.1.1058442 FmPA
126 638/I4.1.1058630 FmPA
126 556/I4.1.1058444 FmPA
126 556/I4.1.1058620 FmPA
126 484/I4.1.1058446 FmPA
126 484/I4.1.1058622 FmPA
126 402/I4.1.1058448 FmPA
126 402/I4.1.1058624 FmPA
126 330/I4.1.1058450 FmPA
126 330/I4.1.1058626 FmPA
126 402/I4.1.1087410 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "30" 34
%%Page: "31" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.5) 447.99 677.67 T
(Designator classes) 469.37 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(31) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 14 Q
0 X
(C-pointer) 108 638.67 T
(-at) 158.81 638.67 T
2 13 Q
(Function) 438.08 639.33 T
6 12 Q
(Signature) 117 614 T
4 9 Q
-1.1 (C-pointer-at) 189 614 P
7 F
-0.46 (C-pointer) 258.1 614 P
4 F
-1.1 ( #key) 296.78 614 P
7 F
-0.46 (byte-index) 326.98 614 P
-0.46 (scaled-index) 373.62 614 P
4 F
-1.1 ( =>) 423.62 614 P
7 F
-0.46 (C-pointer) 443.02 614 P
3 14 Q
(C-pointer) 108 566.67 T
(-at-setter) 158.81 566.67 T
2 13 Q
(Function) 438.08 567.33 T
6 12 Q
(Signature) 117 542 T
4 9 Q
-1.18 (C-pointer-at-setter) 189 542 P
7 F
-0.49 (new) 295.82 542 P
-0.49 (C-pointer) 316.53 542 P
4 F
-1.18 ( #key) 355.2 542 P
7 F
-0.49 (byte-index) 385.24 542 P
-0.49 (scaled-index) 431.79 542 P
4 F
(=>) 189 531 T
7 F
(C-pointer) 205.2 531 T
3 13 Q
(1.5.5  Structure types) 108 499.33 T
3 14 Q
(<C-struct>) 108 451.67 T
2 13 Q
(Open abstract class) 384.18 452.33 T
6 12 Q
(Descr) 117 427 T
(iption) 142.84 427 T
0 11 Q
(The abstract super) 189 427 T
(class of all classes designating a C str) 278.39 427 T
(uct) 457.95 427 T
(type. It is a subclass of) 189 413 T
4 9.5 Q
(<C-value>) 300.45 413 T
0 11 Q
(. It is a subclass of) 351.75 413 T
4 9.5 Q
(<C-) 441.62 413 T
(value>) 189 399 T
0 11 Q
(. Y) 223.2 399 T
(ou can describe new str) 235.02 399 T
(uct types using the) 349.24 399 T
4 9.5 Q
(define) 443.86 399 T
(C-struct) 189 385 T
0 11 Q
( macr) 234.6 385 T
(o.) 261.59 385 T
(Classes designating C str) 189 365 T
(ucts ar) 310.49 365 T
(e not instantiable. Wher) 342.66 365 T
(e a) 458.33 365 T
(slot, array element, function parameter or function r) 189 351 T
(esult is) 441.91 351 T
(typed as a str) 189 337 T
(uct value, pointers to that str) 253.72 337 T
(uct type ar) 393.4 337 T
(e) 445.23 337 T
(accepted and r) 189 323 T
(eturned.) 259.99 323 T
3 13 Q
(1.5.6  Union types) 108 289.67 T
3 14 Q
(<C-union>) 108 242 T
2 13 Q
(Open abstract class) 384.18 242.67 T
6 12 Q
(Descr) 117 217.33 T
(iption) 142.84 217.33 T
0 11 Q
(The abstract super) 189 217.33 T
(class of all classes designating a C union) 278.39 217.33 T
(type. It is a subclass of) 189 203.33 T
4 9.5 Q
(<C-value>) 300.45 203.33 T
0 11 Q
(. Y) 351.75 203.33 T
(ou can describe new) 363.58 203.33 T
(union types with the macr) 189 189.33 T
(o) 316.75 189.33 T
4 9.5 Q
(define C-union) 325.51 189.33 T
0 11 Q
(. Classes desig-) 405.31 189.33 T
(nating C unions ar) 189 175.33 T
(e not instantiable. Wher) 279.21 175.33 T
(e a slot, array ele-) 394.89 175.33 T
(ment, function parameter or function r) 189 161.33 T
(esult is typed as a) 376.66 161.33 T
(union value, pointers to that union type ar) 189 147.33 T
(e accepted and) 395.08 147.33 T
(r) 189 133.33 T
(eturned.) 193.15 133.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.31/DEST FmPD2
108 792/I4.1.1058452 FmPA
108 792/I4.1.1058636 FmPA
108 720/I4.1.1058454 FmPA
108 720/I4.1.1058638 FmPA
138 652/I4.1.1059993 FmPA
138 652/I4.1.1060121 FmPA
108 605/I4.1.1058568 FmPA
108 605/I4.1.1058566 FmPA
300 564/I4.1.1059863 FmPA
300 564/I4.1.1059861 FmPA
444 550/I4.1.1059250 FmPA
444 550/I4.1.1059929 FmPA
138 442/I4.1.1059995 FmPA
138 442/I4.1.1060125 FmPA
108 395/I4.1.1058574 FmPA
108 395/I4.1.1058572 FmPA
326 341/I4.1.1059255 FmPA
326 341/I4.1.1059937 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "31" 35
%%Page: "32" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(32) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(1.5.7  Notes on C type macr) 126 639.33 T
(os) 265.04 639.33 T
0 11 Q
-0.36 (The C-FFI\325s C interface description language does not model all of the ways of) 126 619.67 P
(de\336ning new types in C, but all C types should be expr) 126 605.67 T
(essible in it. As a sim-) 393.19 605.67 T
(pli\336cation, we do not support anonymous base types in the C interface) 126 591.67 T
(description language. If a str) 126 577.67 T
(uctur) 264.75 577.67 T
(e or union \336eld has an in-line type de\336ni-) 290.64 577.67 T
-0 (tion in C, that de\336nition must be extracted and given a name in or) 126 563.67 P
-0 (der for it to) 446.29 563.67 P
(be used. For example, the following C str) 126 549.67 T
(uct) 325.63 549.67 T
4 9 Q
(struct something {) 153 529 T
(char *name;) 163.8 518 T
(long flags;) 163.8 507 T
(union {) 163.8 496 T
(long int_val;) 169.2 485 T
(char *string_val;) 169.2 474 T
(} val;) 163.8 463 T
(}) 153 452 T
0 11 Q
(can be described with these de\336nitions:) 126 431.67 T
4 9 Q
(define C-union <anonymous-union-1>) 153 411 T
(slot int-val) 163.8 400 T
(:: <C-long>;) 250.2 400 T
(slot string-val :: <C-string>;) 163.8 389 T
(end C-union;) 153 378 T
(define C-struct <anonymous-struct-1>) 153 359 T
(slot name  :: <C-string>;) 163.8 348 T
(slot flags :: <C-long>;) 163.8 337 T
(slot val   :: <anonymous-union-1>;) 163.8 326 T
(end C-struct;) 153 315 T
0 11 Q
-0.4 (The slots of these ex-inline types must be accessed thr) 126 294.67 P
-0.4 (ough a chain of accesses,) 383 294.67 P
(for example) 126 280.67 T
4 9.5 Q
(o.val.string-val) 186.75 280.67 T
0 11 Q
(.) 277.95 280.67 T
3 16 Q
(1.6  De\336ning types) 126 245.33 T
126 389/G4.1038252 FmPA
0 11 Q
(This section covers the de\336nition macr) 126 224.67 T
(os that cr) 313.1 224.67 T
(eate Dylan designators for C) 357.37 224.67 T
(types, str) 126 210.67 T
(ucts and unions.) 170.25 210.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.32/DEST FmPD2
156 792/I4.1.1059997 FmPA
156 792/I4.1.1060109 FmPA
156 792/I4.1.1060105 FmPA
152 400/I4.1.1059999 FmPA
152 400/I4.1.1060057 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "32" 36
%%Page: "33" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.6) 461.87 677.67 T
(Defining types) 483.25 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(33) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 13 Q
0 X
(1.6.1  De\336ning specializ) 108 639.33 T
(ed ver) 227.79 639.33 T
(sions of designator c) 259.06 639.33 T
(lasses) 366.09 639.33 T
3 14 Q
(de\336ne C-subtype) 108 591.67 T
2 13 Q
(De\336nition macr) 397.16 592.33 T
(o) 480.23 592.33 T
6 12 Q
(Summar) 117 567 T
(y) 154.48 567 T
0 11 Q
(De\336nes a specialized designator class for a C type based on) 189 567 T
(an existing designator class for that type.) 189 553 T
6 12 Q
(Signature) 117 525.33 T
4 9 Q
(define) 189 525.33 T
([) 226.8 525.33 T
7 F
(modi\336ers) 232.2 525.33 T
4 F
(*] C-subtype) 269.69 525.33 T
5 F
(name) 339.89 525.33 T
4 F
( \050) 361.49 525.33 T
5 F
(superclasses) 372.29 525.33 T
4 F
(\051) 437.09 525.33 T
([) 199.8 514.33 T
7 F
(slot-spec) 205.2 514.33 T
4 F
(;) 241.19 514.33 T
(\311] [;]) 251.99 514.33 T
([) 199.8 503.33 T
7 F
(type-options) 205.2 503.33 T
4 F
(] [;]) 256.72 503.33 T
(end [C-subtype] [) 189 492.33 T
7 F
(name) 280.8 492.33 T
4 F
(]) 302.3 492.33 T
6 12 Q
(Arguments) 117 466.33 T
2 11 Q
(modi\336ers) 189 466.33 T
0 F
(The same as the modi\336ers allowed in) 270 466.33 T
4 9.5 Q
(define-class) 270 452.33 T
0 11 Q
(.) 338.4 452.33 T
2 F
(name) 189 432.33 T
0 F
(A Dylan variable name.) 270 432.33 T
2 F
(super) 189 412.33 T
(classes) 213.26 412.33 T
0 F
(A list of Dylan names.) 270 412.33 T
2 F
(slot-spec) 189 392.33 T
0 F
(Same syntax as a slot de\336nition in) 270 392.33 T
4 9.5 Q
(define-) 437.62 392.33 T
(class) 270 378.33 T
0 11 Q
(.) 298.5 378.33 T
2 F
(type-options) 189 358.33 T
0 F
(A pr) 270 358.33 T
(operty list.) 292.07 358.33 T
(name) 189 338.33 T
6 12 Q
(V) 117 310.67 T
(alues) 122.89 310.67 T
(Descr) 117 282.67 T
(iption) 142.84 282.67 T
0 11 Q
(De\336nes a specialized designator class for a C type based on) 189 282.67 T
(an existing designator class for that type. It does this by) 189 268.67 T
(de\336ning a subclass of the original designator class, and is a) 189 254.67 T
-0.27 (simple wrapper ar) 189 240.67 P
-0.27 (ound) 278.11 240.67 P
4 9.5 Q
-0.57 (define class) 306.35 240.67 P
0 11 Q
-0.27 ( fr) 374.18 240.67 P
-0.27 (om which it takes its) 384.47 240.67 P
-0.36 (syntax. The) 189 226.67 P
2 F
-0.36 (super) 246.89 226.67 P
-0.36 (classes) 271.15 226.67 P
0 F
-0.36 (,) 300.68 226.67 P
2 F
-0.36 (slot-spec) 305.82 226.67 P
0 F
-0.36 (s, and) 343.9 226.67 P
2 F
-0.36 (modifiers) 374.73 226.67 P
0 F
-0.36 ( ar) 415.68 226.67 P
-0.36 (e passed on) 427.72 226.67 P
(to) 189 212.67 T
4 9.5 Q
(define class) 201.34 212.67 T
0 11 Q
( unchanged. In ef) 269.74 212.67 T
(fect, it expands to:) 353.91 212.67 T
4 9 Q
(define class) 189 192 T
7 F
(name) 259.2 192 T
4 F
( \050) 280.7 192 T
7 F
(super) 291.5 192 T
(classes) 312.84 192 T
4 F
(\051) 340.82 192 T
7 F
(slot-spec) 199.8 181 T
4 F
(; ...) 235.79 181 T
(end class;) 189 170 T
0 11 Q
(In terms of C,) 189 149.67 T
4 9.5 Q
(define C-subtype) 257.9 149.67 T
0 11 Q
( can be thought of as imple-) 349.1 149.67 T
(menting a str) 189 135.67 T
(ongly typed version of) 253.09 135.67 T
4 9.5 Q
(typedef) 366 135.67 T
0 11 Q
( because a new) 405.9 135.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.33/DEST FmPD2
138 792/I4.1.1060001 FmPA
138 792/I4.1.1060055 FmPA
138 792/I4.1.1060053 FmPA
138 792/I4.1.1060049 FmPA
108 745/I4.1.1058460 FmPA
108 745/I4.1.1058688 FmPA
258 301/I4.1.1059261 FmPA
258 301/I4.1.1059935 FmPA
108 745/I4.1.1087422 FmPA
117 435/I4.1.1087431 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "33" 37
%%Page: "34" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(34) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(designator class is generated that Dylan\325s type system can) 207 640.67 T
(distinguish fr) 207 626.67 T
(om the designator class on which it was based.) 272.35 626.67 T
(As well as inheriting fr) 207 612.67 T
(om an existing designator class, other) 318.17 612.67 T
(Dylan classes can be mixed in too.) 207 598.67 T
-0.43 (The optional) 207 578.67 P
2 F
-0.43 (type-options) 270.57 578.67 P
0 F
-0.43 (must be a pr) 327.89 578.67 P
-0.43 (operty list. The) 387.06 578.67 P
4 9.5 Q
-0.88 (c-name:) 461.78 578.67 P
0 11 Q
(keywor) 207 564.67 T
(d is r) 243.83 564.67 T
(ecognized, allowing the original C name of the) 268.06 564.67 T
-0.23 (type designated by the class to be documented. The) 207 550.67 P
4 9.5 Q
-0.47 (pointer-) 458.4 550.67 P
(type-name:) 207 536.67 T
0 11 Q
(keywor) 269.7 536.67 T
(d option can be used to name the desig-) 306.53 536.67 T
(nator for pointers to) 207 522.67 T
2 F
(name) 307.53 522.67 T
0 F
(.) 331.37 522.67 T
(Some example C declarations:) 126 502.67 T
4 9 Q
(typedef void *Handle;) 153 482 T
(typedef Handle WindowHandle;) 153 471 T
(typedef Handle StreamHandle;) 153 460 T
(extern WindowHandle CurrentWindow \050void\051;) 153 441 T
(extern StreamHandle CurrentStream \050void\051;) 153 430 T
0 11 Q
(Example FFI de\336nitions:) 153 409.67 T
4 9 Q
(define C-subtype <Handle> \050<void*>\051 end;) 153 389 T
(define C-subtype <WindowHandle> \050<Handle>\051 end;) 153 378 T
(define C-subtype <StreamHandle> \050<Handle>\051 end;) 153 367 T
(define C-function CurrentWindow) 153 348 T
(result value :: <WindowHandle>;) 163.8 337 T
(c-name: "CurrentWindow";) 163.8 326 T
(end C-function;) 153 315 T
(define C-function CurrentStream) 153 296 T
(result value :: <StreamHandle>;) 163.8 285 T
(c-name: "CurrentStream";) 163.8 274 T
(end C-function;) 153 263 T
0 11 Q
(Example transactions:) 126 242.67 T
4 9 Q
(? <void*> == <WindowHandle> | <WindowHandle> ==) 153 222 T
(<StreamHandle>;) 234 211 T
(#f) 153 200 T
(? define variable *cw* = CurrentWindow\050\051;) 153 181 T
(// Defined *cw*) 153 170 T
(? *cw*) 153 151 T
({<WindowHandle> #xff5400}) 153 140 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.34/DEST FmPD2
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "34" 38
%%Page: "35" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.6) 461.87 677.67 T
(Defining types) 483.25 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(35) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(? define variable *cs* = CurrentStream\050\051;) 135 642 T
(// Defined *cs*) 135 631 T
(? *cs*) 135 612 T
({<StreamHandle> #xff6400}) 135 601 T
(? instance?\050*cs*, <WindowHandle>\051 |) 135 582 T
(instance?\050*cw*, <StreamHandle>\051;) 199.8 571 T
(#f) 135 560 T
0 11 Q
-0.06 (The following example uses the ability to specify extra super) 108 539.67 P
-0.06 (classes to place a) 401.86 539.67 P
(type beneath an abstract class.) 108 525.67 T
(Example C declarations:) 108 505.67 T
4 9 Q
(struct _Matrix {) 135 485 T
(int rank;) 145.8 474 T
(int *dimensions;) 145.8 463 T
(int *values;) 145.8 452 T
(};) 135 441 T
(typedef struct _Matrix *Matrix;) 135 422 T
(extern Matrix MatrixAdd \050Matrix m, Matrix n\051;) 135 403 T
0 11 Q
(Example FFI de\336nitions:) 108 382.67 T
4 9 Q
(define C-struct <_Matrix-struct>) 135 362 T
(slot rank :: <C-int>;) 145.8 351 T
(slot dimensions :: <C-int*>;) 145.8 340 T
(slot values :: <C-int*>;) 145.8 329 T
(pointer-type-name: <_Matrix-struct*>;) 145.8 318 T
(end C-struct;) 135 307 T
(define C-subtype <Matrix> \050<_Matrix-struct*>, <number>\051 end;) 135 288 T
(define C-function MatrixAdd) 135 269 T
(parameter m :: <Matrix>;) 145.8 258 T
(parameter n :: <Matrix>;) 145.8 247 T
(result value :: <Matrix>;) 145.8 236 T
(c-name: \322MatrixAdd\323;) 145.8 225 T
(end C-function;) 135 214 T
(define method \134+ \050m1 :: <Matrix>, m2 :: <Matrix>\051 =>) 135 195 T
(\050r :: <Matrix>\051) 151.2 184 T
(MatrixAdd\050m1, m2\051) 145.8 173 T
(end method;) 135 162 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.35/DEST FmPD2
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "35" 39
%%Page: "36" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(36) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(1.6.2  De\336ning specializ) 126 639.33 T
(ed designator c) 245.79 639.33 T
(lasses) 324.39 639.33 T
3 14 Q
(de\336ne C-mapped-subtype) 126 591.67 T
2 13 Q
(De\336nition macr) 415.16 592.33 T
(o) 498.23 592.33 T
6 12 Q
(Summar) 135 567 T
(y) 172.48 567 T
0 11 Q
(Allows you to de\336ne a name to which to bind a pointer des-) 207 567 T
(ignator) 207 553 T
(.) 241.34 553 T
6 12 Q
(Signature) 135 525.33 T
4 9 Q
(define) 207 525.33 T
7 F
(modi\336ers) 244.8 525.33 T
4 F
( C-mapped-subtype) 282.29 525.33 T
7 F
(type-name) 379.49 525.33 T
4 F
( \050) 422 525.33 T
7 F
(super) 432.8 525.33 T
(classes) 454.14 525.33 T
4 F
(\051) 482.12 525.33 T
([map) 217.8 514.33 T
7 F
(high-level-type) 244.8 514.33 T
4 F
([,) 316.6 514.33 T
(import-function:) 332.8 514.33 T
7 F
(import-fun) 424.6 514.33 T
4 F
(]) 468.61 514.33 T
([,) 315 503.33 T
(export-function:) 331.2 503.33 T
7 F
(export-fun) 423 503.33 T
4 F
(];]) 465.01 503.33 T
([import-map) 217.8 492.33 T
7 F
(high-level-type) 282.6 492.33 T
4 F
(,) 343.6 492.33 T
(import-function:) 223.2 481.33 T
7 F
(import-function) 315 481.33 T
4 F
(;]) 379.51 481.33 T
([export-map) 217.8 470.33 T
7 F
(high-level-type) 282.6 470.33 T
4 F
(,) 343.6 470.33 T
(export-function:) 223.2 459.33 T
7 F
(export-function) 315 459.33 T
4 F
(;]) 377.51 459.33 T
([type-options]) 223.2 448.33 T
(end) 207 437.33 T
6 12 Q
(Arguments) 135 411.33 T
2 11 Q
(modi\336ers) 207 411.33 T
0 F
(The same as the modi\336ers allowed in) 288 411.33 T
4 9.5 Q
(define-class) 288 397.33 T
0 11 Q
(.) 356.4 397.33 T
2 F
(type-name) 207 377.33 T
0 F
(A Dylan variable name.) 288 377.33 T
2 F
(super) 207 357.33 T
(classes) 231.26 357.33 T
0 F
(A list of Dylan names.) 288 357.33 T
2 F
(high-level-type) 207 337.33 T
0 F
(An instance of) 288 337.33 T
4 9.5 Q
(<function>) 360.79 337.33 T
0 11 Q
(.) 417.79 337.33 T
2 F
(import-fun) 207 317.33 T
0 F
(An instance of) 288 317.33 T
4 9.5 Q
(<function>) 360.79 317.33 T
0 11 Q
(.) 417.79 317.33 T
2 F
(export-fun) 207 297.33 T
0 F
(An instance of) 288 297.33 T
4 9.5 Q
(<function>) 360.79 297.33 T
0 11 Q
(.) 417.79 297.33 T
4 9.5 Q
(type-options) 207 277.33 T
0 11 Q
(A pr) 288 277.33 T
(operty list.) 310.07 277.33 T
6 12 Q
(Descr) 135 249.67 T
(iption) 160.84 249.67 T
0 11 Q
(Allows you to de\336ne a name to which to bind a pointer des-) 207 249.67 T
(ignator) 207 235.67 T
(.) 241.34 235.67 T
-0.02 (The) 207 215.67 P
2 F
-0.02 (modi\336ers) 228.14 215.67 P
0 F
-0.02 ( may be) 268.79 215.67 P
4 9.5 Q
-0.04 (sealed) 309.66 215.67 P
0 11 Q
-0.02 ( or) 343.86 215.67 P
4 9.5 Q
-0.04 (open) 359.67 215.67 P
0 11 Q
-0.02 (. \050The default is) 382.47 215.67 P
4 9.5 Q
-0.04 (sealed) 460.66 215.67 P
0 11 Q
-0.02 (.\051) 494.86 215.67 P
(Their ef) 207 201.67 T
(fect on the class de\336ned is the same as the similar) 244.44 201.67 T
(modi\336ers on an or) 207 187.67 T
(dinary class.) 296.29 187.67 T
-0.03 (The possible combinations ar) 207 167.67 P
-0.03 (e, a map clause, an import-map) 348.57 167.67 P
(clause, an export-map clause, or both an import-map and an) 207 153.67 T
(export-map clause. Any other combinations ar) 207 139.67 T
(e illegal.) 432.61 139.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.36/DEST FmPD2
156 792/I4.1.1060003 FmPA
156 792/I4.1.1060047 FmPA
156 792/I4.1.1060045 FmPA
156 792/I4.1.1060043 FmPA
126 745/I4.1.1058462 FmPA
126 745/I4.1.1058682 FmPA
135 402/I4.1.1087443 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "36" 40
%%Page: "37" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.6) 461.87 677.67 T
(Defining types) 483.25 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(37) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(The) 189 640.67 T
4 9.5 Q
(import-map) 210.16 640.67 T
0 11 Q
( clause speci\336es that a type conversion takes) 267.16 640.67 T
(place when) 189 626.67 T
2 F
(type-name) 247.21 626.67 T
0 F
( is used as a designator for values) 293.65 626.67 T
-0.33 (imported fr) 189 612.67 P
-0.33 (om C into Dylan. The conversion is accomplished) 244.69 612.67 P
-0.2 (by calling the) 189 598.67 P
2 F
-0.2 (import-function) 256.6 598.67 P
0 F
-0.2 ( on the imported value. This call) 327.69 598.67 P
(is automatically inserted into function wrappers, str) 189 584.67 T
(uctur) 441.2 584.67 T
(e) 467.08 584.67 T
(member getters, pointer) 189 570.67 T
(-value der) 305.7 570.67 T
(efer) 355.07 570.67 T
(ence functions and so) 373.42 570.67 T
(on by the C-FFI. The) 189 556.67 T
2 F
(high-level-type) 291.18 556.67 T
0 F
( is used as the Dylan type) 357.18 556.67 T
-0.02 (speci\336er for the appr) 189 542.67 P
-0.02 (opriate parameter or r) 290.22 542.67 P
-0.02 (esult in any wrap-) 397.55 542.67 P
(per function or) 189 528.67 T
4 9.5 Q
(c-struct) 264.6 528.67 T
0 11 Q
( accessor which uses the de\336ned) 310.2 528.67 T
(class. The) 189 514.67 T
4 9.5 Q
(export-map) 238.58 514.67 T
0 11 Q
( clause speci\336es a similar type conver-) 295.58 514.67 T
(sion for exported values. The) 189 500.67 T
2 F
(high-level-type) 333.17 500.67 T
0 F
(must in either) 401.92 500.67 T
(case name an instantiable Dylan type.) 189 486.67 T
4 9 Q
(map <type-c>;) 199.8 466 T
0 11 Q
(is equivalent to:) 189 445.67 T
4 9 Q
(import-map <type-c>;) 199.8 425 T
(export-map <type-c>;) 199.8 414 T
0 11 Q
(The import and export functions ar) 189 393.67 T
(e monadic functions) 359.83 393.67 T
-0.22 (whose single ar) 189 379.67 P
-0.22 (gument is the appr) 264.07 379.67 P
-0.22 (opriate low-level value for) 355.35 379.67 P
(export functions and the appr) 189 365.67 T
(opriate Dylan type for import) 333.68 365.67 T
(functions. Any mapped subtype which speci\336es an import-) 189 351.67 T
(map must specify an) 189 337.67 T
2 F
(import-function) 292.73 337.67 T
0 F
(. Any mapped subtype) 363.82 337.67 T
(which speci\336es an export-map must specify an) 189 323.67 T
2 F
(export-func-) 419.32 323.67 T
(tion) 189 309.67 T
0 F
(.) 206.72 309.67 T
(Map boolean example:) 108 289.67 T
4 9 Q
(bool-header.h:) 135 269 T
(typedef int bool;) 135 250 T
(bool bool_function \050bool b\051;) 135 231 T
(void bool_pointer_function \050bool *b\051;) 135 220 T
(//eof) 135 201 T
(Module: my-module) 135 182 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.37/DEST FmPD2
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "37" 41
%%Page: "38" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(38) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 F
0 X
(define C-mapped-subtype <bool> \050<C-int>\051) 153 642 T
(map <boolean>,) 163.8 631 T
(export-function:) 174.6 620 T
(method \050v :: <boolean>\051 => \050result :: <integer>\051) 185.4 609 T
(as\050<integer>, if\050v\051 1 else 0 end if\051 end,) 196.2 598 T
(import-function:) 174.6 587 T
(method \050v :: <integer>\051 => \050result :: <boolean>\051) 185.4 576 T
(~zero?\050v\051 end;) 190.8 565 T
(end;) 153 554 T
(//end module) 153 535 T
0 11 Q
(Mapped string example: an alternate version of C-string which automatically) 126 514.67 T
(converts instances of) 126 500.67 T
4 9.5 Q
(<byte-string>) 229.86 500.67 T
0 11 Q
( to instances of) 303.96 500.67 T
4 9.5 Q
(<C-example-string>) 378.8 500.67 T
0 11 Q
( on) 481.39 500.67 T
(export.) 126 486.67 T
4 9 Q
(string-header.h) 153 466 T
(typedef char *string;) 153 447 T
(string string-filter\050string s\051;) 153 428 T
(void string-modifier\050string *s\051;) 153 417 T
(//eof) 153 398 T
(module: my-module) 153 379 T
(define C-mapped-subtype <C-example-string> \050<C-char*>,) 153 360 T
(<string>\051) 390.6 349 T
(export-map type-union\050<byte-string>,) 163.8 338 T
(<C-example-string>\051,) 282.6 327 T
(export-function: c-string-exporter;) 163.8 316 T
(end;) 153 305 T
(define method c-string-exporter) 153 286 T
(\050s :: <byte-string>\051 => \050result :: <C-char*>\051) 163.8 275 T
(as\050<C-example-string>, s\051) 174.6 264 T
(end;) 153 253 T
(define method c-string-exporter) 153 234 T
(\050s :: <C-example-string>\051 => \050result :: <C-example-string>\051) 163.8 223 T
(s) 174.6 212 T
(end;) 153 201 T
(//end module) 153 182 T
0 11 Q
(It is possible to de\336ne an or) 126 161.67 T
(dinary subtype of a mapped supertype. The map-) 259.32 161.67 T
(ping characteristic of the subtype is inherited fr) 126 147.67 T
(om the supertype. It is also) 355.79 147.67 T
(possible to de\336ne a mapped subtype of a mapped supertype. When the sub-) 126 133.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.38/DEST FmPD2
230 652/I4.1.1059497 FmPA
230 652/I4.1.1059495 FmPA
379 652/I4.1.1059527 FmPA
379 652/I4.1.1059525 FmPA
153 616/I4.1.1087455 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "38" 42
%%Page: "39" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.6) 461.87 677.67 T
(Defining types) 483.25 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(39) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(type and supertype both specify an export function, the export functions of) 108 640.67 T
(the subtype and the supertype ar) 108 626.67 T
(e composed with the subtype\325s export func-) 268.6 626.67 T
(tion applied to the r) 108 612.67 T
(esult of the supertype\325s export function. Import functions) 204.3 612.67 T
-0.25 (of a mapped subtype and supertype ar) 108 598.67 P
-0.25 (e similarly composed. Mapping charac-) 294.94 598.67 P
(teristics ar) 108 584.67 T
(e inherited fr) 157.8 584.67 T
(om the supertype wher) 220.77 584.67 T
(e the subtype does not de\336ne) 334.09 584.67 T
(them. \050Y) 108 570.67 T
(ou can think of this as composition with identity when either the) 148.46 570.67 T
(supertype or subtype fails to specify an import or export function.\051 This shad-) 108 556.67 T
(owing is only useful when import and export maps ar) 108 542.67 T
(e de\336ned separately) 370.26 542.67 T
(.) 466.91 542.67 T
(Her) 108 528.67 T
(e is an example of a mapped subtypes which adds an import map to the) 126.57 528.67 T
(mapped version of) 108 514.67 T
4 9.5 Q
(<C-example-string>) 202.45 514.67 T
0 11 Q
( de\336ned above.) 305.05 514.67 T
4 9 Q
(define C-mapped-subtype <other-string>) 135 494 T
(\050<C-example-string>\051) 156.6 483 T
(import-map <byte-string>,) 145.8 472 T
(import-function: method \050v :: <byte-string>\051 =>) 156.6 461 T
(\050result :: <C-example-string>\051) 167.4 450 T
(as\050<C-example-string>, v\051) 178.2 439 T
(end method;) 167.4 428 T
(end;) 135 417 T
0 11 Q
(The import signatur) 108 396.67 T
(e is) 205.62 396.67 T
4 9.5 Q
(<byte-string>) 224.26 396.67 T
0 11 Q
(. The export signatur) 298.36 396.67 T
(e is inherited) 399.52 396.67 T
(fr) 108 382.67 T
(om) 115.81 382.67 T
4 9.5 Q
(<C-example-string>) 134.28 382.67 T
(type-union\050<byte-string>,) 239.63 382.67 T
(<C-example-) 384.88 382.67 T
-0.78 (string>\051) 108 368.67 P
0 11 Q
-0.38 (. For a example involving composition of mapped types consider the) 153.6 368.67 P
(following \050hypothetical\051 de\336nitions of) 108 354.67 T
4 9.5 Q
(<C-raw-int>) 295.84 354.67 T
0 11 Q
(,) 358.54 354.67 T
4 9.5 Q
(<C-mapped-int>) 364.04 354.67 T
0 11 Q
( and) 443.84 354.67 T
4 9.5 Q
(<bool>) 108 340.67 T
0 11 Q
(. The) 142.2 340.67 T
4 9.5 Q
(<C-raw-int>) 168.86 340.67 T
0 11 Q
( class is a primitive which r) 231.56 340.67 T
(eturns and accepts) 363.89 340.67 T
-0.02 (instances of) 108 326.67 P
4 9.5 Q
-0.04 (<machine-word>) 167.71 326.67 P
0 11 Q
-0.02 (. The) 247.51 326.67 P
4 9.5 Q
-0.04 (<C-mapped-int>) 274.14 326.67 P
0 11 Q
-0.02 ( class is a mapped subtype) 353.94 326.67 P
(which converts the instances of) 108 312.67 T
4 9.5 Q
(<machine-word>) 262.68 312.67 T
0 11 Q
( to instances of) 342.48 312.67 T
4 9.5 Q
(<integer>) 417.32 312.67 T
0 11 Q
(.) 468.61 312.67 T
(The) 108 298.67 T
4 9.5 Q
(<bool>) 129.16 298.67 T
0 11 Q
( class is a mapped subtype of) 163.36 298.67 T
4 9.5 Q
(<C-mapped-int>) 307.95 298.67 T
0 11 Q
( which converts to) 387.75 298.67 T
(and fr) 108 284.67 T
(om) 137.18 284.67 T
4 9.5 Q
(<boolean>) 155.65 284.67 T
0 11 Q
(.) 206.95 284.67 T
4 9 Q
(define C-mapped-subtype <C-mapped-int> \050<C-raw-int>\051) 135 264 T
(map <boolean>,) 145.8 253 T
(export-function:) 156.6 242 T
(method \050v :: <integer>\051 =>) 167.4 231 T
(\050result :: <machine-word>\051) 178.2 220 T
(as\050<machine-word>, v\051 end,) 189 209 T
(import-function:) 156.6 198 T
(method \050v :: <machine-word>\051 =>) 167.4 187 T
(\050result :: <integer>\051) 178.2 176 T
(as\050<integer>, v\051 end;) 189 165 T
(end;) 135 154 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.39/DEST FmPD2
224 548/I4.1.1059503 FmPA
224 548/I4.1.1059501 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "39" 43
%%Page: "40" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(40) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 F
0 X
(define C-mapped-subtype <bool> \050<C-mapped-int>\051) 153 642 T
(map <boolean>,) 163.8 631 T
(export-function:) 174.6 620 T
(method \050v :: <boolean>\051 => \050result :: <integer>\051) 185.4 609 T
(if\050v\051 1 else 0 end if\051 end,) 196.2 598 T
(import-function:) 174.6 587 T
(method \050v :: <integer>\051 => \050result :: <boolean>\051) 185.4 576 T
(~zero?\050v\051 end;) 196.2 565 T
(end;) 153 554 T
3 13 Q
(1.6.3  Describing structure types) 126 522.33 T
3 14 Q
(de\336ne C-struct) 126 474.67 T
2 13 Q
(De\336nition macr) 415.16 475.33 T
(o) 498.23 475.33 T
6 12 Q
(Summar) 135 450 T
(y) 172.48 450 T
0 11 Q
(Describes C\325s aggr) 207 450 T
(egate str) 296.79 450 T
(uctur) 337.79 450 T
(es.) 363.67 450 T
6 12 Q
(Signature) 135 422 T
4 9 Q
(define C-struct) 207 422 T
7 F
(name) 293.4 422 T
4 F
([) 217.8 411 T
7 F
(slot-spec) 223.2 411 T
4 F
(; ...] [;]) 259.19 411 T
([) 217.8 400 T
7 F
(type-options) 223.2 400 T
4 F
(] [;]) 274.72 400 T
(end [C-struct] [) 207 389 T
7 F
(name) 293.4 389 T
4 F
(]) 314.9 389 T
6 12 Q
(Arguments) 135 363 T
2 11 Q
(name) 207 363 T
0 F
(A Dylan variable name.) 288 363 T
2 F
(slot-spec) 207 343 T
0 F
(t) 207 323 T
2 F
(ype-options) 210.59 323 T
0 F
(A pr) 288 323 T
(operty list.) 310.07 323 T
6 12 Q
(Descr) 135 295.33 T
(iption) 160.84 295.33 T
0 11 Q
(Describes C\325s aggr) 207 295.33 T
(egate str) 296.79 295.33 T
(uctur) 337.79 295.33 T
(es. The) 363.67 295.33 T
2 F
(name) 400.27 295.33 T
0 F
(is de\336ned to be) 426.86 295.33 T
-0.21 (a designator class encapsulating the) 207 281.33 P
2 F
-0.21 (value) 383.16 281.33 P
0 F
-0.21 ( of a str) 407 281.33 P
-0.21 (uctur) 442.31 281.33 P
-0.21 (e,) 468.19 281.33 P
2 F
-0.21 (not) 478.75 281.33 P
0 F
-0.21 ( a) 493.41 281.33 P
(pointer to the str) 207 267.33 T
(uctur) 288.03 267.33 T
(e. This is signi\336cant because many of) 313.91 267.33 T
(the pr) 207 253.33 T
(otocols associated with str) 235.76 253.33 T
(uctur) 363.23 253.33 T
(es work only on point-) 389.12 253.33 T
-0.23 (ers to str) 207 239.33 P
-0.23 (uctur) 248.43 239.33 P
-0.23 (es \321 pointers to str) 274.31 239.33 P
-0.23 (uctur) 367.52 239.33 P
-0.23 (es being the most com-) 393.41 239.33 P
(mon form and the form closest to Dylan\325s object model. The) 207 225.33 T
(new designator class is de\336ned to be a subclass of) 207 211.33 T
4 9.5 Q
(<C-) 451.38 211.33 T
(struct>) 207 197.33 T
0 11 Q
(.) 246.9 197.33 T
(Once de\336ned, a str) 207 177.33 T
(uctur) 298.24 177.33 T
(e-designating class is most likely to) 324.13 177.33 T
(be used as the basis for a pointer type de\336nition in terms of) 207 163.33 T
(which most further transactions will take place. Str) 207 149.33 T
(uctur) 454.35 149.33 T
(e-) 480.23 149.33 T
(designating classes ar) 207 135.33 T
(e abstract and cannot have dir) 312.17 135.33 T
(ect) 458.2 135.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.40/DEST FmPD2
156 675/I4.1.1060005 FmPA
156 675/I4.1.1060075 FmPA
156 675/I4.1.1060073 FmPA
126 628/I4.1.1058464 FmPA
126 628/I4.1.1058686 FmPA
451 363/I4.1.1059731 FmPA
451 363/I4.1.1059729 FmPA
135 447/I4.1.1087464 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "40" 44
%%Page: "41" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.6) 461.87 677.67 T
(Defining types) 483.25 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(41) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
-0.19 (instances. Accessor methods de\336ned for the slots of the str) 189 640.67 P
-0.19 (uc-) 470.82 640.67 P
(tur) 189 626.67 T
(e ar) 203.37 626.67 T
(e specialized on the str) 221.03 626.67 T
(uctur) 331.49 626.67 T
(e designator) 357.38 626.67 T
(\325s pointer) 418.02 626.67 T
(-) 463.71 626.67 T
(type. However) 189 612.67 T
(, the class itself may be needed to specify an) 260.7 612.67 T
(in-line str) 189 598.67 T
(uctur) 235.6 598.67 T
(e in another str) 261.48 598.67 T
(uctur) 334.62 598.67 T
(e, union, or array) 360.5 598.67 T
(, or a) 443.1 598.67 T
(value-passed str) 189 584.67 T
(uctur) 268.17 584.67 T
(e ar) 294.05 584.67 T
(gument or r) 311.72 584.67 T
(esult in a C function.) 369.43 584.67 T
(A) 189 564.67 T
2 F
(slot-spec) 200.31 564.67 T
0 F
( has the following syntax:) 238.39 564.67 T
4 9 Q
([) 189 544 T
7 F
(slot-adjective) 194.4 544 T
4 F
(] slot) 249.89 544 T
7 F
(getter-name) 287.69 544 T
4 F
( ::) 335.69 544 T
7 F
(c-type) 357.29 544 T
4 F
( #key) 382.29 544 T
7 F
(setter) 414.69 544 T
(addr) 199.8 533 T
(ess-getter) 218.15 533 T
(c-name length) 262.04 533 T
(width) 323.68 533 T
0 11 Q
(The) 189 512.67 T
2 F
(slot-adjective) 210.16 512.67 T
0 F
( can be either) 268.41 512.67 T
4 9.5 Q
(array) 335.62 512.67 T
0 11 Q
( or) 364.12 512.67 T
4 9.5 Q
(bitfield) 379.97 512.67 T
0 11 Q
(. The) 425.57 512.67 T
4 9.5 Q
(array) 452.23 512.67 T
0 11 Q
-0.17 (slot adjective indicates that the slot is r) 189 498.67 P
-0.17 (epeated and the) 374.98 498.67 P
2 F
-0.17 (dimen-) 454.83 498.67 P
(sions) 189 484.67 T
0 F
( option is used to indicate how many r) 211.62 484.67 T
(epetitions ar) 398.4 484.67 T
(e) 458.59 484.67 T
(de\336ned, and how it is accessed. The) 189 470.67 T
4 9.5 Q
(bitfield) 365.91 470.67 T
0 11 Q
( slot adjective) 411.51 470.67 T
(indicates that the slot is r) 189 456.67 T
(eally a bit\336eld. If) 309.98 456.67 T
4 9.5 Q
(bitfield) 394.6 456.67 T
0 11 Q
( is given) 440.2 456.67 T
-0.2 (then the) 189 442.67 P
2 F
-0.2 (width) 231.02 442.67 P
0 F
-0.2 ( option must also be given. The) 256.68 442.67 P
2 F
-0.2 (c-type) 410.05 442.67 P
0 F
-0.2 ( given for) 437.13 442.67 P
-0.45 (a) 189 428.67 P
4 9.5 Q
-0.92 (bitfield) 196.8 428.67 P
0 11 Q
-0.45 ( slot must be an integer designator) 242.4 428.67 P
-0.45 (. The) 406.72 428.67 P
2 F
-0.45 (c-type) 432.49 428.67 P
0 F
-0.45 ( for a) 459.57 428.67 P
4 9.5 Q
-0.47 (bitfield) 189 414.67 P
0 11 Q
-0.22 ( slot indicates how the value is interpr) 234.6 414.67 P
-0.22 (eted in Dylan) 418.24 414.67 P
(by the slot accessor) 189 400.67 T
(. A slot may not be speci\336ed as both an) 281.57 400.67 T
4 9.5 Q
(array) 189 386.67 T
0 11 Q
( and a) 217.5 386.67 T
4 9.5 Q
(bitfield) 249.87 386.67 T
0 11 Q
(.) 295.47 386.67 T
(The) 189 366.67 T
2 F
(getter-name) 210.16 366.67 T
0 F
(keywor) 266.08 366.67 T
(d speci\336es the name of the Dylan) 302.9 366.67 T
-0.36 (function to which the getter method for the str) 189 352.67 P
-0.36 (uctur) 411.45 352.67 P
-0.36 (e slot will) 437.33 352.67 P
(be added. The specializer of the getter method\325s single ar) 189 338.67 T
(gu-) 465.86 338.67 T
(ment will be a designator indicating a pointer to the str) 189 324.67 T
(uct\325s) 456.4 324.67 T
2 F
(name) 189 310.67 T
0 F
(.) 212.84 310.67 T
(The) 189 290.67 T
2 F
(c-type) 210.16 290.67 T
0 F
(speci\336es the \336eld\325s C type, and must be a designa-) 240 290.67 T
(tor class. Unlike Dylan slot speci\336cations, the type declara-) 189 276.67 T
(tion her) 189 262.67 T
(e is) 226.76 262.67 T
2 F
(not) 245.4 262.67 T
0 F
( optional.) 260.06 262.67 T
(The optional) 189 242.67 T
2 F
(setter) 253.43 242.67 T
0 F
(keywor) 280.62 242.67 T
(d speci\336es the generic function to) 317.45 242.67 T
(which the setter method for the str) 189 228.67 T
(uctur) 357.01 228.67 T
(e slot will be added.) 382.9 228.67 T
-0.37 (It defaults to) 189 214.67 P
2 F
-0.37 (getter-name) 252.26 214.67 P
4 9.5 Q
-0.77 (-setter) 305.42 214.67 P
0 11 Q
-0.37 (. No setter method is de\336ned) 344.51 214.67 P
(if the) 189 200.67 T
2 F
(setter) 216.62 200.67 T
0 F
( option is) 241.06 200.67 T
4 9.5 Q
(#f) 288.99 200.67 T
0 11 Q
(.) 300.39 200.67 T
(The optional) 189 180.67 T
2 F
(addr) 253.43 180.67 T
(ess-getter) 273.39 180.67 T
0 F
( speci\336es the name of a function) 315.55 180.67 T
-0.45 (that can be used to r) 189 166.67 P
-0.45 (eturn a pointer to the data in the member) 284.76 166.67 P
-0.45 (.) 480.95 166.67 P
(It must r) 189 152.67 T
(eturn a) 230.54 152.67 T
4 9.5 Q
(<C-pointer>) 267.77 152.67 T
0 11 Q
( object that points to a C type.) 330.47 152.67 T
(No) 189 138.67 T
2 F
(addr) 206.9 138.67 T
(ess-getter) 226.86 138.67 T
0 F
( is de\336ned by default.) 269.02 138.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.41/DEST FmPD2
268 304/I4.1.1059599 FmPA
268 304/I4.1.1059597 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "41" 45
%%Page: "42" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(42) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(Y) 207 640.67 T
(ou can use the) 213.32 640.67 T
2 F
(dimensions) 285.57 640.67 T
0 F
( keywor) 335.7 640.67 T
(d only if you used the) 375.28 640.67 T
4 9.5 Q
(array) 207 626.67 T
0 11 Q
( slot adjective. This) 235.5 626.67 T
2 F
(dimensions) 330.94 626.67 T
0 F
( value can be either a list) 381.06 626.67 T
-0.29 (of integers or a single integer) 207 612.67 P
-0.29 (. The accessor for an array slot is) 345.9 612.67 P
(de\336ned to take an extra integer parameter for each dimen-) 207 598.67 T
(sion given.) 207 584.67 T
(Y) 207 564.67 T
(ou can use the) 213.32 564.67 T
2 F
(width) 285.57 564.67 T
0 F
( keywor) 311.24 564.67 T
(d option only if you used the) 350.81 564.67 T
4 9.5 Q
(bitfield) 207 550.67 T
0 11 Q
( adjective.) 252.6 550.67 T
(The optional) 207 530.67 T
2 F
(c-name) 271.43 530.67 T
0 F
( keywor) 303.4 530.67 T
(d allows you to document the) 342.98 530.67 T
(original C name of the slot.) 207 516.67 T
-0.1 (The) 207 496.67 P
2 F
-0.1 (type-options) 228.06 496.67 P
0 F
-0.1 ( clause is a pr) 283.05 496.67 P
-0.1 (operty list allowing you to spec-) 347.93 496.67 P
(ify pr) 207 482.67 T
(operties of the type as a whole. It accepts the optional) 233.49 482.67 T
(keywor) 207 468.67 T
(d) 243.83 468.67 T
2 F
(c-name:) 253.3 468.67 T
0 F
(, allowing you to document the original C) 288.03 468.67 T
(name of the str) 207 454.67 T
(uct to be documented. The optional keywor) 279.57 454.67 T
(d) 491.82 454.67 T
4 9.5 Q
-0.38 (pointer-type-name:) 207 440.67 P
0 11 Q
-0.19 ( is also accepted. When given, the name) 309.6 440.67 P
-0.22 (is bound to the str) 207 426.67 P
-0.22 (uct pointer type on which the accessors ar) 294.17 426.67 P
-0.22 (e) 496.2 426.67 P
(de\336ned.) 207 412.67 T
(The type option) 207 392.67 T
4 9.5 Q
(pack:) 287.06 392.67 T
2 11 Q
( n) 315.56 392.67 T
0 F
( indicates that the str) 324.42 392.67 T
(uct has the) 425.69 392.67 T
(packing semantics of Micr) 207 378.67 T
(osoft\325s) 334.27 378.67 T
4 9.5 Q
(#pragma) 368.67 378.67 T
(pack\050) 411.32 378.67 T
2 11 Q
(n) 439.82 378.67 T
4 9.5 Q
(\051) 445.93 378.67 T
0 11 Q
(.) 451.63 378.67 T
(Example C declaration:) 126 358.67 T
4 9 Q
(struct Point {) 153 338 T
(unsigned short x;) 163.8 327 T
(unsigned short y;) 163.8 316 T
(};) 153 305 T
(Point *OnePoint\050\051;   /* Returns a pointer to a Point */) 153 286 T
(Point *PointArray\050\051; /* Returns a Point array */) 153 275 T
0 11 Q
(Example FFI de\336nition:) 153 254.67 T
4 9 Q
(define C-struct <Point>) 153 234 T
(slot x :: <C-unsigned-short>;) 163.8 223 T
(slot y :: <C-unsigned-short>;) 163.8 212 T
(pointer-type-name: <Point*>;) 163.8 201 T
(end C-struct;) 153 190 T
(define C-function one-point) 153 171 T
(result point :: <Point*>;) 163.8 160 T
(c-name: \322OnePoint\323;) 163.8 149 T
(end C-function;) 153 138 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.42/DEST FmPD2
263 736/I4.1.1087476 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "42" 46
%%Page: "43" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.6) 461.87 677.67 T
(Defining types) 483.25 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(43) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(define C-function point-array) 135 642 T
(result array :: <Point*>;) 145.8 631 T
(c-name: \322PointArray\323;) 145.8 620 T
(end C-function;) 135 609 T
0 11 Q
(Example transactions:) 135 588.67 T
4 9 Q
(? define variable p = one-point\050\051;) 135 568 T
(// Defined p.) 135 557 T
(? values\050p.x, p.y\051;) 135 538 T
(100) 135 527 T
(50) 135 516 T
(? define variable array = point-array\050\051;) 135 497 T
(// Defined array.) 135 486 T
(? array[5].object-class; // implicit conversion to) 135 467 T
(// the pointer type) 270 456 T
({<Point> pointer #xff5e00}) 135 445 T
(? begin array[5].x := 10; array[5].y := 20 end;) 135 426 T
(20) 135 415 T
(? values\050array[5].x, array[5].y\051) 135 396 T
(10) 135 385 T
(20) 135 374 T
3 13 Q
(1.6.4  Describing union types) 108 342.33 T
3 14 Q
(de\336ne C-union) 108 294.67 T
2 13 Q
(De\336nition macr) 397.16 295.33 T
(o) 480.23 295.33 T
6 12 Q
(Summar) 117 270 T
(y) 154.48 270 T
0 11 Q
(Describes C union types to the) 189 270 T
4 9.5 Q
(c-ffi) 339.93 270 T
0 11 Q
(.) 368.43 270 T
6 12 Q
(Signature) 117 242 T
4 9 Q
(define C-union) 189 242 T
7 F
(name) 270 242 T
4 F
([) 199.8 231 T
7 F
(slot-spec) 205.2 231 T
4 F
(; ...] [;]) 241.19 231 T
([) 199.8 220 T
7 F
(type-options) 205.2 220 T
4 F
(] [;]) 256.72 220 T
(end [C-union] [) 189 209 T
7 F
(name) 270 209 T
4 F
(]) 291.5 209 T
6 12 Q
(Arguments) 117 183 T
2 11 Q
(name) 189 183 T
0 F
(A Dylan variable name.) 270 183 T
2 F
(slot-spec) 189 163 T
0 F
(t) 189 143 T
2 F
(ype-options) 192.59 143 T
0 F
(A pr) 270 143 T
(operty list.) 292.07 143 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.43/DEST FmPD2
138 495/I4.1.1060007 FmPA
138 495/I4.1.1060079 FmPA
138 495/I4.1.1060077 FmPA
108 448/I4.1.1058466 FmPA
108 448/I4.1.1058690 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "43" 47
%%Page: "44" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(44) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Descr) 135 640 T
(iption) 160.84 640 T
0 11 Q
(Describes C union types to the C-FFI. The syntax for the) 207 640 T
-0.13 (macr) 207 626 P
-0.13 (o and its use ar) 231.24 626 P
-0.13 (e similar to) 304.01 626 P
4 9.5 Q
-0.27 (define c-struct) 360.55 626 P
0 11 Q
-0.13 ( except that) 445.78 626 P
(bit\336eld slots ar) 207 612 T
(e not allowed. The designator cr) 278.98 612 T
(eated by the) 435.07 612 T
(macr) 207 598 T
(o is a subclass of) 231.24 598 T
4 9.5 Q
(<c-union>) 314.33 598 T
0 11 Q
(.) 365.63 598 T
(Each of the slots in a union is laid out in memory on top of) 207 578 T
(one another just as in C\325s) 207 564 T
4 9.5 Q
(union) 331.43 564 T
0 11 Q
( constr) 359.93 564 T
(uct.) 392.48 564 T
(Example C declaration:) 126 544 T
4 9 Q
(union Num {) 153 523.33 T
(int) 163.8 512.33 T
(int_value;) 201.6 512.33 T
(double double_value;) 163.8 501.33 T
(};) 153 490.33 T
(Num *OneNum\050\051;   /* Returns a pointer to a Num */) 153 471.33 T
(Num *NumArray\050\051; /* Returns a Num array */) 153 460.33 T
0 11 Q
(Example FFI de\336nition:) 126 440 T
4 9 Q
(define C-union <Num>) 153 419.33 T
(slot int-value    :: <C-int>;) 163.8 408.33 T
(slot double-value :: <C-double>;) 163.8 397.33 T
(pointer-type-name: <Num*>;) 163.8 386.33 T
(end C-union;) 153 375.33 T
(define C-function one-num) 153 356.33 T
(result num :: <Num*>;) 163.8 345.33 T
(c-name: \322OneNum\323;) 163.8 334.33 T
(end C-function;) 153 323.33 T
(define C-function num-array) 153 304.33 T
(result array :: <Num*>;) 163.8 293.33 T
(c-name: \322NumArray\323;) 163.8 282.33 T
(end C-function;) 153 271.33 T
0 11 Q
(Example transactions:) 126 251 T
4 9 Q
(? define variable n = one-num\050\051;) 153 230.33 T
(// Defined n.) 153 219.33 T
(? values\050p.int-value, p.double-value\051;) 153 200.33 T
(154541) 153 189.33 T
(92832.e23 // or something) 153 178.33 T
5 F
(?) 153 159.33 T
4 F
(define variable array = num-array\050\051;) 163.8 159.33 T
(// Defined array.) 153 148.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.44/DEST FmPD2
361 777/I4.1.1059327 FmPA
361 777/I4.1.1059931 FmPA
135 792/I4.1.1087485 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "44" 48
%%Page: "45" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(45) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 F
0 X
(?) 135 642 T
4 F
( array[5].object-class; // implicit conversion to) 140.4 642 T
(// the pointer type) 270 631 T
({<Num> pointer #xff5e00}) 135 620 T
5 F
(?) 135 601 T
4 F
( array[5].int-value := 0;) 140.4 601 T
(0) 135 590 T
5 F
(?) 135 571 T
4 F
( array[5].double-value;) 140.4 571 T
(11232e-12 // or a different something) 135 560 T
3 16 Q
(1.7  Functions) 108 526.33 T
108 670/G4.887470 FmPA
0 11 Q
(This section describes the C FFI macr) 108 505.67 T
(os that allow C functions to be made) 287.86 505.67 T
(available to Dylan and Dylan functions available to C.) 108 491.67 T
3 13 Q
(1.7.1  Function types) 108 458.33 T
0 11 Q
(This section describes classes that designate C function types and how to con-) 108 438.67 T
(str) 108 424.67 T
(uct them.) 120.51 424.67 T
3 14 Q
(<C-function-pointer>) 108 376.67 T
2 13 Q
(Open abstract class) 384.18 377.33 T
6 12 Q
(Descr) 117 352 T
(iption) 142.84 352 T
0 11 Q
-0.05 (The super) 189 352 P
-0.05 (class of all classes that designate a C function type.) 237.44 352 P
-0.08 (It is a subclass of) 189 338 P
4 9.5 Q
-0.16 (<C-pointer>) 272.99 338 P
0 11 Q
-0.08 (. The Dylan variable bound by) 335.7 338 P
4 9.5 Q
(define c-callable) 189 324 T
0 11 Q
( is of this type.) 285.9 324 T
3 13 Q
(1.7.2  Describing C functions to Dylan) 108 290.67 T
3 14 Q
(de\336ne C-function) 108 243 T
2 13 Q
(De\336nition macr) 397.16 243.67 T
(o) 480.23 243.67 T
6 12 Q
(Summar) 117 218.33 T
(y) 154.48 218.33 T
0 11 Q
(Describes a C function to the) 189 218.33 T
4 9.5 Q
(c-ffi) 331.32 218.33 T
0 11 Q
(.) 359.82 218.33 T
6 12 Q
(Signature) 117 190.33 T
4 9 Q
(define C-function) 189 190.33 T
7 F
(name) 286.2 190.33 T
4 F
([) 199.8 179.33 T
7 F
(parameter-spec) 205.2 179.33 T
4 F
(; ...]) 266.7 179.33 T
([) 199.8 168.33 T
7 F
(r) 205.2 168.33 T
(esult-spec) 208.54 168.33 T
4 F
(;]) 248.53 168.33 T
([) 199.8 157.33 T
7 F
(function-option) 205.2 157.33 T
4 F
(, \311;]) 268.72 157.33 T
(end [C-function] [) 189 146.33 T
7 F
(name) 286.2 146.33 T
4 F
(]) 307.7 146.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.45/DEST FmPD2
134 681/I4.1.1060009 FmPA
138 611/I4.1.1060011 FmPA
138 611/I4.1.1060091 FmPA
108 530/I4.1.1058532 FmPA
108 530/I4.1.1058530 FmPA
273 489/I4.1.1059611 FmPA
273 489/I4.1.1059609 FmPA
189 475/I4.1.1059337 FmPA
189 475/I4.1.1059901 FmPA
138 443/I4.1.1060013 FmPA
138 443/I4.1.1060063 FmPA
138 443/I4.1.1060059 FmPA
108 396/I4.1.1058470 FmPA
108 396/I4.1.1058680 FmPA
108 396/M4.9.96906.REntry.define.Cfunction FmPA
108 396/I4.1.1071542 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "45" 49
%%Page: "46" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(46) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Arguments) 135 640 T
2 11 Q
(name) 207 640 T
0 F
(A Dylan variable name.) 288 640 T
2 F
(parameter-spec) 207 620 T
(r) 207 600 T
(esult-spec) 211.08 600 T
(function-option) 207 580 T
0 F
(A pr) 288 580 T
(operty list.) 310.07 580 T
6 12 Q
(Descr) 135 552.33 T
(iption) 160.84 552.33 T
0 11 Q
(Describes a C function to the C-FFI. In or) 207 552.33 T
(der for a C function) 405.23 552.33 T
(to be called corr) 207 538.33 T
(ectly by Dylan, the same information about) 284.35 538.33 T
-0.42 (the function must be given as is needed by C callers, typically) 207 524.33 P
(pr) 207 510.33 T
(ovided by) 217.76 510.33 T
4 9.5 Q
(extern) 269.59 510.33 T
0 11 Q
( declarations for the function in a C) 303.79 510.33 T
(header \336le: the function\325s name and the types of its parame-) 207 496.33 T
(ters and r) 207 482.33 T
(esults.) 253.13 482.33 T
(The r) 207 462.33 T
(esult of pr) 232.31 462.33 T
(ocessing a) 281.59 462.33 T
4 9.5 Q
(define C-function) 333.8 462.33 T
0 11 Q
( de\336nition is a) 430.7 462.33 T
(Dylan function which is bound to) 207 448.33 T
2 F
(name) 373.38 448.33 T
0 F
(. This function takes) 397.21 448.33 T
-0.24 (Dylan objects as ar) 207 434.33 P
-0.24 (guments, converting them to their C r) 297.13 434.33 P
-0.24 (epr) 479.04 434.33 P
-0.24 (e-) 495.07 434.33 P
-0.2 (sentations accor) 207 420.33 P
-0.2 (ding to the types declar) 284.25 420.33 P
-0.2 (ed for the parameters) 397.72 420.33 P
(of the C function befor) 207 406.33 T
(e calling the C function with them. If) 316.67 406.33 T
(the C function r) 207 392.33 T
(eturns r) 283.23 392.33 T
(esults, these r) 321.03 392.33 T
(esults ar) 386.63 392.33 T
(e converted to) 427.04 392.33 T
(Dylan r) 207 378.33 T
(epr) 243.63 378.33 T
(esentations accor) 259.66 378.33 T
(ding to the declar) 342.38 378.33 T
(ed types of) 427.64 378.33 T
(those r) 207 364.33 T
(esults befor) 239.82 364.33 T
(e being r) 295.76 364.33 T
(eturned to the Dylan caller of the) 337.75 364.33 T
-0.4 (function. By default the function cr) 207 350.33 P
-0.4 (eated is a raw method, not) 374.74 350.33 P
-0.35 (a generic function. A generic function method can de\336ned by) 207 336.33 P
(using the) 207 322.33 T
4 9.5 Q
(generic-function-method:) 254.77 322.33 T
0 11 Q
( option.) 391.57 322.33 T
(Either the) 207 302.33 T
4 9.5 Q
(c-name:) 257.28 302.33 T
0 11 Q
(function option must be supplied, or the) 299.93 302.33 T
4 9.5 Q
(indirect:) 207 288.33 T
0 11 Q
( option must be supplied with a value other than) 258.3 288.33 T
4 9.5 Q
(#f) 207 274.33 T
0 11 Q
(, but not both.) 218.4 274.33 T
(A) 207 254.33 T
2 F
(parameter-spec) 218.31 254.33 T
0 F
(has the following syntax:) 287.86 254.33 T
4 9 Q
([) 207 233.67 T
7 F
(adjectives) 212.4 233.67 T
4 F
(]) 252.89 233.67 T
(parameter name ::) 266.09 233.67 T
7 F
(c-type) 363.29 233.67 T
4 F
( #key) 388.29 233.67 T
7 F
(c-name) 420.69 233.67 T
0 11 Q
-0.26 (If no parameters ar) 207 213.33 P
-0.26 (e speci\336ed, the C function is taken to have) 298.71 213.33 P
(no ar) 207 199.33 T
(guments.) 231.8 199.33 T
-0.47 (The) 207 179.33 P
2 F
-0.47 (adjectives) 227.7 179.33 P
0 F
-0.47 ( can be either) 270.67 179.33 P
4 9.5 Q
-0.97 (output) 336.01 179.33 P
0 11 Q
-0.47 (,) 370.21 179.33 P
4 9.5 Q
-0.97 (input) 375.24 179.33 P
0 11 Q
-0.47 (, or both. The calling) 403.74 179.33 P
(discipline is speci\336ed by the) 207 165.33 T
4 9.5 Q
(input) 346.7 165.33 T
0 11 Q
( and) 375.2 165.33 T
4 9.5 Q
(output) 399.32 165.33 T
0 11 Q
( adjectives.) 433.52 165.33 T
-0.16 (By itself,) 207 145.33 P
4 9.5 Q
-0.34 (input) 251.35 145.33 P
0 11 Q
-0.16 ( indicates that the ar) 279.85 145.33 P
-0.16 (gument is passed into the) 377.6 145.33 P
(function by value. This option is the default and is used pri-) 207 131.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.46/DEST FmPD2
334 614/I4.1.1059341 FmPA
334 614/I4.1.1059915 FmPA
135 704/I4.1.1087497 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "46" 50
%%Page: "47" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(47) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
-0.24 (marily to document the code. Ther) 189 640.67 P
-0.24 (e is a parameter to the gen-) 355.88 640.67 P
(erated Dylan function corr) 189 626.67 T
(esponding to each) 317.83 626.67 T
4 9.5 Q
(input) 409.12 626.67 T
0 11 Q
(parameter of the C function.) 189 612.67 T
-0.09 (The) 189 592.67 P
4 9.5 Q
-0.19 (output) 210.07 592.67 P
0 11 Q
-0.09 ( adjective speci\336es that the ar) 244.27 592.67 P
-0.09 (gument value to the) 385.98 592.67 P
(C function is used to identify a location into which an extra) 189 578.67 T
(r) 189 564.67 T
(esult of the C function will be stor) 193.15 564.67 T
(ed. Ther) 357.78 564.67 T
(e is no parameter) 397.83 564.67 T
(in the generated Dylan function corr) 189 550.67 T
(esponding to an) 365.98 550.67 T
4 9.5 Q
(output) 447.11 550.67 T
0 11 Q
(parameter of the C function. The C-FFI generates a location) 189 536.67 T
(for the extra r) 189 522.67 T
(eturn value itself and passes it to the C func-) 255.04 522.67 T
-0.19 (tion. When the C function r) 189 508.67 P
-0.19 (eturns, the value in the location is) 320.82 508.67 P
-0.11 (accessed and r) 189 494.67 P
-0.11 (eturned as an extra r) 258.91 494.67 P
-0.11 (esult fr) 358.3 494.67 P
-0.11 (om the Dylan func-) 392.11 494.67 P
-0.22 (tion. The C-FFI allocates space for the output parameter) 189 480.67 P
-0.22 (\325s r) 459.01 480.67 P
-0.22 (ef-) 473.4 480.67 P
(er) 189 466.67 T
(enced type, passes a pointer to the allocated space, and) 198.42 466.67 T
-0.49 (r) 189 452.67 P
-0.49 (eturns) 193.15 452.67 P
4 9.5 Q
-1.02 (pointer-value) 226.3 452.67 P
0 11 Q
-0.49 (of that pointer) 305.09 452.67 P
-0.49 (. A str) 372.95 452.67 P
-0.49 (uct or union type) 401.29 452.67 P
(may not be used as an output parameter) 189 438.67 T
(.) 384.66 438.67 T
(Example of) 189 418.67 T
4 9.5 Q
(output) 246.86 418.67 T
0 11 Q
( parameter de\336nition:) 281.06 418.67 T
4 9 Q
(define C-function mix-it-up) 199.8 398 T
(output parameter out1 :: <some-struct*>;) 210.6 387 T
(output parameter out2 :: <C-int*>;) 210.6 376 T
(result value :: <C-int>;) 210.6 365 T
(c-name: "mix_it_up";) 210.6 354 T
(end C-function mix-it-up;) 199.8 343 T
0 11 Q
(Example transaction:) 189 322.67 T
4 9 Q
(? mix-it-up\050\051;) 199.8 302 T
(1) 199.8 291 T
({<some-struct> pointer #xfefe770}) 199.8 280 T
(42) 199.8 269 T
0 11 Q
(If both) 189 250.67 T
4 9.5 Q
(input) 223.95 250.67 T
0 11 Q
(and) 255.2 250.67 T
4 9.5 Q
(output) 276.57 250.67 T
0 11 Q
( ar) 310.77 250.67 T
(e supplied, they specify that the) 323.17 250.67 T
(ar) 189 236.67 T
(gument value to the C function is used to identify a loca-) 198.65 236.67 T
(tion fr) 189 222.67 T
(om which a value is accessed and into which an extra) 218.76 222.67 T
-0.04 (r) 189 208.67 P
-0.04 (esult value is placed by the C function. Ther) 193.15 208.67 P
-0.04 (e is a parameter) 406.39 208.67 P
-0.28 (to the generated Dylan function corr) 189 194.67 P
-0.28 (esponding to each) 364.58 194.67 P
4 9.5 Q
-0.58 (input) 455.03 194.67 P
(output) 189 180.67 T
0 11 Q
( parameter of the C function that is specialized as the) 223.2 180.67 T
(union of the export type of the r) 189 166.67 T
(efer) 343.97 166.67 T
(enced type of the type) 362.32 166.67 T
-0.49 (given for the parameter in) 189 152.67 P
4 9.5 Q
-1.02 (define c-function) 316.5 152.67 P
0 11 Q
-0.49 (, and) 412.38 152.67 P
4 9.5 Q
-1.02 (#f) 438.26 152.67 P
0 11 Q
-0.49 (. When) 449.66 152.67 P
(the C function r) 189 138.67 T
(eturns, the value in the location is accessed) 265.23 138.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.47/DEST FmPD2
316 304/I4.1.1059361 FmPA
316 304/I4.1.1059917 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "47" 51
%%Page: "48" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(48) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
-0.19 (and r) 207 640.67 P
-0.19 (eturned as an extra r) 232.33 640.67 P
-0.19 (esult fr) 331.39 640.67 P
-0.19 (om the Dylan function. If an) 365.12 640.67 P
4 9.5 Q
(input) 207 626.67 T
(output) 238.25 626.67 T
0 11 Q
( parameter is passed as) 272.45 626.67 T
4 9.5 Q
(#f) 387.8 626.67 T
0 11 Q
( fr) 399.2 626.67 T
(om Dylan then a) 409.76 626.67 T
4 9.5 Q
(NULL) 207 612.67 T
0 11 Q
( pointer is passed to the C function, and the extra value) 229.8 612.67 T
(r) 207 598.67 T
(eturned by the Dylan function will be) 211.15 598.67 T
4 9.5 Q
(#f) 396.72 598.67 T
0 11 Q
(.) 408.12 598.67 T
(Example of) 207 578.67 T
4 9.5 Q
(input) 264.86 578.67 T
(output) 296.11 578.67 T
0 11 Q
( parameter de\336nition:) 330.31 578.67 T
4 9 Q
(define C-function mix-it-up) 217.8 558 T
(input output parameter inout :: <C-int*>;) 228.6 547 T
(result value :: <C-int>;) 228.6 536 T
(c-name: "mix_it_up";) 228.6 525 T
(end C-function mix-it-up;) 217.8 514 T
0 11 Q
(Example transaction:) 207 493.67 T
4 9 Q
(? mix-it-up\0507\051;) 207 473 T
(1) 207 462 T
(14) 207 451 T
0 11 Q
(Note that neither) 207 430.67 T
4 9.5 Q
(output) 292.8 430.67 T
0 11 Q
( nor) 327 430.67 T
4 9.5 Q
(input) 349.25 430.67 T
(output) 380.5 430.67 T
0 11 Q
(af) 417.45 430.67 T
(fects the) 426.42 430.67 T
(declar) 207 416.67 T
(ed type of an ar) 236.72 416.67 T
(gument: it must have the same type it) 312.51 416.67 T
(has in C and so, because it r) 207 402.67 T
(epr) 341.5 402.67 T
(esents a location, must be a) 357.52 402.67 T
(pointer type.) 207 388.67 T
(A) 207 368.67 T
2 F
(r) 218.31 368.67 T
(esult-spec) 222.39 368.67 T
0 F
( has the following syntax:) 265.98 368.67 T
4 9 Q
(result [name) 217.8 348 T
(:: c-type]) 288 348 T
0 11 Q
-0.35 (If no) 207 327.67 P
4 9.5 Q
-0.72 (result) 231.58 327.67 P
0 11 Q
-0.35 ( is speci\336ed, the Dylan function does not r) 265.78 327.67 P
-0.35 (eturn a) 467.46 327.67 P
(value for the C r) 207 313.67 T
(esult, and the C function is expected to have) 286.04 313.67 T
(a r) 207 299.67 T
(eturn type of) 219.4 299.67 T
4 9.5 Q
(void) 285.13 299.67 T
0 11 Q
(.) 307.93 299.67 T
(Each) 207 279.67 T
2 F
(function-option) 233.26 279.67 T
0 F
( is a keywor) 302.51 279.67 T
(d\320value pair) 360.96 279.67 T
(. The) 421.59 279.67 T
4 9.5 Q
(generic-) 448.25 279.67 T
(function-method:) 207 265.67 T
0 11 Q
( option may be either) 298.2 265.67 T
4 9.5 Q
(#t) 404.52 265.67 T
0 11 Q
( or) 415.92 265.67 T
4 9.5 Q
(#f) 431.77 265.67 T
0 11 Q
(, indicating) 443.17 265.67 T
(whether to add a method to the generic function name or to) 207 251.67 T
(bind a bar) 207 237.67 T
(e constant method dir) 256.14 237.67 T
(ectly to name. The default) 362.45 237.67 T
(value for) 207 223.67 T
4 9.5 Q
(generic-function-method:) 253.33 223.67 T
0 11 Q
( is) 390.13 223.67 T
4 9.5 Q
(#f) 403.5 223.67 T
0 11 Q
(. The option) 414.9 223.67 T
4 9.5 Q
(C-) 476.12 223.67 T
(modifiers:) 207 209.67 T
0 11 Q
( can be used to specify platform dependent mod-) 264 209.67 T
(i\336ers for the C function being called. For example, on W) 207 195.67 T
(in-) 478.34 195.67 T
(dows, use) 207 181.67 T
4 9.5 Q
(C-modifiers:) 258.38 181.67 T
("__stdcall") 329.53 181.67 T
0 11 Q
( if the C function to be) 392.23 181.67 T
(called is de\336ned to be a) 207 167.67 T
4 9.5 Q
(__stdcall) 323.62 167.67 T
0 11 Q
( function.) 374.92 167.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.48/DEST FmPD2
207 520/I4.1.1087509 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "48" 52
%%Page: "49" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(49) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
-0.12 (The) 189 640.67 P
4 9.5 Q
-0.24 (c-name:) 210.05 640.67 P
0 11 Q
-0.12 ( option is used to specify the name of the C func-) 249.95 640.67 P
(tion as it is de\336ned in the object or shar) 189 626.67 T
(ed library \336le. The) 379.12 626.67 T
2 F
(c-) 471.19 626.67 T
(name) 189 612.67 T
0 F
( must be a constant string.) 212.84 612.67 T
(The) 189 592.67 T
4 9.5 Q
(indirect:) 210.16 592.67 T
(#t) 264.21 592.67 T
0 11 Q
( option de\336nes a function that accepts a C) 275.61 592.67 T
(function pointer as its \336rst ar) 189 578.67 T
(gument and calls the function) 329.46 578.67 T
(given with the signatur) 189 564.67 T
(e described by the parameters and) 302.32 564.67 T
(r) 189 550.67 T
(esult given. In this case the Dylan function de\336ned accepts) 193.15 550.67 T
(one mor) 189 536.67 T
(e ar) 229.29 536.67 T
(gument than if) 246.96 536.67 T
2 F
(c-name) 321.68 536.67 T
0 F
( was given. The type speci-) 353.66 536.67 T
(\336ed for the \336rst parameter of the Dylan function is) 189 522.67 T
4 9.5 Q
-0.35 (<c-function-pointer>) 189 508.67 P
0 11 Q
-0.17 (. One of) 303 508.67 P
2 F
-0.17 (c-name) 343.48 508.67 P
0 F
-0.17 ( or) 375.45 508.67 P
4 9.5 Q
-0.35 (indirect:) 390.96 508.67 P
-0.35 (#t) 444.84 508.67 P
0 11 Q
-0.17 ( must) 456.24 508.67 P
(be supplied, but not both.) 189 494.67 T
(Example C declarations:) 108 474.67 T
4 9 Q
(/* Compute the length of a string */) 135 454 T
(int strlen\050char *string\051;) 135 443 T
(/* Set the given locations to values,) 135 424 T
(returning an error code */) 151.2 413 T
(int fill_locations\050int *loc1, int* loc2\051;) 135 402 T
(/* Read at most as far as indicated in max_then_read,) 135 383 T
(updating it to contain how much was actually read */) 151.2 372 T
(void read_stuff\050int *max_then_read\051;) 135 353 T
0 11 Q
(Example FFI de\336nitions:) 135 332.67 T
4 9 Q
(define C-function strlen) 135 312 T
(parameter) 145.8 301 T
(string :: <C-char*>;) 199.8 301 T
(result) 145.8 290 T
(value  :: <C-int>;) 199.8 290 T
(c-name: "strlen";) 145.8 279 T
(end C-function;) 135 268 T
(define C-function fill-locations) 135 249 T
(output parameter loc1 :: <C-int*>;) 145.8 238 T
(output parameter loc2 :: <C-int*>;) 145.8 227 T
(result return-code) 145.8 216 T
(:: <C-int>;) 264.6 216 T
(c_name: "fill_locations";) 145.8 205 T
(end C-function;) 135 194 T
(define C-function read-stuff) 135 175 T
(input output parameter :: <C-int*>;) 145.8 164 T
(c-name: "read_stuff";) 145.8 153 T
(end C-function;) 135 142 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.49/DEST FmPD2
189 660/I4.1.1059533 FmPA
189 660/I4.1.1059531 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "49" 53
%%Page: "50" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(50) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(Example transactions:) 126 640.67 T
4 9 Q
(? strlen\050$my-c-string\051;) 153 620 T
(44) 153 609 T
5 F
(?) 153 590 T
4 F
(fill-locations\050\051;) 163.8 590 T
(0) 153 579 T
(101 // extra output value) 153 568 T
(102 // extra output value) 153 557 T
5 F
(?) 153 538 T
4 F
( read-stuff\050100\051;) 158.4 538 T
(50 // extra output value) 153 527 T
0 11 Q
(In ef) 126 506.67 T
(fect, a) 147.59 506.67 T
4 9.5 Q
(define C-function) 178.74 506.67 T
0 11 Q
( such as:) 275.64 506.67 T
4 9 Q
(define C-function foo) 153 486 T
(parameter string) 163.8 475 T
(::) 255.6 475 T
(<C-char*>;) 271.8 475 T
(parameter count) 163.8 464 T
(::) 255.6 464 T
(<C-int>;) 271.8 464 T
(result) 163.8 453 T
(value) 217.8 453 T
(::) 255.6 453 T
(<C-int>;) 271.8 453 T
(c-name: "foo";) 163.8 442 T
(end C-function;) 153 431 T
0 11 Q
(expands into something like:) 126 410.67 T
4 9 Q
(define constant foo =) 153 390 T
(method \050string, count\051) 163.8 379 T
(let c-string = %as-c-representation\050<C-char*>,) 174.6 368 T
(string\051;) 369 357 T
(let c-count = %as-c-representation\050<C-int>, count\051;) 174.6 346 T
(let c-result = %call-c-function\050"foo", c-string,) 174.6 335 T
(c-count\051;) 347.4 324 T
(%as-dylan-representation\050<C-int>, c-result\051;) 174.6 313 T
(end;) 153 302 T
0 11 Q
(with the declar) 153 281.67 T
(ed type.) 225.84 281.67 T
3 13 Q
(1.7.3  Describing Dylan functions f) 126 248.33 T
(or use b) 299.98 248.33 T
(y C) 341.25 248.33 T
3 14 Q
(de\336ne C-callab) 126 200.67 T
(le-wrapper) 207.56 200.67 T
2 13 Q
(De\336nition macr) 415.16 201.33 T
(o) 498.23 201.33 T
6 12 Q
(Summar) 135 176 T
(y) 172.48 176 T
0 11 Q
(Makes a Dylan function callable fr) 207 176 T
(om C by describing a C) 373.36 176 T
(contract for the function.) 207 162 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.50/DEST FmPD2
179 658/I4.1.1059395 FmPA
179 658/I4.1.1059913 FmPA
156 401/I4.1.1060015 FmPA
156 401/I4.1.1060071 FmPA
156 401/I4.1.1060067 FmPA
156 401/I4.1.1060065 FmPA
156 401/I4.1.1060157 FmPA
126 354/I4.1.1058472 FmPA
126 354/I4.1.1058678 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "50" 54
%%Page: "51" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(51) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
6 12 Q
0 X
(Signature) 117 640 T
4 9 Q
(define C-callable-wrapper [) 189 640 T
7 F
(dylan-r) 334.8 640 T
(ep-name) 364.65 640 T
4 13 Q
(]) 398.65 640 T
4 9 Q
(of) 199.8 629 T
7 F
(dylan-function) 216 629 T
4 F
([) 199.8 618 T
7 F
(parameter-spec) 205.2 618 T
4 F
(; ...] [;]) 266.7 618 T
([) 199.8 607 T
7 F
(r) 205.2 607 T
(esult-spec) 208.54 607 T
4 F
(] [;]) 248.53 607 T
([) 199.8 596 T
7 F
(function-options) 205.2 596 T
4 F
(][;]) 272.72 596 T
(end [C-callable-wrapper]) 189 585 T
6 12 Q
(Arguments) 117 559 T
2 11 Q
(dylan-r) 189 559 T
(ep-name) 221.8 559 T
0 F
(A Dylan variable name.) 270 559 T
2 F
(dylan-function) 189 539 T
0 F
(An instance of) 270 539 T
4 9.5 Q
(<function>) 342.79 539 T
0 11 Q
(.) 399.79 539 T
2 F
(parameter-spec) 189 519 T
(r) 189 499 T
(esult-spec) 193.08 499 T
(function-options) 189 479 T
0 F
(A pr) 270 479 T
(operty list.) 292.07 479 T
6 12 Q
(Descr) 117 451.33 T
(iption) 142.84 451.33 T
0 11 Q
(Makes a Dylan function callable fr) 189 451.33 T
(om C by describing a C) 355.36 451.33 T
-0.1 (contract for the function. In or) 189 437.33 P
-0.1 (der to generate a corr) 334.52 437.33 P
-0.1 (ect C-call-) 437.7 437.33 P
(able function wrapper) 189 423.33 T
(, the same information about the func-) 296.37 423.33 T
-0.29 (tion must be given as would be needed by C callers, typically) 189 409.33 P
(pr) 189 395.33 T
(ovided by) 199.76 395.33 T
4 9.5 Q
(extern) 251.59 395.33 T
0 11 Q
( declarations for the function in a C) 285.79 395.33 T
(header \336le: the types of its parameters and r) 189 381.33 T
(esults.) 402.58 381.33 T
(The r) 189 361.33 T
(esult of pr) 214.31 361.33 T
(ocessing a) 263.59 361.33 T
4 9.5 Q
(define C-callable-wrapper) 315.8 361.33 T
0 11 Q
( de\336-) 458.3 361.33 T
(nition is a function with a C entry point with the contract) 189 347.33 T
(described. This function takes C values as ar) 189 333.33 T
(guments, con-) 404.17 333.33 T
-0.09 (verting them to Dylan r) 189 319.33 P
-0.09 (epr) 303.2 319.33 P
-0.09 (esentations accor) 319.22 319.33 P
-0.09 (ding to the types) 401.85 319.33 P
(declar) 189 305.33 T
(ed for the parameters of the C function befor) 218.72 305.33 T
(e calling) 435.45 305.33 T
(the Dylan function with them. If the C function was) 189 291.33 T
(described as r) 189 277.33 T
(eturning r) 255.97 277.33 T
(esults, the r) 304.82 277.33 T
(esults of the call to the) 360.49 277.33 T
(Dylan function ar) 189 263.33 T
(e converted to C r) 274.66 263.33 T
(epr) 361.16 263.33 T
(esentations accor) 377.19 263.33 T
(ding) 459.91 263.33 T
-0.3 (to the declar) 189 249.33 P
-0.3 (ed types of those r) 248.47 249.33 P
-0.3 (esults befor) 336.26 249.33 P
-0.3 (e being r) 391.89 249.33 P
-0.3 (eturned to) 433.28 249.33 P
(the C caller of the function.) 189 235.33 T
-0.19 (The) 189 215.33 P
2 F
-0.19 (dylan-function) 209.98 215.33 P
0 F
-0.19 ( is a Dylan function that accepts the corr) 276.19 215.33 P
-0.19 (ect) 469.7 215.33 P
(number of parameters, and is called by the C callable wrap-) 189 201.33 T
(per) 189 187.33 T
(.) 204.41 187.33 T
-0.38 (The) 189 167.33 P
2 F
-0.38 (function-options) 209.78 167.33 P
0 F
-0.38 ( ar) 283.32 167.33 P
-0.38 (e a pr) 295.34 167.33 P
-0.38 (operty list. This list may contain a) 321.6 167.33 P
(string value for the) 189 153.33 T
2 F
(c-name) 284.4 153.33 T
0 F
( keywor) 316.38 153.33 T
(d. If a) 355.96 153.33 T
2 F
(c-name) 386.55 153.33 T
0 F
( is speci\336ed,) 418.53 153.33 T
(that name is made visible to C as the name of the generated) 189 139.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.51/DEST FmPD2
316 513/I4.1.1059399 FmPA
316 513/I4.1.1059903 FmPA
117 603/I4.1.1087518 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "51" 55
%%Page: "52" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(52) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 9.5 Q
0 X
(C-callable wrapper) 207 640.67 T
0 11 Q
(function. Given a compatible) 315.3 640.67 T
4 9.5 Q
(extern) 458.86 640.67 T
0 11 Q
(declaration, this allows C code to call Dylan code simply by) 207 626.67 T
(invoking a named function. The) 207 612.67 T
4 9.5 Q
(export:) 365.45 612.67 T
0 11 Q
( option takes the) 405.36 612.67 T
-0.16 (values) 207 598.67 P
4 9.5 Q
-0.34 (#t) 241.07 598.67 P
0 11 Q
-0.16 ( or) 252.47 598.67 P
4 9.5 Q
-0.34 (#f) 267.99 598.67 P
0 11 Q
-0.16 ( and indicates whether the c-name for the gen-) 279.39 598.67 P
(erated) 207 584.67 T
4 9.5 Q
(C-callable-wrapper) 240.44 584.67 T
0 11 Q
( function is to be exported fr) 343.04 584.67 T
(om) 480.42 584.67 T
-0.41 (the library\325s) 207 570.67 P
4 9.5 Q
-0.84 (.dll) 267.46 570.67 P
0 11 Q
-0.41 (.) 290.26 570.67 P
4 9.5 Q
-0.84 (#t) 295.35 570.67 P
0 11 Q
-0.41 ( means it is exported,) 306.75 570.67 P
4 9.5 Q
-0.84 ( #f) 408.56 570.67 P
0 11 Q
-0.41 (means it is not.) 429.68 570.67 P
(The default is #f. The) 207 556.67 T
4 9.5 Q
(c-modifiers:) 311.93 556.67 T
0 11 Q
( option is the same as in) 380.33 556.67 T
-0.09 (the) 207 542.67 P
4 9.5 Q
-0.17 (c-function) 224.92 542.67 P
0 11 Q
-0.09 ( macr) 281.92 542.67 P
-0.09 (o, except that the modi\336ers apply to the) 308.83 542.67 P
(C function wrapper which is generated. See) 207 528.67 T
4 9.5 Q
(define C-func-) 422.15 528.67 T
(tion) 207 514.67 T
0 11 Q
(,  page 45.) 229.8 514.67 T
(If) 207 494.67 T
2 F
(dylan-r) 217.12 494.67 T
(ep-name) 249.92 494.67 T
0 F
( is speci\336ed, it is bound to an instance of a) 287.2 494.67 T
(function-pointer designator class identifying the generated) 207 480.67 T
(C-callable wrapper function. Y) 207 466.67 T
(ou can pass this pointer to C) 355.26 466.67 T
(code for use as, for example, a callback.) 207 452.67 T
(A) 207 432.67 T
2 F
(parameter-spec) 218.31 432.67 T
0 F
(has the following syntax:) 287.86 432.67 T
4 9 Q
([) 207 412 T
7 F
(adjectives) 212.4 412 T
4 F
(] parameter name ::) 252.89 412 T
7 F
(c-type) 360.89 412 T
4 F
( #key) 385.89 412 T
7 F
(c-name) 418.29 412 T
0 11 Q
-0.26 (If no parameters ar) 207 391.67 P
-0.26 (e speci\336ed, the C function is taken to have) 298.71 391.67 P
(no ar) 207 377.67 T
(guments.) 231.8 377.67 T
(An) 207 357.67 T
2 F
(adjective) 224.71 357.67 T
0 F
( can be) 263.41 357.67 T
4 9.5 Q
(input) 299.8 357.67 T
0 11 Q
(,) 328.3 357.67 T
4 9.5 Q
(output) 333.8 357.67 T
0 11 Q
(, or both. The calling disci-) 368 357.67 T
(pline is speci\336ed by the) 207 343.67 T
4 9.5 Q
(input) 324.03 343.67 T
0 11 Q
( and) 352.53 343.67 T
4 9.5 Q
(output) 376.65 343.67 T
0 11 Q
( adjectives.) 410.85 343.67 T
(If a parameter is) 207 323.67 T
4 9.5 Q
(output) 288.87 323.67 T
0 11 Q
(, the corr) 323.07 323.67 T
(esponding parameter is not) 365.96 323.67 T
(passed to the Dylan function, but the Dylan function is) 207 309.67 T
-0.43 (expected to r) 207 295.67 P
-0.43 (eturn an extra value that is placed in the location) 268.67 295.67 P
(pointed to by the parameter) 207 281.67 T
(. When the pointer is NULL, the) 342.17 281.67 T
(extra value fr) 207 267.67 T
(om the Dylan function is ignor) 271.5 267.67 T
(ed. The type des-) 420.48 267.67 T
(ignated for the parameter must be a pointer type.) 207 253.67 T
-0.02 (If a parameter is both) 207 233.67 P
4 9.5 Q
-0.05 (input) 313.58 233.67 P
0 11 Q
-0.02 ( and) 342.08 233.67 P
4 9.5 Q
-0.05 (output) 366.15 233.67 P
0 11 Q
-0.02 (, the parameter must) 400.36 233.67 P
(be a pointer type, and the value accepted by the Dylan func-) 207 219.67 T
(tion is the r) 207 205.67 T
(esult.) 261.71 205.67 T
4 9.5 Q
(The functions pointer-value and) 290.57 205.67 T
(pointer-value-setter perform the primitive Dylan-to-) 207 191.67 T
(C and C-to-Dylan conversions as documented with the) 207 177.67 T
-0.64 (designator class of the pointer\325s contents type \050see) 207 163.67 P
(Table 1.1\051. The C-FFI signals an error if it cannot) 207 149.67 T
(convert the object you attempt to store in the) 207 135.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.52/DEST FmPD2
[/Rect[422 525 504 536]/Border[0 0 0]/Page 49/View[/XYZ null 108 396 FmDC exch pop null]/LNK FmPD
[/Rect[207 511 275 525]/Border[0 0 0]/Page 49/View[/XYZ null 108 396 FmDC exch pop null]/LNK FmPD
[/Rect[291 202 504 213]/Border[0 0 0]/Page 25/View[/XYZ null 108 332 FmDC exch pop null]/LNK FmPD
[/Rect[207 126 504 202]/Border[0 0 0]/Page 25/View[/XYZ null 108 332 FmDC exch pop null]/LNK FmPD
[/Rect[189 637 353 648]/Border[0 0 0]/Page 25/View[/XYZ null 108 332 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "52" 56
%%Page: "53" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(53) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 9.5 Q
0 X
-0.26 (pointer to a compatible type.) 189 640.67 P
0 11 Q
-0.12 ( on that pointer) 353.26 640.67 P
-0.12 (. The Dylan) 427.23 640.67 P
(function is expected to r) 189 626.67 T
(eturn an extra value which is placed) 305.67 626.67 T
(into the location speci\336ed by the pointer passed to the C) 189 612.67 T
(function. If the pointer passed to the C function is) 189 598.67 T
4 9.5 Q
(NULL) 432.79 598.67 T
0 11 Q
(, then) 455.59 598.67 T
(the value passed to the Dylan function will be) 189 584.67 T
4 9.5 Q
(#f) 414.74 584.67 T
0 11 Q
(, and the) 426.14 584.67 T
(extra value r) 189 570.67 T
(eturned will be ignor) 249.84 570.67 T
(ed.) 352.32 570.67 T
-0.03 (Ther) 189 550.67 P
-0.03 (e is curr) 211.56 550.67 P
-0.03 (ently no way to de\336ne a C-callable function that) 250.15 550.67 P
(accepts a variable number of ar) 189 536.67 T
(guments.) 340.72 536.67 T
(A) 189 516.67 T
2 F
(r) 200.31 516.67 T
(esult-spec) 204.39 516.67 T
0 F
( has the following syntax:) 247.98 516.67 T
4 9 Q
(result name ::) 189 496 T
7 F
(c-type) 270 496 T
0 11 Q
(If no) 189 475.67 T
4 9.5 Q
(result) 214.28 475.67 T
0 11 Q
( is speci\336ed, the C function de\336ned does not) 248.48 475.67 T
(r) 189 461.67 T
(eturn a value. It is de\336ned as what in C terminology is) 193.15 461.67 T
(known as a) 189 447.67 T
2 F
(void) 247.01 447.67 T
0 F
( function.) 265.96 447.67 T
(Example C declarations:) 108 427.67 T
4 9 Q
(/* Compute the length of a string */) 135 407 T
(int strlen\050char *string\051;) 135 396 T
(/* Set the given locations to values, returning an) 135 377 T
(error code */) 151.2 366 T
(int fill_locations\050int *loc1, int* loc2\051;) 135 347 T
(/* Read at most as far as indicated in max_then_read,) 135 328 T
(updating it to contain how much was actually read */) 151.2 317 T
(void read_stuff\050int *max_then_read\051;) 135 298 T
0 11 Q
(Example FFI de\336nitions:) 108 277.67 T
4 9 Q
(define method dylan-strlen \050string\051 => \050length\051 \311 end;) 135 257 T
(define C-callable-wrapper of dylan-strlen) 135 238 T
(parameter string :: <C-char*>;) 145.8 227 T
(result) 145.8 216 T
(value) 199.8 216 T
(:: <C-int>;) 237.6 216 T
(c-name: "strlen";) 145.8 205 T
(end C-function;) 135 194 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.53/DEST FmPD2
[/Rect[255 274 468 285]/Border[0 0 0]/Page 25/View[/XYZ null 108 332 FmDC exch pop null]/LNK FmPD
[/Rect[171 198 468 274]/Border[0 0 0]/Page 25/View[/XYZ null 108 332 FmDC exch pop null]/LNK FmPD
[/Rect[189 637 353 648]/Border[0 0 0]/Page 25/View[/XYZ null 108 332 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "53" 57
%%Page: "54" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(54) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 F
0 X
(define method dylan-fill-locations \050\051) 153 642 T
( => \050return-code :: <integer>,) 153 631 T
(val1 :: <integer>,) 180 620 T
(val2 :: <integer>\051) 180 609 T
(\311) 153 598 T
(end;) 153 587 T
(define C-callable-wrapper of dylan-fill-locations) 153 568 T
(output parameter loc1) 163.8 557 T
(:: <C-int*>;) 282.6 557 T
(output parameter loc2) 163.8 546 T
(:: <C-int*>;) 282.6 546 T
(result return-code) 163.8 535 T
(:: <C-int>;) 282.6 535 T
(c-name: "fill_locations";) 163.8 524 T
(end C-function;) 153 513 T
(define method dylan-read-stuff \050max :: <integer>\051 =>) 153 494 T
(\050read :: <integer\051 \311) 163.8 483 T
(end;) 153 472 T
(define C-callable-wrapper of dylan-read-stuff) 153 453 T
(input output parameter max-then-read :: <C-int*>;) 163.8 442 T
(c-name: "read_stuff";) 163.8 431 T
(end C-function;) 153 420 T
0 11 Q
(Example C calls:) 126 399.67 T
4 9 Q
({) 153 379 T
(int length, *loc1, *loc2, max_then_read;) 163.8 368 T
(length = strlen\050\322ABC\323\051;) 163.8 349 T
(fill_locations\050loc1, loc2\051;) 163.8 330 T
(max_then_read = 100) 163.8 311 T
(read_stuff\050&max_then_read\051;) 163.8 300 T
(}) 153 289 T
0 11 Q
(In ef) 126 268.67 T
(fect, a) 147.59 268.67 T
4 9.5 Q
(define C-callable-wrapper) 178.74 268.67 T
0 11 Q
( such as:) 321.24 268.67 T
4 9 Q
(define C-callable-wrapper of foo) 153 248 T
(parameter string :: <C-char*>;) 163.8 237 T
(parameter count) 163.8 226 T
(:: <C-int>;) 255.6 226 T
(result) 163.8 215 T
(value) 217.8 215 T
(:: <C-int>;) 255.6 215 T
(c-name: "foo";) 163.8 204 T
(end C-function;) 153 193 T
0 11 Q
(expands into something like:) 126 172.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.54/DEST FmPD2
179 420/I4.1.1059413 FmPA
179 420/I4.1.1059907 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "54" 58
%%Page: "55" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(55) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(%c-callable-function "foo" \050c-string, c-count\051) 135 642 T
(let dylan-string) 156.6 631 T
(= %as-dylan-representation\050<C-char*>, c-string\051;) 167.4 620 T
(let dylan-count) 156.6 609 T
(= %as-dylan-representation\050<C-int>, c-count\051;) 167.4 598 T
(let dylan-result) 156.6 587 T
(= foo\050dylan-string, dylan-count\051;) 167.4 576 T
(%as-c-representation\050<C-int>, dylan-result\051;) 156.6 565 T
(end;) 145.8 554 T
0 11 Q
-0.25 (wher) 135 533.67 P
-0.25 (e the) 159.99 533.67 P
4 9.5 Q
-0.53 (%) 185.51 533.67 P
0 11 Q
-0.25 ( functions perform the primitive conversions between Dylan) 191.21 533.67 P
(and C r) 135 519.67 T
(epr) 171.07 519.67 T
(esentations, checking that their ar) 187.1 519.67 T
(guments ar) 350.19 519.67 T
(e compatible) 404.97 519.67 T
(with the declar) 135 505.67 T
(ed type.) 207.84 505.67 T
(Callback example:) 135 485.67 T
4 9 Q
(? define C-function c-sort) 135 465 T
(parameter strings) 156.6 454 T
(:: <C-string*>;) 275.4 454 T
(parameter compare) 156.6 443 T
(:: <C-function-pointer>;) 275.4 443 T
(result sorted-strings) 156.6 432 T
(:: <C-string*>;) 275.4 432 T
(c-name: "sort";) 156.6 421 T
(end C-function;) 145.8 410 T
(// Defined c-sort.) 135 391 T
5 F
(?) 135 372 T
4 F
(define C-callable-wrapper callback-for-< of \134<) 145.8 372 T
(parameter string1 :: <C-string>;) 156.6 361 T
(parameter string2 :: <C-string>;) 156.6 350 T
(result) 156.6 339 T
(int) 210.6 339 T
(:: <C-int>;) 253.8 339 T
(end C-callable-wrapper;) 145.8 328 T
(// Defined callback-for-<) 135 309 T
5 F
(?) 135 290 T
4 F
( callback-for-<) 140.4 290 T
({function pointer #xff6e00}) 135 279 T
5 F
(?) 135 268 T
4 F
(c-sort\050some-c-strings, callback-for-<\051;) 145.8 268 T
({<C-string> array}) 135 257 T
3 13 Q
(1.7.4  V) 108 225.33 T
(ariab) 144.13 225.33 T
(les) 169.52 225.33 T
0 11 Q
(This section covers describing and accessing C variables.) 108 205.67 T
3 14 Q
(de\336ne C-v) 108 157.67 T
(ariab) 163.29 157.67 T
(le) 190.63 157.67 T
2 13 Q
(De\336nition macr) 397.16 158.33 T
(o) 480.23 158.33 T
6 12 Q
(Summar) 117 133 T
(y) 154.48 133 T
0 11 Q
(Describes C variables to the) 189 133 T
4 9.5 Q
(c-ffi) 326.27 133 T
0 11 Q
(.) 354.77 133 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.55/DEST FmPD2
138 378/I4.1.1060017 FmPA
108 311/I4.1.1058474 FmPA
108 311/I4.1.1058692 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "55" 59
%%Page: "56" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(56) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Signature) 135 640 T
4 9 Q
(define C-variable) 207 640 T
7 F
(getter-name) 304.2 640 T
4 F
( ::) 352.2 640 T
7 F
(c-type) 373.8 640 T
4 F
(#key) 217.8 629 T
7 F
(setter) 244.8 629 T
(c-name) 272.69 629 T
4 F
( import:) 301.69 629 T
7 F
(boolean) 350.29 629 T
4 F
(end [C-variable]) 207 618 T
6 12 Q
(Arguments) 135 592 T
2 11 Q
(getter-name) 207 592 T
0 F
(A Dylan variable name.) 288 592 T
2 F
(c-type) 207 572 T
0 F
(A Dylan name.) 288 572 T
2 9.5 Q
(setter) 207 552 T
4 F
(#f) 288 552 T
0 11 Q
( or a Dylan variable name.) 299.4 552 T
2 F
(c-name) 207 532 T
0 F
(A string constant.) 288 532 T
(import) 207 512 T
4 9.5 Q
(#f) 288 512 T
0 11 Q
( or) 299.4 512 T
4 9.5 Q
(#t) 315.25 512 T
0 11 Q
(.) 326.65 512 T
6 12 Q
(Descr) 135 484.33 T
(iption) 160.84 484.33 T
0 11 Q
(Describes C variables to the C-FFI. It de\336nes a getter and set-) 207 484.33 T
(ter function for accessing the variable\325s value. The) 207 470.33 T
2 F
(c-name) 452.85 470.33 T
0 F
(keywor) 207 456.33 T
(d ar) 243.83 456.33 T
(gument is r) 262.95 456.33 T
(equir) 318.18 456.33 T
(ed and gives the C name of the) 343.59 456.33 T
(variable to be accessed. The) 207 442.33 T
2 F
(setter) 344.03 442.33 T
0 F
( keywor) 368.47 442.33 T
(d allows you to) 408.05 442.33 T
(specify the name of the setter function, or if a setter function) 207 428.33 T
(is to be de\336ned at all. If) 207 414.33 T
2 F
(setter) 323.2 414.33 T
0 F
( is) 347.65 414.33 T
4 9.5 Q
(#f) 361.01 414.33 T
0 11 Q
(, no setter function will be) 372.41 414.33 T
(de\336ned.) 207 400.33 T
(The) 207 380.33 T
4 9.5 Q
(import:) 228.16 380.33 T
0 11 Q
( option indicates if the C variable must be) 268.06 380.33 T
(imported fr) 207 366.33 T
(om another) 263.01 366.33 T
4 9.5 Q
(.dll) 321.74 366.33 T
0 11 Q
( or not.) 344.54 366.33 T
4 9.5 Q
(#t) 381.89 366.33 T
0 11 Q
( indicates it is in) 393.29 366.33 T
(another) 207 352.33 T
4 9.5 Q
(.dll) 247.26 352.33 T
0 11 Q
( and must be imported,) 270.06 352.33 T
4 9.5 Q
(#f) 386.58 352.33 T
0 11 Q
(means that it is not) 403.68 352.33 T
(to be imported. Whether the variable has to be imported) 207 338.33 T
(fr) 207 324.33 T
(om another) 214.81 324.33 T
4 9.5 Q
(.dll) 273.54 324.33 T
0 11 Q
( or not is determined by which Dylan) 296.34 324.33 T
(pr) 207 310.33 T
(oject the C sour) 217.76 310.33 T
(ce \336les ar) 292.83 310.33 T
(e part of. If they ar) 337.92 310.33 T
(e in the same) 427.79 310.33 T
(pr) 207 296.33 T
(oject as the) 217.76 296.33 T
4 9.5 Q
(C-variable) 273.75 296.33 T
0 11 Q
( de\336nition then the value of) 330.75 296.33 T
("import:" should be) 207 282.33 T
4 9.5 Q
(#f) 304.6 282.33 T
0 11 Q
( as the de\336nition and variable will be) 316 282.33 T
(linked into the same) 207 268.33 T
4 9.5 Q
(.dll) 308.51 268.33 T
0 11 Q
(. If the de\336nition is in a dif) 331.31 268.33 T
(fer) 459.73 268.33 T
(ent) 472.81 268.33 T
(pr) 207 254.33 T
(oject fr) 217.76 254.33 T
(om the C sour) 250.64 254.33 T
(ce \336les then they will be in separate) 319.11 254.33 T
4 9.5 Q
(.dll) 207 240.33 T
0 11 Q
(s and) 229.8 240.33 T
4 9.5 Q
(import:) 258.59 240.33 T
0 11 Q
( needs to be) 298.49 240.33 T
4 9.5 Q
(#t) 358.76 240.33 T
0 11 Q
(. The default value is) 370.16 240.33 T
4 9.5 Q
( #f) 471.58 240.33 T
0 11 Q
(.) 488.68 240.33 T
-0.15 (For integer) 207 220.33 P
-0.15 (, \337oat, or pointer) 259.44 220.33 P
-0.15 (-typed C variables the r) 340.08 220.33 P
-0.15 (epr) 453.62 220.33 P
-0.15 (esenta-) 469.65 220.33 P
(tion is clear and unambiguous. For C str) 207 206.33 T
(uct or union typed) 402.24 206.33 T
-0.04 (variables the translation is not so simple. A C union or str) 207 192.33 P
-0.04 (uct) 486.19 192.33 P
(has no dir) 207 178.33 T
(ect r) 255.54 178.33 T
(epr) 276.18 178.33 T
(esentation in Dylan. Y) 292.21 178.33 T
(ou may only have a) 398.75 178.33 T
(r) 207 164.33 T
(efer) 211.15 164.33 T
(ence to the C object in Dylan thr) 229.49 164.33 T
(ough a) 385.09 164.33 T
4 9.5 Q
(<c-pointer>) 421.25 164.33 T
0 11 Q
(object. For this r) 207 150.33 T
(eason,) 284.87 150.33 T
4 9.5 Q
(define) 318.21 150.33 T
(c-variable) 355.16 150.33 T
0 11 Q
( is not permitted) 412.16 150.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.56/DEST FmPD2
421 316/I4.1.1059617 FmPA
421 316/I4.1.1059615 FmPA
318 302/I4.1.1059421 FmPA
318 302/I4.1.1059941 FmPA
135 636/I4.1.1087530 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "56" 60
%%Page: "57" 61
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.7) 479.91 677.67 T
(Functions) 501.29 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(57) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(for variables with C aggr) 189 640.67 T
(egate types. Use) 310.03 640.67 T
4 9.5 Q
(Define) 391.51 640.67 T
(C-address) 428.46 640.67 T
0 11 Q
(for those variables.) 189 626.67 T
(Example:) 108 606.67 T
4 9 Q
(? define C-variable process-count :: <C-int>,) 135 586 T
(c-name: "process_count" end;) 156.6 575 T
(? process-count\050\051;) 135 556 T
(57) 135 545 T
(? process-count\050\051 := 0;) 135 526 T
(0) 135 515 T
(? process-count\050\051;) 135 496 T
(0) 135 485 T
(? define C-variable machine-name-1 :: <C-char*>,) 135 466 T
(c-name: "MachineName";) 156.6 455 T
(end;) 135 444 T
(? machine-name-1\050\051;) 135 425 T
(#{<C-char*> #xaaabc00}) 135 414 T
0 11 Q
-0.05 (In C and other static languages what is known as a variable is a named alloca-) 108 393.67 P
(tion of memory) 108 379.67 T
(. T) 182.3 379.67 T
(o access a global C variable fr) 193.54 379.67 T
(om Dylan it is occasionally) 336.44 379.67 T
(necessary to get a handle to the location wher) 108 365.67 T
(e that variable is kept. The) 329.3 365.67 T
4 9.5 Q
(define) 108 351.67 T
(C-address) 144.95 351.67 T
0 11 Q
( macr) 196.25 351.67 T
(o can be used for this purpose.) 223.24 351.67 T
3 14 Q
(de\336ne C-ad) 108 303.67 T
(dress) 170.41 303.67 T
2 13 Q
(De\336nition macr) 397.16 304.33 T
(o) 480.23 304.33 T
6 12 Q
(Signature) 117 279 T
0 11 Q
-0.4 (De\336nes a Dylan constant binding that is a) 189 279 P
4 9.5 Q
-0.83 (<C-pointer>) 391.4 279 P
0 11 Q
-0.4 ( to the) 454.1 279 P
(location of a C global variable.) 189 265 T
6 12 Q
(Signature) 117 237.33 T
4 9 Q
(define C-address) 189 237.33 T
7 F
(name) 280.8 237.33 T
4 F
( ::) 302.3 237.33 T
7 F
(pointer-designator-type) 323.9 237.33 T
4 F
(#key) 199.8 226.33 T
7 F
(c-name) 226.8 226.33 T
4 F
( import:) 255.8 226.33 T
7 F
(boolean) 304.4 226.33 T
4 F
(end [C-address] [) 189 215.33 T
7 F
(name) 280.8 215.33 T
4 F
(]) 302.3 215.33 T
6 12 Q
(Arguments) 117 189.33 T
2 11 Q
(name) 189 189.33 T
0 F
(A Dylan variable name.) 270 189.33 T
2 F
(pointer-designator-type) 189 169.33 T
(c-name) 189 149.33 T
0 F
(A string constant.) 270 149.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.57/DEST FmPD2
108 457/I4.1.1058476 FmPA
108 457/I4.1.1058676 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "57" 61
%%Page: "58" 62
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(58) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(import) 207 640.67 T
4 9.5 Q
(#f) 288 640.67 T
0 11 Q
( or) 299.4 640.67 T
4 9.5 Q
(#t) 315.25 640.67 T
0 11 Q
(.) 326.65 640.67 T
6 12 Q
(Descr) 135 613 T
(iption) 160.84 613 T
0 11 Q
(De\336nes a Dylan constant binding,) 207 613 T
2 F
(name) 374.66 613 T
0 F
(, that is a) 398.5 613 T
4 9.5 Q
(<C-) 444.69 613 T
-0.97 (pointer>) 207 599 P
0 11 Q
-0.47 ( which points to the location of the C global variable) 252.6 599 P
2 F
(c-name) 207 585 T
0 F
(.) 238.98 585 T
2 F
(Pointer-designator-type) 207 565 T
0 F
( must be) 312.71 565 T
(the type of the constant to be) 356.91 565 T
(de\336ned, and a subtype of) 207 551 T
4 9.5 Q
(<C-pointer>) 333.29 551 T
0 11 Q
(.) 395.99 551 T
(The) 207 531 T
4 9.5 Q
(import:) 228.16 531 T
0 11 Q
( option indicates if the C addr) 268.06 531 T
(ess must be) 412.81 531 T
(imported fr) 207 517 T
(om another) 263.01 517 T
4 9.5 Q
(.dll) 321.74 517 T
0 11 Q
( or not.) 344.54 517 T
4 9.5 Q
(#t) 381.89 517 T
0 11 Q
( indicates it is in) 393.29 517 T
(another) 207 503 T
4 9.5 Q
(.dll) 247.26 503 T
0 11 Q
( and must be imported,) 270.06 503 T
4 9.5 Q
(#f) 386.58 503 T
0 11 Q
(means that it is not) 403.68 503 T
(to be imported. Whether the variable has to be imported) 207 489 T
(fr) 207 475 T
(om another) 214.81 475 T
4 9.5 Q
(.dll) 273.54 475 T
0 11 Q
( or not is determined by which Dylan) 296.34 475 T
(pr) 207 461 T
(oject the C sour) 217.76 461 T
(ce \336les ar) 292.83 461 T
(e part of. If they ar) 337.92 461 T
(e in the same) 427.79 461 T
(pr) 207 447 T
(oject as the) 217.76 447 T
4 9.5 Q
(C-address) 273.75 447 T
0 11 Q
( de\336nition then the value of) 325.05 447 T
("import:" should be) 207 433 T
4 9.5 Q
(#f) 304.6 433 T
0 11 Q
( as the de\336nition and variable will be) 316 433 T
(linked into the same) 207 419 T
4 9.5 Q
(.dll) 308.51 419 T
0 11 Q
(. If the de\336nition is in a dif) 331.31 419 T
(fer) 459.73 419 T
(ent) 472.81 419 T
(pr) 207 405 T
(oject fr) 217.76 405 T
(om the C sour) 250.64 405 T
(ce \336les then they will be in separate) 319.11 405 T
4 9.5 Q
(.dll) 207 391 T
0 11 Q
(s and) 229.8 391 T
4 9.5 Q
(import:) 258.59 391 T
0 11 Q
( needs to be) 298.49 391 T
4 9.5 Q
(#t) 358.76 391 T
0 11 Q
(. The default value is) 370.16 391 T
4 9.5 Q
( #f) 471.58 391 T
0 11 Q
(.) 488.68 391 T
3 16 Q
(1.8  Allocating and deallocating C stora) 126 355.67 T
(g) 370.88 355.67 T
(e) 379.02 355.67 T
126 500/G4.946964 FmPA
0 11 Q
-0.35 (C objects can be allocated by calling) 126 335 P
4 9.5 Q
-0.73 (make) 300.38 335 P
0 11 Q
-0.35 ( on an associated wrapper class or by) 323.18 335 P
(allocating them on the stack using the macr) 126 321 T
(o) 336.75 321 T
4 9.5 Q
(with-stack-structure) 345.51 321 T
0 11 Q
(.) 459.51 321 T
(The C component of a) 126 301 T
4 9.5 Q
(make) 236.01 301 T
0 11 Q
(-allocated object is not deallocated by default) 258.81 301 T
-0.06 (when the Dylan designator object is r) 126 287 P
-0.06 (eclaimed by the garbage collector) 306.6 287 P
-0.06 (, so we) 468.07 287 P
(pr) 126 273 T
(ovide a manual means of fr) 136.76 273 T
(eeing this storage with the function) 269.4 273 T
4 9.5 Q
(destroy) 443.89 273 T
0 11 Q
(.) 482.57 273 T
3 14 Q
(make) 126 225 T
7 F
(subclass\050<C-pointer>\051) 158.55 225 T
2 13 Q
(G.f. method) 442.98 225.67 T
6 12 Q
(Summar) 135 200.33 T
(y) 172.48 200.33 T
0 11 Q
(Allocates a C object on the heap.) 207 200.33 T
6 12 Q
(Signature) 135 172.33 T
4 9 Q
(make) 207 172.33 T
7 F
(subclass\050<c-pointer>\051) 234 172.33 T
4 F
( #key) 321.23 172.33 T
7 F
(allocator) 353.63 172.33 T
(element-count) 396.04 172.33 T
-0.66 (extra-bytes) 363.6 161.33 P
-0.66 (addr) 412.75 161.33 P
-0.66 (ess) 431.1 161.33 P
4 F
-1.59 ( =>) 443.08 161.33 P
7 F
-0.66 (C-pointer) 461.51 161.33 P
6 12 Q
(Arguments) 135 135.33 T
2 11 Q
(subclass) 207 135.33 T
0 F
(A subclass of) 288 135.33 T
4 9.5 Q
(<C-pointer>) 354.77 135.33 T
0 11 Q
(.) 417.47 135.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.58/DEST FmPD2
152 510/I4.1.1060019 FmPA
152 510/I4.1.1060023 FmPA
346 472/I4.1.1059432 FmPA
346 472/I4.1.1059963 FmPA
126 378/I4.1.1058478 FmPA
126 378/I4.1.1058704 FmPA
135 765/I4.1.1087542 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "58" 62
%%Page: "59" 63
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.8) 374.74 677.67 T
(Allocating and deallocating C storage) 396.11 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(59) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
2 11 Q
0 X
(allocator) 189 640.67 T
0 F
(An instance of) 270 640.67 T
4 9.5 Q
(<function>) 342.79 640.67 T
0 11 Q
(.) 399.79 640.67 T
2 F
(element-count) 189 620.67 T
0 F
(An instance of) 270 620.67 T
4 9.5 Q
(<integer>) 342.79 620.67 T
0 11 Q
(.) 394.09 620.67 T
2 F
(extra-bytes) 189 600.67 T
0 F
(An instance of) 270 600.67 T
4 9.5 Q
(<integer>) 342.79 600.67 T
0 11 Q
(.) 394.09 600.67 T
2 F
(addr) 189 580.67 T
(ess) 208.96 580.67 T
0 F
(An instance of) 270 580.67 T
4 9.5 Q
(<integer>) 342.79 580.67 T
0 11 Q
( or) 394.09 580.67 T
4 9.5 Q
(<machine-) 409.94 580.67 T
(word>) 270 566.67 T
0 11 Q
(.) 298.5 566.67 T
6 12 Q
(V) 117 539 T
(alues) 122.89 539 T
2 11 Q
(c-pointer) 189 539 T
0 F
-0.46 (An instance of type) 270 539 P
4 9.5 Q
-0.94 (<c-pointer>) 365.3 539 P
0 11 Q
-0.46 ( pointing to) 428 539 P
(the object.) 270 525 T
6 12 Q
(Descr) 117 497.33 T
(iption) 142.84 497.33 T
0 11 Q
(Allocates a C object on the heap, using whatever standar) 189 497.33 T
(d C) 463.81 497.33 T
(allocation function is in use on the tar) 189 483.33 T
(get platform \050typically) 371.45 483.33 T
4 9.5 Q
(malloc) 189 469.33 T
0 11 Q
(\051 to allocate the storage. This method is applicable to) 223.2 469.33 T
(subclasses of) 189 455.33 T
4 9.5 Q
(<C-pointer>) 254.4 455.33 T
0 11 Q
( and r) 317.1 455.33 T
(eturns an instance of its) 345.36 455.33 T
(ar) 189 441.33 T
(gument class.) 198.65 441.33 T
(If the) 189 421.33 T
2 F
(addr) 217.13 421.33 T
(ess) 237.09 421.33 T
0 F
( option is pr) 249.93 421.33 T
(ovided, no new storage is allocated,) 308.61 421.33 T
(but instead, a new pointer with the given machine wor) 189 407.33 T
(d) 455.43 407.33 T
(addr) 189 393.33 T
(ess is r) 212.09 393.33 T
(eturned.) 244.2 393.33 T
(The) 189 373.33 T
2 F
(allocator) 210.16 373.33 T
0 F
( ar) 248.24 373.33 T
(gument should be a Dylan function that can) 260.63 373.33 T
-0.34 (serve as an allocator) 189 359.33 P
-0.34 (. It must accept a single integer ar) 285.46 359.33 P
-0.34 (gument) 445.87 359.33 P
(\321 the number of bytes to be allocated \321 and r) 189 345.33 T
(eturn a Dylan) 415.17 345.33 T
4 9.5 Q
-0.57 (<machine-word>) 189 331.33 P
0 11 Q
-0.27 ( that r) 268.8 331.33 P
-0.27 (epr) 296.97 331.33 P
-0.27 (esents the addr) 313 331.33 P
-0.27 (ess of the memory it) 386.15 331.33 P
(allocated.) 189 317.33 T
(The amount of storage allocated by default is the r) 189 297.33 T
(esult of:) 433.07 297.33 T
4 9 Q
(size-of\050) 199.8 276.67 T
7 F
(pointer-wrapper-class) 243 276.67 T
4 F
(.referenced-type\051) 332.51 276.67 T
0 11 Q
(If a positive integer is passed as an) 189 256.33 T
2 F
(extra-bytes) 360.17 256.33 T
0 F
( option, that) 409.25 256.33 T
(number of extra bytes is also allocated.) 189 242.33 T
-0.06 (If a positive integer is passed as a) 189 222.33 P
2 F
-0.06 (element-count) 353.29 222.33 P
0 F
-0.06 ( option, space) 416.44 222.33 P
(for) 189 208.33 T
2 F
(element-count) 205.76 208.33 T
0 F
(copies of the r) 271.67 208.33 T
(efer) 339.62 208.33 T
(enced type is allocated,) 357.97 208.33 T
(taking into account the) 189 194.33 T
2 F
(extra-bytes) 303.27 194.33 T
0 F
( option for each of them.) 352.35 194.33 T
-0.02 (The) 189 180.33 P
2 F
-0.02 (element-count) 210.14 180.33 P
0 F
-0.02 (ar) 276.02 180.33 P
-0.02 (gument can be used for allocating arrays) 285.67 180.33 P
(of sizes that ar) 189 166.33 T
(e not known statically) 258.94 166.33 T
(. The keywor) 364.77 166.33 T
(d) 428.26 166.33 T
2 F
(element-) 437.73 166.33 T
(count) 189 152.33 T
0 F
( is used for this option rather than) 214.26 152.33 T
2 F
(size) 382.42 152.33 T
0 F
( in or) 398.92 152.33 T
(der to avoid) 424.18 152.33 T
-0.03 (con\337ict with the) 189 138.33 P
2 F
-0.03 (size) 270.44 138.33 P
0 F
-0.03 (collection keywor) 289.67 138.33 P
-0.03 (d. The logical size of a) 375.86 138.33 P
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.59/DEST FmPD2
117 649/I4.1.1087554 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "59" 63
%%Page: "60" 64
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(60) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(collection r) 207 640.67 T
(epr) 260.54 640.67 T
(esented by a pointer wrapper and the number) 276.56 640.67 T
(of array elements that implement it may dif) 207 626.67 T
(fer; a null-termi-) 418.64 626.67 T
(nated string is an example of such a case.) 207 612.67 T
(This) 126 592.67 T
4 9.5 Q
(make) 149.76 592.67 T
0 11 Q
( method calls) 172.56 592.67 T
4 9.5 Q
(initialize) 239.96 592.67 T
0 11 Q
( on the wrapper object it generates befor) 296.96 592.67 T
(e) 492.5 592.67 T
(r) 126 578.67 T
(eturning it.) 130.15 578.67 T
4 9 Q
(? define variable *space-for-one-int* = make\050<C-int*>\051;) 153 558 T
(? *space-for-one-int*[0];) 153 539 T
(97386437634) 153 528 T
(// Could have been anything unless the) 228.6 528 T
(// default) 228.6 517 T
(// allocator guarantees to zero new memory.) 153 498 T
(? *space-for-one-int*[0] := 0;) 153 479 T
(0) 153 468 T
(? *space-for-one-int*[0];) 153 449 T
(0) 153 438 T
(? define variable *space-for-ten-ints*) 153 419 T
(= make\050<C-int*>, element-count: 10\051;) 174.6 408 T
(? define C-struct <Z-properties>) 153 389 T
(slot type :: <C-int>;) 174.6 378 T
(array slot properties :: <C-int>,) 174.6 367 T
(end C-struct <Z-properties>;) 163.8 356 T
(? define variable *props* =) 153 337 T
(make\050<Z-properties>,) 174.6 326 T
(extra-bytes: 10 * size-of\050<C-int>\051\051;) 201.6 315 T
3 14 Q
(destr) 126 268.67 T
(o) 153.86 268.67 T
(y) 160.66 268.67 T
2 13 Q
(Open generic function) 386.49 269.33 T
6 12 Q
(Summar) 135 244 T
(y) 172.48 244 T
0 11 Q
(Fr) 207 244 T
(ees the allocated heap memory at a speci\336ed addr) 217.26 244 T
(ess.) 459.48 244 T
6 12 Q
(Signature) 135 216 T
4 9 Q
(destroy) 207 216 T
7 F
(C-pointer) 250.2 216 T
4 F
( #key) 288.87 216 T
7 F
(de-allocator) 321.27 216 T
4 F
( => \050\051) 370.78 216 T
6 12 Q
(Arguments) 135 189 T
2 11 Q
(c-pointer) 207 189 T
0 F
(An instance of) 288 189 T
4 9.5 Q
(<C-pointer>) 360.79 189 T
0 11 Q
(.) 423.49 189 T
2 F
(de-allocator) 207 169 T
0 F
(An instance of) 288 169 T
4 9.5 Q
(<function>) 360.79 169 T
0 11 Q
(.) 417.79 169 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.60/DEST FmPD2
126 422/I4.1.1058480 FmPA
126 422/I4.1.1058694 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "60" 64
%%Page: "61" 65
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.8) 374.74 677.67 T
(Allocating and deallocating C storage) 396.11 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(61) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
6 12 Q
0 X
(Descr) 117 640 T
(iption) 142.84 640 T
0 11 Q
-0.4 (Fr) 189 640 P
-0.4 (ees the allocated heap memory at the addr) 199.26 640 P
-0.4 (ess encapsulated) 402.45 640 P
(in) 189 626 T
2 F
(C-pointer) 201.35 626 T
0 F
(.) 243.32 626 T
-0.1 (The) 189 606 P
2 F
-0.1 (deallocator) 210.07 606 P
0 F
-0.1 ( ar) 257.92 606 P
-0.1 (gument should be a Dylan function that can) 270.21 606 P
(serve as a deallocation facility) 189 592 T
(. It must accept an addr) 333.03 592 T
(ess as a) 447.15 592 T
4 9.5 Q
(<machine-word>) 189 578 T
0 11 Q
( and fr) 268.8 578 T
(ee the storage allocated at that) 300.73 578 T
(addr) 189 564 T
(ess.) 212.09 564 T
(Y) 189 544 T
(ou should only use) 195.32 544 T
4 9.5 Q
(destroy) 290.88 544 T
0 11 Q
( on pointers allocated using) 330.78 544 T
4 9.5 Q
(make) 189 530 T
0 11 Q
( wher) 211.8 530 T
(e no addr) 239.54 530 T
(ess was given. If) 285.81 530 T
2 F
(allocator) 368.07 530 T
0 F
( was passed to) 406.14 530 T
4 9.5 Q
(make) 189 516 T
0 11 Q
(, the matching deallocator should be passed to) 211.8 516 T
4 9.5 Q
(destroy) 439.83 516 T
0 11 Q
(.) 478.51 516 T
(Ther) 189 496 T
(e is a default method for destr) 211.56 496 T
(oy on) 357.37 496 T
4 9.5 Q
(<C-statically-) 387.4 496 T
(typed-pointer>) 189 482 T
0 11 Q
(.) 268.8 482 T
3 14 Q
(with-stac) 108 434 T
(k-structure) 157.55 434 T
2 13 Q
(Statement macr) 397.54 434.67 T
(o) 480.23 434.67 T
6 12 Q
(Summar) 117 409.33 T
(y) 154.48 409.33 T
0 11 Q
(Allocates an object within the scope of the body of the code.) 189 409.33 T
6 12 Q
(Signature) 117 381.33 T
4 9 Q
(with-stack-structure \050) 189 381.33 T
7 F
(name) 307.8 381.33 T
4 F
( ::) 329.3 381.33 T
7 F
(wrapper-type) 350.9 381.33 T
4 F
(#key) 307.8 370.33 T
7 F
(element-count) 334.8 370.33 T
(extra-bytes) 397.2 370.33 T
4 F
(\051) 442.53 370.33 T
7 F
(body) 199.8 359.33 T
4 F
(end [with-stack-structure]) 189 348.33 T
6 12 Q
(Arguments) 117 322.33 T
2 11 Q
(name) 189 322.33 T
0 F
(A Dylan variable name.) 270 322.33 T
2 F
(wrapper-type) 189 302.33 T
0 F
(A Dylan name.) 270 302.33 T
2 F
(element-count) 189 282.33 T
0 F
(An instance of) 270 282.33 T
4 9.5 Q
(<integer>) 342.79 282.33 T
0 11 Q
(.) 394.09 282.33 T
2 F
(extra-bytes) 189 262.33 T
0 F
(An instance of) 270 262.33 T
4 9.5 Q
(<integer>) 342.79 262.33 T
0 11 Q
(.) 394.09 262.33 T
6 12 Q
(Descr) 117 234.67 T
(iption) 142.84 234.67 T
0 11 Q
(Allocates an object) 189 234.67 T
2 F
(name) 282.42 234.67 T
0 F
( within the scope of a) 306.26 234.67 T
2 F
(body) 412.59 234.67 T
0 F
(. The) 432.34 234.67 T
2 F
(ele-) 459.01 234.67 T
(ment-count) 189 220.67 T
0 F
( and) 240.54 220.67 T
2 F
(extra-bytes) 264.66 220.67 T
0 F
( options behave as in) 313.74 220.67 T
4 9.5 Q
(make) 418.47 220.67 T
0 11 Q
(. The) 441.27 220.67 T
(memory that was allocated is fr) 189 206.67 T
(eed after) 341.87 206.67 T
2 F
(body) 386.99 206.67 T
0 F
( exits.) 407.97 206.67 T
(This macr) 108 186.67 T
(o gives the object) 156 186.67 T
2 F
(dynamic) 242.13 186.67 T
(extent.) 282.98 186.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.61/DEST FmPD2
387 647/I4.1.1059719 FmPA
387 647/I4.1.1059717 FmPA
108 587/I4.1.1058482 FmPA
117 792/I4.1.1087566 FmPA
117 387/I4.1.1087578 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "61" 65
%%Page: "62" 66
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(62) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 F
0 X
(? define C-struct <PointStruct>) 153 642 T
(slot x-coord :: <C-unsigned-short>;) 174.6 631 T
(slot y-coord :: <C-unsigned-short>;) 174.6 620 T
(pointer-type-name: <PointStruct*>) 174.6 609 T
(end C-struct;) 163.8 598 T
(// Defined <PointStruct>, x-coord, x-coord-setter,) 153 579 T
(//) 153 568 T
(y-coord, and y-coord-setter.) 169.2 568 T
(? define constant <Point> = <PointStruct*>;) 153 549 T
(// Defined <Point>.) 153 538 T
(? define C-function PlotPoint) 153 519 T
(parameter point :: <Point>;) 174.6 508 T
(c-name: "PlotPoint";) 174.6 497 T
(end C-function;) 163.8 486 T
(// Defined PlotPoint.) 153 475 T
(? define method plot \050x, y\051) 153 456 T
(with-stack-structure \050point :: <Point>\051) 174.6 445 T
(point.x-coord := 20;) 185.4 434 T
(point.y-coord := 30;) 185.4 423 T
(PlotPoint\050point\051;) 185.4 412 T
(end;) 174.6 401 T
(end;) 163.8 390 T
(// Defined plot.) 153 379 T
5 F
(?) 153 360 T
4 F
( plot\05020, 20\051;) 158.4 360 T
5 F
(?) 153 341 T
4 F
( plot\05050, 50\051;) 158.4 341 T
3 16 Q
(1.9) 126 307.33 T
(Utility designator c) 151.54 307.33 T
(lasses) 269.41 307.33 T
126 451/G4.1055760 FmPA
0 11 Q
(The following designator classes ar) 126 286.67 T
(e de\336ned for convenience purposes using) 296.69 286.67 T
4 9.5 Q
(define c-mapped-subtype) 126 272.67 T
0 11 Q
(.) 257.1 272.67 T
3 14 Q
(<C-boolean>) 126 224.67 T
2 13 Q
(Open abstract class) 402.18 225.33 T
6 12 Q
(Descr) 135 200 T
(iption) 160.84 200 T
0 11 Q
(A mapped subclass of) 207 200 T
4 9.5 Q
(<C-int>) 316.95 200 T
0 11 Q
( that pr) 356.85 200 T
(ovides an analogue to) 392.18 200 T
-0.28 (Dylan\325s) 207 186 P
4 9.5 Q
-0.58 (<boolean>) 246.92 186 P
0 11 Q
-0.28 ( class. The Dylan type for both import and) 298.22 186 P
(export is) 207 172 T
4 9.5 Q
(<boolean>) 251.86 172 T
0 11 Q
(, and the C type is) 303.16 172 T
4 9.5 Q
(int) 393.53 172 T
0 11 Q
(. The C integer 0 is) 410.63 172 T
(mapped to) 207 158 T
4 9.5 Q
(#f) 262.52 158 T
0 11 Q
( in Dylan, and all other values ar) 273.92 158 T
(e mapped to) 432.52 158 T
4 9.5 Q
(#t) 207 144 T
0 11 Q
(.) 218.4 144 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.62/DEST FmPD2
152 462/I4.1.1060021 FmPA
152 462/I4.1.1060129 FmPA
152 462/I4.1.1060127 FmPA
126 424/I4.1.1059452 FmPA
126 424/I4.1.1059921 FmPA
126 378/I4.1.1058508 FmPA
126 378/I4.1.1058506 FmPA
152 462/I4.1.1087590 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "62" 66
%%Page: "63" 67
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.9) 421.87 677.67 T
(Utility designator classes) 443.24 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(63) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 14 Q
0 X
(<C-string>) 108 638.67 T
2 13 Q
(Open abstract class) 384.18 639.33 T
6 12 Q
(Descr) 117 614 T
(iption) 142.84 614 T
0 11 Q
(A mapped subclass of) 189 614 T
4 9.5 Q
(<C-char*>) 298.95 614 T
0 11 Q
( and) 350.24 614 T
4 9.5 Q
(<string>) 374.37 614 T
0 11 Q
(. On export) 419.97 614 T
(the Dylan types) 189 600 T
4 9.5 Q
(<C-string>) 268.49 600 T
0 11 Q
(, or) 325.49 600 T
4 9.5 Q
(<byte-string>) 344.09 600 T
0 11 Q
( may be) 418.19 600 T
-0.31 (passed to C. On import all values ar) 189 586 P
-0.31 (e mapped to) 361.2 586 P
4 9.5 Q
-0.64 (<C-string>) 423.81 586 P
0 11 Q
-0.31 (.) 480.81 586 P
(A) 189 572 T
4 9.5 Q
(<byte-string>) 200.31 572 T
0 11 Q
( may be passed to C dir) 274.41 572 T
(ectly and no copy-) 388.48 572 T
-0.19 (ing takes place. The value in C will be a pointer to the data of) 189 558 P
(the byte-string. The implementation of) 189 544 T
4 9.5 Q
(<byte-string>) 379.53 544 T
0 11 Q
( is) 453.63 544 T
(such that, unless ther) 189 530 T
(e ar) 291.89 530 T
(e) 309.56 530 T
4 9.5 Q
(NULL) 317.58 530 T
0 11 Q
( characters embedded in the) 340.38 530 T
(string,) 189 516 T
4 9.5 Q
(strlen) 222.81 516 T
0 11 Q
( in C and size in Dylan will r) 257.01 516 T
(eturn the same) 395.93 516 T
(value.) 189 502 T
-0.45 (A) 189 482 P
4 9.5 Q
-0.94 (<byte-string>) 199.85 482 P
0 11 Q
-0.45 ( may only be safely passed to a C function if) 273.95 482 P
(its value is never stor) 189 468 T
(ed and used after the call r) 292.04 468 T
(eturns.) 420.99 468 T
3 14 Q
(<C-c) 108 420 T
(haracter>) 133.1 420 T
2 13 Q
(Open abstract class) 384.18 420.67 T
6 12 Q
(Summar) 117 395.33 T
(y) 154.48 395.33 T
0 11 Q
(The Dylan type for import and export is) 189 395.33 T
4 9.5 Q
(<character>) 386.19 395.33 T
0 11 Q
(. It is a) 448.89 395.33 T
(designator that allows instances of <character> to be passed) 189 381.33 T
(to and fr) 189 367.33 T
(om C.) 230.52 367.33 T
3 14 Q
(with-c-string) 108 319.33 T
2 13 Q
(Statement macr) 397.54 320 T
(o) 480.23 320 T
6 12 Q
(Summar) 117 294.67 T
(y) 154.48 294.67 T
0 11 Q
(Passes a C pointer to the contents of a) 189 294.67 T
4 9.5 Q
(<byte-string>) 374.69 294.67 T
0 11 Q
(.) 448.79 294.67 T
6 12 Q
(Signature) 117 266.67 T
4 9 Q
(with-c-string \050) 189 266.67 T
7 F
(variable) 270 266.67 T
4 F
( =) 303.34 266.67 T
7 F
(string-valued-expr) 319.54 266.67 T
(ession) 393.89 266.67 T
4 F
(\051) 418.88 266.67 T
7 F
(body) 199.8 255.67 T
4 F
(end) 189 244.67 T
6 12 Q
(Arguments) 117 218.67 T
2 11 Q
(variable) 189 218.67 T
0 F
(A Dylan variable name.) 270 218.67 T
2 F
(string-valued-expr) 189 198.67 T
(ession) 271.92 198.67 T
0 F
(An instance of) 298.81 198.67 T
4 9.5 Q
(<string>) 371.6 198.67 T
0 11 Q
(.) 417.2 198.67 T
6 12 Q
(Descr) 117 171 T
(iption) 142.84 171 T
0 11 Q
-0.04 (Use this macr) 189 171 P
-0.04 (o when you need to pass C a pointer to the con-) 255 171 P
(tents of a) 189 157 T
4 9.5 Q
(<byte-string>) 235.93 157 T
0 11 Q
(, but for some r) 310.03 157 T
(eason it cannot be) 383.89 157 T
(passed dir) 189 143 T
(ectly) 239.25 143 T
(. Inside the) 261.08 143 T
2 F
(body) 317.3 143 T
0 F
(,) 337.06 143 T
2 F
(variable) 342.56 143 T
0 F
( is bound to a) 377.6 143 T
4 9.5 Q
(<C-) 446.15 143 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.63/DEST FmPD2
108 792/I4.1.1058562 FmPA
108 792/I4.1.1058560 FmPA
189 633/I4.1.1058608 FmPA
189 633/I4.1.1058606 FmPA
108 473/I4.1.1058490 FmPA
108 473/I4.1.1058726 FmPA
108 573/I4.1.1087611 FmPA
108 573/I4.1.1087621 FmPA
108 573/I4.1.1087630 FmPA
117 323/I4.1.1087639 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "63" 67
%%Page: "64" 68
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(64) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 9.5 Q
0 X
(string>) 207 640.67 T
0 11 Q
(object that r) 249.65 640.67 T
(efers to the contents of the string) 306.77 640.67 T
(r) 207 626.67 T
(eturned by) 211.15 626.67 T
2 F
(string-valued-expr) 267.07 626.67 T
(ession) 349.99 626.67 T
0 F
(.) 376.88 626.67 T
1 F
(Note:) 207 606.67 T
0 F
( The) 234.19 606.67 T
4 9.5 Q
(<c-string>) 258.11 606.67 T
0 11 Q
( object is only live during the period) 315.11 606.67 T
(that) 207 592.67 T
2 F
(body) 228.82 592.67 T
0 F
( is executing. If the pr) 249.8 592.67 T
(ogram holds onto the pointer) 354.59 592.67 T
(after that, the data it r) 207 578.67 T
(efers to cannot be guaranteed to be cor-) 312.43 578.67 T
(r) 207 564.67 T
(ect, because the garbage collector can no longer keep track) 211.15 564.67 T
(of it.) 207 550.67 T
3 14 Q
(c) 126 502.67 T
(lear) 132.17 502.67 T
(-memor) 152.39 502.67 T
(y!) 194.6 502.67 T
2 13 Q
(Function) 456.08 503.33 T
6 12 Q
(Summar) 135 478 T
(y) 172.48 478 T
0 11 Q
(Stor) 207 478 T
(es zer) 226.51 478 T
(os in the speci\336ed bytes of memory) 254.11 478 T
(.) 424.74 478 T
6 12 Q
(Signature) 135 450 T
4 9 Q
(clear-memory!) 207 450 T
7 F
(pointer) 277.2 450 T
4 F
(,) 306.21 450 T
7 F
(size) 317.01 450 T
4 F
( => \050\051) 332.5 450 T
6 12 Q
(Arguments) 135 423 T
2 11 Q
(pointer) 207 423 T
0 F
-0.32 (An instance of type) 288 423 P
4 9.5 Q
-0.66 (<pointer>) 383.84 423 P
0 11 Q
-0.32 ( that points to) 435.14 423 P
(the memory location at which to start writ-) 288 409 T
(ing zer) 288 395 T
(os.) 321.39 395 T
2 F
(size) 207 375 T
0 F
-0.04 (An instance of type) 288 375 P
4 9.5 Q
-0.08 (<integer>) 384.96 375 P
0 11 Q
-0.04 (. The number) 436.26 375 P
(of bytes to clear) 288 361 T
(.) 363.61 361 T
6 12 Q
(Descr) 135 333.33 T
(iption) 160.84 333.33 T
0 11 Q
(Stor) 207 333.33 T
(es zer) 226.51 333.33 T
(os into) 254.11 333.33 T
2 F
(size) 289.48 333.33 T
0 F
( bytes of memory beginning at) 305.98 333.33 T
2 F
(pointer) 457.3 333.33 T
0 F
(.) 488.27 333.33 T
(The space is assumed to be a whole number of wor) 207 319.33 T
(ds and) 454.81 319.33 T
(wor) 207 305.33 T
(d-aligned.) 226.33 305.33 T
3 14 Q
(cop) 126 257.33 T
(y-b) 146.26 257.33 T
(ytes!) 163.27 257.33 T
2 13 Q
(Function) 456.08 258 T
6 12 Q
(Summar) 135 232.67 T
(y) 172.48 232.67 T
0 11 Q
(Copies an arbitrary number of bytes at an arbitrary align-) 207 232.67 T
(ment.) 207 218.67 T
6 12 Q
(Signature) 135 191 T
4 9 Q
(copy-bytes!) 207 191 T
7 F
(destination-pointer) 266.4 191 T
4 F
(,) 344.92 191 T
7 F
(sour) 355.72 191 T
(ce-pointer) 373.06 191 T
4 F
(,) 413.56 191 T
7 F
(size) 424.36 191 T
4 F
( => \050\051) 439.85 191 T
6 12 Q
(Arguments) 135 164 T
2 11 Q
(destination-pointer) 207 164 T
0 F
(An instance of type) 291.94 164 T
4 9.5 Q
(<C-pointer>.) 389.06 164 T
2 11 Q
(sour) 207 144 T
(ce-pointer) 226.36 144 T
0 F
(An instance of type) 288 144 T
4 9.5 Q
(<C-pointer>.) 385.12 144 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.64/DEST FmPD2
126 411/M4.9.83266.REntry.copybytes FmPA
126 411/I4.1.1065246 FmPA
135 485/I4.1.1087651 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "64" 68
%%Page: "65" 69
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.9) 421.87 677.67 T
(Utility designator classes) 443.24 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(65) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
2 11 Q
0 X
(size) 189 640.67 T
0 F
(An instance of) 270 640.67 T
4 9.5 Q
(<integer>) 342.79 640.67 T
0 11 Q
(.) 394.09 640.67 T
6 12 Q
(Descr) 117 613 T
(iption) 142.84 613 T
0 11 Q
(Copies an arbitrary number of bytes at arbitrary alignment) 189 613 T
(instead of copying whole wor) 189 599 T
(ds.) 333.73 599 T
6 12 Q
(See also) 117 571.33 T
4 9.5 Q
(copy-into!) 189 571.33 T
0 11 Q
(,  page 65.) 246 571.33 T
3 14 Q
(cop) 108 523 T
(y-into!) 128.26 523 T
2 13 Q
(Function) 438.08 523.67 T
6 12 Q
(Summar) 117 498.33 T
(y) 154.48 498.33 T
0 11 Q
(Copies the speci\336ed number of wor) 189 498.33 T
(ds.) 362.27 498.33 T
6 12 Q
(Signature) 117 470.33 T
4 9 Q
(copy-into!) 189 470.33 T
7 F
(destination-pointer) 248.4 470.33 T
4 F
(,) 326.92 470.33 T
7 F
(sour) 337.72 470.33 T
(ce-pointer) 355.06 470.33 T
4 F
(,) 395.56 470.33 T
7 F
(size) 406.36 470.33 T
4 F
(\051 => \050\051) 421.85 470.33 T
6 12 Q
(Arguments) 117 443.33 T
2 11 Q
(destination-pointer) 189 443.33 T
0 F
(An instance of type) 273.94 443.33 T
4 9.5 Q
(<C-pointer>.) 371.06 443.33 T
2 11 Q
(sour) 189 423.33 T
(ce-pointer) 208.36 423.33 T
0 F
(An instance of type) 270 423.33 T
4 9.5 Q
(<C-pointer>.) 367.12 423.33 T
2 11 Q
(size) 189 403.33 T
0 F
(An instance of) 270 403.33 T
4 9.5 Q
(<integer>) 342.79 403.33 T
0 11 Q
(.) 394.09 403.33 T
6 12 Q
(Descr) 117 375.67 T
(iption) 142.84 375.67 T
0 11 Q
(Copies) 189 375.67 T
2 F
(size) 225.3 375.67 T
0 F
( bytes fr) 241.8 375.67 T
(om) 280.83 375.67 T
2 F
(sour) 299.3 375.67 T
(ce-pointer) 318.66 375.67 T
0 F
( to) 362.86 375.67 T
2 F
(destination-pointer) 377.95 375.67 T
0 F
(.) 462.08 375.67 T
(Although the size is speci\336ed in bytes, it will be assumed to) 189 355.67 T
-0.25 (be a multiple of the wor) 189 341.67 P
-0.25 (d size. The function may also assume) 304.04 341.67 P
(that both pointers ar) 189 327.67 T
(e wor) 288.13 327.67 T
(d-aligned and that the two storage) 315.48 327.67 T
(ar) 189 313.67 T
(eas do not overlap.) 198.65 313.67 T
6 12 Q
(See also) 117 286 T
4 9.5 Q
(copy-bytes!) 189 286 T
0 11 Q
(,  page 64.) 251.7 286 T
3 14 Q
(equal-memor) 108 237.67 T
(y?) 180.2 237.67 T
2 13 Q
(Function) 438.08 238.33 T
6 12 Q
(Summar) 117 213 T
(y) 154.48 213 T
0 11 Q
(Returns #t if the size of the two designated memory spaces) 189 213 T
(have the same contents.) 189 199 T
6 12 Q
(Signature) 117 171.33 T
4 9 Q
(equal-memory?) 189 171.33 T
7 F
(ptr1) 264.6 171.33 T
4 F
(,) 281.11 171.33 T
7 F
(ptr2) 291.91 171.33 T
4 F
(,) 308.41 171.33 T
7 F
(size) 319.21 171.33 T
4 F
( => <boolean>) 334.7 171.33 T
6 12 Q
(Arguments) 117 144.33 T
2 11 Q
(ptr1) 189 144.33 T
0 F
(An instance of type) 270 144.33 T
4 9.5 Q
(<C-pointer>.) 367.12 144.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.65/DEST FmPD2
108 676/M4.9.98449.REntry.copyinto FmPA
108 676/I4.1.1065242 FmPA
117 765/I4.1.1087663 FmPA
117 528/I4.1.1087675 FmPA
[/Rect[189 567 291 578]/Border[0 0 0]/Page 69/View[/XYZ null 108 676 FmDC exch pop null]/LNK FmPD
[/Rect[189 282 297 293]/Border[0 0 0]/Page 68/View[/XYZ null 126 411 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "65" 69
%%Page: "66" 70
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(66) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
2 11 Q
0 X
(ptr2) 207 640.67 T
0 F
(An instance of type) 288 640.67 T
4 9.5 Q
(<C-pointer>.) 385.12 640.67 T
2 11 Q
(size) 207 620.67 T
0 F
(An instance of) 288 620.67 T
4 9.5 Q
(<integer>) 360.79 620.67 T
0 11 Q
(.) 412.09 620.67 T
6 12 Q
(Descr) 135 593 T
(iption) 160.84 593 T
0 11 Q
-0.14 (Returns) 207 593 P
4 9.5 Q
-0.29 (#t) 247.86 593 P
0 11 Q
-0.14 ( if the) 259.26 593 P
2 F
-0.14 (size) 289.21 593 P
0 F
-0.14 ( bytes of memory starting at pointer) 305.71 593 P
2 F
-0.14 (ptr1) 482.45 593 P
0 F
(have the same contents as the memory starting at) 207 579 T
2 F
(ptr2,) 449.41 579 T
0 F
( else) 471.1 579 T
4 9.5 Q
(#f.) 207 565 T
0 11 Q
( The space is assumed to be a whole number of wor) 224.1 565 T
(ds) 474.66 565 T
(and wor) 207 551 T
(d-aligned.) 247.7 551 T
3 14 Q
(<C-Dylan-object>) 126 503 T
2 13 Q
(Open abstract class) 402.18 503.67 T
6 12 Q
(Descr) 135 478.33 T
(iption) 160.84 478.33 T
0 11 Q
(A mapped subclass of) 207 478.33 T
4 9.5 Q
(<C-void*>) 316.95 478.33 T
0 11 Q
(. Objects of this type corr) 368.24 478.33 T
(e-) 488.94 478.33 T
(spond to speci\336c Dylan objects. The Dylan type for import) 207 464.33 T
(and export is) 207 450.33 T
4 9.5 Q
(<C-Dylan-Object>) 273.23 450.33 T
0 11 Q
(. The C type is) 364.43 450.33 T
4 9.5 Q
(void*) 436.59 450.33 T
0 11 Q
(.) 465.09 450.33 T
(T) 207 430.33 T
(o pass a r) 212.73 430.33 T
(efer) 258.07 430.33 T
(ence to an arbitrary Dylan object to C, the) 276.42 430.33 T
(Dylan object \336rst must be r) 207 416.33 T
(egister) 338.23 416.33 T
(ed using) 370.48 416.33 T
4 9.5 Q
(<C-Dylan-) 414.99 416.33 T
(object>) 207 402.33 T
0 11 Q
(. Then a) 246.9 402.33 T
4 9.5 Q
(<C-Dylan-object>) 288.22 402.33 T
2 11 Q
(handle) 382.17 402.33 T
0 F
( to the object can) 411.5 402.33 T
(be cr) 207 388.33 T
(eated using the function) 230.13 388.33 T
4 9.5 Q
(export-C-Dylan-object) 350.53 388.33 T
0 11 Q
(. The) 470.23 388.33 T
(handle can then be passed dir) 207 374.33 T
(ectly to any C transition point) 351.54 374.33 T
(designated as) 207 360.33 T
4 9.5 Q
(<C-Dylan-object>) 276.11 360.33 T
0 11 Q
(. Any object r) 367.31 360.33 T
(eceived by) 431.94 360.33 T
(Dylan fr) 207 346.33 T
(om a transition point designated as) 247.29 346.33 T
4 9.5 Q
(<C-Dylan-) 421.32 346.33 T
-0.66 (object>) 207 332.33 P
0 11 Q
-0.32 ( may be passed to) 246.9 332.33 P
4 9.5 Q
-0.66 (import-C-Dylan-object) 334.76 332.33 P
0 11 Q
-0.32 ( to get the) 454.46 332.33 P
(Dylan object for which it was a handle.) 207 318.33 T
3 14 Q
(register) 126 270.33 T
(-C-Dylan-object) 167.9 270.33 T
2 13 Q
(Function) 456.08 271 T
6 12 Q
(Summar) 135 245.67 T
(y) 172.48 245.67 T
0 11 Q
(Allows objects to be passed to a C function as instances of) 207 245.67 T
4 9.5 Q
(<c-Dylan-object>) 207 231.67 T
0 11 Q
(.) 298.2 231.67 T
6 12 Q
(Signature) 135 204 T
4 9 Q
(register-C-Dylan-object) 207 204 T
7 F
(object) 336.6 204 T
6 12 Q
(Arguments) 135 177 T
2 11 Q
(object) 207 177 T
0 F
(An instance of) 288 177 T
4 9.5 Q
(<object>) 360.79 177 T
0 11 Q
(.) 406.39 177 T
6 12 Q
(Descr) 135 149 T
(iption) 160.84 149 T
0 11 Q
(Allows objects to be passed to a C function as instances of) 207 149 T
4 9.5 Q
(<C-Dylan-object>) 207 135 T
0 11 Q
(.) 298.2 135 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.66/DEST FmPD2
126 656/I4.1.1064514 FmPA
126 656/I4.1.1064515 FmPA
126 656/M4.9.17488.REntry.registercdylanobject FmPA
126 656/I4.1.1064516 FmPA
126 656/I4.1.1072553 FmPA
126 656/I4.1.1072554 FmPA
135 745/I4.1.1087687 FmPA
135 301/I4.1.1087699 FmPA
[/Rect[415 412 504 423]/Border[0 0 0]/Page 70/View[/XYZ null 126 656 FmDC exch pop null]/LNK FmPD
[/Rect[207 398 247 412]/Border[0 0 0]/Page 70/View[/XYZ null 126 656 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "66" 70
%%Page: "67" 71
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(1.9) 421.87 677.67 T
(Utility designator classes) 443.24 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(67) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
-0.14 (The) 189 640.67 P
4 9.5 Q
-0.29 (register-C-Dylan-object) 210.03 640.67 P
0 11 Q
-0.14 ( function arranges for the gar-) 341.13 640.67 P
(bage collector to leave the storage used by) 189 626.67 T
2 F
(object) 396.62 626.67 T
0 F
( unclaimed,) 422.08 626.67 T
(and assur) 189 612.67 T
(es that the handle passed to C is not accidentally) 235.98 612.67 T
(corr) 189 598.67 T
(upted \050fr) 208.49 598.67 T
(om C\325s point of view\051 by the memory manager) 251.54 598.67 T
(.) 478.42 598.67 T
6 12 Q
(See also) 117 571 T
4 9.5 Q
(unregister-C-Dylan-object) 189 571 T
0 11 Q
(,  page 67.) 331.5 571 T
3 14 Q
(unregister) 108 522.67 T
(-C-Dylan-object) 163.93 522.67 T
2 13 Q
(Function) 438.08 523.33 T
6 12 Q
(Summar) 117 498 T
(y) 154.48 498 T
0 11 Q
(Deallocates an object.) 189 498 T
6 12 Q
(Signature) 117 470 T
4 9 Q
(unregister-C-Dylan-object) 189 470 T
7 F
(object) 329.4 470 T
6 12 Q
(Arguments) 117 443 T
2 11 Q
(object) 189 443 T
0 F
(An instance of) 270 443 T
4 9.5 Q
(<object>) 342.79 443 T
0 11 Q
(.) 388.39 443 T
6 12 Q
(Descr) 117 415 T
(iption) 142.84 415 T
0 11 Q
(Deallocates an object. When the handle is no longer needed) 189 415 T
(fr) 189 401 T
(om C, you call) 196.81 401 T
4 9.5 Q
(unregister-C-Dylan-object) 269.62 401 T
0 11 Q
( to allow the) 412.12 401 T
(object to be normally r) 189 387 T
(eclaimed by the memory manager) 297.98 387 T
(.) 463.38 387 T
(Calls to) 189 373 T
4 9.5 Q
(register-C-Dylan-object) 228.46 373 T
0 11 Q
( and) 359.56 373 T
4 9.5 Q
(unregister-C-) 383.68 373 T
(Dylan-object) 189 359 T
0 11 Q
( on the same object nest or interleave without) 257.4 359 T
(interfer) 189 345 T
(ence. That is, if) 224.88 345 T
4 9.5 Q
(register-C-Dylan-object) 300.17 345 T
0 11 Q
( is called) 431.27 345 T
(exactly twice on an object then) 189 331 T
4 9.5 Q
(unregister-C-Dylan-object) 340.22 331 T
0 11 Q
-0.21 (must be called exactly twice befor) 189 317 P
-0.21 (e the memory manager can) 351.96 317 P
(r) 189 303 T
(eclaim the space for the object as it normally would.) 193.15 303 T
3 14 Q
(e) 108 255 T
(xpor) 114.23 255 T
(t-C-Dylan-object) 139.33 255 T
2 13 Q
(Function) 438.08 255.67 T
6 12 Q
(Summar) 117 230.33 T
(y) 154.48 230.33 T
0 11 Q
(Fetches the) 189 230.33 T
4 9.5 Q
(<c-Dylan-object>) 245.95 230.33 T
0 11 Q
( handle for a Dylan object.) 337.15 230.33 T
6 12 Q
(Signature) 117 202.33 T
4 9 Q
(export-C-Dylan-object) 189 202.33 T
7 F
(object) 307.8 202.33 T
4 F
( =>) 332.13 202.33 T
7 F
(c-dylan-object) 353.73 202.33 T
6 12 Q
(Arguments) 117 175.33 T
2 11 Q
(object) 189 175.33 T
0 F
(An instance of) 270 175.33 T
4 9.5 Q
(<C-Dylan-object>) 342.79 175.33 T
0 11 Q
(.) 433.99 175.33 T
2 F
(object) 189 155.33 T
0 F
(An instance of) 270 155.33 T
4 9.5 Q
(<object>) 342.79 155.33 T
0 11 Q
(.) 388.39 155.33 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.67/DEST FmPD2
108 676/I4.1.1063620 FmPA
108 676/I4.1.1063621 FmPA
108 676/M4.9.40944.REntry.unregisterCDylanobject FmPA
108 676/I4.1.1063650 FmPA
108 408/I4.1.1058498 FmPA
108 408/I4.1.1058700 FmPA
117 567/I4.1.1087711 FmPA
[/Rect[189 567 377 578]/Border[0 0 0]/Page 71/View[/XYZ null 108 676 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "67" 71
%%Page: "68" 72
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The C-FFI Library) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(68) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
6 12 Q
0 X
(Descr) 135 640 T
(iption) 160.84 640 T
0 11 Q
(Fetches the) 207 640 T
4 9.5 Q
(<C-Dylan-object>) 263.95 640 T
0 11 Q
( handle for a Dylan object.) 355.15 640 T
3 14 Q
(impor) 126 591.67 T
(t-C-Dylan-object) 158.12 591.67 T
2 13 Q
(Function) 456.08 592.33 T
6 12 Q
(Summar) 135 567 T
(y) 172.48 567 T
0 11 Q
(Fetches the Dylan object for a) 207 567 T
4 9.5 Q
(<c-Dylan-object>) 352.6 567 T
0 11 Q
( handle.) 443.8 567 T
6 12 Q
(Signature) 135 539 T
4 9 Q
(import-c-dylan-object) 207 539 T
7 F
(c-dylan-object) 325.8 539 T
4 F
( =>) 384.14 539 T
7 F
(object) 405.74 539 T
6 12 Q
(Arguments) 135 512 T
2 11 Q
(object) 207 512 T
0 F
(An instance of) 288 512 T
4 9.5 Q
(<C-Dylan-object>) 360.79 512 T
0 11 Q
(.) 451.99 512 T
6 12 Q
(V) 135 484 T
(alues) 140.89 484 T
2 11 Q
(object) 207 484 T
0 F
(An instance of) 288 484 T
4 9.5 Q
(<object>) 360.79 484 T
0 11 Q
(.) 406.39 484 T
6 12 Q
(Descr) 135 456 T
(iption) 160.84 456 T
0 11 Q
(Fetches the Dylan object for a) 207 456 T
4 9.5 Q
(<C-Dylan-object>) 352.6 456 T
0 11 Q
( handle.) 443.8 456 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.68/DEST FmPD2
[/Dest/L.cffidoc/DEST FmPD2
126 745/I4.1.1058500 FmPA
126 745/I4.1.1058702 FmPA
135 792/I4.1.1087723 FmPA
135 608/I4.1.1087735 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "68" 72
%%Page: "69" 73
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(69) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
0 30 Q
0 X
(2) 180 628 T
108 586.45 504 614 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 586.45 504 614 R
7 X
0 0 0 1 0 0 0 K
V
108 607.14 270 607.14 2 L
V
3 H
2 Z
0 X
N
108 598.14 270 598.14 2 L
7 X
V
1 H
0 X
N
36 72 576 720 C
0 0 0 0 1 1 1 K
0 2 Q
0 X
0 0 0 0 1 1 1 K
(2) 108 566.45 T
0 0 0 1 0 0 0 K
0 30 Q
0 0 0 1 0 0 0 K
(The Harlequin Dylan W) 109 566.45 T
(in32) 427.15 566.45 T
108 710/G5.888029 FmPA
(API Libraries) 108 528.45 T
108 126 486 432 R
7 X
V
3 16 Q
0 X
(2.1  Intr) 108 421.33 T
(oduction) 154.43 421.33 T
108 565/G5.888030 FmPA
0 11 Q
(This chapter is about Harlequin Dylan\325s set of W) 108 400.67 T
(in32 API interface libraries.) 344.18 400.67 T
(These libraries pr) 108 386.67 T
(ovide a low-level Dylan interface to the W) 192.41 386.67 T
(in32 API in) 396.87 386.67 T
(Micr) 108 372.67 T
(osoft W) 130.64 372.67 T
(indows and Micr) 167.71 372.67 T
(osoft W) 250.64 372.67 T
(indows NT) 287.71 372.67 T
(.) 341.7 372.67 T
(Each Dylan library is a simple translation of W) 108 352.67 T
(in32 API header \336les into a set) 334.51 352.67 T
(of interface declarations fr) 108 338.67 T
(om Harlequin Dylan\325s C-FFI library) 235.13 338.67 T
(. So you can) 408.14 338.67 T
(write W) 108 324.67 T
(indows applications in Dylan by using the same functions and types) 146.72 324.67 T
(as you would in C, albeit with slightly modi\336ed names so that they conform) 108 310.67 T
(to Dylan naming conventions and r) 108 296.67 T
(equir) 280.22 296.67 T
(ements.) 305.63 296.67 T
(The Harlequin Dylan W) 108 276.67 T
(in32 API has been constr) 224.65 276.67 T
(ucted fr) 344.55 276.67 T
(om several Dylan) 382.21 276.67 T
(libraries. W) 108 262.67 T
(in32 functionality is divided among these libraries, matching the) 163.7 262.67 T
-0.17 (contents of Micr) 108 248.67 P
-0.17 (osoft\325s DLLs, allowing Dylan applications to avoid r) 186.26 248.67 P
-0.17 (efer) 438.59 248.67 P
-0.17 (ences) 456.94 248.67 P
(to DLLs they do not need to use.) 108 234.67 T
-0.26 (W) 108 214.67 P
-0.26 (ith the exception of changes necessitated by Dylan naming conventions and) 118.39 214.67 P
(r) 108 200.67 T
(equir) 112.15 200.67 T
(ements, the names of C items have been pr) 137.56 200.67 T
(eserved in the Harlequin) 345.08 200.67 T
-0.31 (Dylan W) 108 186.67 P
-0.31 (in32 API libraries. Hence this chapter does not pr) 150.56 186.67 P
-0.31 (ovide an exhaustive) 386.96 186.67 P
(list of the items available in the libraries. Instead, it explains the name map-) 108 172.67 T
(ping scheme we used in the conversion, and pr) 108 158.67 T
(ovides a collection of tips for) 336.65 158.67 T
-0.42 (writing Dylan applications with the libraries. Finally) 108 144.67 P
-0.42 (, ther) 359.81 144.67 P
-0.42 (e is a list of items not) 384.3 144.67 P
(supported in our versions of these libraries.) 108 130.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.69/DEST FmPD2
[/Dest/F.win32doc/DEST FmPD2
109 730/M5.9.11231.Chapter.8.Windows.API.Libraries FmPA
109 730/I5.1.888028 FmPA
109 730/I5.1.890900 FmPA
134 576/I5.1.890902 FmPA
109 730/I5.1.891102 FmPA
109 730/I5.1.891104 FmPA
134 576/I5.1.891040 FmPA
134 576/I5.1.891042 FmPA
[/Title(A)/Rect[99 504 513 657]/ARTICLE FmPD2
[/Title(A)/Rect[99 117 495 441]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "69" 73
%%Page: "70" 74
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(70) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
1 11 Q
0 X
-0.23 (Note:) 126 640.67 P
0 F
-0.23 ( This r) 153.19 640.67 P
-0.23 (elease supports the W) 183.4 640.67 P
-0.23 (in32 API for W) 288.91 640.67 P
-0.23 (indows NT and W) 360.4 640.67 P
-0.23 (indows 95.) 449.04 640.67 P
(No support for W) 126 626.67 T
(in16 \05016-bit applications on W) 212.26 626.67 T
(indows 3.) 357.23 626.67 T
2 F
(x) 404.4 626.67 T
0 F
(\051 is planned.) 409.9 626.67 T
3 16 Q
(2.2  Suppor) 126 591.33 T
(ted Win32 libraries) 197.71 591.33 T
126 735/G5.888036 FmPA
0 11 Q
(Each Dylan library r) 126 570.67 T
(epr) 224.43 570.67 T
(esenting a portion of the W) 240.46 570.67 T
(in32 API has a single) 372.09 570.67 T
(module of the same name as the library itself. For example, the library W) 126 556.67 T
(in32-) 479.69 556.67 T
-0.01 (Common has a module also called W) 126 542.67 P
-0.01 (in32-) 306.23 542.67 P
-0.01 (Common. An exception to this r) 330.5 542.67 P
-0.01 (ule) 486.16 542.67 P
(is W) 126 528.67 T
(in32-User) 147.01 528.67 T
(, which also exports the module W) 193.3 528.67 T
(in32-Default-Handler) 361.33 528.67 T
(.) 465.4 528.67 T
(The libraries ar) 126 508.67 T
(e:) 199.37 508.67 T
(W) 153 488.67 T
(in32-Common) 163.4 488.67 T
-0.26 (Data types, constants \050including err) 234 470.67 P
-0.26 (or codes\051, and str) 405.92 470.67 P
-0.26 (uc-) 488.82 470.67 P
(tur) 234 456.67 T
(e accessors that ar) 248.37 456.67 T
(e shar) 335.49 456.67 T
(ed by the other modules.) 364.22 456.67 T
(Most of these come fr) 234 438.67 T
(om the W) 338.2 438.67 T
(in32 header \336les) 385.07 438.67 T
4 9.5 Q
(WINDEF.H) 234 424.67 T
0 11 Q
(,) 279.6 424.67 T
4 9.5 Q
(WINNT.H) 285.1 424.67 T
0 11 Q
(, and) 325 424.67 T
4 9.5 Q
(WINERROR.H) 351.87 424.67 T
0 11 Q
(. \050Ther) 408.87 424.67 T
(e is no DLL) 440.6 424.67 T
(\336le supplied as standar) 234 410.67 T
(d with W) 346.97 410.67 T
(indows that corr) 391.95 410.67 T
(e-) 472.07 410.67 T
(sponds with this library) 234 396.67 T
(, because ther) 349.1 396.67 T
(e ar) 415.06 396.67 T
(e no C func-) 432.73 396.67 T
(tions in the header \336les to which it forms an interface.\051) 234 382.67 T
(W) 153 362.67 T
(in32-Kernel) 163.4 362.67 T
(Non-GUI system services, as implemented in) 234 362.67 T
4 9.5 Q
(KERNEL32.DLL) 234 348.67 T
0 11 Q
( and declar) 302.4 348.67 T
(ed in) 356.24 348.67 T
4 9.5 Q
(WINBASE.H) 383.34 348.67 T
0 11 Q
( \050\336les, pipes,) 434.64 348.67 T
(semaphor) 234 334.67 T
(es, atoms, time, and so on\051 and) 282.31 334.67 T
4 9.5 Q
(WINNLS.H) 434.97 334.67 T
0 11 Q
(\050National Language Support\051.) 234 320.67 T
1 F
(Note:) 234 302.67 T
0 F
( This library does not pr) 261.19 302.67 T
(ovide thr) 378.15 302.67 T
(ead support.) 422.45 302.67 T
(Thr) 234 288.67 T
(ead support is being handled at a higher level by) 251.29 288.67 T
(Dylan\325s own Thr) 234 274.67 T
(eads library) 315.83 274.67 T
(. See the) 372.3 274.67 T
2 F
(Cor) 414.87 274.67 T
(e Featur) 431.17 274.67 T
(es) 467.34 274.67 T
0 F
(manual for details.) 234 260.67 T
(W) 153 240.67 T
(in32-GDI) 163.4 240.67 T
(Graphics Device Interface, drawing graphics and text,) 234 240.67 T
(and printing. Corr) 234 226.67 T
(esponds to) 323.03 226.67 T
4 9.5 Q
(WINGDI.H) 378.46 226.67 T
0 11 Q
( and) 424.06 226.67 T
4 9.5 Q
(GDI32.DLL) 448.19 226.67 T
0 11 Q
(.) 499.49 226.67 T
(W) 153 206.67 T
(in32-User) 163.4 206.67 T
-0.48 (Other windowing functions. Corr) 234 206.67 P
-0.48 (esponds to) 395.95 206.67 P
4 9.5 Q
-0.99 (WINUSER.H) 450.43 206.67 P
0 11 Q
(and) 234 192.67 T
4 9.5 Q
(USER32.DLL) 255.37 192.67 T
0 11 Q
(. Also contains) 312.37 192.67 T
4 9.5 Q
(win32-last-) 386.45 192.67 T
(handler) 449.15 192.67 T
0 11 Q
(which can handle conditions and display them to the) 234 178.67 T
-0.53 (application user a simply W) 234 164.67 P
-0.53 (in32 dialog. That function is) 367.91 164.67 P
(exported fr) 234 150.67 T
(om the module W) 288.04 150.67 T
(in32-Default-Handler) 375.21 150.67 T
(.) 479.28 150.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.70/DEST FmPD2
152 746/M5.9.54926.1Heading.82.Win32.libraries.provided FmPA
152 746/I5.1.891856 FmPA
152 746/I5.1.891844 FmPA
152 746/I5.1.891849 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "70" 74
%%Page: "71" 75
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.3) 316.06 677.67 T
(Content and organization of the Win32 API libraries) 337.43 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(71) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(W) 135 640.67 T
(in32-V) 145.4 640.67 T
(ersion) 176.38 640.67 T
(V) 216 640.67 T
(ersion management. Corr) 222.72 640.67 T
(esponds to) 346.62 640.67 T
4 9.5 Q
(WINVER.H) 402.05 640.67 T
0 11 Q
( and) 447.65 640.67 T
4 9.5 Q
(VERSION.DLL) 216 626.67 T
0 11 Q
(.) 278.7 626.67 T
(W) 135 606.67 T
(in32-Dialog) 145.4 606.67 T
(Common dialog boxes, as implemented in) 216 606.67 T
4 9.5 Q
(COMDLG32.DLL) 216 592.67 T
0 11 Q
( and declar) 284.4 592.67 T
(ed in) 338.24 592.67 T
4 9.5 Q
(COMMDLG.H) 365.34 592.67 T
0 11 Q
(,) 416.64 592.67 T
4 9.5 Q
(DLGS.H) 422.14 592.67 T
0 11 Q
(, and) 456.34 592.67 T
4 9.5 Q
(CDERR.H) 216 578.67 T
0 11 Q
(.) 255.9 578.67 T
(W) 135 558.67 T
(in32-Contr) 145.4 558.67 T
(ols) 197.6 558.67 T
(\322Common contr) 216 540.67 T
(ols\323, including list view) 294.91 540.67 T
(, tr) 409.55 540.67 T
(ee view) 422.78 540.67 T
(,) 458.91 540.67 T
(pr) 216 526.67 T
(operty sheets, and so on \050) 226.76 526.67 T
4 9.5 Q
(COMMCTRL.H) 350.41 526.67 T
0 11 Q
( and) 407.41 526.67 T
4 9.5 Q
(COMCTL32.DLL) 216 512.67 T
0 11 Q
(\051.) 284.4 512.67 T
(W) 135 492.67 T
(in32-Registry) 145.4 492.67 T
(Registry \050) 216 474.67 T
4 9.5 Q
(WINREG.H) 263.06 474.67 T
0 11 Q
( and) 308.66 474.67 T
4 9.5 Q
(ADVAPI32.DLL) 332.78 474.67 T
0 11 Q
(\051.) 401.18 474.67 T
(W) 135 454.67 T
(in32-Rich-Edit) 145.4 454.67 T
(\322Rich edit\323 contr) 216 436.67 T
(ols \050) 298.14 436.67 T
4 9.5 Q
(RICHEDIT.H) 318.42 436.67 T
0 11 Q
( and) 375.42 436.67 T
4 9.5 Q
(RICHED32.DLL) 399.54 436.67 T
0 11 Q
(\051.) 467.94 436.67 T
(W) 135 416.67 T
(in32-DDE) 145.4 416.67 T
(Dynamic Data Exchange \050) 216 416.67 T
4 9.5 Q
(DDE.H) 342.31 416.67 T
0 11 Q
( and) 370.81 416.67 T
4 9.5 Q
(DDEML.H) 394.94 416.67 T
0 11 Q
(\051.) 434.84 416.67 T
(W) 135 396.67 T
(in32-Shell) 145.4 396.67 T
(API for querying and extending the W) 216 396.67 T
(indows Shell.) 402.58 396.67 T
(Corr) 216 382.67 T
(esponds to) 238.3 382.67 T
4 9.5 Q
(SHELLAPI.H) 293.73 382.67 T
0 11 Q
( and) 350.73 382.67 T
4 9.5 Q
(SHELL32.DLL) 374.85 382.67 T
0 11 Q
(.) 437.55 382.67 T
(W) 135 362.67 T
(insock2) 145.4 362.67 T
(Corr) 216 362.67 T
(esponds to) 238.3 362.67 T
4 9.5 Q
(WINSOCK2.H) 293.73 362.67 T
0 11 Q
(,) 350.73 362.67 T
4 9.5 Q
(QOS.H) 356.23 362.67 T
0 11 Q
(, and) 384.73 362.67 T
4 9.5 Q
(MSWSOCK.H) 411.6 362.67 T
0 11 Q
(.) 462.9 362.67 T
-0.05 (This library is not available in the Harlequin Dylan Per-) 216 348.67 P
(sonal edition.) 216 334.67 T
3 16 Q
(2.3  Content and or) 108 299.33 T
(ganization of the Win32 API libraries) 226.66 299.33 T
108 443/G5.888048 FmPA
0 11 Q
(The Harlequin Dylan W) 108 278.67 T
(in32 API libraries ar) 224.65 278.67 T
(e modeled closely upon) 321.87 278.67 T
(Micr) 108 264.67 T
(osoft\325s W) 130.64 264.67 T
(in32 C libraries. Most names available in the Dylan libraries ar) 175.43 264.67 T
(e) 477.82 264.67 T
(the same as those available in the C libraries, though of course to conform to) 108 250.67 T
(Dylan naming conventions and r) 108 236.67 T
(estrictions, many of the C names have been) 267.87 236.67 T
(translated.) 108 222.67 T
1 F
(Note:) 108 202.67 T
0 F
( Look at the) 135.19 202.67 T
4 9.5 Q
(library.dylan) 195.38 202.67 T
0 11 Q
( \336le in each library to see what each library) 269.48 202.67 T
-0.36 (pr) 108 188.67 P
-0.36 (ovides. \050Look in) 118.76 188.67 P
4 9.5 Q
-0.74 (comlib.dylan) 198.88 188.67 P
0 11 Q
-0.36 ( for W) 267.28 188.67 P
-0.36 (in32-Common.\051 The libraries generally) 296.47 188.67 P
(include only featur) 108 174.67 T
(es that apply to both W) 200.33 174.67 T
(indows NT and W) 313.19 174.67 T
(indows 95/98.) 402.51 174.67 T
(If ther) 108 154.67 T
(e is an additional ar) 137.52 154.67 T
(ea of W) 233.25 154.67 T
(in32 you would like to see these libraries) 269.58 154.67 T
(support, please inform the Harlequin Dylan support team.) 108 140.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.71/DEST FmPD2
134 454/I5.1.890906 FmPA
134 454/I5.1.891118 FmPA
134 454/I5.1.891124 FmPA
134 454/I5.1.890990 FmPA
108 354/I5.1.891579 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "71" 75
%%Page: "72" 76
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(72) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(2.3.1  Notes on the translations) 126 639.33 T
0 11 Q
(The W) 126 619.67 T
(in32-Common module r) 157.56 619.67 T
(e-exports some names fr) 274.65 619.67 T
(om the C-FFI module) 393 619.67 T
-0.12 (that its user may need to use dir) 126 605.67 P
-0.12 (ectly) 281.06 605.67 P
-0.12 (, without needing to use \050or know about\051) 302.9 605.67 P
(the C-FFI module itself. These names ar) 126 591.67 T
(e:) 318.58 591.67 T
4 9.5 Q
(null-pointer) 329.35 591.67 T
0 11 Q
(,) 396.93 591.67 T
4 9.5 Q
(null-pointer?) 402.43 591.67 T
0 11 Q
(,) 476.53 591.67 T
4 9.5 Q
(pointer-address) 126 577.67 T
0 11 Q
(,) 211.5 577.67 T
4 9.5 Q
(pointer-value) 217 577.67 T
0 11 Q
(,) 291.1 577.67 T
4 9.5 Q
(pointer-value-setter) 296.6 577.67 T
0 11 Q
(,) 409.79 577.67 T
4 9.5 Q
(pointer-cast) 415.29 577.67 T
0 11 Q
(,) 483.69 577.67 T
4 9.5 Q
(<C-string>) 126 563.67 T
0 11 Q
(,) 183 563.67 T
4 9.5 Q
(<C-unicode-string>) 188.5 563.67 T
0 11 Q
(,) 291.1 563.67 T
4 9.5 Q
(destroy) 296.6 563.67 T
0 11 Q
(, and) 335.28 563.67 T
4 9.5 Q
(with-stack-structure.) 362.15 563.67 T
0 11 Q
-0.23 (Names that ar) 126 543.67 P
-0.23 (e documented as being obsolete and/or included in W) 194.04 543.67 P
-0.23 (in32 only) 456.64 543.67 P
-0.04 (for compatibility with W) 126 529.67 P
-0.04 (in16, ar) 245.78 529.67 P
-0.04 (e generally not de\336ned in the Dylan libraries.) 281.48 529.67 P
(The names excluded ar) 126 515.67 T
(e listed in Section) 238.23 515.67 T
(2.1) 325.87 515.67 T
(1 on page) 339.02 515.67 T
(81.) 388.67 515.67 T
(The extended API macr) 126 495.67 T
(os, de\336ned in the optional C header \336le) 240.73 495.67 T
4 9.5 Q
(WINDOWSX.H) 434.99 495.67 T
0 11 Q
(,) 491.99 495.67 T
(ar) 126 481.67 T
(e not supported.) 135.65 481.67 T
3 16 Q
(2.4  Naming and mapping con) 126 446.33 T
(ventions) 311.41 446.33 T
126 590/G5.888974 FmPA
0 11 Q
(A Dylan application using the W) 126 425.67 T
(in32 API will generally use the same API) 285.41 425.67 T
(names as a C pr) 126 411.67 T
(ogram would, with the following modi\336cations for consis-) 202.77 411.67 T
(tency with Dylan conventions.) 126 397.67 T
3 13 Q
(2.4.1  Simple naming con) 126 364.33 T
(ventions) 252.97 364.33 T
0 11 Q
(T) 126 344.67 T
(ype names ar) 131.75 344.67 T
(e enclosed in angle brackets. For example,) 196.44 344.67 T
4 9.5 Q
(HANDLE) 403.12 344.67 T
0 11 Q
( becomes) 437.32 344.67 T
4 9.5 Q
(<HANDLE>) 126 330.67 T
0 11 Q
(.) 171.6 330.67 T
(Names of constants ar) 126 310.67 T
(e pr) 233.55 310.67 T
(e\336xed by) 252.32 310.67 T
4 9.5 Q
($) 299.61 310.67 T
0 11 Q
(. For example,) 305.31 310.67 T
4 9.5 Q
(OPAQUE) 376.77 310.67 T
0 11 Q
( becomes) 410.97 310.67 T
4 9.5 Q
($OPAQUE) 458.36 310.67 T
0 11 Q
(.) 498.26 310.67 T
(Underscor) 126 290.67 T
(es ar) 177 290.67 T
(e r) 199.33 290.67 T
(eplaced by hyphens. Thus, a constant called) 211.49 290.67 T
4 9.5 Q
(NO_ERROR) 427.51 290.67 T
0 11 Q
(becomes) 126 276.67 T
4 9.5 Q
($NO-ERROR) 170.64 276.67 T
0 11 Q
( and a class called) 221.94 276.67 T
4 9.5 Q
(LIST_ENTRY) 311.5 276.67 T
0 11 Q
( becomes) 368.5 276.67 T
4 9.5 Q
(<LIST-ENTRY>) 415.89 276.67 T
0 11 Q
(.) 484.29 276.67 T
(Hyphens will) 126 256.67 T
2 F
(not) 194.89 256.67 T
0 F
( be inserted between capitalized wor) 209.56 256.67 T
(ds \050for example,) 387.67 256.67 T
4 9.5 Q
(Cre-) 468.97 256.67 T
(ateWindow) 126 242.67 T
0 11 Q
( does not become) 177.3 242.67 T
4 9.5 Q
(Create-Window) 264.18 242.67 T
0 11 Q
(\051 since that is a less obvious map-) 338.28 242.67 T
(ping that is mor) 126 228.67 T
(e likely to cause confusion when switching between Dylan) 203.38 228.67 T
(code and W) 126 214.67 T
(indows documentation.) 183.4 214.67 T
3 13 Q
(2.4.2  Mapping the n) 126 181.33 T
(ull v) 227.8 181.33 T
(alue) 248.94 181.33 T
0 11 Q
(In place of) 126 161.67 T
4 9.5 Q
(NULL) 179.49 161.67 T
0 11 Q
(, ther) 202.29 161.67 T
(e ar) 227.2 161.67 T
(e several constants pr) 244.86 161.67 T
(oviding null values for fr) 349.3 161.67 T
(e-) 470.9 161.67 T
(quently used types, such as) 126 147.67 T
4 9.5 Q
($NULL-HANDLE) 262.15 147.67 T
0 11 Q
(,) 330.55 147.67 T
4 9.5 Q
($NULL-RECT) 336.05 147.67 T
0 11 Q
(, and) 392.23 147.67 T
4 9.5 Q
($NULL-STRING) 419.11 147.67 T
0 11 Q
(.) 487.51 147.67 T
(Null values for other pointer types may be designated by the expr) 126 133.67 T
(ession) 446.48 133.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.72/DEST FmPD2
156 792/I5.1.890908 FmPA
152 601/I5.1.891084 FmPA
156 517/I5.1.891098 FmPA
156 517/I5.1.891100 FmPA
152 601/I5.1.891144 FmPA
152 601/I5.1.891146 FmPA
152 601/I5.1.891148 FmPA
152 601/I5.1.891150 FmPA
152 601/I5.1.890952 FmPA
156 517/I5.1.890954 FmPA
156 334/I5.1.890956 FmPA
152 601/I5.1.891152 FmPA
156 334/I5.1.891078 FmPA
156 334/I5.1.891080 FmPA
152 601/I5.1.891086 FmPA
156 792/I5.1.891088 FmPA
[/Rect[288 512 400 523]/Border[0 0 0]/Page 85/View[/XYZ null 140 546 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "72" 76
%%Page: "73" 77
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.4) 385.7 677.67 T
(Naming and mapping conventions) 407.08 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(73) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 9.5 Q
0 X
(null-pointer\050<FOO>\051) 108 640.67 T
0 11 Q
(. Use the function) 216.3 640.67 T
4 9.5 Q
(null-pointer?) 304.58 640.67 T
0 11 Q
( to test whether a) 378.67 640.67 T
-0.38 (value is null. Do not use the expr) 108 626.67 P
-0.38 (ession) 265.52 626.67 P
4 9.5 Q
-0.78 (if\050ptr\051...) 298.1 626.67 P
0 11 Q
-0.38 ( as is often done in C, since) 355.1 626.67 P
-0.07 (a null pointer is not the same as) 108 612.67 P
4 9.5 Q
-0.15 (#f) 264.21 612.67 P
0 11 Q
-0.07 (. Ther) 275.61 612.67 P
-0.07 (e ar) 303.61 612.67 P
-0.07 (e also functions) 321.2 612.67 P
4 9.5 Q
-0.15 (null-handle) 399.32 612.67 P
0 11 Q
-0.07 ( and) 462.02 612.67 P
4 9.5 Q
-0.96 (null-handle?) 108 598.67 P
0 11 Q
-0.47 ( for cr) 176.4 598.67 P
-0.47 (eating and testing handles, since conceptually they ar) 204.01 598.67 P
-0.47 (e not) 460.17 598.67 P
(necessarily pointers.) 108 584.67 T
3 13 Q
(2.4.3  Mapping C types onto Dylan c) 108 551.33 T
(lasses) 289.67 551.33 T
0 11 Q
(The multitude of integer data types in C code \050) 108 531.67 T
4 9.5 Q
(int) 335.06 531.67 T
0 11 Q
(,) 352.16 531.67 T
4 9.5 Q
(long) 357.66 531.67 T
0 11 Q
(,) 380.46 531.67 T
4 9.5 Q
(unsigned) 385.96 531.67 T
0 11 Q
(,) 431.56 531.67 T
4 9.5 Q
(ULONG) 437.06 531.67 T
0 11 Q
(,) 465.56 531.67 T
4 9.5 Q
-0.27 (DWORD) 108 517.67 P
0 11 Q
-0.13 (,) 136.5 517.67 P
4 9.5 Q
-0.27 (LRESULT) 141.87 517.67 P
0 11 Q
-0.13 (, and so on\051 ar) 180.96 517.67 P
-0.13 (e all designated as) 249.2 517.67 P
4 9.5 Q
-0.27 (<integer>) 340.47 517.67 P
0 11 Q
-0.13 ( \050or some appr) 391.77 517.67 P
-0.13 (opri-) 462.17 517.67 P
(ate subrange ther) 108 503.67 T
(eof\051 in Dylan method ar) 192.27 503.67 T
(gument types. However) 308.55 503.67 T
(, a) 425.38 503.67 T
4 9.5 Q
(<machine-word>) 108 489.67 T
0 11 Q
( needs to be used to r) 187.8 489.67 T
(epr) 290.6 489.67 T
(esent values that do not \336t in the) 306.62 489.67 T
(signed 30-bit r) 108 475.67 T
(epr) 177.55 475.67 T
(esentation of an integer) 193.58 475.67 T
(.) 306.66 475.67 T
(Names such as) 108 455.67 T
4 9.5 Q
(<DWORD>) 183.28 455.67 T
0 11 Q
( should not be used in application code because they) 223.18 455.67 T
(r) 108 441.67 T
(efer to the FFI designation of the C value r) 112.15 441.67 T
(epr) 316.99 441.67 T
(esentation, not to a Dylan data) 333.02 441.67 T
(type.) 108 427.67 T
(The C types) 108 407.67 T
4 9.5 Q
(BOOL) 168.71 407.67 T
0 11 Q
( and) 191.51 407.67 T
4 9.5 Q
(BOOLEAN) 215.63 407.67 T
0 11 Q
( ar) 255.53 407.67 T
(e both mapped to) 267.93 407.67 T
4 9.5 Q
(<boolean>) 356.29 407.67 T
0 11 Q
( in Dylan. Use) 407.59 407.67 T
4 9.5 Q
(#t) 108 393.67 T
0 11 Q
( and) 119.4 393.67 T
4 9.5 Q
(#f) 143.52 393.67 T
0 11 Q
( instead of) 154.92 393.67 T
4 9.5 Q
(TRUE) 208.18 393.67 T
0 11 Q
( and) 230.99 393.67 T
4 9.5 Q
(FALSE) 255.11 393.67 T
0 11 Q
(.) 283.61 393.67 T
1 F
(Note:) 108 373.67 T
0 F
( Bewar) 135.19 373.67 T
(e that some functions, such as) 168.75 373.67 T
4 9.5 Q
(TranslateAccelerator) 316.19 373.67 T
0 11 Q
(, though) 429.37 373.67 T
(documented to r) 108 359.67 T
(eturn) 188.44 359.67 T
4 9.5 Q
(TRUE) 217.43 359.67 T
0 11 Q
( or) 240.23 359.67 T
4 9.5 Q
(FALSE) 256.08 359.67 T
0 11 Q
(, actually r) 284.58 359.67 T
(eturn) 335.6 359.67 T
4 9.5 Q
(int) 364.58 359.67 T
0 11 Q
( instead of) 381.68 359.67 T
4 9.5 Q
(BOOL) 434.94 359.67 T
0 11 Q
(; in) 457.74 359.67 T
(such a case, you will have to compar) 108 345.67 T
(e the r) 285.77 345.67 T
(esult to 0.) 315.94 345.67 T
-0.27 (Similarly) 108 325.67 P
-0.27 (, watch out for cases wher) 151.03 325.67 P
-0.27 (e C code passes) 275.95 325.67 P
4 9.5 Q
-0.56 (TRUE) 353.2 325.67 P
0 11 Q
-0.27 ( or) 376 325.67 P
4 9.5 Q
-0.56 (FALSE) 391.32 325.67 P
0 11 Q
-0.27 ( as an integer) 419.82 325.67 P
(ar) 108 311.67 T
(gument. T) 117.65 311.67 T
(o handle one common case, the Dylan implementation of) 166.6 311.67 T
4 9.5 Q
(MAKELPARAM) 108 297.67 T
0 11 Q
( accepts either an) 165 297.67 T
4 9.5 Q
(<integer>) 251.37 297.67 T
0 11 Q
( or) 302.67 297.67 T
4 9.5 Q
(<boolean>) 318.52 297.67 T
0 11 Q
( as the \336rst ar) 369.82 297.67 T
(gument.) 435.14 297.67 T
(The C types) 108 277.67 T
4 9.5 Q
(CHAR) 168.71 277.67 T
0 11 Q
(,) 191.51 277.67 T
4 9.5 Q
(WCHAR) 197.01 277.67 T
0 11 Q
(, and) 225.51 277.67 T
4 9.5 Q
(TCHAR) 252.38 277.67 T
0 11 Q
( ar) 280.88 277.67 T
(e all mapped to) 293.28 277.67 T
4 9.5 Q
(<character>) 371.47 277.67 T
0 11 Q
( in Dylan.) 434.17 277.67 T
(However) 108 263.67 T
(,) 152.62 263.67 T
4 9.5 Q
(UCHAR) 158.12 263.67 T
0 11 Q
( is mapped to) 186.62 263.67 T
4 9.5 Q
(<integer>) 255.5 263.67 T
0 11 Q
( since that is how it is actually used.) 306.8 263.67 T
(Most of the pointer types in the W) 108 243.67 T
(indows API have several names; for exam-) 273.76 243.67 T
(ple:) 108 229.67 T
4 9.5 Q
(PRECT) 128.58 229.67 T
0 11 Q
(,) 156.27 229.67 T
4 9.5 Q
(NPRECT) 161.77 229.67 T
0 11 Q
(, and) 195.15 229.67 T
4 9.5 Q
(LPRECT) 222.03 229.67 T
0 11 Q
(. In 16-bit code, these distinguished between) 255.41 229.67 T
-0.4 (\322near\323 and \322far\323 pointers, but in 32-bit code ther) 108 215.67 P
-0.4 (e is no dif) 340.99 215.67 P
-0.4 (fer) 386.96 215.67 P
-0.4 (ence. Rather than) 400.04 215.67 P
-0.29 (carry the duplicate names over into Dylan, it would be simpler to use only the) 108 201.67 P
(basic) 108 187.67 T
4 9.5 Q
(P...) 135.08 187.67 T
0 11 Q
( pr) 157.88 187.67 T
(e\336x names. However) 171.39 187.67 T
(, the) 273.4 187.67 T
4 9.5 Q
(LP...) 296.91 187.67 T
0 11 Q
( names seem to be used much) 325.41 187.67 T
(mor) 108 173.67 T
(e often, and hence may be mor) 127.87 173.67 T
(e familiar) 276.71 173.67 T
(, and the Micr) 322.24 173.67 T
(osoft documenta-) 389.75 173.67 T
(tion still tends to use the) 108 159.67 T
4 9.5 Q
(LP...) 229.6 159.67 T
0 11 Q
( names in most places. So the Dylan interface) 258.11 159.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.73/DEST FmPD2
138 704/I5.1.890958 FmPA
138 704/I5.1.891154 FmPA
138 704/I5.1.891068 FmPA
138 704/I5.1.891070 FmPA
138 704/I5.1.891074 FmPA
138 704/I5.1.891076 FmPA
363 497/I5.1.891588 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "73" 77
%%Page: "74" 78
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(74) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(de\336nes both the) 126 640.67 T
4 9.5 Q
(<P...>) 206.56 640.67 T
0 11 Q
( and) 240.76 640.67 T
4 9.5 Q
(<LP...>) 264.89 640.67 T
0 11 Q
( names even though they have identical) 304.79 640.67 T
(values. The) 126 626.67 T
4 9.5 Q
(NP...) 184.15 626.67 T
0 11 Q
( names ar) 212.65 626.67 T
(e not de\336ned in Dylan since they ar) 259.34 626.67 T
(e not as com-) 431.67 626.67 T
(monly used.) 126 612.67 T
(V) 126 592.67 T
(alues of type) 132.93 592.67 T
4 9.5 Q
(char*) 197.7 592.67 T
0 11 Q
( in C ar) 226.2 592.67 T
(e r) 261.5 592.67 T
(epr) 273.66 592.67 T
(esented as instances of class) 289.69 592.67 T
4 9.5 Q
(<C-string>) 427.94 592.67 T
0 11 Q
( in) 484.94 592.67 T
(Dylan. This is a subclass of) 126 578.67 T
4 9.5 Q
(<string>) 259.32 578.67 T
0 11 Q
(, so all of the normal string operations) 304.92 578.67 T
(can be used dir) 126 564.67 T
(ectly) 199.74 564.67 T
(. C function parameters of type) 221.58 564.67 T
4 9.5 Q
(char*) 375.46 564.67 T
0 11 Q
( will also accept an) 403.96 564.67 T
(instance of) 126 550.67 T
4 9.5 Q
(<byte-string>) 181.08 550.67 T
0 11 Q
(; a C pointer is cr) 255.18 550.67 T
(eated to point to the characters of) 337.29 550.67 T
(the Dylan data, so the string does not need to be copied. \050Dylan byte strings) 126 536.67 T
-0.37 (maintain a NUL character at the end in or) 126 522.67 P
-0.37 (der to allow them to be used dir) 325.65 522.67 P
-0.37 (ectly) 478.57 522.67 P
(by C.\051) 126 508.67 T
(in the curr) 126 488.67 T
(ent implementation, that involves automatically copying the string) 176.37 488.67 T
(at r) 126 474.67 T
(un time, but the need for copying is intended to be r) 142.09 474.67 T
(emoved later) 394.99 474.67 T
(.) 458.02 474.67 T
(The) 126 454.67 T
4 9.5 Q
(TEXT) 147.16 454.67 T
0 11 Q
( function can also be used to coer) 169.96 454.67 T
(ce a string literal to a) 330.68 454.67 T
4 9.5 Q
(<C-string>) 434.55 454.67 T
0 11 Q
(.) 491.55 454.67 T
-0.06 (This usage is consistent with the W) 126 440.67 P
-0.06 (in32) 295.86 440.67 P
4 9.5 Q
-0.13 (TEXT) 319.15 440.67 P
0 11 Q
-0.06 ( macr) 341.95 440.67 P
-0.06 (o, although the curr) 368.88 440.67 P
-0.06 (ent pur-) 464.8 440.67 P
(pose is dif) 126 426.67 T
(fer) 175.3 426.67 T
(ent.) 188.38 426.67 T
(The Dylan declarations for C types will generally follow the) 126 406.67 T
2 F
(strict) 419.69 406.67 T
0 F
( alternative) 443.11 406.67 T
(versions of the C declarations. This means, for example, that the various) 126 392.67 T
(handle types such as) 126 378.67 T
4 9.5 Q
(<hmenu>) 229.49 378.67 T
0 11 Q
( and) 269.39 378.67 T
4 9.5 Q
(<hwnd>) 293.51 378.67 T
0 11 Q
( ar) 327.71 378.67 T
(e disjoint subclasses of) 340.11 378.67 T
4 9.5 Q
(<handle>) 452.63 378.67 T
0 11 Q
(,) 498.23 378.67 T
(instead of all being equivalent.) 126 364.67 T
3 13 Q
(2.4.4  Creating methods fr) 126 331.33 T
(om Windo) 256.73 331.33 T
(ws alias functions) 308.1 331.33 T
0 11 Q
(Consider a W) 126 311.67 T
(indows function called) 191.8 311.67 T
4 9.5 Q
(Foo) 305.77 311.67 T
0 11 Q
( which is an alias for either) 322.87 311.67 T
4 9.5 Q
(FooA) 456.11 311.67 T
0 11 Q
( \050an) 478.9 311.67 T
-0.07 (8-bit character version\051 or) 126 297.67 P
4 9.5 Q
-0.15 (FooW) 253.58 297.67 P
0 11 Q
-0.07 ( \050a 16-bit character version\051. In Dylan, only the) 276.38 297.67 P
-0.08 (name) 126 283.67 P
4 9.5 Q
-0.17 (Foo) 155.55 283.67 P
0 11 Q
-0.08 ( will be de\336ned, but it will be a generic function with separate meth-) 172.65 283.67 P
-0.32 (ods for ar) 126 269.67 P
-0.32 (guments of types) 171.91 269.67 P
4 9.5 Q
-0.66 (<C-string>) 257.51 269.67 P
0 11 Q
-0.32 (,) 314.51 269.67 P
4 9.5 Q
-0.66 (<C-unicode-string>) 319.69 269.67 P
0 11 Q
-0.32 (,) 422.29 269.67 P
4 9.5 Q
-0.66 (<byte-string>) 427.47 269.67 P
0 11 Q
(or) 126 255.67 T
4 9.5 Q
(<unicode-string>) 139.1 255.67 T
0 11 Q
(. \050Only the 8-bit versions will be supported in the initial) 230.3 255.67 T
(implementation, both because the compiler is not r) 126 241.67 T
(eady to handle Unicode) 372.53 241.67 T
(and because it will not work on W) 126 227.67 T
(indows 95.\051) 292.18 227.67 T
3 13 Q
(2.4.5  Mapping C structure \336elds onto Dylan slot names) 126 194.33 T
0 11 Q
-0.05 (Because slot names ar) 126 174.67 P
-0.05 (e not in a separate name space in Dylan, the names of C) 231.68 174.67 P
(str) 126 160.67 T
(uctur) 138.51 160.67 T
(e \336elds will have the suf) 164.39 160.67 T
(\336x) 282.1 160.67 T
4 9.5 Q
(-value) 297.18 160.67 T
0 11 Q
( added to form the name of the) 331.38 160.67 T
(Dylan accessor function. For example, the C statement:) 126 146.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.74/DEST FmPD2
156 347/I5.1.891054 FmPA
156 484/I5.1.890960 FmPA
156 347/I5.1.890962 FmPA
156 484/I5.1.890996 FmPA
156 484/I5.1.890998 FmPA
156 484/I5.1.891000 FmPA
156 484/I5.1.891002 FmPA
156 347/I5.1.891158 FmPA
156 347/I5.1.891056 FmPA
156 347/I5.1.891062 FmPA
156 347/I5.1.891064 FmPA
349 379/I5.1.891597 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "74" 78
%%Page: "75" 79
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.5) 413.41 677.67 T
(Defining callback functions) 434.79 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(75) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(   pt->x = x;) 135 642 T
0 11 Q
(becomes in Dylan:) 108 621.67 T
4 9 Q
(   pt.x-value := x;) 135 601 T
0 11 Q
-0.29 (Ther) 108 580.67 P
-0.29 (e is not any attempt to append) 130.56 580.67 P
4 9.5 Q
-0.6 (?) 279.49 580.67 P
0 11 Q
-0.29 ( to the names of pr) 285.19 580.67 P
-0.29 (edicate functions since) 374.32 580.67 P
(it is not obvious exactly which functions that should apply to. The Dylan con-) 108 566.67 T
(vention of) 108 552.67 T
4 9.5 Q
(*...*) 160.25 552.67 T
0 11 Q
( for global variables is not r) 188.75 552.67 T
(elevant since ther) 321.36 552.67 T
(e ar) 406.12 552.67 T
(e no global) 423.79 552.67 T
(variables involved.) 108 538.67 T
3 13 Q
(2.4.6  Handling return of m) 108 505.33 T
(ultiple v) 242.28 505.33 T
(alues) 282.37 505.33 T
0 11 Q
(In cases wher) 108 485.67 T
(e the C library function takes a pointer ar) 173.58 485.67 T
(gument as a place to) 373.18 485.67 T
(stor) 108 471.67 T
(e a pointer) 126.4 471.67 T
(, integer) 177.28 471.67 T
(, or boolean value, the corr) 216.15 471.67 T
(esponding Dylan function) 345.68 471.67 T
(uses multiple r) 108 457.67 T
(eturn values to r) 180.29 457.67 T
(eturn such output parameters following the) 260 457.67 T
(original function r) 108 443.67 T
(eturn value. For example, wher) 196.4 443.67 T
(e C code does:) 348.65 443.67 T
4 9 Q
(BOOL ok;) 135 423 T
(DWORD NumberRead;) 135 412 T
(ok = ReadConsoleInput\050handle, buffer, length, & NumberRead\051;) 135 401 T
0 11 Q
(in Dylan it would be:) 108 380.67 T
4 9 Q
(let \050 ok :: <boolean>, NumberRead :: <integer> \051 =) 135 360 T
(    ReadConsoleInput\050handle, buffer, length\051;) 135 349 T
0 11 Q
(Similarly) 108 328.67 T
(, this function r) 151.03 328.67 T
(eturns multiple values instead of a str) 224.81 328.67 T
(uctur) 408.12 328.67 T
(e:) 434.01 328.67 T
4 9 Q
(let \050 x, y \051 = GetLargestConsoleWindowSize\050handle\051;) 135 308 T
3 16 Q
(2.5  De\336ning callbac) 108 274.33 T
(k functions) 233.92 274.33 T
108 418/G5.889773 FmPA
0 11 Q
(The W) 108 253.67 T
(in32-common library pr) 139.56 253.67 T
(ovides a) 255.6 253.67 T
4 9.5 Q
(define) 298.67 253.67 T
(callback) 338.57 253.67 T
0 11 Q
( macr) 384.17 253.67 T
(o to make it) 411.17 253.67 T
(easy to de\336ne callback functions without the application pr) 108 239.67 T
(ogrammer need-) 395.57 239.67 T
(ing to use the FFI) 108 225.67 T
4 9.5 Q
(define) 194.82 225.67 T
(c-callable-wrapper) 234.72 225.67 T
0 11 Q
( macr) 337.32 225.67 T
(o dir) 364.32 225.67 T
(ectly) 387.14 225.67 T
(. It is used like) 408.98 225.67 T
(this:) 108 211.67 T
4 9 Q
(define callback WndProc :: <WNDPROC> = my-window-function;) 135 191 T
0 11 Q
(This says that) 108 170.67 T
4 9.5 Q
(WndProc) 177.28 170.67 T
0 11 Q
( is being de\336ned as a C function pointer of type) 217.18 170.67 T
4 9.5 Q
(<) 108 156.67 T
(WNDPROC>) 113.7 156.67 T
0 11 Q
(, which when called fr) 159.3 156.67 T
(om C causes the Dylan function) 266.95 156.67 T
4 9.5 Q
(my-) 424.35 156.67 T
(window-) 441.45 156.67 T
(function) 108 142.67 T
0 11 Q
( to be r) 153.6 142.67 T
(un. The Dylan function will be de\336ned normally using) 187.05 142.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.75/DEST FmPD2
138 658/I5.1.891026 FmPA
138 658/I5.1.891028 FmPA
138 658/I5.1.891030 FmPA
138 658/I5.1.890964 FmPA
134 429/I5.1.890966 FmPA
134 429/I5.1.891012 FmPA
134 429/I5.1.891014 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "75" 79
%%Page: "76" 80
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(76) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 9.5 Q
0 X
(define) 126 640.67 T
(method) 165.9 640.67 T
0 11 Q
( or) 200.1 640.67 T
4 9.5 Q
(define) 215.95 640.67 T
(function) 255.85 640.67 T
0 11 Q
(, and it is the r) 301.45 640.67 T
(esponsibility of the pr) 370.63 640.67 T
(o-) 476.77 640.67 T
(grammer to ensur) 126 626.67 T
(e that its ar) 213.21 626.67 T
(gument signatur) 266.9 626.67 T
(e is consistent with what) 347.62 626.67 T
4 9.5 Q
(<WND-) 470.19 626.67 T
(PROC>) 126 612.67 T
0 11 Q
( r) 154.5 612.67 T
(equir) 161.4 612.67 T
(es. For example:) 186.81 612.67 T
4 9 Q
(define method my-window-function\050) 153 592 T
(               hWnd) 153 581 T
(  :: <HWND>,       // window handle) 255.6 581 T
(               message :: <integer>,  // type of message) 153 570 T
(               uParam,                // additional information) 153 559 T
(               lParam\051                // additional information) 153 548 T
(        => return :: <integer>;) 153 537 T
(...) 153 526 T
0 11 Q
(Note that the) 126 505.67 T
4 9.5 Q
(uParam) 192.58 505.67 T
0 11 Q
( and) 226.78 505.67 T
4 9.5 Q
(lParam) 250.91 505.67 T
0 11 Q
( ar) 285.11 505.67 T
(guments might r) 297.5 505.67 T
(eceive values of either) 378.55 505.67 T
(type) 126 491.67 T
4 9.5 Q
(<integer>) 150.33 491.67 T
0 11 Q
( or) 201.63 491.67 T
4 9.5 Q
(<machine-word>) 217.48 491.67 T
0 11 Q
(, so it may be best not to specialize them.) 297.28 491.67 T
(Often these values ar) 126 477.67 T
(e not used dir) 228.13 477.67 T
(ectly anyway) 295 477.67 T
(, but ar) 358.4 477.67 T
(e passed to other func-) 392.6 477.67 T
(tions \050such as) 126 463.67 T
4 9.5 Q
(LOWORD) 194.52 463.67 T
0 11 Q
( and) 228.72 463.67 T
4 9.5 Q
(HIWORD) 252.84 463.67 T
0 11 Q
(\051 which have methods for handling either) 287.04 463.67 T
(r) 126 449.67 T
(epr) 130.15 449.67 T
(esentation.) 146.17 449.67 T
(The other types of function supported by) 126 429.67 T
4 9.5 Q
(define) 328.61 429.67 T
(callback) 368.51 429.67 T
0 11 Q
( ar) 414.11 429.67 T
(e dialog func-) 426.51 429.67 T
(tions \050) 126 415.67 T
4 9.5 Q
(<DLGPROC>) 156.27 415.67 T
0 11 Q
(\051 and dialog hooks \050) 207.57 415.67 T
4 9.5 Q
(<LP...HOOKPROC>) 304.46 415.67 T
0 11 Q
(\051, both of which have) 389.96 415.67 T
(the same ar) 126 401.67 T
(gument types as a window function, but r) 181.55 401.67 T
(eturn a) 385.08 401.67 T
4 9.5 Q
(<boolean>) 422.32 401.67 T
0 11 Q
(. \050The) 473.62 401.67 T
(dialog hook functions ar) 126 387.67 T
(e actually declar) 244.61 387.67 T
(ed in) 323.73 387.67 T
4 9.5 Q
(COMMDLG.H) 350.82 387.67 T
0 11 Q
( as r) 402.12 387.67 T
(eturning a) 421.93 387.67 T
4 9.5 Q
(UINT) 474.88 387.67 T
0 11 Q
(,) 496.87 387.67 T
(but the value is always supposed to be) 126 373.67 T
4 9.5 Q
(TRUE) 316.52 373.67 T
0 11 Q
( or) 339.32 373.67 T
4 9.5 Q
(FALSE) 355.17 373.67 T
0 11 Q
(, so the Dylan callback) 383.67 373.67 T
(interface has been implemented using) 126 359.67 T
4 9.5 Q
(BOOL) 313.43 359.67 T
0 11 Q
( instead.\051) 336.23 359.67 T
3 16 Q
(2.6  Err) 126 324.33 T
(or messa) 170.26 324.33 T
(g) 227.76 324.33 T
(es) 235.9 324.33 T
126 468/G5.889791 FmPA
0 11 Q
(The W) 126 303.67 T
(in32-Kernel library pr) 157.56 303.67 T
(ovides the following utility functions.) 263.35 303.67 T
3 12 Q
(win32-err) 126 269 T
(or) 169.57 269 T
(-messa) 179.23 269 T
(g) 213.06 269 T
(e) 219.17 269 T
2 11 Q
(Function) 463.45 269.67 T
4 9 Q
(win32-error-message) 153 249 T
7 F
(err) 261 249 T
(or-code) 271.84 249 T
4 F
( =>) 301.84 249 T
7 F
(message) 323.44 249 T
0 11 Q
(The) 126 228.67 T
2 F
(err) 147.16 228.67 T
(or-code) 159.8 228.67 T
0 F
( is an instance of) 191.77 228.67 T
4 9.5 Q
(<integer>) 274.86 228.67 T
0 11 Q
( or) 326.16 228.67 T
4 9.5 Q
(<machine-word>) 342.01 228.67 T
0 11 Q
( \050type unioned\051.) 421.81 228.67 T
(The) 126 208.67 T
2 F
(err) 147.16 208.67 T
(or-code) 159.8 208.67 T
0 F
( ar) 191.77 208.67 T
(gument is either a W) 204.17 208.67 T
(indows a W) 304.72 208.67 T
(indows err) 362.28 208.67 T
(or code \050such as) 414.96 208.67 T
(r) 126 194.67 T
(eturned by) 130.15 194.67 T
4 9.5 Q
(GetLastError) 186.07 194.67 T
0 11 Q
(\051 or an) 254.47 194.67 T
4 9.5 Q
(SCODE) 288.64 194.67 T
0 11 Q
( \050also known as an) 317.14 194.67 T
4 9.5 Q
(HRESULT) 410.09 194.67 T
0 11 Q
(\051 value) 449.99 194.67 T
(\050such as r) 126 180.67 T
(eturned by most OLE/COM functions\051.) 172.06 180.67 T
(The function r) 126 160.67 T
(eturns a text message \050in a string\051 corr) 194.84 160.67 T
(esponding to the err) 379.92 160.67 T
(or) 478.18 160.67 T
(code,) 126 146.67 T
4 9.5 Q
(#f) 154.38 146.67 T
0 11 Q
( if the code is not r) 165.78 146.67 T
(ecognized. The r) 255.29 146.67 T
(eturned string might have mor) 335.47 146.67 T
(e) 485.27 146.67 T
(than one line but does not have a newline at the end. For example:) 126 132.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.76/DEST FmPD2
126 421/I5.1.890896 FmPA
126 421/I5.1.890898 FmPA
152 479/I5.1.891018 FmPA
152 479/I5.1.890968 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "76" 80
%%Page: "77" 81
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.7) 322.46 677.67 T
(Handling Dylan conditions in a Win32 application) 343.83 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(77) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(win32-error-message\0505\051 => "Access is denied.") 135 642 T
3 12 Q
(repor) 108 609 T
(t-win32-err) 133.34 609 T
(or) 183.47 609 T
2 11 Q
(Function) 445.45 609.67 T
4 9 Q
(report-win32-error) 135 589 T
7 F
(name) 237.6 589 T
4 F
( #key) 259.1 589 T
7 F
(err) 291.5 589 T
(or) 302.34 589 T
0 11 Q
(Signals a Dylan err) 135 568.67 T
(or if the W) 227.1 568.67 T
(in 32 err) 278.22 568.67 T
(or code speci\336ed is not) 318.08 568.67 T
4 9.5 Q
(NO_ERROR) 432.2 568.67 T
0 11 Q
(.) 477.8 568.67 T
(If no code is speci\336ed, the value r) 135 554.67 T
(eturned by the W) 297.02 554.67 T
(in32 API) 381.35 554.67 T
4 9.5 Q
(GetLastError) 135 540.67 T
0 11 Q
( is used. The err) 203.4 540.67 T
(or that is signaled includes both the err) 280.48 540.67 T
(or) 470.16 540.67 T
(code and the err) 135 526.67 T
(or message, as computed by the function) 213.77 526.67 T
4 9.5 Q
(win32-error-) 415.14 526.67 T
(message) 135 512.67 T
0 11 Q
(.) 174.9 512.67 T
3 12 Q
(c) 108 478 T
(hec) 113.39 478 T
(k-win32-result) 130.16 478 T
2 11 Q
(Function) 445.45 478.67 T
4 9 Q
(check-win32-result) 135 458 T
7 F
(name) 237.6 458 T
(r) 264.5 458 T
(esult) 267.84 458 T
0 11 Q
(Many W) 135 437.67 T
(indows functions r) 176.57 437.67 T
(eturn) 267.83 437.67 T
4 9.5 Q
(#f) 296.81 437.67 T
0 11 Q
( or) 308.21 437.67 T
4 9.5 Q
(NULL) 324.06 437.67 T
0 11 Q
( to mean failur) 346.86 437.67 T
(e. The func-) 417.93 437.67 T
(tion) 135 423.67 T
4 9.5 Q
(check-win32-result) 156.95 423.67 T
0 11 Q
( checks the r) 259.55 423.67 T
(esult to see if it indicates failur) 319.42 423.67 T
(e,) 467.49 423.67 T
(and if so it calls) 135 409.67 T
4 9.5 Q
(report-win32-error) 213.14 409.67 T
0 11 Q
(. For example,) 315.74 409.67 T
4 9 Q
(check-win32-result\050"SetWindowText", SetWindowText\050handle, label\051\051) 135 389 T
3 12 Q
(ensure-no-win32-err) 108 356 T
(or) 202.42 356 T
2 11 Q
(Function) 445.45 356.67 T
4 9 Q
(ensure-no-win32-error) 135 336 T
7 F
(name) 253.8 336 T
0 11 Q
(Ensur) 135 315.67 T
(es that the W) 163.57 315.67 T
(in32 API) 226.48 315.67 T
4 9.5 Q
(GetLastError) 271.49 315.67 T
0 11 Q
(does not indicate that an) 345.59 315.67 T
(err) 135 301.67 T
(or occurr) 148.76 301.67 T
(ed. If an occurs, it is signaled using) 192.76 301.67 T
4 9.5 Q
(report-win32-error) 365.68 301.67 T
0 11 Q
(.) 468.28 301.67 T
3 16 Q
(2.7  Handling Dylan conditions in a Win32 application) 108 266.33 T
108 410/G5.891198 FmPA
0 11 Q
(The W) 108 245.67 T
(in32-User library exports fr) 139.56 245.67 T
(om its W) 271.67 245.67 T
(in32-Default-Handler module a) 314.73 245.67 T
(handler utility function called) 108 231.67 T
4 9.5 Q
(win32-last-handler) 255.92 231.67 T
0 11 Q
(, de\336ned on objects of) 357.7 231.67 T
(class) 108 217.67 T
4 9.5 Q
(<serious-condition>) 133.66 217.67 T
0 11 Q
(.) 241.96 217.67 T
3 12 Q
(win32-last-handler) 108 183 T
2 11 Q
(Function) 445.45 183.67 T
0 F
-0.38 (Displays a r) 135 161.67 P
-0.38 (udimentary W) 191.96 161.67 P
-0.38 (in32 dialog to allow the user to decide what to) 262.21 161.67 P
(do with the Dylan condition that has been signalled.) 135 147.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.77/DEST FmPD2
108 761/M5.9.87808.Inlineinterface.reportwin32error FmPA
108 761/I5.1.892149 FmPA
193 761/I5.1.892188 FmPA
108 630/I5.1.892193 FmPA
108 508/I5.1.892196 FmPA
108 761/I5.1.892200 FmPA
108 630/I5.1.892203 FmPA
108 508/I5.1.892206 FmPA
[/Rect[213 406 316 417]/Border[0 0 0]/Page 81/View[/XYZ null 108 761 FmDC exch pop null]/LNK FmPD
[/Rect[366 298 468 309]/Border[0 0 0]/Page 81/View[/XYZ null 108 761 FmDC exch pop null]/LNK FmPD
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "77" 81
%%Page: "78" 82
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(78) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
-0.06 (It is a handler utility function that can be by bound dynamically ar) 153 640.67 P
-0.06 (ound) 475.55 640.67 P
(a computation via) 153 626.67 T
4 9.5 Q
(let) 243.79 626.67 T
(handler) 263.64 626.67 T
0 11 Q
( or installed globally via) 303.54 626.67 T
4 9.5 Q
(last-handler-) 423.73 626.67 T
-0.05 (definer) 153 612.67 P
0 11 Q
-0.03 (. It is automatically installed as the last handler simply by using) 192.09 612.67 P
(the W) 153 598.67 T
(in32-User library) 181.4 598.67 T
(.) 262.82 598.67 T
(The function has the following call syntax:) 153 578.67 T
4 9 Q
(win32-last-handler \050serious-condition, next-handler\051) 163.8 558 T
0 11 Q
-0.43 (The) 153 537.67 P
2 F
-0.43 (serious-condition) 173.73 537.67 P
0 F
-0.43 ( ar) 250.33 537.67 P
-0.43 (gument is an object of class serious condition. The) 262.29 537.67 P
2 F
(next-handler) 153 523.67 T
0 F
( ar) 209.84 523.67 T
(gument is a function. The) 222.23 523.67 T
4 9.5 Q
(win32-last-handler) 349.01 523.67 T
0 11 Q
( function) 451.61 523.67 T
(r) 153 509.67 T
(eturns no values.) 157.15 509.67 T
(The following form de\336nes a dynamic handler ar) 153 489.67 T
(ound some body:) 391.86 489.67 T
4 9 Q
(let handler <serious-condition> = win32-last-handler;) 163.8 469 T
0 11 Q
(while the following form installs a globally visible last-handler:) 153 448.67 T
4 9 Q
(define last-handler <serious-condition> = win32-last-handler;) 163.8 428 T
0 11 Q
(See also) 153 407.67 T
4 9.5 Q
(last-handler-definer) 194.18 407.67 T
0 11 Q
( and) 308.18 407.67 T
4 9.5 Q
(default-last-handler) 332.31 407.67 T
0 11 Q
(, exported) 445.49 407.67 T
(fr) 153 393.67 T
(om the Harlequin-Extensions library and module, in the) 160.81 393.67 T
2 F
(Cor) 436.47 393.67 T
(e Featur) 452.77 393.67 T
(es) 488.94 393.67 T
0 F
(r) 153 379.67 T
(efer) 157.15 379.67 T
(ence manual.) 175.49 379.67 T
3 16 Q
(2.8  Dealing with the C function WinMain) 126 344.33 T
126 488/G5.891203 FmPA
0 11 Q
(In C, the pr) 126 323.67 T
(ogrammer has to supply a) 180.92 323.67 T
4 9.5 Q
(WinMain) 311.17 323.67 T
0 11 Q
( function as the main pr) 351.07 323.67 T
(ogram) 466.6 323.67 T
(for a GUI application, but in Dylan ther) 126 309.67 T
(e is no main pr) 317.92 309.67 T
(ogram as such. The) 390.03 309.67 T
(beginning of execution is indicated simply by a top-level function call expr) 126 295.67 T
(es-) 488.88 295.67 T
(sion; this needs to be at the bottom of the last \336le listed in the pr) 126 281.67 T
(oject \336le. The) 435.98 281.67 T
(W) 126 267.67 T
(in32-Kernel and W) 136.4 267.67 T
(in32-User libraries export functions to obtain the values) 227.65 267.67 T
(which would have been the ar) 126 253.67 T
(guments to) 272.86 253.67 T
4 9.5 Q
(WinMain) 330.34 253.67 T
0 11 Q
(:) 370.24 253.67 T
4 9 Q
(application-instance-handle\050\051 => <HINSTANCE>) 153 233 T
(application-command-line\050\051 => <string>) 153 222 T
(// arguments without program name) 315 211 T
(application-show-window\050\051 => <integer>) 153 200 T
(// one of $SW-...) 379.8 200 T
0 11 Q
(Ther) 126 179.67 T
(e is no accessor pr) 148.56 179.67 T
(ovided for the) 236.08 179.67 T
4 9.5 Q
(WinMain) 307.73 179.67 T
0 11 Q
( pr) 347.63 179.67 T
(evious instance parameter) 361.14 179.67 T
(because on W) 126 165.67 T
(in32, that parameter is always null, even for W) 192.6 165.67 T
(in32s as well as) 418.94 165.67 T
(NT and W) 126 151.67 T
(indows 95.) 176.4 151.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.78/DEST FmPD2
152 499/I5.1.891006 FmPA
152 499/I5.1.890970 FmPA
152 499/I5.1.891010 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "78" 82
%%Page: "79" 83
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.9) 402.25 677.67 T
(Combining bit mask constants) 423.62 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(79) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
-0.18 (The pr) 108 640.67 P
-0.18 (ogram can be terminated, with an exit code, by calling either the W) 139.74 640.67 P
-0.18 (in32) 462.83 640.67 P
4 9.5 Q
-1.09 (ExitProcess) 108 626.67 P
0 11 Q
-0.53 ( function or the) 170.7 626.67 P
4 9.5 Q
-1.09 (exit-application) 245.98 626.67 P
0 11 Q
-0.53 ( function in Harlequin Dylan\325s) 337.18 626.67 P
(Operating-system library) 108 612.67 T
(. The latter method is pr) 229.67 612.67 T
(eferr) 346.39 612.67 T
(ed if the application) 369.08 612.67 T
(might actually be r) 108 598.67 T
(un as part of another pr) 199.5 598.67 T
(ocess.) 314.43 598.67 T
(The start of an application pr) 108 578.67 T
(ogram might look something like this:) 248.88 578.67 T
4 9 Q
(define method my-main \050\051) 135 558 T
(let hInstance :: <HINSTANCE> = application-instance-handle\050\051;) 145.8 547 T
(let wc :: <PWNDCLASS> = make\050<PWNDCLASS>\051;) 145.8 536 T
(wc.style-value := 0;) 145.8 525 T
(wc.lpfnWndProc-value := MainWndProc;) 145.8 514 T
(...) 135 495 T
(RegisterClass\050wc\051;) 145.8 484 T
(let hWnd = CreateWindow\050 ... \051;) 145.8 473 T
(ShowWindow\050hWnd, application-show-window\050\051\051;) 145.8 462 T
(UpdateWindow\050hWnd\051;) 145.8 451 T
(let msg :: <PMSG> = make\050<PMSG>\051;) 145.8 440 T
(while \050 GetMessage\050msg, $NULL-HWND, 0, 0\051 \051) 145.8 421 T
(TranslateMessage\050msg\051;) 156.6 410 T
(DispatchMessage\050msg\051;) 156.6 399 T
(end;) 145.8 388 T
(ExitProcess\050msg.wParam-value\051;) 145.8 377 T
(end method my-main;) 135 366 T
(my-main\050\051;) 135 347 T
(// this is what initiates execution.) 199.8 347 T
0 11 Q
(For a complete example pr) 108 326.67 T
(ogram, see) 237.5 326.67 T
4 9 Q
(Examples\134Win32\134windows-ffi-example\134example.dylan) 135 306 T
0 11 Q
(in the Harlequin Dylan installation dir) 108 285.67 T
(ectory) 294.73 285.67 T
(.) 323.71 285.67 T
3 16 Q
(2.9  Combining bit mask constants) 108 250.33 T
108 394/G5.889842 FmPA
0 11 Q
-0.17 (Wher) 108 229.67 P
-0.17 (e C code would use the) 134.82 229.67 P
4 9.5 Q
-0.35 (|) 249.8 229.67 P
0 11 Q
-0.17 ( operator to combine bit mask constants, Dylan) 255.5 229.67 P
(code usually uses the) 108 215.67 T
4 9.5 Q
(logior) 214.32 215.67 T
0 11 Q
( function. However) 248.51 215.67 T
(, a few such constants have) 342.16 215.67 T
(values of type) 108 201.67 T
4 9.5 Q
(<machine-word>) 178.98 201.67 T
0 11 Q
( when they will not \336t in a small integer) 258.78 201.67 T
(, and) 451.92 201.67 T
4 9.5 Q
(logior) 108 187.67 T
0 11 Q
( only works on instances of) 142.2 187.67 T
4 9.5 Q
(<integer>) 277.38 187.67 T
0 11 Q
(. Because of this, the) 328.68 187.67 T
4 9.5 Q
(win32-) 429.65 187.67 T
(common) 108 173.67 T
0 11 Q
( library exports a) 142.2 173.67 T
4 9.5 Q
(%logior) 227.65 173.67 T
0 11 Q
( function which is used like) 267.55 173.67 T
4 9.5 Q
(logior) 403.83 173.67 T
0 11 Q
( except) 438.03 173.67 T
-0.18 (that it accepts values of either type) 108 159.67 P
4 9.5 Q
-0.38 (<integer>) 278.04 159.67 P
0 11 Q
-0.18 ( or) 329.34 159.67 P
4 9.5 Q
-0.38 (<machine-word>) 344.83 159.67 P
0 11 Q
-0.18 ( and r) 424.63 159.67 P
-0.18 (eturns) 452.53 159.67 P
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.79/DEST FmPD2
134 405/I5.1.890982 FmPA
134 405/I5.1.890972 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "79" 83
%%Page: "80" 84
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(80) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(a) 126 640.67 T
4 9.5 Q
(<machine-word>) 134.25 640.67 T
0 11 Q
( r) 214.05 640.67 T
(esult. It can be used in most places that accept a bit mask) 220.95 640.67 T
-0.17 (\050C types) 126 626.67 P
4 9.5 Q
-0.35 (DWORD) 168.87 626.67 P
0 11 Q
-0.17 (,) 197.37 626.67 P
4 9.5 Q
-0.35 (ULONG) 202.71 626.67 P
0 11 Q
-0.17 (,) 231.21 626.67 P
4 9.5 Q
-0.35 (LPARAM) 236.54 626.67 P
0 11 Q
-0.17 (, and so on\051, but must be used if any of the ar) 270.74 626.67 P
-0.17 (gu-) 487.59 626.67 P
(ments ar) 126 612.67 T
(e a) 168.03 612.67 T
4 9.5 Q
(<machine-word>) 184.3 612.67 T
0 11 Q
(. The contexts wher) 264.1 612.67 T
(e this is likely to occur ar) 358.58 612.67 T
(e:) 479.16 612.67 T
(\245) 135 592.67 T
(W) 153 592.67 T
(indow style parameter of) 163.4 592.67 T
4 9.5 Q
(CreateWindow \050$WS-...\051) 288.54 592.67 T
0 11 Q
(\245) 135 572.67 T
(Flags value for) 153 572.67 T
4 9.5 Q
(CreateFile) 227.68 572.67 T
0 11 Q
( or) 284.68 572.67 T
4 9.5 Q
(CreateNamedPipe) 300.53 572.67 T
(\050$FILE-FLAG-...\051) 388.78 572.67 T
0 11 Q
(\245) 135 552.67 T
4 9.5 Q
($LOCALE-NOUSEROVERRIDE) 153 552.67 T
0 11 Q
( for) 278.4 552.67 T
4 9.5 Q
(LCTYPE) 297.91 552.67 T
0 11 Q
( parameters for) 332.11 552.67 T
4 9.5 Q
(GetLocaleInfoA) 409.18 552.67 T
0 11 Q
(,) 488.98 552.67 T
4 9.5 Q
(GetLocaleInfo) 153 538.67 T
0 11 Q
(, and possibly others, or) 227.1 538.67 T
4 9.5 Q
(dwFlags) 346.14 538.67 T
0 11 Q
( parameter of) 386.04 538.67 T
4 9.5 Q
(GetTimeFormat) 153 524.67 T
0 11 Q
(,) 227.1 524.67 T
4 9.5 Q
(GetNumberFormat) 232.6 524.67 T
0 11 Q
(,) 318.1 524.67 T
4 9.5 Q
(GetCurrencyFormat) 323.6 524.67 T
0 11 Q
(, or) 420.5 524.67 T
4 9.5 Q
(GetDateFormat) 153 510.67 T
0 11 Q
(.) 227.1 510.67 T
(\245) 135 490.67 T
(Mask and ef) 153 490.67 T
(fects values in) 212.54 490.67 T
4 9.5 Q
(CHARFORMAT) 283.94 490.67 T
0 11 Q
( str) 340.94 490.67 T
(uctur) 356.2 490.67 T
(e for \322rich edit\323 contr) 382.08 490.67 T
(ols) 486 490.67 T
4 9.5 Q
(\050$CFM-...) 153 476.67 T
0 11 Q
( and) 204.3 476.67 T
4 9.5 Q
($CFE-...\051) 228.42 476.67 T
0 11 Q
(\245) 135 456.67 T
(Mask value in) 153 456.67 T
4 9.5 Q
(PARAFORMAT) 224.36 456.67 T
0 11 Q
( str) 281.36 456.67 T
(uctur) 296.61 456.67 T
(e for \322rich edit\323 contr) 322.5 456.67 T
(ols) 426.41 456.67 T
4 9.5 Q
(\050$PFM-...\051) 153 442.67 T
3 16 Q
(2.10  Other minor details) 126 407.33 T
126 551/G5.888865 FmPA
0 11 Q
(The types) 126 386.67 T
4 9.5 Q
(<FARPROC>) 176.16 386.67 T
0 11 Q
( and) 227.46 386.67 T
4 9.5 Q
(<PROC>) 251.58 386.67 T
0 11 Q
( ar) 285.78 386.67 T
(e de\336ned as equivalent to) 298.18 386.67 T
4 9.5 Q
(<C-function-) 425.43 386.67 T
(pointer>) 126 372.67 T
0 11 Q
(, so any C function wrapper object can be passed to a r) 171.6 372.67 T
(outine taking) 435.68 372.67 T
-0.04 (a) 126 358.67 P
4 9.5 Q
-0.08 (<FARPROC>) 134.21 358.67 P
0 11 Q
-0.04 ( without needing to do any type conversion like that needed in C.) 185.51 358.67 P
(T) 126 338.67 T
(ype casts between handles and integers \050) 131.75 338.67 T
4 9.5 Q
(<integer>) 329.9 338.67 T
0 11 Q
( or) 381.2 338.67 T
4 9.5 Q
(<machine-word>) 397.05 338.67 T
0 11 Q
(\051 can) 476.85 338.67 T
(be done by using) 126 324.67 T
4 9.5 Q
(as) 211.96 324.67 T
0 11 Q
(. For example:) 223.37 324.67 T
4 9 Q
(window-class.hbrBackground-value :=) 153 304 T
(as\050<HBRUSH>, $COLOR-WINDOW + 1\051;) 331.2 293 T
0 11 Q
(Note that pointers and handles must be compar) 126 272.67 T
(ed using) 358 272.67 T
4 9.5 Q
(=) 402.51 272.67 T
0 11 Q
(, not) 408.21 272.67 T
4 9.5 Q
(==) 432.45 272.67 T
0 11 Q
(, in or) 443.85 272.67 T
(der to) 471.86 272.67 T
(compar) 126 258.67 T
(e the C addr) 162.86 258.67 T
(ess instead of the Dylan wrapper objects.) 222.52 258.67 T
(For type casts fr) 126 238.67 T
(om one pointer type to another) 203.41 238.67 T
(, use the function) 353.84 238.67 T
4 9.5 Q
(pointer-) 440.19 238.67 T
(cast) 126 224.67 T
0 11 Q
( instead of) 148.8 224.67 T
4 9.5 Q
(as) 202.06 224.67 T
0 11 Q
(. Think of) 213.46 224.67 T
4 9.5 Q
(as) 262.99 224.67 T
0 11 Q
( as converting the data str) 274.39 224.67 T
(uctur) 399.81 224.67 T
(e pointed to,) 425.69 224.67 T
(while) 126 210.67 T
4 9.5 Q
(pointer-cast) 156 210.67 T
0 11 Q
( operates on just the pointer itself.) 224.4 210.67 T
(The Dylan function) 126 190.67 T
4 9.5 Q
(pointer-value) 223.17 190.67 T
0 11 Q
( can be used to convert between a Dylan) 297.27 190.67 T
(integer and a) 126 176.67 T
4 9.5 Q
(LARGE-INTEGER) 192.56 176.67 T
0 11 Q
( or) 266.66 176.67 T
4 9.5 Q
(ULARGE-INTEGER) 282.51 176.67 T
0 11 Q
(. For example:) 362.31 176.67 T
4 9 Q
(let li :: make\050 <PLARGE-INTEGER> \051; pointer-value\050li\051 := 0;) 153 156 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.80/DEST FmPD2
159 562/I5.1.890974 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "80" 84
%%Page: "81" 85
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.11) 297.11 677.67 T
(Index of Win32 names excluded from the Dylan libraries) 323.24 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(81) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(allocates a) 108 640.67 T
4 9.5 Q
(LARGE-INTEGER) 160.81 640.67 T
0 11 Q
( and sets its value to 0, without needing to be con-) 234.91 640.67 T
(cerned with the individual \336elds of the internal r) 108 626.67 T
(epr) 344.99 626.67 T
(esentation. Alternatively) 361.02 626.67 T
(,) 479.64 626.67 T
(you can use an initialization keywor) 108 612.67 T
(d:) 284.27 612.67 T
4 9 Q
(let li :: make\050 <PLARGE-INTEGER>, value: 0 \051;) 135 592 T
0 11 Q
-0.06 (The C macr) 108 571.67 P
-0.06 (os) 163.83 571.67 P
4 9.5 Q
-0.13 (MAKEPOINT) 177.18 571.67 P
0 11 Q
-0.06 (,) 227.67 571.67 P
4 9.5 Q
-0.13 (MAKEPOINTS) 233.1 571.67 P
0 11 Q
-0.06 (, and) 290.1 571.67 P
4 9.5 Q
-0.13 (LONG2POINT) 316.85 571.67 P
0 11 Q
-0.06 ( do not easily translate) 373.85 571.67 P
(to Dylan. Instead, use the Dylan function) 108 557.67 T
4 9.5 Q
(lparam-to-xy) 310.26 557.67 T
0 11 Q
(to split a parameter) 384.36 557.67 T
(into two signed numbers. For example:) 108 543.67 T
4 9 Q
(let \050 x, y \051 = LPARAM-TO-XY\050lParam\051;) 135 523 T
0 11 Q
(In Dylan,) 108 502.67 T
4 9.5 Q
(<RECTL>) 156.09 502.67 T
0 11 Q
( is an alias of) 195.99 502.67 T
4 9.5 Q
(<RECT>) 261.24 502.67 T
0 11 Q
( instead of being a distinct type. \050In) 295.44 502.67 T
-0.27 (W) 108 488.67 P
-0.27 (in32, they ar) 118.39 488.67 P
-0.27 (e str) 177.73 488.67 P
-0.27 (ucturally equivalent but wer) 197.99 488.67 P
-0.27 (e separate types for the sake of) 335.87 488.67 P
(sour) 108 474.67 T
(ce code compatibility with W) 129.45 474.67 T
(in16; ther) 271.13 474.67 T
(e is no need to maintain that arti\336-) 316.64 474.67 T
(cial distinction in Dylan.\051) 108 460.67 T
(W) 108 440.67 T
(indows r) 118.39 440.67 T
(esour) 161.46 440.67 T
(ce \336les \050) 188.18 440.67 T
4 9.5 Q
(.rc) 227.28 440.67 T
0 11 Q
( \336les\051 can be included by using the LID \336le \336eld) 244.38 440.67 T
4 9.5 Q
(RC-Files:) 108 426.67 T
0 11 Q
(.) 159.3 426.67 T
3 16 Q
-0.25 (2.11  Inde) 108 391.33 P
-0.25 (x of Win32 names e) 167.12 391.33 P
-0.25 (xc) 287.7 391.33 P
-0.25 (luded fr) 302.06 391.33 P
-0.25 (om the Dylan libraries) 349.67 391.33 P
108 535/G5.891631 FmPA
0 11 Q
(The names listed in the index below ar) 108 370.67 T
(e excluded fr) 295.36 370.67 T
(om the Harlequin Dylan) 358.32 370.67 T
(W) 108 356.67 T
(in32 API libraries because they ar) 118.39 356.67 T
(e obsolete.) 280.79 356.67 T
-0.37 (Functions for old-style meta\336les \050) 108 336.67 P
4 9.5 Q
-0.78 (CreateMetaFile) 269.36 336.67 P
0 11 Q
-0.37 (,) 349.16 336.67 P
4 9.5 Q
-0.78 (CloseMetaFile) 354.28 336.67 P
0 11 Q
-0.37 (, and so on\051) 428.38 336.67 P
(ar) 108 322.67 T
(e described in the W) 117.65 322.67 T
(in32 API as being obsolete, but they ar) 216.33 322.67 T
(e being sup-) 402.48 322.67 T
(ported because they ar) 108 308.67 T
(e needed for OLE applications to exchange data with) 218.11 308.67 T
(16-bit applications.) 108 294.67 T
(Functions) 108 274.67 T
4 9.5 Q
(wsprintf) 158.64 274.67 T
0 11 Q
( and) 204.24 274.67 T
4 9.5 Q
(wvsprintf) 228.37 274.67 T
0 11 Q
( ar) 279.67 274.67 T
(e not supported because the Dylan) 292.06 274.67 T
(function) 108 260.67 T
4 9.5 Q
(format-to-string) 151.53 260.67 T
0 11 Q
( serves the same purpose. Also, the FFI doesn't) 242.73 260.67 T
(curr) 108 246.67 T
(ently support C functions with a variable number of ar) 128.01 246.67 T
(guments.) 393.97 246.67 T
(The extended API macr) 108 226.67 T
(os de\336ned in optional C header \336le) 222.73 226.67 T
4 9.5 Q
(windowsx.h) 396.23 226.67 T
0 11 Q
( will) 453.23 226.67 T
(not be supported by the Dylan interface.) 108 212.67 T
(The 64-bit utility macr) 108 192.67 T
(os) 215.96 192.67 T
4 9.5 Q
(Int32x32To64) 229.38 192.67 T
0 11 Q
(,) 297.79 192.67 T
4 9.5 Q
(Int64ShllMod32) 303.29 192.67 T
0 11 Q
(,) 383.08 192.67 T
4 9.5 Q
(Int64ShraMod32) 388.58 192.67 T
0 11 Q
(,) 468.39 192.67 T
4 9.5 Q
(Int64ShrlMod32) 108 178.67 T
0 11 Q
(, and) 187.8 178.67 T
4 9.5 Q
(UInt32x32To64) 214.67 178.67 T
0 11 Q
( ar) 288.77 178.67 T
(e not planned to be supported since) 301.17 178.67 T
-0.03 (ther) 108 164.67 P
-0.03 (e is no clear need for them and the functionality can be obtained by using) 127.4 164.67 P
(Dylan extended integers. However) 108 150.67 T
(, an interface to function) 277.11 150.67 T
4 9.5 Q
(MulDiv) 398 150.67 T
0 11 Q
( is pr) 432.2 150.67 T
(o-) 456.33 150.67 T
(vided, since it is an or) 108 136.67 T
(dinary C function that is commonly used.) 213.75 136.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.81/DEST FmPD2
140 546/I5.1.891626 FmPA
140 546/I5.1.891627 FmPA
140 546/I5.1.891628 FmPA
140 546/I5.1.891629 FmPA
140 546/M5.9.91728.1Heading.106.Index.of.Win32.IDs.excluded.from.the.Dylan.libraries FmPA
140 546/I5.1.891630 FmPA
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "81" 85
%%Page: "82" 86
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(82) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(2.11.1  Character) 126 639.33 T
(s) 211.19 639.33 T
0 11 Q
(The following W) 126 619.67 T
(in32 names ar) 207.28 619.67 T
(e excluded fr) 274.58 619.67 T
(om the Harlequin Dylan W) 337.53 619.67 T
(in32) 469.5 619.67 T
(API libraries.) 126 605.67 T
4 9 Q
(_hread, _hwrite, _lclose, _lcreat, _llseek, _lopen, _lread,) 153 585 T
(_lwrite) 153 574 T
3 13 Q
(2.11.2  A) 126 542.33 T
0 11 Q
(The following W) 126 522.67 T
(in32 names ar) 207.28 522.67 T
(e excluded fr) 274.58 522.67 T
(om the Harlequin Dylan W) 337.53 522.67 T
(in32) 469.5 522.67 T
(API libraries.) 126 508.67 T
4 9 Q
(AccessResource, AllocDSToCSAlias, AllocResource, AllocSelector,) 153 488 T
(AnsiLowerBuff, AnsiNext, AnsiPrev, AnsiToOem, AnsiToOemBuff,) 153 477 T
(AnsiUpper, AnsiUpperBuff) 153 466 T
3 13 Q
(2.11.3  B) 126 434.33 T
0 11 Q
(The following W) 126 414.67 T
(in32 names ar) 207.28 414.67 T
(e excluded fr) 274.58 414.67 T
(om the Harlequin Dylan W) 337.53 414.67 T
(in32) 469.5 414.67 T
(API libraries.) 126 400.67 T
4 9 Q
(BN_DBLCLK, BN_DISABLE, BN_DOUBLECLICKED, BN_HILITE, BN_PAINT,) 153 380 T
(BN_PUSHED, BN_UNPUSHED, BS_USERBUTTON) 153 369 T
3 13 Q
(2.11.4  C) 126 337.33 T
0 11 Q
(The following W) 126 317.67 T
(in32 names ar) 207.28 317.67 T
(e excluded fr) 274.58 317.67 T
(om the Harlequin Dylan W) 337.53 317.67 T
(in32) 469.5 317.67 T
(API libraries.) 126 303.67 T
4 9 Q
(CPL_INQUIRE, ChangeSelector, CloseComm, CloseSound, CopyLZFile,) 153 283 T
(CountVoiceNotes,) 153 272 T
3 13 Q
(2.11.5  D) 126 240.33 T
0 11 Q
(The following W) 126 220.67 T
(in32 names ar) 207.28 220.67 T
(e excluded fr) 274.58 220.67 T
(om the Harlequin Dylan W) 337.53 220.67 T
(in32) 469.5 220.67 T
(API libraries.) 126 206.67 T
4 9 Q
(DOS3Call, DefHookProc, DefineHandleTable, DeviceMode,) 153 186 T
(DlgDirSelect, DlgDirSelectComboBox) 153 175 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.82/DEST FmPD2
162 792/I5.1.891637 FmPA
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "82" 86
%%Page: "83" 87
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.11) 297.11 677.67 T
(Index of Win32 names excluded from the Dylan libraries) 323.24 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(83) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
3 13 Q
0 X
(2.11.6  E) 108 639.33 T
0 11 Q
(The following W) 108 619.67 T
(in32 names ar) 189.28 619.67 T
(e excluded fr) 256.58 619.67 T
(om the Harlequin Dylan W) 319.53 619.67 T
(in32) 451.5 619.67 T
(API libraries.) 108 605.67 T
4 9 Q
(EnumFonts, ERR_..., ExtDeviceMode) 135 585 T
3 13 Q
(2.11.7  F) 108 553.33 T
0 11 Q
(The following W) 108 533.67 T
(in32 names ar) 189.28 533.67 T
(e excluded fr) 256.58 533.67 T
(om the Harlequin Dylan W) 319.53 533.67 T
(in32) 451.5 533.67 T
(API libraries.) 108 519.67 T
4 9 Q
(FixBrushOrgEx, FlushComm, FreeModule, FreeProcInstance,) 135 499 T
(FreeSelector) 135 488 T
3 13 Q
(2.11.8  G) 108 456.33 T
0 11 Q
(The following W) 108 436.67 T
(in32 names ar) 189.28 436.67 T
(e excluded fr) 256.58 436.67 T
(om the Harlequin Dylan W) 319.53 436.67 T
(in32) 451.5 436.67 T
(API libraries.) 108 422.67 T
4 9 Q
(GCW_HBRBACKGROUND, GCW_HCURSOR, GCW_HICON, GWW_HINSTANCE,) 135 402 T
(GWW_HWNDPARENT, GWW_ID, GWW_USERDATA, GetAspectRatioFilter,) 135 391 T
(GetAtomHandle, GetBitmapBits, GetBitmapDimension, GetBrushOrg,) 135 380 T
(GetCharWidth, GetCodeHandle, GetCodeInfo, GetCommError,) 135 369 T
(GetCurrentPDB, GetCurrentPosition, GetEnvironment, GetFreeSpace,) 135 358 T
(GetFreeSystemResources, GetInstanceData, GetKBCodePage,) 135 347 T
(GetMetaFile, GetMetaFileBits, GetPrivateProfileInt) 135 336 T
(GetPrivateProfileSection, GetPrivateProfileSectionNames,) 135 325 T
(GetPrivateProfileString, GetPrivateProfileStruct, GetProfileInt,) 135 314 T
(GetProfileSection, GetProfileString, GetStringTypeA,) 135 303 T
(GetStringTypeW, GetTempDrive, GetTextExtent, GetTextExtentEx,) 135 292 T
(GetTextExtentPoint, GetThresholdEvent, GetThresholdStatus,) 135 281 T
(GetViewportExt, GetViewportOrg, GetWindowExt, GetWindowOrg,) 135 270 T
(GlobalCompact, GlobalDosAlloc, GlobalDosFree, GlobalFix,) 135 259 T
(GlobalLRUNewest, GlobalLRUOldest, GlobalNotify, GlobalPageLock,) 135 248 T
(GlobalPageUnlock, GlobalUnWire, GlobalUnfix, GlobalUnwire,) 135 237 T
(GlobalWire) 135 226 T
3 13 Q
(2.11.9  H) 108 194.33 T
0 11 Q
(The following W) 108 174.67 T
(in32 names ar) 189.28 174.67 T
(e excluded fr) 256.58 174.67 T
(om the Harlequin Dylan W) 319.53 174.67 T
(in32) 451.5 174.67 T
(API libraries.) 108 160.67 T
4 9 Q
(HFILE, HFILE_ERROR) 135 140 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.83/DEST FmPD2
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "83" 87
%%Page: "84" 88
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(84) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(2.11.10  L) 126 639.33 T
0 11 Q
(The following W) 126 619.67 T
(in32 names ar) 207.28 619.67 T
(e excluded fr) 274.58 619.67 T
(om the Harlequin Dylan W) 337.53 619.67 T
(in32) 469.5 619.67 T
(API libraries.) 126 605.67 T
4 9 Q
(LZDone, LZStart, LimitEmsPages, LocalCompact, LocalInit,) 153 585 T
(LocalNotify, LocalShrink, LockSegment) 153 574 T
3 13 Q
(2.11.11  M) 126 542.33 T
0 11 Q
(The following W) 126 522.67 T
(in32 names ar) 207.28 522.67 T
(e excluded fr) 274.58 522.67 T
(om the Harlequin Dylan W) 337.53 522.67 T
(in32) 469.5 522.67 T
(API libraries.) 126 508.67 T
4 9 Q
(MAKEPOINT, MakeProcInstance, MoveTo) 153 488 T
3 13 Q
(2.11.12  N) 126 456.33 T
0 11 Q
(The following W) 126 436.67 T
(in32 names ar) 207.28 436.67 T
(e excluded fr) 274.58 436.67 T
(om the Harlequin Dylan W) 337.53 436.67 T
(in32) 469.5 436.67 T
(API libraries.) 126 422.67 T
4 9 Q
(NetBIOSCall) 153 402 T
3 13 Q
(2.11.13  O) 126 370.33 T
0 11 Q
(The following W) 126 350.67 T
(in32 names ar) 207.28 350.67 T
(e excluded fr) 274.58 350.67 T
(om the Harlequin Dylan W) 337.53 350.67 T
(in32) 469.5 350.67 T
(API libraries.) 126 336.67 T
4 9 Q
(OemToAnsi, OemToAnsiBuff, OffsetViewportOrg, OffsetWindowOrg,) 153 316 T
(OpenComm, OpenFile, OpenSound) 153 305 T
3 13 Q
(2.11.14  P) 126 273.33 T
0 11 Q
(The following W) 126 253.67 T
(in32 names ar) 207.28 253.67 T
(e excluded fr) 274.58 253.67 T
(om the Harlequin Dylan W) 337.53 253.67 T
(in32) 469.5 253.67 T
(API libraries.) 126 239.67 T
4 9 Q
(PM_NOYIELD, ProfClear, ProfFinish, ProfFlush, ProfInsChk,) 153 219 T
(ProfSampRate, ProfSetup, ProfStart, ProfStop) 153 208 T
3 13 Q
(2.11.15  R) 126 176.33 T
0 11 Q
(The following W) 126 156.67 T
(in32 names ar) 207.28 156.67 T
(e excluded fr) 274.58 156.67 T
(om the Harlequin Dylan W) 337.53 156.67 T
(in32) 469.5 156.67 T
(API libraries.) 126 142.67 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.84/DEST FmPD2
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "84" 88
%%Page: "85" 89
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 657 540 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(2.11) 297.11 677.67 T
(Index of Win32 names excluded from the Dylan libraries) 323.24 677.67 T
108 81 540 117 R
7 X
V
1 9 Q
0 X
(85) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(READ, READ_WRITE, ReadComm, RegCreateKey, RegEnumKey, RegOpenKey,) 135 642 T
(RegQueryValue, RegSetValue) 135 631 T
3 13 Q
(2.11.16  S) 108 599.33 T
0 11 Q
(The following W) 108 579.67 T
(in32 names ar) 189.28 579.67 T
(e excluded fr) 256.58 579.67 T
(om the Harlequin Dylan W) 319.53 579.67 T
(in32) 451.5 579.67 T
(API libraries.) 108 565.67 T
4 9 Q
(SYSTEM_FIXED_FONT, ScaleViewportExt, ScaleWindowExt,) 135 545 T
(SetBitmapDimension, SetCommEventMask, SetEnvironment,) 135 534 T
(SetMetaFileBits, SetResourceHandler, SetScrollPos,) 135 523 T
(SetScrollRange, SetSoundNoise, SetSwapAreaSize,) 135 512 T
(SetViewportExt, SetViewportOrg, SetVoiceAccent, SetVoiceEnvelope,) 135 501 T
(SetVoiceNote, SetVoiceQueueSize, SetVoiceSound,) 135 490 T
(SetVoiceThreshold, SetWindowExt, SetWindowOrg, SetWindowsHook,) 135 479 T
(StartSound, StopSound, SwitchStackBack, SwitchStackTo,) 135 468 T
(SyncAllVoices) 135 457 T
3 13 Q
(2.11.17  U) 108 425.33 T
0 11 Q
(The following W) 108 405.67 T
(in32 names ar) 189.28 405.67 T
(e excluded fr) 256.58 405.67 T
(om the Harlequin Dylan W) 319.53 405.67 T
(in32) 451.5 405.67 T
(API libraries.) 108 391.67 T
4 9 Q
(UngetCommChar, UnhookWindowsHook, UnlockSegment) 135 371 T
3 13 Q
(2.11.18  V) 108 339.33 T
0 11 Q
(The following W) 108 319.67 T
(in32 names ar) 189.28 319.67 T
(e excluded fr) 256.58 319.67 T
(om the Harlequin Dylan W) 319.53 319.67 T
(in32) 451.5 319.67 T
(API libraries.) 108 305.67 T
4 9 Q
(ValidateCodeSegments, ValidateFreeSpaces) 135 285 T
3 13 Q
(2.11.19  W) 108 253.33 T
0 11 Q
(The following W) 108 233.67 T
(in32 names ar) 189.28 233.67 T
(e excluded fr) 256.58 233.67 T
(om the Harlequin Dylan W) 319.53 233.67 T
(in32) 451.5 233.67 T
(API libraries.) 108 219.67 T
4 9 Q
(WM_CTLCOLOR, WNetAddConnection, WNetCancelConnection, WRITE,) 135 199 T
(WaitSoundState, WriteComm, WritePrivateProfileSection,) 135 188 T
(WritePrivateProfileString, WritePrivateProfileStruct,) 135 177 T
(WriteProfileSection, WriteProfileString) 135 166 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.85/DEST FmPD2
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "85" 89
%%Page: "86" 90
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 657 504 684 R
7 X
0 0 0 1 0 0 0 K
V
2 9.5 Q
0 X
(The Harlequin Dylan Win32 API Libraries) 72 677.67 T
72 81 504 117 R
7 X
V
1 9 Q
0 X
(86) 72 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(2.11.20  Y) 126 639.33 T
0 11 Q
(The following W) 126 619.67 T
(in32 names ar) 207.28 619.67 T
(e excluded fr) 274.58 619.67 T
(om the Harlequin Dylan W) 337.53 619.67 T
(in32) 469.5 619.67 T
(API libraries.) 126 605.67 T
4 9 Q
(Yield) 153 585 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.86/DEST FmPD2
[/Dest/L.win32doc/DEST FmPD2
[/Title(A)/Rect[117 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "86" 90
%%Page: "87" 91
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 126 279 486 R
7 X
0 0 0 1 0 0 0 K
V
108 81 540 117 R
V
1 9 Q
0 X
(87) 319.5 100 T
315 126 486 486 R
7 X
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 486 R
V
1 11 Q
0 X
(Symbols) 108 478.67 T
4 8 Q
(+) 108 467 T
0 9 Q
( method) 112.8 467 T
(7) 150.39 467 T
4 8 Q
(<) 108 457 T
0 9 Q
( method) 112.8 457 T
(25) 150.39 457 T
4 8 Q
(=) 108 447 T
0 9 Q
( method) 112.8 447 T
(25) 150.39 447 T
1 11 Q
(A) 108 425.67 T
0 9 Q
(alias functions) 108 414 T
(creating methods from) 117 404 T
(74) 212.23 404 T
4 8 Q
(alignment-of) 108 394 T
0 9 Q
( function) 165.6 394 T
(13) 205.71 394 T
(allocating) 108 384 T
(C storage) 117 374 T
(58) 159.16 374 T
(API libraries) 108 364 T
(Win32) 117 354 T
(69) 147.36 354 T
1 11 Q
(B) 108 332.67 T
0 9 Q
(basic options in C-FFI macros) 108 321 T
(9) 230.26 321 T
(bit mask constants) 108 311 T
(combining) 117 301 T
(79) 164.05 301 T
4 8 Q
(<byte-string>) 108 291 T
0 9 Q
( class) 170.4 291 T
(38, 39) 195.9 291 T
1 11 Q
(C) 108 269.67 T
0 9 Q
(C) 108 258 T
-0.18 (describing Dylan functions for use by) 117 248 P
-0.18 (50) 270 248 P
(C functions) 108 238 T
(dealing with) 117 228 T
4 8 Q
(WinMain) 167.34 228 T
0 9 Q
(78) 205.44 228 T
(describing to Dylan) 117 218 T
(45) 199.81 218 T
(in Dylan) 117 208 T
(5) 155.93 208 T
(C structure fields) 108 198 T
(mapping onto Dylan slot names) 117 188 T
(74) 249.05 188 T
(C type macros) 108 178 T
(notes on) 117 168 T
(32) 155.12 168 T
(C types) 108 158 T
(in Dylan) 117 148 T
(2) 155.93 148 T
(mapping onto Dylan classes) 117 138 T
(73) 233.58 138 T
(C variables in Dylan) 315 480 T
(7) 400.8 480 T
(callback functions) 315 470 T
(defining) 324 460 T
(75) 362.02 460 T
4 8 Q
(<C-boolean>) 315 450 T
0 9 Q
( class) 367.8 450 T
(62) 393.3 450 T
4 8 Q
(<C-char>) 315 440 T
0 9 Q
( class) 353.4 440 T
(16) 378.9 440 T
4 8 Q
(<C-character>) 315 430 T
0 9 Q
( class) 377.4 430 T
(63) 402.9 430 T
4 8 Q
(C-char-at) 315 420 T
0 9 Q
( function) 358.2 420 T
(27) 398.31 420 T
4 8 Q
(C-char-at-setter) 315 410 T
0 9 Q
( function) 391.8 410 T
(26) 431.91 410 T
4 8 Q
(<C-double>) 315 400 T
0 9 Q
( class) 363 400 T
(2, 17) 388.5 400 T
4 8 Q
(<C-double*>) 315 390 T
0 9 Q
( class) 367.8 390 T
(2) 393.3 390 T
4 8 Q
(C-double-at) 315 380 T
0 9 Q
( function) 367.8 380 T
(30) 407.91 380 T
4 8 Q
(C-double-at-setter) 315 370 T
0 9 Q
( function) 401.4 370 T
(30) 441.51 370 T
4 8 Q
(<C-Dylan-object>) 315 360 T
0 9 Q
( class) 391.8 360 T
(66) 417.3 360 T
4 8 Q
(<C-example-string>) 315 350 T
0 9 Q
( class) 401.4 350 T
(38) 426.9 350 T
(C-FFI library) 315 340 T
(1) 371 340 T
(introduction) 324 330 T
(1) 378.39 330 T
(terminology) 324 320 T
(9) 377.56 320 T
(variables) 324 310 T
(55) 364.48 310 T
(C-FFI macros) 315 300 T
(basic options) 324 290 T
(9) 380.5 290 T
4 8 Q
(<C-float>) 315 280 T
0 9 Q
( class) 358.2 280 T
(16) 383.7 280 T
4 8 Q
(C-float-at) 315 270 T
0 9 Q
( function) 363 270 T
(30) 403.11 270 T
4 8 Q
(C-float-at-setter) 315 260 T
0 9 Q
( function) 396.6 260 T
(30) 436.71 260 T
4 8 Q
(<C-function-pointer>) 315 250 T
0 9 Q
( class) 411 250 T
(45, 49) 436.5 250 T
(characters) 315 240 T
(82) 359.9 240 T
4 8 Q
(check-win32-result) 315 230 T
0 9 Q
( function) 401.4 230 T
(77) 441.51 230 T
4 8 Q
(<C-int>) 315 220 T
0 9 Q
( class) 348.6 220 T
(2, 15, 17) 374.1 220 T
4 8 Q
(<C-int*>) 315 210 T
0 9 Q
( class) 353.4 210 T
(17) 378.9 210 T
4 8 Q
(C-int-at) 315 200 T
0 9 Q
( function) 353.4 200 T
(30) 393.51 200 T
4 8 Q
(C-int-at-setter) 315 190 T
0 9 Q
( function) 387 190 T
(30) 427.11 190 T
(classes) 315 180 T
4 8 Q
(<byte-string>) 324 170 T
0 9 Q
(38, 39) 390.9 170 T
4 8 Q
(<C-boolean>) 324 160 T
0 9 Q
(62) 381.3 160 T
4 8 Q
(<C-char>) 324 150 T
0 9 Q
(16) 366.9 150 T
4 8 Q
(<C-character>) 324 140 T
0 9 Q
(63) 390.9 140 T
4 8 Q
(<C-double*>) 324 130 T
0 9 Q
(2) 381.3 130 T
107.17 563 305.17 621 R
7 X
V
107.17 593.45 305.17 621 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
107.17 593.45 305.17 621 R
7 X
0 0 0 1 0 0 0 K
V
107.17 614.14 269.17 614.14 2 L
3 H
2 Z
0 X
N
107.17 605.14 269.17 605.14 2 L
1 H
N
36 72 576 720 C
0 30 Q
0 X
0 0 0 1 0 0 0 K
(Index) 107.17 573.45 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.87/DEST FmPD2
[/Dest/F.interop1IXdoc/DEST FmPD2
152 630/M6.8.newlink.Symbols FmPA
[/Rect[113 463 279 473]/Border[0 0 0]/Dest/I4.1.1059897/LNK FmPD2
[/Rect[113 453 279 463]/Border[0 0 0]/Dest/I4.1.1058504/LNK FmPD2
[/Rect[113 443 279 453]/Border[0 0 0]/Dest/I4.1.1058604/LNK FmPD2
117 577/M6.8.newlink.Numerics FmPA
117 577/M6.8.newlink.A FmPA
[/Rect[108 400 279 410]/Border[0 0 0]/Dest/I5.1.891000/LNK FmPD2
[/Rect[166 390 279 400]/Border[0 0 0]/Dest/I4.1.1058612/LNK FmPD2
[/Rect[108 370 279 380]/Border[0 0 0]/Dest/I4.1.1060023/LNK FmPD2
[/Rect[108 350 279 360]/Border[0 0 0]/Dest/I5.1.891102/LNK FmPD2
115 484/M6.8.newlink.B FmPA
[/Rect[108 317 279 327]/Border[0 0 0]/Dest/I4.1.1059981/LNK FmPD2
[/Rect[108 297 279 307]/Border[0 0 0]/Dest/I5.1.890982/LNK FmPD2
[/Rect[170 287 209 297]/Border[0 0 0]/Dest/I4.1.1059495/LNK FmPD2
[/Rect[209 287 279 297]/Border[0 0 0]/Dest/I4.1.1059501/LNK FmPD2
116 421/M6.8.newlink.C FmPA
[/Rect[108 244 279 254]/Border[0 0 0]/Dest/I4.1.1060071/LNK FmPD2
[/Rect[201 224 279 234]/Border[0 0 0]/Dest/I5.1.891006/LNK FmPD2
[/Rect[108 214 279 224]/Border[0 0 0]/Dest/I4.1.1060059/LNK FmPD2
[/Rect[108 204 279 214]/Border[0 0 0]/Dest/I4.1.1059975/LNK FmPD2
[/Rect[108 184 279 194]/Border[0 0 0]/Dest/I5.1.891054/LNK FmPD2
[/Rect[108 164 279 174]/Border[0 0 0]/Dest/I4.1.1060105/LNK FmPD2
[/Rect[108 144 279 154]/Border[0 0 0]/Dest/I4.1.1059973/LNK FmPD2
[/Rect[108 134 279 144]/Border[0 0 0]/Dest/I5.1.891068/LNK FmPD2
[/Rect[315 476 486 486]/Border[0 0 0]/Dest/I4.1.1059977/LNK FmPD2
[/Rect[315 456 486 466]/Border[0 0 0]/Dest/I5.1.891012/LNK FmPD2
[/Rect[368 446 486 456]/Border[0 0 0]/Dest/I4.1.1058506/LNK FmPD2
[/Rect[353 436 486 446]/Border[0 0 0]/Dest/I4.1.1059507/LNK FmPD2
[/Rect[377 426 486 436]/Border[0 0 0]/Dest/I4.1.1058606/LNK FmPD2
[/Rect[358 416 486 426]/Border[0 0 0]/Dest/I4.1.1058616/LNK FmPD2
[/Rect[392 406 486 416]/Border[0 0 0]/Dest/I4.1.1062082/LNK FmPD2
[/Rect[363 396 397 406]/Border[0 0 0]/Dest/I4.1.1059513/LNK FmPD2
[/Rect[397 396 486 406]/Border[0 0 0]/Dest/I4.1.1058512/LNK FmPD2
[/Rect[368 386 486 396]/Border[0 0 0]/Dest/I4.1.1059519/LNK FmPD2
[/Rect[368 376 486 386]/Border[0 0 0]/Dest/I4.1.1058620/LNK FmPD2
[/Rect[401 366 486 376]/Border[0 0 0]/Dest/I4.1.1058622/LNK FmPD2
[/Rect[392 356 486 366]/Border[0 0 0]/Dest/I4.1.1072554/LNK FmPD2
[/Rect[401 346 486 356]/Border[0 0 0]/Dest/I4.1.1059525/LNK FmPD2
[/Rect[315 336 486 346]/Border[0 0 0]/Dest/I4.1.1059967/LNK FmPD2
[/Rect[315 326 486 336]/Border[0 0 0]/Dest/I4.1.1060101/LNK FmPD2
[/Rect[315 316 486 326]/Border[0 0 0]/Dest/I4.1.1060155/LNK FmPD2
[/Rect[315 306 486 316]/Border[0 0 0]/Dest/I4.1.1060017/LNK FmPD2
[/Rect[315 286 486 296]/Border[0 0 0]/Dest/I4.1.1060027/LNK FmPD2
[/Rect[358 276 486 286]/Border[0 0 0]/Dest/I4.1.1058524/LNK FmPD2
[/Rect[363 266 486 276]/Border[0 0 0]/Dest/I4.1.1058624/LNK FmPD2
[/Rect[397 256 486 266]/Border[0 0 0]/Dest/I4.1.1058626/LNK FmPD2
[/Rect[411 246 450 256]/Border[0 0 0]/Dest/I4.1.1058530/LNK FmPD2
[/Rect[450 246 486 256]/Border[0 0 0]/Dest/I4.1.1059531/LNK FmPD2
[/Rect[315 236 486 246]/Border[0 0 0]/Dest/I5.1.891637/LNK FmPD2
[/Rect[401 226 486 236]/Border[0 0 0]/Dest/I5.1.892193/LNK FmPD2
[/Rect[349 216 383 226]/Border[0 0 0]/Dest/I4.1.1059543/LNK FmPD2
[/Rect[383 216 397 226]/Border[0 0 0]/Dest/I4.1.1059549/LNK FmPD2
[/Rect[397 216 486 226]/Border[0 0 0]/Dest/I4.1.1059537/LNK FmPD2
[/Rect[353 206 486 216]/Border[0 0 0]/Dest/I4.1.1059555/LNK FmPD2
[/Rect[353 196 486 206]/Border[0 0 0]/Dest/I4.1.1058628/LNK FmPD2
[/Rect[387 186 486 196]/Border[0 0 0]/Dest/I4.1.1058630/LNK FmPD2
[/Rect[386 166 404 176]/Border[0 0 0]/Dest/I4.1.1059497/LNK FmPD2
[/Rect[404 166 486 176]/Border[0 0 0]/Dest/I4.1.1059503/LNK FmPD2
[/Rect[377 156 486 166]/Border[0 0 0]/Dest/I4.1.1058508/LNK FmPD2
[/Rect[362 146 486 156]/Border[0 0 0]/Dest/I4.1.1059509/LNK FmPD2
[/Rect[386 136 486 146]/Border[0 0 0]/Dest/I4.1.1058608/LNK FmPD2
[/Rect[377 126 486 136]/Border[0 0 0]/Dest/I4.1.1059521/LNK FmPD2
[/Title(A)/Rect[99 117 495 495]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "87" 91
%%Page: "88" 92
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
72 81 504 118 R
V
1 9 Q
0 X
(88) 72 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 288 648 R
7 X
V
4 8 Q
0 X
(<C-double>) 135 642 T
0 9 Q
(2, 17) 187.5 642 T
4 8 Q
(<C-Dylan-object>) 135 632 T
0 9 Q
(66) 216.3 632 T
4 8 Q
(<C-example-string>) 135 622 T
0 9 Q
(38) 225.9 622 T
4 8 Q
(<C-float>) 135 612 T
0 9 Q
(16) 182.7 612 T
4 8 Q
(<C-function-pointer>) 135 602 T
0 9 Q
(45, 49) 235.5 602 T
4 8 Q
(<C-int*>) 135 592 T
0 9 Q
(17) 177.9 592 T
4 8 Q
(<C-int>) 135 582 T
0 9 Q
(2, 15, 17) 173.1 582 T
4 8 Q
(<C-number>) 135 572 T
0 9 Q
(16) 187.5 572 T
4 8 Q
(<C-pointer>) 135 562 T
0 9 Q
(11, 12, 17, 19, 22, 26, 41,) 192.3 562 T
(45, 56) 153 552 T
4 8 Q
(<C-raw-char>) 135 542 T
0 9 Q
(16) 197.1 542 T
4 8 Q
(<C-raw-int>) 135 532 T
0 9 Q
(15) 192.3 532 T
4 8 Q
(<C-raw-signed-char>) 135 522 T
0 9 Q
(16) 230.7 522 T
4 8 Q
(<C-raw-signed-int>) 135 512 T
0 9 Q
(15) 225.9 512 T
4 8 Q
(<C-raw-signed-long>) 135 502 T
0 9 Q
(15) 230.7 502 T
4 8 Q
(<C-raw-signed-short>) 135 492 T
0 9 Q
(16) 235.5 492 T
4 8 Q
(<C-raw-unsigned-char>) 135 482 T
0 9 Q
(16) 240.3 482 T
4 8 Q
(<C-raw-unsigned-int>) 135 472 T
0 9 Q
(14, 15) 235.5 472 T
4 8 Q
(<C-raw-unsigned-long>) 135 462 T
0 9 Q
(15) 240.3 462 T
4 8 Q
(<C-raw-unsigned-short>) 135 452 T
0 9 Q
(15) 245.1 452 T
4 8 Q
(<C-signed-char>) 135 442 T
0 9 Q
(16) 211.5 442 T
4 8 Q
(<C-signed-int>) 135 432 T
0 9 Q
(15) 206.7 432 T
4 8 Q
(<C-signed-long>) 135 422 T
0 9 Q
(15) 211.5 422 T
4 8 Q
(<C-signed-short>) 135 412 T
0 9 Q
(15) 216.3 412 T
4 8 Q
(<C-statically-typed-pointer>) 135 402 T
0 9 Q
(11,) 273.9 402 T
(19, 61) 153 392 T
4 8 Q
(<C-string>) 135 382 T
0 9 Q
(11, 63) 187.5 382 T
4 8 Q
(<C-struct>) 135 372 T
0 9 Q
(31, 40) 187.5 372 T
4 8 Q
(<C-union>) 135 362 T
0 9 Q
(31) 182.7 362 T
4 8 Q
(<C-unsafe-char>) 135 352 T
0 9 Q
(16) 211.5 352 T
4 8 Q
(<C-unsafe-int>) 135 342 T
0 9 Q
(15) 206.7 342 T
4 8 Q
(<C-unsafe-signed int>) 135 332 T
0 9 Q
(15) 240.3 332 T
4 8 Q
(<C-unsafe-signed-char>) 135 322 T
0 9 Q
(16) 245.1 322 T
4 8 Q
(<C-unsafe-signed-long>) 135 312 T
0 9 Q
(15) 245.1 312 T
4 8 Q
(<C-unsafe-signed-short>) 135 302 T
0 9 Q
(15) 249.9 302 T
4 8 Q
(<C-unsafe-unsigned-char>) 135 292 T
0 9 Q
(16) 254.7 292 T
4 8 Q
(<C-unsafe-unsigned-int>) 135 282 T
0 9 Q
(15) 249.9 282 T
4 8 Q
(<C-unsafe-unsigned-long>) 135 272 T
0 9 Q
(15) 254.7 272 T
4 8 Q
(<C-unsafe-unsigned-short>) 135 262 T
0 9 Q
(14, 15) 259.5 262 T
4 8 Q
(<C-unsigned-char>) 135 252 T
0 9 Q
(16) 221.1 252 T
4 8 Q
(<C-unsigned-int>) 135 242 T
0 9 Q
(15) 216.3 242 T
4 8 Q
(<C-unsigned-long>) 135 232 T
0 9 Q
(2, 15) 221.1 232 T
4 8 Q
(<C-unsigned-short>) 135 222 T
0 9 Q
(3, 14, 15) 225.9 222 T
4 8 Q
(<C-value>) 135 212 T
0 9 Q
(12, 16, 17, 31) 182.7 212 T
4 8 Q
(<C-void*>) 135 202 T
0 9 Q
(19) 182.7 202 T
4 8 Q
(<C-void>) 135 192 T
0 9 Q
(12) 177.9 192 T
4 8 Q
(<machine-word>) 135 182 T
0 9 Q
(14, 15) 206.7 182 T
4 8 Q
(<Point>) 135 172 T
0 9 Q
(3) 173.1 172 T
(defining specialized designator) 135 162 T
(classes) 153 152 T
(33, 36) 184.37 152 T
(designator) 135 142 T
(10) 181.89 142 T
-0.09 (fundamental numeric type designator) 135 132 P
333 126 504 648 R
7 X
V
0 X
(classes) 360 642 T
(13) 391.37 642 T
(mapping C types onto) 342 632 T
(73) 435.23 632 T
(pointer designator) 342 622 T
(17) 420.12 622 T
(utility designator) 342 612 T
(62) 415.3 612 T
4 8 Q
(C-long-at) 333 602 T
0 9 Q
( function) 376.2 602 T
(29) 416.31 602 T
4 8 Q
(C-long-at-setter) 333 592 T
0 9 Q
( function) 409.8 592 T
(29) 449.91 592 T
4 8 Q
(<C-number>) 333 582 T
0 9 Q
( class) 381 582 T
(16) 406.5 582 T
(combining bit mask constants) 333 572 T
(79) 455.98 572 T
(content of the Win32 API libraries) 333 562 T
(71) 472.61 562 T
(conventions) 333 552 T
(mapping conventions for Win32) 342 542 T
(libraries) 360 532 T
(72) 397.07 532 T
(naming conventions for Win32) 342 522 T
(libraries) 360 512 T
(72) 397.07 512 T
(simple naming) 342 502 T
(72) 406.02 502 T
4 8 Q
-0.48 (<C-pointer>) 333 492 P
0 9 Q
-0.22 ( class) 385.8 492 P
-0.22 (11, 12, 17, 19, 22, 26, 41,) 411.07 492 P
(45, 56) 369 482 T
4 8 Q
(C-pointer-at) 333 472 T
0 9 Q
( function) 390.6 472 T
(31) 430.71 472 T
4 8 Q
(C-pointer-at-setter) 333 462 T
0 9 Q
( function) 424.2 462 T
(31) 464.31 462 T
4 8 Q
(<C-raw-char>) 333 452 T
0 9 Q
( class) 390.6 452 T
(16) 416.1 452 T
4 8 Q
(<C-raw-int>) 333 442 T
0 9 Q
( class) 385.8 442 T
(15) 411.3 442 T
4 8 Q
(<C-raw-signed-char>) 333 432 T
0 9 Q
( class) 424.2 432 T
(16) 449.7 432 T
4 8 Q
(<C-raw-signed-int>) 333 422 T
0 9 Q
( class) 419.4 422 T
(15) 444.9 422 T
4 8 Q
(<C-raw-signed-long>) 333 412 T
0 9 Q
( class) 424.2 412 T
(15) 449.7 412 T
4 8 Q
(<C-raw-signed-short>) 333 402 T
0 9 Q
( class) 429 402 T
(16) 454.5 402 T
4 8 Q
(<C-raw-unsigned-char>) 333 392 T
0 9 Q
( class) 433.8 392 T
(16) 459.3 392 T
4 8 Q
(<C-raw-unsigned-int>) 333 382 T
0 9 Q
( class) 429 382 T
(14, 15) 454.5 382 T
4 8 Q
(<C-raw-unsigned-long>) 333 372 T
0 9 Q
( class) 433.8 372 T
(15) 459.3 372 T
4 8 Q
(<C-raw-unsigned-short>) 333 362 T
0 9 Q
( class) 438.6 362 T
(15) 464.1 362 T
(creating methods from Windows alias) 333 352 T
(functions) 369 342 T
(74) 410.68 342 T
4 8 Q
(C-short-at) 333 332 T
0 9 Q
( function) 381 332 T
(27) 421.11 332 T
4 8 Q
(C-short-at-setter) 333 322 T
0 9 Q
( function) 414.6 322 T
(28) 454.71 322 T
4 8 Q
(<C-signed-char>) 333 312 T
0 9 Q
( class) 405 312 T
(16) 430.5 312 T
4 8 Q
(C-signed-char-at) 333 302 T
0 9 Q
( function) 409.8 302 T
(27) 449.91 302 T
4 8 Q
(C-signed-char-at-setter) 333 292 T
0 9 Q
( function) 443.4 292 T
(27) 483.51 292 T
4 8 Q
(<C-signed-int>) 333 282 T
0 9 Q
( class) 400.2 282 T
(15) 425.7 282 T
4 8 Q
(C-signed-int-at) 333 272 T
0 9 Q
( function) 405 272 T
(29) 445.11 272 T
4 8 Q
(C-signed-int-at-setter) 333 262 T
0 9 Q
( function) 438.6 262 T
(30) 478.71 262 T
4 8 Q
(<C-signed-long>) 333 252 T
0 9 Q
( class) 405 252 T
(15) 430.5 252 T
4 8 Q
(C-signed-long-at) 333 242 T
0 9 Q
( function) 409.8 242 T
(28) 449.91 242 T
4 8 Q
(C-signed-long-at-setter) 333 232 T
0 9 Q
( function) 443.4 232 T
(29) 483.51 232 T
4 8 Q
(<C-signed-short>) 333 222 T
0 9 Q
( class) 409.8 222 T
(15) 435.3 222 T
4 8 Q
(C-signed-short-at) 333 212 T
0 9 Q
( function) 414.6 212 T
(27) 454.71 212 T
4 8 Q
(C-signed-short-at-setter) 333 202 T
0 9 Q
( function) 448.2 202 T
(28) 488.31 202 T
4 8 Q
-2.56 (<C-statically-typed-pointer>) 333 192 P
0 9 Q
-1.2 ( class) 467.4 192 P
-1.2 (11,) 491.7 192 P
(19, 61) 369 182 T
4 8 Q
(<C-string>) 333 172 T
0 9 Q
( class) 381 172 T
(11, 63) 406.5 172 T
4 8 Q
(<C-struct>) 333 162 T
0 9 Q
( class) 381 162 T
(31, 40) 406.5 162 T
4 8 Q
(<C-union>) 333 152 T
0 9 Q
( class) 376.2 152 T
(31) 401.7 152 T
4 8 Q
(<C-unsafe-char>) 333 142 T
0 9 Q
( class) 405 142 T
(16) 430.5 142 T
4 8 Q
(<C-unsafe-int>) 333 132 T
0 9 Q
( class) 400.2 132 T
(15) 425.7 132 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.88/DEST FmPD2
[/Rect[377 126 486 136]/Border[0 0 0]/Dest/I4.1.1059521/LNK FmPD2
[/Rect[183 638 196 648]/Border[0 0 0]/Dest/I4.1.1059515/LNK FmPD2
[/Rect[196 638 288 648]/Border[0 0 0]/Dest/I4.1.1058514/LNK FmPD2
[/Rect[212 628 288 638]/Border[0 0 0]/Dest/I4.1.1072553/LNK FmPD2
[/Rect[221 618 288 628]/Border[0 0 0]/Dest/I4.1.1059527/LNK FmPD2
[/Rect[178 608 288 618]/Border[0 0 0]/Dest/I4.1.1058526/LNK FmPD2
[/Rect[231 598 249 608]/Border[0 0 0]/Dest/I4.1.1058532/LNK FmPD2
[/Rect[249 598 288 608]/Border[0 0 0]/Dest/I4.1.1059533/LNK FmPD2
[/Rect[173 588 288 598]/Border[0 0 0]/Dest/I4.1.1059557/LNK FmPD2
[/Rect[169 578 182 588]/Border[0 0 0]/Dest/I4.1.1059545/LNK FmPD2
[/Rect[182 578 196 588]/Border[0 0 0]/Dest/I4.1.1059551/LNK FmPD2
[/Rect[196 578 288 588]/Border[0 0 0]/Dest/I4.1.1059539/LNK FmPD2
[/Rect[183 568 288 578]/Border[0 0 0]/Dest/I4.1.1058544/LNK FmPD2
[/Rect[188 558 206 568]/Border[0 0 0]/Dest/I4.1.1059593/LNK FmPD2
[/Rect[206 558 219 568]/Border[0 0 0]/Dest/I4.1.1059605/LNK FmPD2
[/Rect[219 558 233 568]/Border[0 0 0]/Dest/I4.1.1058550/LNK FmPD2
[/Rect[233 558 246 568]/Border[0 0 0]/Dest/I4.1.1059575/LNK FmPD2
[/Rect[246 558 260 568]/Border[0 0 0]/Dest/I4.1.1061136/LNK FmPD2
[/Rect[260 558 273 568]/Border[0 0 0]/Dest/I4.1.1059581/LNK FmPD2
[/Rect[273 558 288 568]/Border[0 0 0]/Dest/I4.1.1059599/LNK FmPD2
[/Rect[126 548 167 558]/Border[0 0 0]/Dest/I4.1.1059611/LNK FmPD2
[/Rect[167 548 288 558]/Border[0 0 0]/Dest/I4.1.1059617/LNK FmPD2
[/Rect[193 538 288 548]/Border[0 0 0]/Dest/I4.1.1059623/LNK FmPD2
[/Rect[188 528 288 538]/Border[0 0 0]/Dest/I4.1.1059629/LNK FmPD2
[/Rect[226 518 288 528]/Border[0 0 0]/Dest/I4.1.1059635/LNK FmPD2
[/Rect[221 508 288 518]/Border[0 0 0]/Dest/I4.1.1059641/LNK FmPD2
[/Rect[226 498 288 508]/Border[0 0 0]/Dest/I4.1.1059647/LNK FmPD2
[/Rect[231 488 288 498]/Border[0 0 0]/Dest/I4.1.1059653/LNK FmPD2
[/Rect[236 478 288 488]/Border[0 0 0]/Dest/I4.1.1059659/LNK FmPD2
[/Rect[231 468 249 478]/Border[0 0 0]/Dest/I4.1.1059671/LNK FmPD2
[/Rect[249 468 288 478]/Border[0 0 0]/Dest/I4.1.1059665/LNK FmPD2
[/Rect[236 458 288 468]/Border[0 0 0]/Dest/I4.1.1059677/LNK FmPD2
[/Rect[241 448 288 458]/Border[0 0 0]/Dest/I4.1.1059683/LNK FmPD2
[/Rect[207 438 288 448]/Border[0 0 0]/Dest/I4.1.1059689/LNK FmPD2
[/Rect[202 428 288 438]/Border[0 0 0]/Dest/I4.1.1059695/LNK FmPD2
[/Rect[207 418 288 428]/Border[0 0 0]/Dest/I4.1.1059701/LNK FmPD2
[/Rect[212 408 288 418]/Border[0 0 0]/Dest/I4.1.1059707/LNK FmPD2
[/Rect[269 398 288 408]/Border[0 0 0]/Dest/I4.1.1059713/LNK FmPD2
[/Rect[126 388 167 398]/Border[0 0 0]/Dest/I4.1.1058556/LNK FmPD2
[/Rect[167 388 288 398]/Border[0 0 0]/Dest/I4.1.1059719/LNK FmPD2
[/Rect[183 378 201 388]/Border[0 0 0]/Dest/I4.1.1059725/LNK FmPD2
[/Rect[201 378 288 388]/Border[0 0 0]/Dest/I4.1.1058562/LNK FmPD2
[/Rect[183 368 201 378]/Border[0 0 0]/Dest/I4.1.1058568/LNK FmPD2
[/Rect[201 368 288 378]/Border[0 0 0]/Dest/I4.1.1059731/LNK FmPD2
[/Rect[178 358 288 368]/Border[0 0 0]/Dest/I4.1.1058574/LNK FmPD2
[/Rect[207 348 288 358]/Border[0 0 0]/Dest/I4.1.1059737/LNK FmPD2
[/Rect[202 338 288 348]/Border[0 0 0]/Dest/I4.1.1059743/LNK FmPD2
[/Rect[236 328 288 338]/Border[0 0 0]/Dest/I4.1.1059749/LNK FmPD2
[/Rect[241 318 288 328]/Border[0 0 0]/Dest/I4.1.1059755/LNK FmPD2
[/Rect[241 308 288 318]/Border[0 0 0]/Dest/I4.1.1059761/LNK FmPD2
[/Rect[245 298 288 308]/Border[0 0 0]/Dest/I4.1.1059767/LNK FmPD2
[/Rect[250 288 288 298]/Border[0 0 0]/Dest/I4.1.1059773/LNK FmPD2
[/Rect[245 278 288 288]/Border[0 0 0]/Dest/I4.1.1059779/LNK FmPD2
[/Rect[250 268 288 278]/Border[0 0 0]/Dest/I4.1.1059785/LNK FmPD2
[/Rect[255 258 273 268]/Border[0 0 0]/Dest/I4.1.1059791/LNK FmPD2
[/Rect[273 258 288 268]/Border[0 0 0]/Dest/I4.1.1059797/LNK FmPD2
[/Rect[217 248 288 258]/Border[0 0 0]/Dest/I4.1.1059803/LNK FmPD2
[/Rect[212 238 288 248]/Border[0 0 0]/Dest/I4.1.1059809/LNK FmPD2
[/Rect[217 228 230 238]/Border[0 0 0]/Dest/I4.1.1059821/LNK FmPD2
[/Rect[230 228 288 238]/Border[0 0 0]/Dest/I4.1.1059815/LNK FmPD2
[/Rect[221 218 235 228]/Border[0 0 0]/Dest/I4.1.1059845/LNK FmPD2
[/Rect[235 218 248 228]/Border[0 0 0]/Dest/I4.1.1059833/LNK FmPD2
[/Rect[248 218 288 228]/Border[0 0 0]/Dest/I4.1.1059839/LNK FmPD2
[/Rect[178 208 196 218]/Border[0 0 0]/Dest/I4.1.1058586/LNK FmPD2
[/Rect[196 208 210 218]/Border[0 0 0]/Dest/I4.1.1059851/LNK FmPD2
[/Rect[210 208 223 218]/Border[0 0 0]/Dest/I4.1.1059857/LNK FmPD2
[/Rect[223 208 288 218]/Border[0 0 0]/Dest/I4.1.1059863/LNK FmPD2
[/Rect[178 198 288 208]/Border[0 0 0]/Dest/I4.1.1058598/LNK FmPD2
[/Rect[173 188 288 198]/Border[0 0 0]/Dest/I4.1.1058592/LNK FmPD2
[/Rect[202 178 220 188]/Border[0 0 0]/Dest/I4.1.1059881/LNK FmPD2
[/Rect[220 178 288 188]/Border[0 0 0]/Dest/I4.1.1059875/LNK FmPD2
[/Rect[169 168 288 178]/Border[0 0 0]/Dest/I4.1.1059893/LNK FmPD2
[/Rect[135 158 288 168]/Border[0 0 0]/Dest/I4.1.1060055/LNK FmPD2
[/Rect[126 148 198 158]/Border[0 0 0]/Dest/I4.1.1060055/LNK FmPD2
[/Rect[198 148 288 158]/Border[0 0 0]/Dest/I4.1.1060047/LNK FmPD2
[/Rect[126 138 288 148]/Border[0 0 0]/Dest/I4.1.1060085/LNK FmPD2
[/Rect[126 126 288 138]/Border[0 0 0]/Dest/I4.1.1060099/LNK FmPD2
[/Rect[333 638 504 648]/Border[0 0 0]/Dest/I4.1.1060099/LNK FmPD2
[/Rect[333 628 504 638]/Border[0 0 0]/Dest/I5.1.891076/LNK FmPD2
[/Rect[333 618 504 628]/Border[0 0 0]/Dest/I4.1.1060115/LNK FmPD2
[/Rect[333 608 504 618]/Border[0 0 0]/Dest/I4.1.1060129/LNK FmPD2
[/Rect[376 598 504 608]/Border[0 0 0]/Dest/I4.1.1058632/LNK FmPD2
[/Rect[410 588 504 598]/Border[0 0 0]/Dest/I4.1.1058634/LNK FmPD2
[/Rect[381 578 504 588]/Border[0 0 0]/Dest/I4.1.1058542/LNK FmPD2
[/Rect[333 568 504 578]/Border[0 0 0]/Dest/I5.1.890972/LNK FmPD2
[/Rect[333 558 504 568]/Border[0 0 0]/Dest/I5.1.891118/LNK FmPD2
[/Rect[333 528 504 548]/Border[0 0 0]/Dest/I5.1.891086/LNK FmPD2
[/Rect[333 508 504 528]/Border[0 0 0]/Dest/I5.1.891144/LNK FmPD2
[/Rect[333 498 504 508]/Border[0 0 0]/Dest/I5.1.891100/LNK FmPD2
[/Rect[386 488 424 498]/Border[0 0 0]/Dest/I4.1.1059591/LNK FmPD2
[/Rect[424 488 438 498]/Border[0 0 0]/Dest/I4.1.1059603/LNK FmPD2
[/Rect[438 488 451 498]/Border[0 0 0]/Dest/I4.1.1058548/LNK FmPD2
[/Rect[451 488 464 498]/Border[0 0 0]/Dest/I4.1.1059573/LNK FmPD2
[/Rect[464 488 477 498]/Border[0 0 0]/Dest/I4.1.1061137/LNK FmPD2
[/Rect[477 488 491 498]/Border[0 0 0]/Dest/I4.1.1059579/LNK FmPD2
[/Rect[491 488 504 498]/Border[0 0 0]/Dest/I4.1.1059597/LNK FmPD2
[/Rect[333 478 383 488]/Border[0 0 0]/Dest/I4.1.1059609/LNK FmPD2
[/Rect[383 478 504 488]/Border[0 0 0]/Dest/I4.1.1059615/LNK FmPD2
[/Rect[391 468 504 478]/Border[0 0 0]/Dest/I4.1.1058636/LNK FmPD2
[/Rect[424 458 504 468]/Border[0 0 0]/Dest/I4.1.1058638/LNK FmPD2
[/Rect[391 448 504 458]/Border[0 0 0]/Dest/I4.1.1059621/LNK FmPD2
[/Rect[386 438 504 448]/Border[0 0 0]/Dest/I4.1.1059627/LNK FmPD2
[/Rect[424 428 504 438]/Border[0 0 0]/Dest/I4.1.1059633/LNK FmPD2
[/Rect[419 418 504 428]/Border[0 0 0]/Dest/I4.1.1059639/LNK FmPD2
[/Rect[424 408 504 418]/Border[0 0 0]/Dest/I4.1.1059645/LNK FmPD2
[/Rect[429 398 504 408]/Border[0 0 0]/Dest/I4.1.1059651/LNK FmPD2
[/Rect[434 388 504 398]/Border[0 0 0]/Dest/I4.1.1059657/LNK FmPD2
[/Rect[429 378 468 388]/Border[0 0 0]/Dest/I4.1.1059669/LNK FmPD2
[/Rect[468 378 504 388]/Border[0 0 0]/Dest/I4.1.1059663/LNK FmPD2
[/Rect[434 368 504 378]/Border[0 0 0]/Dest/I4.1.1059675/LNK FmPD2
[/Rect[439 358 504 368]/Border[0 0 0]/Dest/I4.1.1059681/LNK FmPD2
[/Rect[333 338 504 358]/Border[0 0 0]/Dest/I5.1.890960/LNK FmPD2
[/Rect[381 328 504 338]/Border[0 0 0]/Dest/I4.1.1058640/LNK FmPD2
[/Rect[415 318 504 328]/Border[0 0 0]/Dest/I4.1.1058642/LNK FmPD2
[/Rect[405 308 504 318]/Border[0 0 0]/Dest/I4.1.1059687/LNK FmPD2
[/Rect[410 298 504 308]/Border[0 0 0]/Dest/I4.1.1058644/LNK FmPD2
[/Rect[443 288 504 298]/Border[0 0 0]/Dest/I4.1.1062022/LNK FmPD2
[/Rect[400 278 504 288]/Border[0 0 0]/Dest/I4.1.1059693/LNK FmPD2
[/Rect[405 268 504 278]/Border[0 0 0]/Dest/I4.1.1058648/LNK FmPD2
[/Rect[439 258 504 268]/Border[0 0 0]/Dest/I4.1.1058650/LNK FmPD2
[/Rect[405 248 504 258]/Border[0 0 0]/Dest/I4.1.1059699/LNK FmPD2
[/Rect[410 238 504 248]/Border[0 0 0]/Dest/I4.1.1058652/LNK FmPD2
[/Rect[443 228 504 238]/Border[0 0 0]/Dest/I4.1.1058654/LNK FmPD2
[/Rect[410 218 504 228]/Border[0 0 0]/Dest/I4.1.1059705/LNK FmPD2
[/Rect[415 208 504 218]/Border[0 0 0]/Dest/I4.1.1058656/LNK FmPD2
[/Rect[448 198 504 208]/Border[0 0 0]/Dest/I4.1.1062299/LNK FmPD2
[/Rect[467 188 504 198]/Border[0 0 0]/Dest/I4.1.1059711/LNK FmPD2
[/Rect[333 178 383 188]/Border[0 0 0]/Dest/I4.1.1058554/LNK FmPD2
[/Rect[383 178 504 188]/Border[0 0 0]/Dest/I4.1.1059717/LNK FmPD2
[/Rect[381 168 420 178]/Border[0 0 0]/Dest/I4.1.1059723/LNK FmPD2
[/Rect[420 168 504 178]/Border[0 0 0]/Dest/I4.1.1058560/LNK FmPD2
[/Rect[381 158 420 168]/Border[0 0 0]/Dest/I4.1.1058566/LNK FmPD2
[/Rect[420 158 504 168]/Border[0 0 0]/Dest/I4.1.1059729/LNK FmPD2
[/Rect[376 148 504 158]/Border[0 0 0]/Dest/I4.1.1058572/LNK FmPD2
[/Rect[405 138 504 148]/Border[0 0 0]/Dest/I4.1.1059735/LNK FmPD2
[/Rect[400 128 504 138]/Border[0 0 0]/Dest/I4.1.1059741/LNK FmPD2
[/Title(A)/Rect[117 117 297 657]/ARTICLE FmPD2
[/Title(A)/Rect[324 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "88" 92
%%Page: "89" 93
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
108 81 540 117 R
V
1 9 Q
0 X
(89) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 8 Q
0 X
(<C-unsafe-signed int>) 108 642 T
0 9 Q
( class) 208.8 642 T
(15) 234.3 642 T
4 8 Q
(<C-unsafe-signed-char>) 108 632 T
0 9 Q
( class) 213.6 632 T
(16) 239.1 632 T
4 8 Q
(<C-unsafe-signed-long>) 108 622 T
0 9 Q
( class) 213.6 622 T
(15) 239.1 622 T
4 8 Q
(<C-unsafe-signed-short>) 108 612 T
0 9 Q
( class) 218.4 612 T
(15) 243.9 612 T
4 8 Q
(<C-unsafe-unsigned-char>) 108 602 T
0 9 Q
( class) 223.2 602 T
(16) 248.7 602 T
4 8 Q
(<C-unsafe-unsigned-int>) 108 592 T
0 9 Q
( class) 218.4 592 T
(15) 243.9 592 T
4 8 Q
(<C-unsafe-unsigned-long>) 108 582 T
0 9 Q
( class) 223.2 582 T
(15) 248.7 582 T
4 8 Q
(<C-unsafe-unsigned-short>) 108 572 T
0 9 Q
( class) 228 572 T
(14, 15) 253.5 572 T
4 8 Q
(<C-unsigned-char>) 108 562 T
0 9 Q
( class) 189.6 562 T
(16) 215.1 562 T
4 8 Q
(C-unsigned-char-at) 108 552 T
0 9 Q
( function) 194.4 552 T
(26) 234.51 552 T
4 8 Q
(C-unsigned-char-at-setter) 108 542 T
0 9 Q
( function) 228 542 T
(27) 268.11 542 T
4 8 Q
(<C-unsigned-int>) 108 532 T
0 9 Q
( class) 184.8 532 T
(15) 210.3 532 T
4 8 Q
(C-unsigned-int-at) 108 522 T
0 9 Q
( function) 189.6 522 T
(29) 229.71 522 T
4 8 Q
(C-unsigned-int-at-setter) 108 512 T
0 9 Q
( function) 223.2 512 T
(29) 263.31 512 T
4 8 Q
(<C-unsigned-long>) 108 502 T
0 9 Q
( class) 189.6 502 T
(2, 15) 215.1 502 T
4 8 Q
(C-unsigned-long-at) 108 492 T
0 9 Q
( function) 194.4 492 T
(28) 234.51 492 T
4 8 Q
(C-unsigned-long-at-setter) 108 482 T
0 9 Q
( function) 228 482 T
(28) 268.11 482 T
4 8 Q
(<C-unsigned-short>) 108 472 T
0 9 Q
( class) 194.4 472 T
(3, 14, 15) 219.9 472 T
4 8 Q
(C-unsigned-short-at) 108 462 T
0 9 Q
( function) 199.2 462 T
(27) 239.31 462 T
4 8 Q
(C-unsigned-short-at-setter) 108 452 T
0 9 Q
(function) 144 442 T
(27) 181.86 442 T
4 8 Q
(<C-value>) 108 432 T
0 9 Q
( class) 151.2 432 T
(12, 16, 17, 31) 176.7 432 T
4 8 Q
(<C-void>) 108 422 T
0 9 Q
( class) 146.4 422 T
(12) 171.9 422 T
4 8 Q
(<C-void*>) 108 412 T
0 9 Q
( class) 151.2 412 T
(19) 176.7 412 T
1 11 Q
(D) 108 390.67 T
0 9 Q
(dealing with the C function) 108 379 T
4 8 Q
(WinMain) 219.56 379 T
0 9 Q
(78) 257.66 379 T
(deallocating) 108 369 T
(C storage) 117 359 T
(58) 159.16 359 T
4 8 Q
(define C-address) 108 349 T
0 9 Q
( definition macro) 184.8 349 T
(9, 57) 257.7 349 T
4 8 Q
(define C-callable) 108 339 T
0 9 Q
( definition macro) 189.6 339 T
(45) 262.5 339 T
4 8 Q
(define C-callable-wrapper) 108 329 T
0 9 Q
( definition) 228 329 T
(macro) 144 319 T
(7, 50, 51, 54) 173.41 319 T
4 8 Q
(define C-function) 108 309 T
0 9 Q
( definition macro) 189.6 309 T
(6,) 262.5 309 T
(45, 46, 47, 50) 144 299 T
4 8 Q
(define C-mapped-subtype) 108 289 T
0 9 Q
( definition) 218.4 289 T
(macro) 144 279 T
(12, 36, 62) 173.41 279 T
4 8 Q
(define C-pointer-type) 108 269 T
0 9 Q
( definition) 208.8 269 T
(macro) 144 259 T
(11, 19) 173.41 259 T
4 8 Q
(define C-struct) 108 249 T
0 9 Q
( definition macro) 180 249 T
(3, 31,) 252.9 249 T
(40, 44) 144 239 T
4 8 Q
-0.5 (define C-subtype) 108 229 P
0 9 Q
-0.23 ( definition macro) 184.3 229 P
-0.23 (22, 33) 256.73 229 P
4 8 Q
(define C-union) 108 219 T
0 9 Q
( definition macro) 175.2 219 T
(31, 43) 248.1 219 T
4 8 Q
(define C-variable) 108 209 T
0 9 Q
( definition macro) 189.6 209 T
(8,) 262.5 209 T
(55, 56) 144 199 T
(defining) 108 189 T
(callback functions) 117 179 T
(75) 193.14 179 T
(specialized designator classes) 117 169 T
(33, 36) 239.46 169 T
(types) 117 159 T
(32) 142.97 159 T
(definition macros) 108 149 T
4 8 Q
(define C-address) 117 139 T
0 9 Q
(9, 57) 198.3 139 T
4 8 Q
(define C-callable) 117 129 T
0 9 Q
(45) 203.1 129 T
4 8 Q
(define C-callable-wrapper) 324 642 T
0 9 Q
(7, 50, 51,) 448.5 642 T
(54) 342 632 T
4 8 Q
(define C-function) 324 622 T
0 9 Q
(6, 45, 46, 47, 50) 410.1 622 T
4 8 Q
(define C-mapped-subtype) 324 612 T
0 9 Q
(12, 36, 62) 438.9 612 T
4 8 Q
(define C-pointer-type) 324 602 T
0 9 Q
(11, 19) 429.3 602 T
4 8 Q
(define C-struct) 324 592 T
0 9 Q
(3, 31, 40, 44) 400.5 592 T
4 8 Q
(define C-subtype) 324 582 T
0 9 Q
(22, 33) 405.3 582 T
4 8 Q
(define C-union) 324 572 T
0 9 Q
(31, 43) 395.7 572 T
4 8 Q
(define C-variable) 324 562 T
0 9 Q
(8, 55, 56) 410.1 562 T
(describing) 315 552 T
(C functions to Dylan) 324 542 T
(45) 410.98 542 T
(Dylan functions for use by C) 324 532 T
(50) 442.64 532 T
(structure types) 324 522 T
(40) 388.18 522 T
(union types) 324 512 T
(43) 375.66 512 T
(designator class) 315 502 T
(2, 10, 12) 382.89 502 T
(designator classes) 315 492 T
(10) 391.01 492 T
(basics) 324 482 T
(12) 352.22 482 T
(defining specialized) 324 472 T
(36) 408.47 472 T
(defining specialized versions) 324 462 T
(33) 444.08 462 T
(fundamental numeric type) 324 452 T
(13) 434.96 452 T
(pointer) 324 442 T
(17) 357.48 442 T
(utility) 324 432 T
(62) 352.66 432 T
(designator property) 315 422 T
(export-function) 324 412 T
(12) 390.63 412 T
(export-type) 324 402 T
(11) 374.92 402 T
(import-function) 324 392 T
(12) 392.24 392 T
(import-type) 324 382 T
(11) 376.53 382 T
(pointer-type) 324 372 T
(11) 378.14 372 T
(referenced-type) 324 362 T
(11) 391.24 362 T
(designator type properties) 315 352 T
(11) 424.88 352 T
4 8 Q
(destroy) 315 342 T
0 9 Q
( generic function) 348.6 342 T
(60) 420 342 T
(Dylan) 315 332 T
(C functions in) 324 322 T
(5) 384.42 322 T
(C types in) 324 312 T
(2) 368.71 312 T
(C variables in) 324 302 T
(7) 383.22 302 T
(describing C functions to) 324 292 T
(45) 428.29 292 T
(Dylan classes) 315 282 T
(mapping C types onto) 324 272 T
(73) 417.23 272 T
(Dylan functions) 315 262 T
(describing for use by C) 324 252 T
(50) 420.52 252 T
(Dylan libraries) 315 242 T
(Win32 names excluded from) 324 232 T
(81) 442.64 232 T
(Dylan slot names) 315 222 T
(mapping C structure fields onto) 324 212 T
(74) 455.82 212 T
1 11 Q
(E) 315 190.67 T
4 8 Q
(element) 315 179 T
0 9 Q
( method) 348.6 179 T
(24) 386.19 179 T
4 8 Q
(element-setter) 315 169 T
0 9 Q
( method) 382.2 169 T
(24) 419.79 169 T
4 8 Q
(ensure-no-win32-error) 315 159 T
0 9 Q
( function) 415.8 159 T
(77) 455.91 159 T
(error messages) 315 149 T
(76) 379.16 149 T
4 8 Q
(export-C-Dylan-object) 315 139 T
0 9 Q
( function) 415.8 139 T
(67) 455.91 139 T
(export-function) 315 129 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.89/DEST FmPD2
[/Rect[400 128 504 138]/Border[0 0 0]/Dest/I4.1.1059741/LNK FmPD2
[/Rect[209 638 279 648]/Border[0 0 0]/Dest/I4.1.1059747/LNK FmPD2
[/Rect[214 628 279 638]/Border[0 0 0]/Dest/I4.1.1059753/LNK FmPD2
[/Rect[214 618 279 628]/Border[0 0 0]/Dest/I4.1.1059759/LNK FmPD2
[/Rect[218 608 279 618]/Border[0 0 0]/Dest/I4.1.1059765/LNK FmPD2
[/Rect[223 598 279 608]/Border[0 0 0]/Dest/I4.1.1059771/LNK FmPD2
[/Rect[218 588 279 598]/Border[0 0 0]/Dest/I4.1.1059777/LNK FmPD2
[/Rect[223 578 279 588]/Border[0 0 0]/Dest/I4.1.1059783/LNK FmPD2
[/Rect[228 568 267 578]/Border[0 0 0]/Dest/I4.1.1059789/LNK FmPD2
[/Rect[267 568 279 578]/Border[0 0 0]/Dest/I4.1.1059795/LNK FmPD2
[/Rect[190 558 279 568]/Border[0 0 0]/Dest/I4.1.1059801/LNK FmPD2
[/Rect[194 548 279 558]/Border[0 0 0]/Dest/I4.1.1058660/LNK FmPD2
[/Rect[228 538 279 548]/Border[0 0 0]/Dest/I4.1.1058662/LNK FmPD2
[/Rect[185 528 279 538]/Border[0 0 0]/Dest/I4.1.1059807/LNK FmPD2
[/Rect[190 518 279 528]/Border[0 0 0]/Dest/I4.1.1058664/LNK FmPD2
[/Rect[223 508 279 518]/Border[0 0 0]/Dest/I4.1.1058666/LNK FmPD2
[/Rect[190 498 224 508]/Border[0 0 0]/Dest/I4.1.1059819/LNK FmPD2
[/Rect[224 498 279 508]/Border[0 0 0]/Dest/I4.1.1059813/LNK FmPD2
[/Rect[194 488 279 498]/Border[0 0 0]/Dest/I4.1.1058668/LNK FmPD2
[/Rect[228 478 279 488]/Border[0 0 0]/Dest/I4.1.1058670/LNK FmPD2
[/Rect[194 468 229 478]/Border[0 0 0]/Dest/I4.1.1059843/LNK FmPD2
[/Rect[229 468 242 478]/Border[0 0 0]/Dest/I4.1.1059831/LNK FmPD2
[/Rect[242 468 279 478]/Border[0 0 0]/Dest/I4.1.1059837/LNK FmPD2
[/Rect[199 458 279 468]/Border[0 0 0]/Dest/I4.1.1058672/LNK FmPD2
[/Rect[233 448 279 458]/Border[0 0 0]/Dest/I4.1.1058674/LNK FmPD2
[/Rect[108 438 279 448]/Border[0 0 0]/Dest/I4.1.1058674/LNK FmPD2
[/Rect[151 428 190 438]/Border[0 0 0]/Dest/I4.1.1058584/LNK FmPD2
[/Rect[190 428 204 438]/Border[0 0 0]/Dest/I4.1.1059849/LNK FmPD2
[/Rect[204 428 217 438]/Border[0 0 0]/Dest/I4.1.1059855/LNK FmPD2
[/Rect[217 428 279 438]/Border[0 0 0]/Dest/I4.1.1059861/LNK FmPD2
[/Rect[146 418 279 428]/Border[0 0 0]/Dest/I4.1.1058590/LNK FmPD2
[/Rect[151 408 279 418]/Border[0 0 0]/Dest/I4.1.1058596/LNK FmPD2
117 542/M6.8.newlink.D FmPA
[/Rect[253 375 279 385]/Border[0 0 0]/Dest/I5.1.890970/LNK FmPD2
[/Rect[108 355 279 365]/Border[0 0 0]/Dest/I4.1.1060019/LNK FmPD2
[/Rect[185 345 267 355]/Border[0 0 0]/Dest/I4.1.1059899/LNK FmPD2
[/Rect[267 345 279 355]/Border[0 0 0]/Dest/I4.1.1058676/LNK FmPD2
[/Rect[190 335 279 345]/Border[0 0 0]/Dest/I4.1.1059901/LNK FmPD2
[/Rect[228 325 279 335]/Border[0 0 0]/Dest/I4.1.1059905/LNK FmPD2
[/Rect[108 315 182 325]/Border[0 0 0]/Dest/I4.1.1059905/LNK FmPD2
[/Rect[182 315 196 325]/Border[0 0 0]/Dest/I4.1.1058678/LNK FmPD2
[/Rect[196 315 209 325]/Border[0 0 0]/Dest/I4.1.1059903/LNK FmPD2
[/Rect[209 315 279 325]/Border[0 0 0]/Dest/I4.1.1059907/LNK FmPD2
[/Rect[190 305 279 315]/Border[0 0 0]/Dest/I4.1.1059909/LNK FmPD2
[/Rect[108 295 158 305]/Border[0 0 0]/Dest/I4.1.1058680/LNK FmPD2
[/Rect[158 295 171 305]/Border[0 0 0]/Dest/I4.1.1059915/LNK FmPD2
[/Rect[171 295 185 305]/Border[0 0 0]/Dest/I4.1.1059917/LNK FmPD2
[/Rect[185 295 279 305]/Border[0 0 0]/Dest/I4.1.1059913/LNK FmPD2
[/Rect[218 285 279 295]/Border[0 0 0]/Dest/I4.1.1059919/LNK FmPD2
[/Rect[108 275 187 285]/Border[0 0 0]/Dest/I4.1.1059919/LNK FmPD2
[/Rect[187 275 200 285]/Border[0 0 0]/Dest/I4.1.1058682/LNK FmPD2
[/Rect[200 275 279 285]/Border[0 0 0]/Dest/I4.1.1059921/LNK FmPD2
[/Rect[209 265 279 275]/Border[0 0 0]/Dest/I4.1.1059923/LNK FmPD2
[/Rect[108 255 187 265]/Border[0 0 0]/Dest/I4.1.1059923/LNK FmPD2
[/Rect[187 255 279 265]/Border[0 0 0]/Dest/I4.1.1058684/LNK FmPD2
[/Rect[180 245 262 255]/Border[0 0 0]/Dest/I4.1.1059925/LNK FmPD2
[/Rect[262 245 279 255]/Border[0 0 0]/Dest/I4.1.1059929/LNK FmPD2
[/Rect[108 235 158 245]/Border[0 0 0]/Dest/I4.1.1058686/LNK FmPD2
[/Rect[158 235 279 245]/Border[0 0 0]/Dest/I4.1.1059931/LNK FmPD2
[/Rect[184 225 270 235]/Border[0 0 0]/Dest/I4.1.1061135/LNK FmPD2
[/Rect[270 225 279 235]/Border[0 0 0]/Dest/I4.1.1058688/LNK FmPD2
[/Rect[175 215 262 225]/Border[0 0 0]/Dest/I4.1.1059937/LNK FmPD2
[/Rect[262 215 279 225]/Border[0 0 0]/Dest/I4.1.1058690/LNK FmPD2
[/Rect[190 205 279 215]/Border[0 0 0]/Dest/I4.1.1059939/LNK FmPD2
[/Rect[108 195 158 205]/Border[0 0 0]/Dest/I4.1.1058692/LNK FmPD2
[/Rect[158 195 279 205]/Border[0 0 0]/Dest/I4.1.1059941/LNK FmPD2
[/Rect[108 175 279 185]/Border[0 0 0]/Dest/I5.1.890966/LNK FmPD2
[/Rect[117 165 253 175]/Border[0 0 0]/Dest/I4.1.1060001/LNK FmPD2
[/Rect[253 165 279 175]/Border[0 0 0]/Dest/I4.1.1060003/LNK FmPD2
[/Rect[108 155 279 165]/Border[0 0 0]/Dest/I4.1.1059999/LNK FmPD2
[/Rect[194 135 207 145]/Border[0 0 0]/Dest/I4.1.1058950/LNK FmPD2
[/Rect[207 135 279 145]/Border[0 0 0]/Dest/I4.1.1058476/LNK FmPD2
[/Rect[199 125 279 135]/Border[0 0 0]/Dest/I4.1.1059337/LNK FmPD2
[/Rect[444 638 457 648]/Border[0 0 0]/Dest/I4.1.1058930/LNK FmPD2
[/Rect[457 638 471 648]/Border[0 0 0]/Dest/I4.1.1058472/LNK FmPD2
[/Rect[471 638 486 648]/Border[0 0 0]/Dest/I4.1.1059399/LNK FmPD2
[/Rect[315 628 486 638]/Border[0 0 0]/Dest/I4.1.1059413/LNK FmPD2
[/Rect[406 618 419 628]/Border[0 0 0]/Dest/I4.1.1058920/LNK FmPD2
[/Rect[419 618 433 628]/Border[0 0 0]/Dest/I4.1.1058470/LNK FmPD2
[/Rect[433 618 446 628]/Border[0 0 0]/Dest/I4.1.1059341/LNK FmPD2
[/Rect[446 618 460 628]/Border[0 0 0]/Dest/I4.1.1059361/LNK FmPD2
[/Rect[460 618 486 628]/Border[0 0 0]/Dest/I4.1.1059395/LNK FmPD2
[/Rect[434 608 452 618]/Border[0 0 0]/Dest/I4.1.1058976/LNK FmPD2
[/Rect[452 608 466 618]/Border[0 0 0]/Dest/I4.1.1058462/LNK FmPD2
[/Rect[466 608 486 618]/Border[0 0 0]/Dest/I4.1.1059452/LNK FmPD2
[/Rect[425 598 443 608]/Border[0 0 0]/Dest/I4.1.1058966/LNK FmPD2
[/Rect[443 598 486 608]/Border[0 0 0]/Dest/I4.1.1058376/LNK FmPD2
[/Rect[396 588 409 598]/Border[0 0 0]/Dest/I4.1.1058888/LNK FmPD2
[/Rect[409 588 423 598]/Border[0 0 0]/Dest/I4.1.1059250/LNK FmPD2
[/Rect[423 588 436 598]/Border[0 0 0]/Dest/I4.1.1058464/LNK FmPD2
[/Rect[436 588 486 598]/Border[0 0 0]/Dest/I4.1.1059327/LNK FmPD2
[/Rect[401 578 419 588]/Border[0 0 0]/Dest/I4.1.1061134/LNK FmPD2
[/Rect[419 578 486 588]/Border[0 0 0]/Dest/I4.1.1058460/LNK FmPD2
[/Rect[391 568 409 578]/Border[0 0 0]/Dest/I4.1.1059255/LNK FmPD2
[/Rect[409 568 486 578]/Border[0 0 0]/Dest/I4.1.1058466/LNK FmPD2
[/Rect[406 558 419 568]/Border[0 0 0]/Dest/I4.1.1058943/LNK FmPD2
[/Rect[419 558 433 568]/Border[0 0 0]/Dest/I4.1.1058474/LNK FmPD2
[/Rect[433 558 486 568]/Border[0 0 0]/Dest/I4.1.1059421/LNK FmPD2
[/Rect[315 538 486 548]/Border[0 0 0]/Dest/I4.1.1060013/LNK FmPD2
[/Rect[315 528 486 538]/Border[0 0 0]/Dest/I4.1.1060015/LNK FmPD2
[/Rect[315 518 486 528]/Border[0 0 0]/Dest/I4.1.1060005/LNK FmPD2
[/Rect[315 508 486 518]/Border[0 0 0]/Dest/I4.1.1060007/LNK FmPD2
[/Rect[315 498 392 508]/Border[0 0 0]/Dest/I4.1.901452/LNK FmPD2
[/Rect[392 498 405 508]/Border[0 0 0]/Dest/I4.1.886649/LNK FmPD2
[/Rect[405 498 486 508]/Border[0 0 0]/Dest/I4.1.886669/LNK FmPD2
[/Rect[315 488 486 498]/Border[0 0 0]/Dest/I4.1.1059983/LNK FmPD2
[/Rect[315 478 486 488]/Border[0 0 0]/Dest/I4.1.1059987/LNK FmPD2
[/Rect[315 468 486 478]/Border[0 0 0]/Dest/I4.1.1060045/LNK FmPD2
[/Rect[315 458 486 468]/Border[0 0 0]/Dest/I4.1.1060053/LNK FmPD2
[/Rect[315 448 486 458]/Border[0 0 0]/Dest/I4.1.1060097/LNK FmPD2
[/Rect[315 438 486 448]/Border[0 0 0]/Dest/I4.1.1060113/LNK FmPD2
[/Rect[315 428 486 438]/Border[0 0 0]/Dest/I4.1.1060127/LNK FmPD2
[/Rect[315 408 486 418]/Border[0 0 0]/Dest/I4.1.963412/LNK FmPD2
[/Rect[315 398 486 408]/Border[0 0 0]/Dest/I4.1.886664/LNK FmPD2
[/Rect[315 388 486 398]/Border[0 0 0]/Dest/I4.1.886666/LNK FmPD2
[/Rect[315 378 486 388]/Border[0 0 0]/Dest/I4.1.886663/LNK FmPD2
[/Rect[315 368 486 378]/Border[0 0 0]/Dest/I4.1.886661/LNK FmPD2
[/Rect[315 358 486 368]/Border[0 0 0]/Dest/I4.1.963288/LNK FmPD2
[/Rect[315 348 486 358]/Border[0 0 0]/Dest/I4.1.1059985/LNK FmPD2
[/Rect[349 338 486 348]/Border[0 0 0]/Dest/I4.1.1058694/LNK FmPD2
[/Rect[315 318 486 328]/Border[0 0 0]/Dest/I4.1.1060033/LNK FmPD2
[/Rect[315 308 486 318]/Border[0 0 0]/Dest/I4.1.1060037/LNK FmPD2
[/Rect[315 298 486 308]/Border[0 0 0]/Dest/I4.1.1060041/LNK FmPD2
[/Rect[315 288 486 298]/Border[0 0 0]/Dest/I4.1.1060063/LNK FmPD2
[/Rect[315 268 486 278]/Border[0 0 0]/Dest/I5.1.891154/LNK FmPD2
[/Rect[315 248 486 258]/Border[0 0 0]/Dest/I4.1.1060157/LNK FmPD2
[/Rect[315 228 486 238]/Border[0 0 0]/Dest/I5.1.891629/LNK FmPD2
[/Rect[315 208 486 218]/Border[0 0 0]/Dest/I5.1.891158/LNK FmPD2
322 342/M6.8.newlink.E FmPA
[/Rect[349 175 486 185]/Border[0 0 0]/Dest/I4.1.1058696/LNK FmPD2
[/Rect[382 165 486 175]/Border[0 0 0]/Dest/I4.1.1058698/LNK FmPD2
[/Rect[416 155 486 165]/Border[0 0 0]/Dest/I5.1.892196/LNK FmPD2
[/Rect[315 145 486 155]/Border[0 0 0]/Dest/I5.1.890968/LNK FmPD2
[/Rect[416 135 486 145]/Border[0 0 0]/Dest/I4.1.1058700/LNK FmPD2
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "89" 93
%%Page: "90" 94
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
72 81 504 118 R
V
1 9 Q
0 X
(90) 72 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 288 648 R
7 X
V
0 F
0 X
(designator property) 135 642 T
(12) 219.23 642 T
(export-type) 126 632 T
(designator-property) 135 622 T
(11) 219.98 622 T
1 11 Q
(F) 126 600.67 T
0 9 Q
(function types) 126 589 T
(C-FFI) 135 579 T
(45) 161.92 579 T
(functions) 126 569 T
4 8 Q
(alignment-of) 135 559 T
0 9 Q
(13) 197.1 559 T
4 8 Q
(C-char-at) 135 549 T
0 9 Q
(27) 182.7 549 T
4 8 Q
(C-char-at-setter) 135 539 T
0 9 Q
(26) 216.3 539 T
4 8 Q
(C-double-at) 135 529 T
0 9 Q
(30) 192.3 529 T
4 8 Q
(C-double-at-setter) 135 519 T
0 9 Q
(30) 225.9 519 T
(C-FFI) 135 509 T
(45) 161.92 509 T
4 8 Q
(C-float-at) 135 499 T
0 9 Q
(30) 187.5 499 T
4 8 Q
(C-float-at-setter) 135 489 T
0 9 Q
(30) 221.1 489 T
4 8 Q
(check-win32-result) 135 479 T
0 9 Q
(77) 225.9 479 T
4 8 Q
(C-int-at) 135 469 T
0 9 Q
(30) 177.9 469 T
4 8 Q
(C-int-at-setter) 135 459 T
0 9 Q
(30) 211.5 459 T
4 8 Q
(C-long-at) 135 449 T
0 9 Q
(29) 182.7 449 T
4 8 Q
(C-long-at-setter) 135 439 T
0 9 Q
(29) 216.3 439 T
4 8 Q
(C-pointer-at) 135 429 T
0 9 Q
(31) 197.1 429 T
4 8 Q
(C-pointer-at-setter) 135 419 T
0 9 Q
(31) 230.7 419 T
-0.22 (creating methods from Windows alias) 135 409 P
(functions) 153 399 T
(74) 194.68 399 T
4 8 Q
(C-short-at) 135 389 T
0 9 Q
(27) 187.5 389 T
4 8 Q
(C-short-at-setter) 135 379 T
0 9 Q
(28) 221.1 379 T
4 8 Q
(C-signed-char-at) 135 369 T
0 9 Q
(27) 216.3 369 T
4 8 Q
(C-signed-char-at-setter) 135 359 T
0 9 Q
(27) 249.9 359 T
4 8 Q
(C-signed-int-at) 135 349 T
0 9 Q
(29) 211.5 349 T
4 8 Q
(C-signed-int-at-setter) 135 339 T
0 9 Q
(30) 245.1 339 T
4 8 Q
(C-signed-long-at) 135 329 T
0 9 Q
(28) 216.3 329 T
4 8 Q
(C-signed-long-at-setter) 135 319 T
0 9 Q
(29) 249.9 319 T
4 8 Q
(C-signed-short-at) 135 309 T
0 9 Q
(27) 221.1 309 T
4 8 Q
(C-signed-short-at-setter) 135 299 T
0 9 Q
(28) 254.7 299 T
4 8 Q
(C-unsigned-char-at) 135 289 T
0 9 Q
(26) 225.9 289 T
4 8 Q
(C-unsigned-char-at-setter) 135 279 T
0 9 Q
(27) 259.5 279 T
4 8 Q
(C-unsigned-int-at) 135 269 T
0 9 Q
(29) 221.1 269 T
4 8 Q
(C-unsigned-int-at-setter) 135 259 T
0 9 Q
(29) 254.7 259 T
4 8 Q
(C-unsigned-long-at) 135 249 T
0 9 Q
(28) 225.9 249 T
4 8 Q
(C-unsigned-long-at-setter) 135 239 T
0 9 Q
(28) 259.5 239 T
4 8 Q
(C-unsigned-short-at) 135 229 T
0 9 Q
(27) 230.7 229 T
4 8 Q
(C-unsigned-short-at-setter) 135 219 T
0 9 Q
(27) 264.3 219 T
(defining callback) 135 209 T
(75) 207.49 209 T
(describing Dylan functions for use by) 135 199 T
(C) 153 189 T
(50) 163.88 189 T
(describing for use by C) 135 179 T
(50) 231.52 179 T
4 8 Q
(ensure-no-win32-error) 135 169 T
0 9 Q
(77) 240.3 169 T
4 8 Q
(export-C-Dylan-object) 135 159 T
0 9 Q
(67) 240.3 159 T
4 8 Q
(import-C-Dylan-object) 135 149 T
0 9 Q
(68) 240.3 149 T
4 8 Q
(null-pointer) 135 139 T
0 9 Q
(18) 197.1 139 T
4 8 Q
(null-pointer?) 135 129 T
0 9 Q
(19) 201.9 129 T
333 126 504 648 R
7 X
V
4 8 Q
0 X
(pointer-address) 342 642 T
0 9 Q
(17) 418.5 642 T
4 8 Q
(referenced-type) 342 632 T
0 9 Q
(20) 418.5 632 T
4 8 Q
(register-C-Dylan-object) 342 622 T
0 9 Q
(66) 456.9 622 T
4 8 Q
(report-win32-error) 342 612 T
0 9 Q
(77) 432.9 612 T
4 8 Q
(size-of) 342 602 T
0 9 Q
(12) 380.1 602 T
4 8 Q
(unregister-C-Dylan-object) 342 592 T
0 9 Q
(67) 466.5 592 T
4 8 Q
(win32-error-message) 342 582 T
0 9 Q
(76) 437.7 582 T
(fundamental numeric type) 333 572 T
(13) 443.96 572 T
(fundamental numeric type designator) 333 562 T
(classes) 369 552 T
(13) 400.37 552 T
1 11 Q
(G) 333 530.67 T
0 9 Q
(generic functions) 333 519 T
4 8 Q
(destroy) 342 509 T
0 9 Q
(60) 380.1 509 T
4 8 Q
(pointer-value) 342 499 T
0 9 Q
(16, 21) 408.9 499 T
4 8 Q
(pointer-value-address) 342 489 T
0 9 Q
(23) 447.3 489 T
4 8 Q
(pointer-value-setter) 342 479 T
0 9 Q
(16, 22, 23) 442.5 479 T
1 11 Q
(H) 333 457.67 T
0 9 Q
(handling return of multiple values) 333 446 T
(75) 475.03 446 T
1 11 Q
(I) 333 424.67 T
4 8 Q
(import-C-Dylan-object) 333 413 T
0 9 Q
( function) 433.8 413 T
(68) 473.91 413 T
(import-function) 333 403 T
(designator property) 342 393 T
(12) 426.23 393 T
(import-type) 333 383 T
(designator-property) 342 373 T
(11) 426.98 373 T
(introduction to) 333 363 T
(C-FFI library) 342 353 T
(1) 398 353 T
(Win32 libraries) 342 343 T
(69) 407.18 343 T
1 11 Q
(L) 333 321.67 T
0 9 Q
(libraries) 333 310 T
(C-FFI) 342 300 T
(1) 368.92 300 T
(introduction to C-FFI) 342 290 T
(1) 431.15 290 T
(introduction to Win32 libraries) 342 280 T
(69) 469.41 280 T
(Win32 API) 342 270 T
(69) 390.08 270 T
(Win32 library mapping conventions) 342 260 T
(72) 490.36 260 T
(Win32 library naming conventions) 342 250 T
(72) 484.79 250 T
(Win32 names excluded from) 342 240 T
(81) 460.64 240 T
(Win32 names excluded from Dylan) 342 230 T
(libraries) 360 220 T
(81) 397.07 220 T
(libraries provided) 333 210 T
(list of Win32) 342 200 T
(70) 396.76 200 T
(list of Win32 libraries provided) 333 190 T
(70) 461.72 190 T
1 11 Q
(M) 333 168.67 T
4 8 Q
(<machine-word>) 333 157 T
0 9 Q
( class) 400.2 157 T
(14, 15) 425.7 157 T
(macros) 333 147 T
(C-FFI macros, basic options) 342 137 T
(9) 456.4 137 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.90/DEST FmPD2
[/Rect[126 638 288 648]/Border[0 0 0]/Dest/I4.1.1059943/LNK FmPD2
[/Rect[126 618 288 628]/Border[0 0 0]/Dest/I4.1.1059945/LNK FmPD2
132 752/M6.8.newlink.F FmPA
[/Rect[126 575 288 585]/Border[0 0 0]/Dest/I4.1.1060011/LNK FmPD2
[/Rect[193 555 288 565]/Border[0 0 0]/Dest/I4.1.1058350/LNK FmPD2
[/Rect[178 545 288 555]/Border[0 0 0]/Dest/I4.1.1058404/LNK FmPD2
[/Rect[212 535 288 545]/Border[0 0 0]/Dest/I4.1.1062081/LNK FmPD2
[/Rect[188 525 288 535]/Border[0 0 0]/Dest/I4.1.1058444/LNK FmPD2
[/Rect[221 515 288 525]/Border[0 0 0]/Dest/I4.1.1058446/LNK FmPD2
[/Rect[126 505 288 515]/Border[0 0 0]/Dest/I4.1.1060009/LNK FmPD2
[/Rect[183 495 288 505]/Border[0 0 0]/Dest/I4.1.1058448/LNK FmPD2
[/Rect[217 485 288 495]/Border[0 0 0]/Dest/I4.1.1058450/LNK FmPD2
[/Rect[221 475 288 485]/Border[0 0 0]/Dest/I5.1.892203/LNK FmPD2
[/Rect[173 465 288 475]/Border[0 0 0]/Dest/I4.1.1058440/LNK FmPD2
[/Rect[207 455 288 465]/Border[0 0 0]/Dest/I4.1.1058442/LNK FmPD2
[/Rect[178 445 288 455]/Border[0 0 0]/Dest/I4.1.1058428/LNK FmPD2
[/Rect[212 435 288 445]/Border[0 0 0]/Dest/I4.1.1058430/LNK FmPD2
[/Rect[193 425 288 435]/Border[0 0 0]/Dest/I4.1.1058452/LNK FmPD2
[/Rect[226 415 288 425]/Border[0 0 0]/Dest/I4.1.1058454/LNK FmPD2
[/Rect[126 395 288 415]/Border[0 0 0]/Dest/I5.1.891002/LNK FmPD2
[/Rect[183 385 288 395]/Border[0 0 0]/Dest/I4.1.1058416/LNK FmPD2
[/Rect[217 375 288 385]/Border[0 0 0]/Dest/I4.1.1058418/LNK FmPD2
[/Rect[212 365 288 375]/Border[0 0 0]/Dest/I4.1.1058400/LNK FmPD2
[/Rect[245 355 288 365]/Border[0 0 0]/Dest/I4.1.1062021/LNK FmPD2
[/Rect[207 345 288 355]/Border[0 0 0]/Dest/I4.1.1058436/LNK FmPD2
[/Rect[241 335 288 345]/Border[0 0 0]/Dest/I4.1.1058438/LNK FmPD2
[/Rect[212 325 288 335]/Border[0 0 0]/Dest/I4.1.1058424/LNK FmPD2
[/Rect[245 315 288 325]/Border[0 0 0]/Dest/I4.1.1058426/LNK FmPD2
[/Rect[217 305 288 315]/Border[0 0 0]/Dest/I4.1.1058412/LNK FmPD2
[/Rect[250 295 288 305]/Border[0 0 0]/Dest/I4.1.1062298/LNK FmPD2
[/Rect[221 285 288 295]/Border[0 0 0]/Dest/I4.1.1058396/LNK FmPD2
[/Rect[255 275 288 285]/Border[0 0 0]/Dest/I4.1.1058398/LNK FmPD2
[/Rect[217 265 288 275]/Border[0 0 0]/Dest/I4.1.1058432/LNK FmPD2
[/Rect[250 255 288 265]/Border[0 0 0]/Dest/I4.1.1058434/LNK FmPD2
[/Rect[221 245 288 255]/Border[0 0 0]/Dest/I4.1.1058420/LNK FmPD2
[/Rect[255 235 288 245]/Border[0 0 0]/Dest/I4.1.1058422/LNK FmPD2
[/Rect[226 225 288 235]/Border[0 0 0]/Dest/I4.1.1058408/LNK FmPD2
[/Rect[260 215 288 225]/Border[0 0 0]/Dest/I4.1.1058410/LNK FmPD2
[/Rect[126 205 288 215]/Border[0 0 0]/Dest/I5.1.891014/LNK FmPD2
[/Rect[126 185 288 205]/Border[0 0 0]/Dest/I4.1.1060067/LNK FmPD2
[/Rect[126 175 288 185]/Border[0 0 0]/Dest/I4.1.1060065/LNK FmPD2
[/Rect[236 165 288 175]/Border[0 0 0]/Dest/I5.1.892206/LNK FmPD2
[/Rect[236 155 288 165]/Border[0 0 0]/Dest/I4.1.1058498/LNK FmPD2
[/Rect[236 145 288 155]/Border[0 0 0]/Dest/I4.1.1058500/LNK FmPD2
[/Rect[193 135 288 145]/Border[0 0 0]/Dest/I4.1.1058366/LNK FmPD2
[/Rect[197 125 288 135]/Border[0 0 0]/Dest/I4.1.1058368/LNK FmPD2
[/Rect[414 638 504 648]/Border[0 0 0]/Dest/I4.1.1058362/LNK FmPD2
[/Rect[414 628 504 638]/Border[0 0 0]/Dest/I4.1.1058378/LNK FmPD2
[/Rect[452 618 504 628]/Border[0 0 0]/Dest/I4.1.1064514/LNK FmPD2
[/Rect[428 608 504 618]/Border[0 0 0]/Dest/I5.1.892200/LNK FmPD2
[/Rect[376 598 504 608]/Border[0 0 0]/Dest/I4.1.1058348/LNK FmPD2
[/Rect[462 588 504 598]/Border[0 0 0]/Dest/I4.1.1063620/LNK FmPD2
[/Rect[433 578 504 588]/Border[0 0 0]/Dest/I5.1.890896/LNK FmPD2
[/Rect[333 568 504 578]/Border[0 0 0]/Dest/I4.1.932558/LNK FmPD2
[/Rect[333 548 504 568]/Border[0 0 0]/Dest/I4.1.1059989/LNK FmPD2
342 682/M6.8.newlink.G FmPA
[/Rect[376 505 504 515]/Border[0 0 0]/Dest/I4.1.1058480/LNK FmPD2
[/Rect[404 495 422 505]/Border[0 0 0]/Dest/I4.1.1059175/LNK FmPD2
[/Rect[422 495 504 505]/Border[0 0 0]/Dest/I4.1.1058380/LNK FmPD2
[/Rect[443 485 504 495]/Border[0 0 0]/Dest/I4.1.1058384/LNK FmPD2
[/Rect[438 475 456 485]/Border[0 0 0]/Dest/I4.1.1059178/LNK FmPD2
[/Rect[456 475 469 485]/Border[0 0 0]/Dest/I4.1.1058382/LNK FmPD2
[/Rect[469 475 504 485]/Border[0 0 0]/Dest/I4.1.1061195/LNK FmPD2
342 609/M6.8.newlink.H FmPA
[/Rect[333 442 504 452]/Border[0 0 0]/Dest/I5.1.890964/LNK FmPD2
337 576/M6.8.newlink.I FmPA
[/Rect[434 409 504 419]/Border[0 0 0]/Dest/I4.1.1058702/LNK FmPD2
[/Rect[333 389 504 399]/Border[0 0 0]/Dest/I4.1.1059947/LNK FmPD2
[/Rect[333 369 504 379]/Border[0 0 0]/Dest/I4.1.1059949/LNK FmPD2
[/Rect[333 349 504 359]/Border[0 0 0]/Dest/I4.1.1059969/LNK FmPD2
[/Rect[333 339 504 349]/Border[0 0 0]/Dest/I5.1.890902/LNK FmPD2
340 473/M6.8.newlink.J FmPA
340 473/M6.8.newlink.K FmPA
340 473/M6.8.newlink.L FmPA
[/Rect[333 296 504 306]/Border[0 0 0]/Dest/I4.1.1060123/LNK FmPD2
[/Rect[333 286 504 296]/Border[0 0 0]/Dest/I4.1.1060103/LNK FmPD2
[/Rect[333 276 504 286]/Border[0 0 0]/Dest/I5.1.891042/LNK FmPD2
[/Rect[333 266 504 276]/Border[0 0 0]/Dest/I5.1.891104/LNK FmPD2
[/Rect[333 256 504 266]/Border[0 0 0]/Dest/I5.1.891084/LNK FmPD2
[/Rect[333 246 504 256]/Border[0 0 0]/Dest/I5.1.891152/LNK FmPD2
[/Rect[333 236 504 246]/Border[0 0 0]/Dest/I5.1.891628/LNK FmPD2
[/Rect[333 216 504 236]/Border[0 0 0]/Dest/I5.1.891627/LNK FmPD2
[/Rect[333 196 504 206]/Border[0 0 0]/Dest/I5.1.891849/LNK FmPD2
[/Rect[333 186 504 196]/Border[0 0 0]/Dest/I5.1.891844/LNK FmPD2
344 320/M6.8.newlink.M FmPA
[/Rect[400 153 439 163]/Border[0 0 0]/Dest/I4.1.1059879/LNK FmPD2
[/Rect[439 153 504 163]/Border[0 0 0]/Dest/I4.1.1059873/LNK FmPD2
[/Rect[333 133 504 143]/Border[0 0 0]/Dest/I4.1.1060029/LNK FmPD2
[/Title(A)/Rect[117 117 297 657]/ARTICLE FmPD2
[/Title(A)/Rect[324 117 513 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "90" 94
%%Page: "91" 95
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
108 81 540 117 R
V
1 9 Q
0 X
(91) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 F
0 X
(notes on C type macros) 117 642 T
(32) 214.63 642 T
4 8 Q
-0.27 (make subclass\050<C-pointer>\051) 108 632 P
0 9 Q
-0.12 ( method) 232.53 632 P
-0.12 (58) 270 632 P
(mapping) 108 622 T
(C structure fields onto Dylan slot) 117 612 T
(names) 135 602 T
(74) 165.31 602 T
(C types onto Dylan classes) 117 592 T
(73) 227.56 592 T
(conventions) 117 582 T
(for Win32 libraries) 126 572 T
(72) 204.89 572 T
(null value, the) 117 562 T
(72) 178.58 562 T
(messages) 108 552 T
(error) 117 542 T
(76) 141.39 542 T
(methods) 108 532 T
4 8 Q
(+) 117 522 T
0 9 Q
(7) 126.3 522 T
4 8 Q
(<) 117 512 T
0 9 Q
(25) 126.3 512 T
4 8 Q
(=) 117 502 T
0 9 Q
(25) 126.3 502 T
(creating from Windows alias) 117 492 T
(functions) 135 482 T
(74) 176.68 482 T
4 8 Q
(element) 117 472 T
0 9 Q
(24) 155.1 472 T
4 8 Q
(element-setter) 117 462 T
0 9 Q
(24) 188.7 462 T
4 8 Q
(make subclass\050<C-pointer>\051) 117 452 T
0 9 Q
(58) 246.3 452 T
(multiple values) 108 442 T
(handling return of) 117 432 T
(75) 194.89 432 T
1 11 Q
(N) 108 410.67 T
0 9 Q
(naming conventions) 108 399 T
(for Win32 libraries) 117 389 T
(72) 195.89 389 T
(simple) 117 379 T
(72) 148.22 379 T
(notes on) 108 369 T
(C type macros) 117 359 T
(32) 178.77 359 T
(translations) 117 349 T
(72) 168.18 349 T
(null value) 108 339 T
(mapping) 117 329 T
(72) 157.63 329 T
4 8 Q
(null-pointer) 108 319 T
0 9 Q
( function) 165.6 319 T
(18) 205.71 319 T
4 8 Q
(null-pointer?) 108 309 T
0 9 Q
( function) 170.4 309 T
(19) 210.51 309 T
1 11 Q
(O) 108 287.67 T
0 9 Q
(options in C-FFI macros) 108 276 T
(9) 208.1 276 T
(organization of the Win32 API libraries) 108 266 T
(71) 268.58 266 T
1 11 Q
(P) 108 244.67 T
4 8 Q
(<Point>) 108 233 T
0 9 Q
( class) 141.6 233 T
(3) 167.1 233 T
(pointer designator classes) 108 223 T
(17) 215.24 223 T
(pointer designator classes and related) 108 213 T
(functions) 144 203 T
(17) 185.68 203 T
(pointer types) 108 193 T
(4) 165.2 193 T
4 8 Q
(pointer-address) 108 183 T
0 9 Q
( function) 180 183 T
(17) 220.11 183 T
(pointer-type) 108 173 T
(designator property) 117 163 T
(11) 201.23 163 T
4 8 Q
(pointer-value) 108 153 T
0 9 Q
( generic function) 170.4 153 T
(16, 21) 241.8 153 T
4 8 Q
(pointer-value-address) 108 143 T
0 9 Q
( generic) 208.8 143 T
(function) 144 133 T
(23) 181.86 133 T
4 8 Q
(pointer-value-setter) 315 642 T
0 9 Q
( generic) 411 642 T
(function) 351 632 T
(16, 22, 23) 388.86 632 T
(properties) 315 622 T
(designator type) 324 612 T
(11) 390.8 612 T
1 11 Q
(R) 315 590.67 T
0 9 Q
(referenced-type) 315 579 T
(designator property) 324 569 T
(11) 408.23 569 T
4 8 Q
(referenced-type) 315 559 T
0 9 Q
( function) 387 559 T
(20) 427.11 559 T
4 8 Q
(register-C-Dylan-object) 315 549 T
0 9 Q
( function) 425.4 549 T
(66) 465.51 549 T
4 8 Q
(report-win32-error) 315 539 T
0 9 Q
( function) 401.4 539 T
(77) 441.51 539 T
(return of multiple values) 315 529 T
(handling) 324 519 T
(75) 364.45 519 T
1 11 Q
(S) 315 497.67 T
0 9 Q
(simple naming conventions) 315 486 T
(72) 429.57 486 T
4 8 Q
(size-of) 315 476 T
0 9 Q
( function) 348.6 476 T
(12) 388.71 476 T
(slot names) 315 466 T
(mapping C structure fields onto) 324 456 T
(74) 455.82 456 T
(specialized designator classes) 315 446 T
(defining) 324 436 T
(33, 36) 362.02 436 T
(statement macros) 315 426 T
4 8 Q
(with-c-string) 324 416 T
0 9 Q
(63) 390.9 416 T
4 8 Q
(with-stack-structure) 324 406 T
0 9 Q
(58) 424.5 406 T
(structure fields) 315 396 T
(mapping onto Dylan slot names) 324 386 T
(74) 456.05 386 T
(structure types) 315 376 T
(31) 379.18 376 T
(describing) 324 366 T
(40) 370.13 366 T
1 11 Q
(T) 315 344.67 T
0 9 Q
(terminology in C-FFI library) 315 333 T
(9) 432.41 333 T
(translations) 315 323 T
(notes on) 324 313 T
(72) 362.11 313 T
(type designator classes) 315 303 T
(fundamental numeric) 324 293 T
(13) 415.05 293 T
(type properties) 315 283 T
(designator) 324 273 T
(11) 370.89 273 T
(types) 315 263 T
(C-FFI function) 324 253 T
(45) 386.53 253 T
(defining) 324 243 T
(32) 362.02 243 T
(describing structure types) 324 233 T
(40) 432.06 233 T
(describing union types) 324 223 T
(43) 419.54 223 T
(mapping C types onto Dylan classes) 324 213 T
(73) 472.93 213 T
(structure) 324 203 T
(31) 364.45 203 T
(union) 324 193 T
(31) 351.94 193 T
1 11 Q
(U) 315 171.67 T
0 9 Q
(union types) 315 160 T
(31) 366.66 160 T
(describing) 324 150 T
(43) 370.13 150 T
4 8 Q
(unregister-C-Dylan-object) 315 140 T
0 9 Q
( function) 435 140 T
(67) 475.11 140 T
(utility designator classes) 315 130 T
(62) 417.42 130 T
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.91/DEST FmPD2
[/Rect[333 133 504 143]/Border[0 0 0]/Dest/I4.1.1060029/LNK FmPD2
[/Rect[108 638 279 648]/Border[0 0 0]/Dest/I4.1.1060109/LNK FmPD2
[/Rect[233 628 279 638]/Border[0 0 0]/Dest/I4.1.1058704/LNK FmPD2
[/Rect[108 598 279 618]/Border[0 0 0]/Dest/I5.1.890962/LNK FmPD2
[/Rect[108 588 279 598]/Border[0 0 0]/Dest/I5.1.890958/LNK FmPD2
[/Rect[108 568 279 578]/Border[0 0 0]/Dest/I5.1.891146/LNK FmPD2
[/Rect[108 558 279 568]/Border[0 0 0]/Dest/I5.1.890956/LNK FmPD2
[/Rect[108 538 279 548]/Border[0 0 0]/Dest/I5.1.891018/LNK FmPD2
[/Rect[122 518 279 528]/Border[0 0 0]/Dest/I4.1.1058936/LNK FmPD2
[/Rect[122 508 279 518]/Border[0 0 0]/Dest/I4.1.1058394/LNK FmPD2
[/Rect[122 498 279 508]/Border[0 0 0]/Dest/I4.1.1058392/LNK FmPD2
[/Rect[108 478 279 498]/Border[0 0 0]/Dest/I5.1.890996/LNK FmPD2
[/Rect[151 468 279 478]/Border[0 0 0]/Dest/I4.1.1058386/LNK FmPD2
[/Rect[184 458 279 468]/Border[0 0 0]/Dest/I4.1.1058388/LNK FmPD2
[/Rect[242 448 279 458]/Border[0 0 0]/Dest/I4.1.1058478/LNK FmPD2
[/Rect[108 428 279 438]/Border[0 0 0]/Dest/I5.1.891028/LNK FmPD2
117 562/M6.8.newlink.N FmPA
[/Rect[108 385 279 395]/Border[0 0 0]/Dest/I5.1.890952/LNK FmPD2
[/Rect[108 375 279 385]/Border[0 0 0]/Dest/I5.1.891098/LNK FmPD2
[/Rect[108 355 279 365]/Border[0 0 0]/Dest/I4.1.1059997/LNK FmPD2
[/Rect[108 345 279 355]/Border[0 0 0]/Dest/I5.1.890908/LNK FmPD2
[/Rect[108 325 279 335]/Border[0 0 0]/Dest/I5.1.891078/LNK FmPD2
[/Rect[166 315 279 325]/Border[0 0 0]/Dest/I4.1.1058706/LNK FmPD2
[/Rect[170 305 279 315]/Border[0 0 0]/Dest/I4.1.1058708/LNK FmPD2
117 439/M6.8.newlink.O FmPA
[/Rect[108 272 279 282]/Border[0 0 0]/Dest/I4.1.1060025/LNK FmPD2
[/Rect[108 262 279 272]/Border[0 0 0]/Dest/I5.1.890906/LNK FmPD2
115 396/M6.8.newlink.P FmPA
[/Rect[142 229 279 239]/Border[0 0 0]/Dest/I4.1.1059891/LNK FmPD2
[/Rect[108 219 279 229]/Border[0 0 0]/Dest/I4.1.886995/LNK FmPD2
[/Rect[108 199 279 219]/Border[0 0 0]/Dest/I4.1.1059991/LNK FmPD2
[/Rect[108 189 279 199]/Border[0 0 0]/Dest/I4.1.886511/LNK FmPD2
[/Rect[180 179 279 189]/Border[0 0 0]/Dest/I4.1.1058710/LNK FmPD2
[/Rect[108 159 279 169]/Border[0 0 0]/Dest/I4.1.1059951/LNK FmPD2
[/Rect[170 149 255 159]/Border[0 0 0]/Dest/I4.1.1059953/LNK FmPD2
[/Rect[255 149 279 159]/Border[0 0 0]/Dest/I4.1.1058712/LNK FmPD2
[/Rect[209 139 279 149]/Border[0 0 0]/Dest/I4.1.1058714/LNK FmPD2
[/Rect[108 129 279 139]/Border[0 0 0]/Dest/I4.1.1058714/LNK FmPD2
[/Rect[411 638 486 648]/Border[0 0 0]/Dest/I4.1.1059957/LNK FmPD2
[/Rect[315 628 402 638]/Border[0 0 0]/Dest/I4.1.1059957/LNK FmPD2
[/Rect[402 628 416 638]/Border[0 0 0]/Dest/I4.1.1058716/LNK FmPD2
[/Rect[416 628 486 638]/Border[0 0 0]/Dest/I4.1.1061196/LNK FmPD2
[/Rect[315 608 486 618]/Border[0 0 0]/Dest/I4.1.1060089/LNK FmPD2
323 742/M6.8.newlink.Q FmPA
323 742/M6.8.newlink.R FmPA
[/Rect[315 565 486 575]/Border[0 0 0]/Dest/I4.1.1059961/LNK FmPD2
[/Rect[387 555 486 565]/Border[0 0 0]/Dest/I4.1.1058718/LNK FmPD2
[/Rect[425 545 486 555]/Border[0 0 0]/Dest/I4.1.1064515/LNK FmPD2
[/Rect[401 535 486 545]/Border[0 0 0]/Dest/I5.1.892188/LNK FmPD2
[/Rect[315 515 486 525]/Border[0 0 0]/Dest/I5.1.891026/LNK FmPD2
322 649/M6.8.newlink.S FmPA
[/Rect[315 482 486 492]/Border[0 0 0]/Dest/I5.1.890954/LNK FmPD2
[/Rect[349 472 486 482]/Border[0 0 0]/Dest/I4.1.1058722/LNK FmPD2
[/Rect[315 452 486 462]/Border[0 0 0]/Dest/I5.1.891064/LNK FmPD2
[/Rect[324 432 376 442]/Border[0 0 0]/Dest/I4.1.1060049/LNK FmPD2
[/Rect[376 432 486 442]/Border[0 0 0]/Dest/I4.1.1060043/LNK FmPD2
[/Rect[386 412 486 422]/Border[0 0 0]/Dest/I4.1.1058490/LNK FmPD2
[/Rect[420 402 486 412]/Border[0 0 0]/Dest/I4.1.1059432/LNK FmPD2
[/Rect[315 382 486 392]/Border[0 0 0]/Dest/I5.1.891056/LNK FmPD2
[/Rect[315 372 486 382]/Border[0 0 0]/Dest/I4.1.1059993/LNK FmPD2
[/Rect[315 362 486 372]/Border[0 0 0]/Dest/I4.1.1060073/LNK FmPD2
322 496/M6.8.newlink.T FmPA
[/Rect[315 329 486 339]/Border[0 0 0]/Dest/I4.1.1059979/LNK FmPD2
[/Rect[315 309 486 319]/Border[0 0 0]/Dest/I5.1.891088/LNK FmPD2
[/Rect[315 289 486 299]/Border[0 0 0]/Dest/I4.1.1060095/LNK FmPD2
[/Rect[315 269 486 279]/Border[0 0 0]/Dest/I4.1.1060087/LNK FmPD2
[/Rect[315 249 486 259]/Border[0 0 0]/Dest/I4.1.1060091/LNK FmPD2
[/Rect[315 239 486 249]/Border[0 0 0]/Dest/I4.1.1060057/LNK FmPD2
[/Rect[315 229 486 239]/Border[0 0 0]/Dest/I4.1.1060075/LNK FmPD2
[/Rect[315 219 486 229]/Border[0 0 0]/Dest/I4.1.1060079/LNK FmPD2
[/Rect[315 209 486 219]/Border[0 0 0]/Dest/I5.1.891070/LNK FmPD2
[/Rect[315 199 486 209]/Border[0 0 0]/Dest/I4.1.1060121/LNK FmPD2
[/Rect[315 189 486 199]/Border[0 0 0]/Dest/I4.1.1060125/LNK FmPD2
324 323/M6.8.newlink.U FmPA
[/Rect[315 156 486 166]/Border[0 0 0]/Dest/I4.1.1059995/LNK FmPD2
[/Rect[315 146 486 156]/Border[0 0 0]/Dest/I4.1.1060077/LNK FmPD2
[/Rect[435 136 486 146]/Border[0 0 0]/Dest/I4.1.1063621/LNK FmPD2
[/Rect[315 126 486 136]/Border[0 0 0]/Dest/I4.1.1060021/LNK FmPD2
[/Title(A)/Rect[99 117 495 657]/ARTICLE FmPD2
FMENDPAGE
%%EndPage: "91" 95
%%Page: "92" 96
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
[ 0 0 0 0 1 1 1]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 12 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
72 81 504 118 R
V
1 9 Q
0 X
(92) 72 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 288 648 R
7 X
V
1 11 Q
0 X
(V) 126 640.67 T
0 9 Q
(values) 126 629 T
(handling return of multiple values) 135 619 T
(75) 277.03 619 T
(mapping null value) 135 609 T
(72) 217.97 609 T
1 11 Q
(W) 126 587.67 T
0 9 Q
(Win32 API libraries) 126 576 T
(69) 208.9 576 T
(content of) 135 566 T
(71) 179.23 566 T
(introduction) 135 556 T
(69) 189.39 556 T
(mapping conventions) 135 546 T
(72) 226.18 546 T
(minor details) 135 536 T
(80) 192.32 536 T
(naming conventions) 135 526 T
(72) 220.6 526 T
(organization of) 135 516 T
(71) 200.2 516 T
(Win32 names excluded from the Dylan) 126 506 T
(libraries) 162 496 T
(81) 199.07 496 T
4 8 Q
(win32-error-message) 126 486 T
0 9 Q
( function) 217.2 486 T
(76) 257.31 486 T
(Windows alias functions) 126 476 T
(creating methods from) 135 466 T
(74) 230.23 466 T
4 8 Q
(WinMain) 126 456 T
0 9 Q
( C function) 159.6 456 T
(dealing with) 135 446 T
(78) 189.84 446 T
4 8 Q
(with-c-string) 126 436 T
0 9 Q
( statement macro) 188.4 436 T
(63) 261.24 436 T
4 8 Q
(with-stack-structure) 126 426 T
0 9 Q
(61) 226.5 426 T
4 8 Q
(with-stack-structure) 126 416 T
0 9 Q
( statement) 222 416 T
(macro) 162 406 T
(58) 191.41 406 T
333 126 504 648 R
7 X
V
0 0 0 1 0 0 0 K
[/CropBox[36 72 FmDC 576 720 FmDC FmBx]/PAGE FmPD
[/Dest/P.92/DEST FmPD2
[/Dest/L.interop1IXdoc/DEST FmPD2
[/Rect[315 126 486 136]/Border[0 0 0]/Dest/I4.1.1060021/LNK FmPD2
135 792/M6.8.newlink.V FmPA
[/Rect[126 615 288 625]/Border[0 0 0]/Dest/I5.1.891030/LNK FmPD2
[/Rect[126 605 288 615]/Border[0 0 0]/Dest/I5.1.891080/LNK FmPD2
137 739/M6.8.newlink.W FmPA
[/Rect[126 572 288 582]/Border[0 0 0]/Dest/I5.1.890900/LNK FmPD2
[/Rect[126 562 288 572]/Border[0 0 0]/Dest/I5.1.891124/LNK FmPD2
[/Rect[126 552 288 562]/Border[0 0 0]/Dest/I5.1.891040/LNK FmPD2
[/Rect[126 542 288 552]/Border[0 0 0]/Dest/I5.1.891148/LNK FmPD2
[/Rect[126 532 288 542]/Border[0 0 0]/Dest/I5.1.890974/LNK FmPD2
[/Rect[126 522 288 532]/Border[0 0 0]/Dest/I5.1.891150/LNK FmPD2
[/Rect[126 512 288 522]/Border[0 0 0]/Dest/I5.1.890990/LNK FmPD2
[/Rect[126 492 288 512]/Border[0 0 0]/Dest/I5.1.891626/LNK FmPD2
[/Rect[217 482 288 492]/Border[0 0 0]/Dest/I5.1.890898/LNK FmPD2
[/Rect[126 462 288 472]/Border[0 0 0]/Dest/I5.1.890998/LNK FmPD2
[/Rect[126 442 288 452]/Border[0 0 0]/Dest/I5.1.891010/LNK FmPD2
[/Rect[188 432 288 442]/Border[0 0 0]/Dest/I4.1.1058726/LNK FmPD2
[/Rect[222 422 288 432]/Border[0 0 0]/Dest/I4.1.1058482/LNK FmPD2
[/Rect[222 412 288 422]/Border[0 0 0]/Dest/I4.1.1059963/LNK FmPD2
[/Rect[126 402 288 412]/Border[0 0 0]/Dest/I4.1.1059963/LNK FmPD2
[/Title(A)/Rect[117 117 297 657]/ARTICLE FmPD2
[/Title(A)/Rect[324 117 513 657]/ARTICLE FmPD2
[/Page 1/View[/XYZ null 109 714 FmDC exch pop null]/Title(Harlequin Dylan)/OUT FmPD
[/Page 1/View[/XYZ null 109 688 FmDC exch pop null]/Title(C FFI and Win32 Reference)/Count 3/OUT FmPD
[/Page 5/View[/XYZ null 109 730 FmDC exch pop null]/Title(The C-FFI Library)/Count 9/OUT FmPD
[/Page 5/View[/XYZ null 134 576 FmDC exch pop null]/Title(1.1 Introduction)/OUT FmPD
[/Page 5/View[/XYZ null 134 402 FmDC exch pop null]/Title(1.2 Overview)/Count -3/OUT FmPD
[/Page 6/View[/XYZ null 156 656 FmDC exch pop null]/Title(1.2.1 C types in Dylan)/OUT FmPD
[/Page 9/View[/XYZ null 138 416 FmDC exch pop null]/Title(1.2.2 C functions in Dylan)/OUT FmPD
[/Page 11/View[/XYZ null 138 322 FmDC exch pop null]/Title(1.2.3 C variables in Dylan)/OUT FmPD
[/Page 13/View[/XYZ null 134 640 FmDC exch pop null]/Title(1.3 Terminology)/OUT FmPD
[/Page 13/View[/XYZ null 134 430 FmDC exch pop null]/Title(1.4 Basic options in C-FFI macros)/OUT FmPD
[/Page 14/View[/XYZ null 152 684 FmDC exch pop null]/Title(1.5 Designator classes)/Count -62/OUT FmPD
[/Page 15/View[/XYZ null 138 656 FmDC exch pop null]/Title(1.5.1 Designator type properties)/OUT FmPD
[/Page 16/View[/XYZ null 156 670 FmDC exch pop null]/Title(1.5.2 Designator class basics)/OUT FmPD
[/Page 16/View[/XYZ null 126 623 FmDC exch pop null]/Title(<C-value>)/OUT FmPD
[/Page 16/View[/XYZ null 126 508 FmDC exch pop null]/Title(<C-void>)/OUT FmPD
[/Page 16/View[/XYZ null 126 360 FmDC exch pop null]/Title(size-of)/OUT FmPD
[/Page 17/View[/XYZ null 108 571 FmDC exch pop null]/Title(alignment-of)/OUT FmPD
[/Page 17/View[/XYZ null 138 346 FmDC exch pop null]/Title(1.5.3 Fundamental numeric type designator classes)/OUT FmPD
[/Page 20/View[/XYZ null 126 438 FmDC exch pop null]/Title(<C-number>)/OUT FmPD
[/Page 20/View[/XYZ null 126 351 FmDC exch pop null]/Title(<C-float>)/OUT FmPD
[/Page 21/View[/XYZ null 108 792 FmDC exch pop null]/Title(<C-double>)/OUT FmPD
[/Page 21/View[/XYZ null 138 733 FmDC exch pop null]/Title(1.5.4 Pointer designator classes and related funct...)/OUT FmPD
[/Page 21/View[/XYZ null 108 562 FmDC exch pop null]/Title(<C-pointer>)/OUT FmPD
[/Page 21/View[/XYZ null 108 419 FmDC exch pop null]/Title(pointer-address)/OUT FmPD
[/Page 22/View[/XYZ null 126 731 FmDC exch pop null]/Title(pointer-cast)/OUT FmPD
[/Page 22/View[/XYZ null 126 514 FmDC exch pop null]/Title(null-pointer)/OUT FmPD
[/Page 23/View[/XYZ null 108 792 FmDC exch pop null]/Title(null-pointer?)/OUT FmPD
[/Page 23/View[/XYZ null 108 608 FmDC exch pop null]/Title(<C-void*>)/OUT FmPD
[/Page 23/View[/XYZ null 108 507 FmDC exch pop null]/Title(<C-statically-typed-pointer>)/OUT FmPD
[/Page 23/View[/XYZ null 108 421 FmDC exch pop null]/Title(define C-pointer-type)/OUT FmPD
[/Page 24/View[/XYZ null 126 675 FmDC exch pop null]/Title(referenced-type)/Count -1/OUT FmPD
[/Page 24/View[/XYZ null 126 418 FmDC exch pop null]/Title(c-type-cast)/OUT FmPD
[/Page 26/View[/XYZ null 126 670 FmDC exch pop null]/Title(pointer-value)/OUT FmPD
[/Page 26/View[/XYZ null 126 328 FmDC exch pop null]/Title(pointer-value-setter)/OUT FmPD
[/Page 27/View[/XYZ null 108 523 FmDC exch pop null]/Title(pointer-value-address)/OUT FmPD
[/Page 28/View[/XYZ null 126 727 FmDC exch pop null]/Title(element)/OUT FmPD
[/Page 28/View[/XYZ null 126 469 FmDC exch pop null]/Title(element-setter)/OUT FmPD
[/Page 29/View[/XYZ null 108 738 FmDC exch pop null]/Title(=)/OUT FmPD
[/Page 29/View[/XYZ null 108 413 FmDC exch pop null]/Title(<)/OUT FmPD
[/Page 30/View[/XYZ null 126 537 FmDC exch pop null]/Title(C-char-at)/OUT FmPD
[/Page 30/View[/XYZ null 126 455 FmDC exch pop null]/Title(C-char-at-setter)/OUT FmPD
[/Page 30/View[/XYZ null 126 373 FmDC exch pop null]/Title(C-signed-char-at)/OUT FmPD
[/Page 31/View[/XYZ null 108 792 FmDC exch pop null]/Title(C-signed-char-at-setter)/OUT FmPD
[/Page 31/View[/XYZ null 108 699 FmDC exch pop null]/Title(C-unsigned-char-at)/OUT FmPD
[/Page 31/View[/XYZ null 108 617 FmDC exch pop null]/Title(C-unsigned-char-at-setter)/OUT FmPD
[/Page 31/View[/XYZ null 108 535 FmDC exch pop null]/Title(C-unsigned-short-at)/OUT FmPD
[/Page 31/View[/XYZ null 108 453 FmDC exch pop null]/Title(C-unsigned-short-at-setter)/OUT FmPD
[/Page 31/View[/XYZ null 108 371 FmDC exch pop null]/Title(C-signed-short-at)/OUT FmPD
[/Page 32/View[/XYZ null 126 792 FmDC exch pop null]/Title(C-signed-short-at-setter)/OUT FmPD
[/Page 32/View[/XYZ null 126 710 FmDC exch pop null]/Title(C-short-at)/OUT FmPD
[/Page 32/View[/XYZ null 126 628 FmDC exch pop null]/Title(C-short-at-setter)/OUT FmPD
[/Page 32/View[/XYZ null 126 546 FmDC exch pop null]/Title(C-unsigned-long-at)/OUT FmPD
[/Page 32/View[/XYZ null 126 464 FmDC exch pop null]/Title(C-unsigned-long-at-setter)/OUT FmPD
[/Page 32/View[/XYZ null 126 382 FmDC exch pop null]/Title(C-signed-long-at)/OUT FmPD
[/Page 33/View[/XYZ null 108 792 FmDC exch pop null]/Title(C-signed-long-at-setter)/OUT FmPD
[/Page 33/View[/XYZ null 108 710 FmDC exch pop null]/Title(C-long-at)/OUT FmPD
[/Page 33/View[/XYZ null 108 628 FmDC exch pop null]/Title(C-long-at-setter)/OUT FmPD
[/Page 33/View[/XYZ null 108 546 FmDC exch pop null]/Title(C-unsigned-int-at)/OUT FmPD
[/Page 33/View[/XYZ null 108 454 FmDC exch pop null]/Title(C-unsigned-int-at-setter)/OUT FmPD
[/Page 33/View[/XYZ null 108 372 FmDC exch pop null]/Title(C-signed-int-at)/OUT FmPD
[/Page 34/View[/XYZ null 126 792 FmDC exch pop null]/Title(C-signed-int-at-setter)/OUT FmPD
[/Page 34/View[/XYZ null 126 710 FmDC exch pop null]/Title(C-int-at)/OUT FmPD
[/Page 34/View[/XYZ null 126 638 FmDC exch pop null]/Title(C-int-at-setter)/OUT FmPD
[/Page 34/View[/XYZ null 126 556 FmDC exch pop null]/Title(C-double-at)/OUT FmPD
[/Page 34/View[/XYZ null 126 484 FmDC exch pop null]/Title(C-double-at-setter)/OUT FmPD
[/Page 34/View[/XYZ null 126 402 FmDC exch pop null]/Title(C-float-at)/OUT FmPD
[/Page 34/View[/XYZ null 126 330 FmDC exch pop null]/Title(C-float-at-setter)/OUT FmPD
[/Page 35/View[/XYZ null 108 792 FmDC exch pop null]/Title(C-pointer-at)/OUT FmPD
[/Page 35/View[/XYZ null 108 720 FmDC exch pop null]/Title(C-pointer-at-setter)/OUT FmPD
[/Page 35/View[/XYZ null 138 652 FmDC exch pop null]/Title(1.5.5 Structure types)/OUT FmPD
[/Page 35/View[/XYZ null 108 605 FmDC exch pop null]/Title(<C-struct>)/OUT FmPD
[/Page 35/View[/XYZ null 138 442 FmDC exch pop null]/Title(1.5.6 Union types)/OUT FmPD
[/Page 35/View[/XYZ null 108 395 FmDC exch pop null]/Title(<C-union>)/OUT FmPD
[/Page 36/View[/XYZ null 156 792 FmDC exch pop null]/Title(1.5.7 Notes on C type macros)/OUT FmPD
[/Page 36/View[/XYZ null 152 400 FmDC exch pop null]/Title(1.6 Defining types)/Count -8/OUT FmPD
[/Page 37/View[/XYZ null 138 792 FmDC exch pop null]/Title(1.6.1 Defining specialized versions of designator ...)/OUT FmPD
[/Page 37/View[/XYZ null 108 745 FmDC exch pop null]/Title(define C-subtype)/OUT FmPD
[/Page 40/View[/XYZ null 156 792 FmDC exch pop null]/Title(1.6.2 Defining specialized designator classes)/OUT FmPD
[/Page 40/View[/XYZ null 126 745 FmDC exch pop null]/Title(define C-mapped-subtype)/OUT FmPD
[/Page 44/View[/XYZ null 156 675 FmDC exch pop null]/Title(1.6.3 Describing structure types)/OUT FmPD
[/Page 44/View[/XYZ null 126 628 FmDC exch pop null]/Title(define C-struct)/OUT FmPD
[/Page 47/View[/XYZ null 138 495 FmDC exch pop null]/Title(1.6.4 Describing union types)/OUT FmPD
[/Page 47/View[/XYZ null 108 448 FmDC exch pop null]/Title(define C-union)/OUT FmPD
[/Page 49/View[/XYZ null 134 681 FmDC exch pop null]/Title(1.7 Functions)/Count -9/OUT FmPD
[/Page 49/View[/XYZ null 138 611 FmDC exch pop null]/Title(1.7.1 Function types)/OUT FmPD
[/Page 49/View[/XYZ null 108 530 FmDC exch pop null]/Title(<C-function-pointer>)/OUT FmPD
[/Page 49/View[/XYZ null 138 443 FmDC exch pop null]/Title(1.7.2 Describing C functions to Dylan)/OUT FmPD
[/Page 49/View[/XYZ null 108 396 FmDC exch pop null]/Title(define C-function)/OUT FmPD
[/Page 54/View[/XYZ null 156 401 FmDC exch pop null]/Title(1.7.3 Describing Dylan functions for use by C)/OUT FmPD
[/Page 54/View[/XYZ null 126 354 FmDC exch pop null]/Title(define C-callable-wrapper)/OUT FmPD
[/Page 59/View[/XYZ null 138 378 FmDC exch pop null]/Title(1.7.4 Variables)/OUT FmPD
[/Page 59/View[/XYZ null 108 311 FmDC exch pop null]/Title(define C-variable)/OUT FmPD
[/Page 61/View[/XYZ null 108 457 FmDC exch pop null]/Title(define C-address)/OUT FmPD
[/Page 62/View[/XYZ null 152 510 FmDC exch pop null]/Title(1.8 Allocating and deallocating C storage)/Count -3/OUT FmPD
[/Page 62/View[/XYZ null 126 378 FmDC exch pop null]/Title(make subclass\(<C-pointer>\))/OUT FmPD
[/Page 64/View[/XYZ null 126 422 FmDC exch pop null]/Title(destroy)/OUT FmPD
[/Page 65/View[/XYZ null 108 587 FmDC exch pop null]/Title(with-stack-structure)/OUT FmPD
[/Page 66/View[/XYZ null 152 462 FmDC exch pop null]/Title(1.9 Utility designator classes)/Count -13/OUT FmPD
[/Page 66/View[/XYZ null 126 378 FmDC exch pop null]/Title(<C-boolean>)/OUT FmPD
[/Page 67/View[/XYZ null 108 792 FmDC exch pop null]/Title(<C-string>)/OUT FmPD
[/Page 67/View[/XYZ null 108 573 FmDC exch pop null]/Title(<C-character>)/OUT FmPD
[/Page 67/View[/XYZ null 108 473 FmDC exch pop null]/Title(with-c-string)/OUT FmPD
[/Page 68/View[/XYZ null 126 656 FmDC exch pop null]/Title(clear-memory!)/OUT FmPD
[/Page 68/View[/XYZ null 126 411 FmDC exch pop null]/Title(copy-bytes!)/OUT FmPD
[/Page 69/View[/XYZ null 108 676 FmDC exch pop null]/Title(copy-into!)/OUT FmPD
[/Page 69/View[/XYZ null 108 391 FmDC exch pop null]/Title(equal-memory?)/OUT FmPD
[/Page 70/View[/XYZ null 126 656 FmDC exch pop null]/Title(<C-Dylan-object>)/OUT FmPD
[/Page 70/View[/XYZ null 126 424 FmDC exch pop null]/Title(register-C-Dylan-object)/OUT FmPD
[/Page 71/View[/XYZ null 108 676 FmDC exch pop null]/Title(unregister-C-Dylan-object)/OUT FmPD
[/Page 71/View[/XYZ null 108 408 FmDC exch pop null]/Title(export-C-Dylan-object)/OUT FmPD
[/Page 72/View[/XYZ null 126 745 FmDC exch pop null]/Title(import-C-Dylan-object)/OUT FmPD
[/Page 73/View[/XYZ null 109 730 FmDC exch pop null]/Title(2 The Harlequin Dylan Win32 API Libraries)/Count 11/OUT FmPD
[/Page 73/View[/XYZ null 134 576 FmDC exch pop null]/Title(2.1 Introduction)/OUT FmPD
[/Page 74/View[/XYZ null 152 746 FmDC exch pop null]/Title(2.2 Supported Win32 libraries)/OUT FmPD
[/Page 75/View[/XYZ null 134 454 FmDC exch pop null]/Title(2.3 Content and organization of the Win32 API libr...)/Count -1/OUT FmPD
[/Page 76/View[/XYZ null 156 792 FmDC exch pop null]/Title(2.3.1 Notes on the translations)/OUT FmPD
[/Page 76/View[/XYZ null 152 601 FmDC exch pop null]/Title(2.4 Naming and mapping conventions)/Count -6/OUT FmPD
[/Page 76/View[/XYZ null 156 517 FmDC exch pop null]/Title(2.4.1 Simple naming conventions)/OUT FmPD
[/Page 76/View[/XYZ null 156 334 FmDC exch pop null]/Title(2.4.2 Mapping the null value)/OUT FmPD
[/Page 77/View[/XYZ null 138 704 FmDC exch pop null]/Title(2.4.3 Mapping C types onto Dylan classes)/OUT FmPD
[/Page 78/View[/XYZ null 156 484 FmDC exch pop null]/Title(2.4.4 Creating methods from Windows alias function...)/OUT FmPD
[/Page 78/View[/XYZ null 156 347 FmDC exch pop null]/Title(2.4.5 Mapping C structure fields onto Dylan slot n...)/OUT FmPD
[/Page 79/View[/XYZ null 138 658 FmDC exch pop null]/Title(2.4.6 Handling return of multiple values)/OUT FmPD
[/Page 79/View[/XYZ null 134 429 FmDC exch pop null]/Title(2.5 Defining callback functions)/OUT FmPD
[/Page 80/View[/XYZ null 152 479 FmDC exch pop null]/Title(2.6 Error messages)/Count -4/OUT FmPD
[/Page 80/View[/XYZ null 126 421 FmDC exch pop null]/Title(win32-error-message)/OUT FmPD
[/Page 81/View[/XYZ null 108 761 FmDC exch pop null]/Title(report-win32-error)/OUT FmPD
[/Page 81/View[/XYZ null 108 630 FmDC exch pop null]/Title(check-win32-result)/OUT FmPD
[/Page 81/View[/XYZ null 108 508 FmDC exch pop null]/Title(ensure-no-win32-error)/OUT FmPD
[/Page 81/View[/XYZ null 134 421 FmDC exch pop null]/Title(2.7 Handling Dylan conditions in a Win32 applicati...)/Count -1/OUT FmPD
[/Page 81/View[/XYZ null 108 335 FmDC exch pop null]/Title(win32-last-handler)/OUT FmPD
[/Page 82/View[/XYZ null 152 499 FmDC exch pop null]/Title(2.8 Dealing with the C function WinMain)/OUT FmPD
[/Page 83/View[/XYZ null 134 405 FmDC exch pop null]/Title(2.9 Combining bit mask constants)/OUT FmPD
[/Page 84/View[/XYZ null 159 562 FmDC exch pop null]/Title(2.10 Other minor details)/OUT FmPD
[/Page 85/View[/XYZ null 140 546 FmDC exch pop null]/Title(2.11 Index of Win32 names excluded from the Dylan ...)/Count -20/OUT FmPD
[/Page 86/View[/XYZ null 162 792 FmDC exch pop null]/Title(2.11.1 Characters)/OUT FmPD
[/Page 86/View[/XYZ null 162 695 FmDC exch pop null]/Title(2.11.2 A)/OUT FmPD
[/Page 86/View[/XYZ null 162 587 FmDC exch pop null]/Title(2.11.3 B)/OUT FmPD
[/Page 86/View[/XYZ null 162 490 FmDC exch pop null]/Title(2.11.4 C)/OUT FmPD
[/Page 86/View[/XYZ null 162 393 FmDC exch pop null]/Title(2.11.5 D)/OUT FmPD
[/Page 87/View[/XYZ null 144 792 FmDC exch pop null]/Title(2.11.6 E)/OUT FmPD
[/Page 87/View[/XYZ null 144 706 FmDC exch pop null]/Title(2.11.7 F)/OUT FmPD
[/Page 87/View[/XYZ null 144 609 FmDC exch pop null]/Title(2.11.8 G)/OUT FmPD
[/Page 87/View[/XYZ null 144 347 FmDC exch pop null]/Title(2.11.9 H)/OUT FmPD
[/Page 88/View[/XYZ null 167 792 FmDC exch pop null]/Title(2.11.10 L)/OUT FmPD
[/Page 88/View[/XYZ null 167 695 FmDC exch pop null]/Title(2.11.11 M)/OUT FmPD
[/Page 88/View[/XYZ null 167 609 FmDC exch pop null]/Title(2.11.12 N)/OUT FmPD
[/Page 88/View[/XYZ null 167 523 FmDC exch pop null]/Title(2.11.13 O)/OUT FmPD
[/Page 88/View[/XYZ null 167 426 FmDC exch pop null]/Title(2.11.14 P)/OUT FmPD
[/Page 88/View[/XYZ null 167 329 FmDC exch pop null]/Title(2.11.15 R)/OUT FmPD
[/Page 89/View[/XYZ null 149 752 FmDC exch pop null]/Title(2.11.16 S)/OUT FmPD
[/Page 89/View[/XYZ null 149 578 FmDC exch pop null]/Title(2.11.17 U)/OUT FmPD
[/Page 89/View[/XYZ null 149 492 FmDC exch pop null]/Title(2.11.18 V)/OUT FmPD
[/Page 89/View[/XYZ null 149 406 FmDC exch pop null]/Title(2.11.19 W)/OUT FmPD
[/Page 90/View[/XYZ null 167 792 FmDC exch pop null]/Title(2.11.20 Y)/OUT FmPD
[/Page 91/View[/XYZ null 107 737 FmDC exch pop null]/Title(Index)/OUT FmPD
FMENDPAGE
%%EndPage: "92" 96
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 96
%%DocumentFonts: Palatino-Roman
%%+ Palatino-Bold
%%+ Palatino-Italic
%%+ Helvetica-Narrow-Bold
%%+ Courier-Bold
%%+ Courier-BoldOblique
%%+ Helvetica-Narrow
%%+ Palatino-BoldItalic
%%EOF
