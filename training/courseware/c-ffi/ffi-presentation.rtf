{\rtf1\ansi \deff7\deflang1033{\fonttbl{\f1\froman\fcharset2\fprq2 Symbol;}{\f4\froman\fcharset0\fprq2 Times New Roman;}{\f5\fswiss\fcharset0\fprq2 Arial;}{\f7\fswiss\fcharset0\fprq2 MS Sans Serif;}
{\f11\fmodern\fcharset0\fprq1 Courier New;}{\f29\fswiss\fcharset0\fprq2 Arial Black;}{\f49\fswiss\fcharset0\fprq2 Tahoma;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;
\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\widctlpar \f7\fs20 \snext0 Normal;}{\s1\qr\keepn\widctlpar \b\shad\f5\fs32\lang2057 \sbasedon0\snext0 heading 1;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \cbpat9 \f49\fs20 \sbasedon0\snext15 Document Map;}{
\s16\widctlpar\tqc\tx4320\tqr\tx8640 \f7\fs20 \sbasedon0\snext16 footer;}{\*\cs17 \additive\sbasedon10 page number;}{\s18\widctlpar\tqc\tx4320\tqr\tx8640 \f7\fs20 \sbasedon0\snext18 header;}{\s19\li720\widctlpar \f5\fs32\lang2057 \sbasedon0\snext19 
Body Text 2;}{\*\cs20 \additive\b\f5\fs40\ulnone\lang2057\nosupersub \sbasedon10 Slide Title;}{\s21\widctlpar \f5\fs36\lang2057 \sbasedon0\snext21 Slide Body;}}{\info{\title C Types in Dylan}{\author Keith Playford}{\operator Hugh George Greene}
{\creatim\yr1998\mo10\dy15\hr21\min42}{\revtim\yr1998\mo10\dy16\hr12\min8}{\version3}{\edmins0}{\nofpages30}{\nofwords2112}{\nofchars12042}{\*\company  }{\vern57431}}\paperw15840\paperh12240\margl1440\margr1440\margt900 
\widowctrl\ftnbj\aendnotes\aftnstart0\hyphhotz0\aftnnar\hyphcaps0 \fet0\sectd \lndscpsxn\psz1\linex0\headery709\footery709\colsx709\vertalc\endnhere {\footer \pard\plain \s16\qc\ri360\widctlpar\tqc\tx4320\tqr\tx8640 \f7\fs20 {\i\shad\lang2057 
An Introduction to the Dylan C FFI: Slide }{\field{\*\fldinst {\cs17\i\shad  PAGE }}{\fldrslt {\cs17\i\shad\lang1024 2}}}{\cs17\i\shad  of 29
\par }{\i\shad\lang1024 
\par }\pard \s16\qc\ri360\widctlpar\tqc\tx4320\tqr\tx8640\pvpara\posnegx-1729\posnegy-2065\absh5001\absw3301\dxfrtext180\dfrmtxtx180\dfrmtxty0 {\i\shad\lang1024 {\pict\wmetafile8\picw5823\pich8821\picwgoal3301\pichgoal5001 
0100090000034c54000000002854000000000400000003010800050000000b0200000000050000000c02fa00a5000500000007010400000028540000430f2000cc000000fa00a50000000000fa00a5000000000028000000a5000000fa000000010008000000000010a40000120b0000120b0000ff000000ff000000000000
0080000000ff00000000002a0055002a00aa002a00ff002a000000550055005500aa005500ff00550000007f0055007f00aa007f00ff007f0000008000800080000000aa005500aa00aa00aa00ff00aa000000d4005500d400aa00d400ff00d4000000ff005500ff00aa00ff00ff00ff00001f2a00551f2a00aa1f2a00ff1f
2a00001f5500551f5500aa1f5500ff1f5500001f7f00551f7f00aa1f7f00ff1f7f00001faa00551faa00aa1faa00ff1faa00001fd400551fd400aa1fd400ff1fd400001fff00551fff00aa1fff00ff1fff00003f2a00553f2a00aa3f2a00ff3f2a00003f5500553f5500aa3f5500ff3f5500003f7f00553f7f00aa3f7f00ff
3f7f00003faa00553faa00aa3faa00ff3faa00003fd400553fd400aa3fd400ff3fd400003fff00553fff00aa3fff00ff3fff00005f2a00555f2a00aa5f2a00ff5f2a00005f5500555f5500aa5f5500ff5f5500005f7f00555f7f00aa5f7f00ff5f7f00005faa00555faa00aa5faa00ff5faa00005fd400555fd400aa5fd400
ff5fd400005fff00555fff00aa5fff00ff5fff00007f0000557f0000aa7f0000ff7f0000007f2a00557f2a00aa7f2a00ff7f2a00007f5500557f5500aa7f5500ff7f5500007f7f00557f7f00aa7f7f00ff7f7f00007faa00557faa00aa7faa00ff7faa00007fd400557fd400aa7fd400ff7fd400007fff00557fff00aa7fff
00ff7fff0000800000808000000080800080808000009f0000559f0000aa9f0000ff9f0000009f2a00559f2a00aa9f2a00ff9f2a00009f5500559f5500aa9f5500ff9f5500009f7f00559f7f00aa9f7f00ff9f7f00009faa00559faa00aa9faa00ff9faa00009fd400559fd400aa9fd400ff9fd400009fff00559fff00aa9f
ff00ff9fff00a4a0a00000bf000055bf0000aabf0000ffbf000000bf2a0055bf2a00aabf2a00ffbf2a0000bf550055bf5500aabf5500ffbf550000bf7f0055bf7f00aabf7f00ffbf7f0000bfaa0055bfaa00aabfaa00ffbfaa0000bfd40055bfd400aabfd400ffbfd40000bfff0055bfff00aabfff00ffbfff00f0caa600ff
cccc00ffccff00c0dcc00000df000055df0000aadf0000ffdf000000df2a0055df2a00aadf2a00ffdf2a0000df550055df5500aadf5500ffdf550000df7f0055df7f00aadf7f00ffdf7f0000dfaa0055dfaa00aadfaa00ffdfaa0000dfd40055dfd400aadfd400ffdfd40000dfff0055dfff00aadfff00ffdfff00f0fbff00
00ff000055ff0000aaff0000ffff000000ff2a0055ff2a00aaff2a00ffff2a00ffff330000ff550055ff5500aaff5500ffff5500ffff660000ff7f0055ff7f00aaff7f00ffff7f00ffff990000ffaa0055ffaa00aaffaa00ffffaa00ffffcc0000ffd40055ffd400aaffd400ffffd40000ffff0055ffff00aaffff00ffffff
00fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe00
0000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefefefefefefefefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefefedefefefefefefedefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefedefefefefefedefedefefefefefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefedefefedefedefefedefedefedefedefededefedefeddfedefefedefefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefedefedefedefefefefeddfedddeddfeddfeddfeddfedddeddfedefededddefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefedefefefede
fefefeddfedefedddefedededededededededededededededededdded9dedddededdfeddfefefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefedefefefefedefedefedddeded9dededdded9dededddeded9dedddededddedededededed9dededededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefedefefefedefefefefedefaddfedddededed9dedededededededddededddededededddededededdded9dededddededddedededdfedefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefededdfefedefededddededededd
dededededddeddded9deded9dedededddededededddddededededdd9ded9dededed9dedededdfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefe000000fefefefedefedefefedefefedefefefededdded9dedddeded9dededddeddded9dedddddedddededddddedddddedddededededdddd9ded9ddded9dddeded9dedededdfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefededefefedefedefedefeddfededddededededededddededed9dedddedddedddededddeddd9dededddededddedddedddededededdd9dedddddedddddeded9dededefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000defefefedefefedefededddefededddededddededddededddedddeded9de
dddec1d9ded9dddedddddedddddedddededddedddeddded9dec1d9dec1ded9ddd9dedddededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefe000000fedefedefedefededdfedededddededed9dededdded9dededdded9dddeddc1dedddedddeddc1deddd9deded9deddc1dededddededddeddddddd9ddd9dddeddded9ded9dedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dedededededededddedededededededddededddedddddec1dddedddeddded9ddd9ddd9dcd9ddd9dcdedddddddedddedddddededddeddc1ddc1ddc1ddddc1dddddedddddededefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dedededededededededededdded9dededdddded9dededddddec1ddddc1dddddeddde
dddddddedddddddedcdedddddedddec1dddedddeddd9ddd9ddc1ddddc1ddc1d9dedddededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefe000000fededededededededededededededddededddeddddd9ded9dddddedddddec1ddc1ddc1dec1ddc1dec1ddd9dddec1dddeddded9dedddedddec1ddddd9c1c0ddddddddddc1dddddefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000deded9ded9dededededddedddedddeddc1deddd9deddddddded9c1ddddc1dddddddddddddddddddddddddedddddddedddedddedddedddeddddddc1c0ddc1ddc1ddc1ddddd9dcdededefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000ded9dedededededddedededddeddded9dedddddeddc1deddc1ddddddc1ddddddc1ddddc1dddd
c1ddddc1ddddc1deddc1dddedddec1dedddeddc1ddddc1c0c1c0ddddddc1dddddedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
000000dededef9ded9dedededddededddedddedddec1ddd9ddc1ddddddc1ddddddc1ddddc1ddddc1ddddc1ddddc1ddddddddddded9dedddddedddeddddc1c0c1d9ddc1c0c1ddddc1ddc1dddededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000ded9ded9dededddedededddedddedddedddddddedddeddc1ddddddc1ddddddc1ddddc1ddddc1ddddc1ddddc1ddc1deddddddd9dedddec1dddeddddddddc1c0c0c1c0c1d9ddddddc1dededefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000def9dedec1deded9dec1deddc1dedddddddeddc1ddc1ddddddc1ddddd9c1ddddddc1ddddc1ddddc1dddd
c1ddddddddc1dedddeddd9dedddeddc1ddc1c0c0c1c0c1c0c0c0c1c0c1dddddededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000de
d9dec1ded9f9dddedddedddddddedddec1ddddddddddddc1ddddc1ddddddddc1ddc0c1ddddc1ddddc1ddddc1ddc1ddddddc1dedddedddedddeddddd9dcd9c0c1c0c1c1c0c1ddddc1dcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9dec1d9dec1ded9dedddededddec1ddd9dddddec1ddc1ddddc1ddddc1ddc1ddddc1ddddc1ddc0c1ddddc1ddddddddddc1ddd9dddeddd9deddd9dedcddc0dcd9c0c1c0c0c1c0c1c0dddddcdededefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fededec1dec1dec1dec1dddec1dddedddeddc1ddddddddc1ddddc1ddddddddc1ddddc1c0ddc1ddddc1c0ddc1ddc1
dddddddedddcd9dedddededdddddc1ddc1c0c1c0c1c0d9bcc0c1dddcdddcdefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dec1dedec1
dec1ded9dddedddddddddddcddddddc1ddc1ddddc1ddc0c1ddc1c0ddc1c0d9c1c0ddc1ddddc1c0c1ddddc1ddddc1dddeddddd9dddededdddddc0c0dcc0c0c1c0d9c1c0c1c0c1dddedcdedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9dec1c1dec1d9c1dec1dedddec1ddded9dddec1ddddddddc1ddddc1ddc1ddddc1c0dddcc0d9c1c0ddc1ddddddd9c1ddddc1ddd9ddc1dedddeddd9dcdddcdddcbfc0c1c1bdb8bfc0c1c0dcdddcdedededefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dec1d9dec1dec1dec1ddc1dddddedddddcd9ddddddc1ddc1ddc0c1ddddd9c0c1c0c1c1d9c1ddddc1ddc0c1ddc1c0ddc1dddd
dddedddeddded9dedddeddddc1ddc0c1c0c0c1d9bdc1bdc1c0dcdcdddedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dedec1c1dec1c1c1de
c1ddc1dddddcdddddddcddddddddddc1ddddc1c0dcddddddddc0ddc0c1c0c0c1d9ddc0ddc1ddddc1ddddc1ddddd9dddedddedddedddddddcc0c1c0c0bcc1c0c1c0c1c0dcdcdcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1d9dec1c1d9c1c1c1dec1ddc1dddddcddddddc1ddc1ddddd9c1c0ddd9c1c0c1c0c1ddc1c0d9c1ddddc1ddc1ddddc1ddddc1ddddc1deddc1ddded9ddc1dddcddc1c0bfc1c0c1b9c0c1bdc1c0dcdddcdededefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dec1dec1c1dec1c1c1d9c1d9ddddddc1ddc1ddc1ddddddd9dddcddddc1ddc0d9c0c1ddc0d9c0dcd9c0c1c0c1c0c0c1ddc0c1ddddc1dd
ddddd9dddedddeddddddddc0c1dcc0bfc0bcc1bdc1c0dcc1dcdcdededededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1d9c1c1c1c1c1c1c1d9dc
c1ddddddddddddc1dddcddc1ddddc1c0dcc1ddc1d9c0c1c0c1d9c0c1c0d9c0c1ddc0c1ddc0c1ddd9ddc1dddedddddcdddedddcdddcc0c0d9bcc1bfbdc1bdc1c0dcdcdcdddcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefe000000fec1dec1d9c1d9c1c1c1c1c1d9c0c1dddddcddddddc1ddddddc1c0d9ddd9ddc0ddc0c1c0c1c0c1c0c0c1c0c1c0c1c0c0c1ddddc1ddddddc1ddc1ded9dec1d9dddddddcc0dcc0d9bcbfbcb9c1c0d9c0dcdcdedcdededefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1dec1c1c1c1c1c1c1c1c1c1c1c1ddddc1dddddcddddddc1dddddddcddc0c1ddc1ddc1c0c0d9c0c1c0d9c0c1c0d9c1dcd9c0c1ddc0c1dddddddd
dddddddedddeddc1ddc0c1c0bcd9b8bfc1bdc1bcdcdcdcdcdddcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1dec1d9c1c1c1c1c1c1c1d9bfc1dd
ddc1dddddddcddd9ddc1ddc1dcddddc0c1c0d9c1c0c1c0c1c0dcd9c0c1c0d9c0c1c0ddc1ddddc1ddddc1dddedddddcdddddddcc0c0c1c0c0b8bdb8bfc0c1bcdcdcdcdededededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1c1c1c1c1c1c1c1c1c1c1c1c0dcddddddc1dddddddcddddd9ddc0c1c0c1ddc0c1c0c1c0c1c0c1bfc0c1c0c1c0c1c0c0c1ddc1c0ddc1ddddddc1ddded9deddc1c0dcc1c0bcc1c0c1bdb8bcc0dcc1dcdcdcdcdedededefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000dec1d9c1d9c1c1c1c1c1c1c1c1c1d9c1ddc1ddddddc1ddddddc1dddcddd9c0c1c0c1c0c0c1c0d9c0c1c0c1c0c1c0c0c1c0c1d9d9c0ddc1ddddc1ddddddd9
dddddcddddddddc0c0d9bcbfbdc1b9c1c0bcdcdcdcdcdcdcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1b4c1c1bfc1dddddcdd
ddddc1ddddddddc1dddcc0ddc1c0c1c0c1dcbfc0c1c0c1c0d9c1c0c1c0c0dcc0c1c0ddc1ddddc1dddcdddedddddcdddcc0dcdcc0c1bcbfbcb9b8c1c0dcdcdcdcdedcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefe000000c1d9c1d9c1c1c1c1c1c1b4c1b0c1c1c1b9c0c1dddddddcdddddcddc1ddddd9c0c1ddd9c0c1c0bfc0c1c0c0c1bdc1bdd9c1c0c1bfc1c0d9c1ddddc1ddddddc1ddc1deddddddddc1c0c0bcc0b8bfc1b9c0c1bcdcdcdcdcdcdededededefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fec1c1c1c1c1c1c1c1c1c1c1c1b4c1c1c1c1c0dddcddddddc1ddddddc1c0dcc1c0c0dcc1c0d9dcbfc0c1bfc0c1c0c1bdc0c1c0d9c0c1c0c0c1ddd9ddc1d9dddddddd
dddec1ddc0bcc1c0c1c0bcb9bcc1bcdcbcdcdcdcdcdedcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1c1c1c1c1c1c1b4c1b4c1d4c1c1bfdcc1ddc1dddddd
dddcddddd9ddc0c1c0d9c0c1c0c1c0c1bdc1c0c1c0c1c1c0bfdcc0c1c0c1d9c0c1ddd9c0ddc1ddc1ddc1dddddcddddc0dcc0c1b9bcbfbdc1c0dcdcdcdcdcdcdedcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefe000000c1c1c1d9c1c1c1c1c1c1c1c1c1b4b4b4c1c1c1c0dddddddcddc1dddddcdddcddddd9dcc0c1c0c0c1c0c1bdc1bdbfc0c0c1c0bfc1c0c1c0c0c1c0c0dcd9dcddddddddddddddd9dcc0dcc0c0bcc0c1bcb8b9bcc1bcdcdcdcdcdcdedcdededefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1d9c1c1c1c1c1c1b4c1b4d4b4d4d4c1c1bfc0dcdddcddddddddc1ddc0ddc1c0dcc0c1c0c0c1c0c1c0c1c0c1c1bdc1c1bdc1bdc1c0c0c1c0c1d9c1ddddc1ddddc1dddddcdd
ddc1c0c0dcc0c1c0bcb9b8c0b8dcc1dcdcdcdcdcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1b4c1c1d4b4b4d4c1c1c1c0dddddcdddcdddddd
dcddc0c1d9c0d9c0c1c0c1c0c0c1bfc0c0c1bdc0c1c0c1c0d9c1c0c1c0ddc0ddc1ddc1c0ddc1dddddcdddddcc1c0c0bcc0c1bcbfb8c0bcdcdcdcdcdcdcdcdcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefe000000d9c1d9c1c1c1c1c1c1c1d4b4d4b4d4b4b4b4c1c1c1c0c1dddddddcdddddddcdddddcc0dcc0c0dcc0c1c0d9bcc1bdc1c1bdc1c0c1c0bcc0c1c0c1c0c1c0ddc0d9dcddddc1dddddcddd9c0dcc1c0bcc0bfbcbfb8dcbcdcbcdcdcdcdcdedcdcdedefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1d9c1c1c1c1c1c1c1b4d4b4d4d4b4c1b8c0dcddc0dcc0ddc1ddc1ddc1ddc0c1c0c1c0c1c0c0c1bcd9c0c1bdc0c1bdbfc0c1c0c1bdd9c0c1c0c1c0c1ddd9c1c0ddddc1dddddcdd
c0c0dcc0c1bcb9bcb9b8c1bcdcdcdcdcdcdcfddedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1d9c1c1c1c1c1c1c1b4d4d4b4b4d4b4b4d4c1c1c1c0dcdddddcc0ddddddddc0
dcc0d9c0dcd9c0c1c0bfc0c1bdc1c0c1c0c1bcbfc1c0c1bcd9c1c0c0c1ddc0dcddddc1ddddddc1dddcc0dcc1c0bcc0bcc1bcb9bcbcdcdcdcdcdcdcdcdedcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefe000000d9c1c1c1c1c1c1c1c1c1c1c1b4d4d4b4b4d4b4c1b8bfdcddc0c1dddddcddc0dcddc1dddcc1c0c0c1c0bfdcbfc0c1bdc1c0bcc0c1c0bdc1c0d9bcbfc0c1c0c0c1c0c0c1c0dcc1ddddddddc1c0c0dcc0c1c0b8bdb8c1bcdcbcdbdcdcdcdcdcdedcdededefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1c1c1c1c1c1c1b4c1d4b4b4d4d4b4b4d4c1b8c1c1ddc0dcc0dddcc1ddc0ddc0ddc0c1c0d9dcc0d9bcc1bdc1bdc1c0bfc0b8c1c0b8c0bfdcbfc0c1c1c0c1d9c0d9ddc0dcdddcdddddcc0dc
c0bcc0bcb8bdb8c1bcd8dcdcdbdcdcdcdcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1d9c1c1c1c1c1c1c1b4c1d4b4b4d4d4b4b4c1b8c0c0dcc0c1ddc0dddddcddc1dcc0
c0c1c0c0c1bcd9c0c1c0c1bdc1bcc1bdc0c1c0d9bcbfbcc1c0c0c1c0dcc0dcc0c1ddc1dddddcc0ddc1c0dcc0c1bdb8bdb8bcdcbcdcdcdcdcdcfddcdcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fe000000c1c1d9c1c1c1c1c1c1c1c1b4c1d4b4d8d4b4b4b4d4d8c1c1dcc0dcc0c0dcdddcc0c1ddddd9dcd9c0c1c0c0c0c1bdb8c0c1bdc1bdc0c1bcbfbcd9bdc1c0c0c1c0c1c0c1c0c1ddc0ddddc1ddc1dcc0dcc0dcc0d8bcc1bcbdb8dcbcdcdbdcdcdcfddededededefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1c1c1c1c1c1c1c1b4c1d4b8d4b4b4d4b4d4b4b4c1b8c0bcc0dcc0c0c1c0ddc0dcc0dcc0c0dcc0dcc1c0c1c0c0c1bdc1c0bcc1bdbfbcb9bcc1c0c0c1c0c1c0d9c0dcc0c0dcc1dddddcddc0dcc0c1c0bc
c0bcbdc1b8bcbcdcdbdcdcdcdcdcdcfddededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d8d9c1c1c1c1c1c1c1c1c1c1b4c1c1d4d8b4d4b8d4b4b4c1c1d9dcc0dcc0c0dcddc1c0ddc0c1c0c1c0
bfc0dcbdc1c0c0c1c0bfd9bcc1c0c1c0bfbcc1bcbfbdc1c0bcc1c0c1c0d9c0dcc1dddcddc1c0dcc0dcc0c1bcb9bcc1bcbcdcbbdcdbdcdcdcdcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000
d9c1c1d9c1c1c1c1c1c1c1c1d8d4b4d4b4d4b4b4d4b8d4b8b8bcddc0c1c0dcc0c1c0dddcc0dddcc0d9dcc0bfdcc0c1bcc0bfbcbdbdbfbcbdbfbcbfbdbfbcc1c0c1c0c0c1c0dcc0dcc0ddddddc1dddcc0c1c0c1bcc0bcc1bcbcc1bcdcdbdcdcdcdcfddcdedcdedefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1b4d8b4d8d4b4d4b4b3b4d8c1c1c0dcc0dcc0dcc0c0dcc0ddc1c0dddcc0d9dcc0c1c0d9c1bcd9c1c1bcb9c1bcc1bdc1bcc1bdc0bfc0c1c0c0c1c0c1c0dcdddcdddddcc0dcc0dcc0dcc1
c0b8c1bcdcbcbbdcdbdcdcdcdcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1d9c1c1c1c1c1c1c1c1b4c1c1c1b4d4b8d4b8d4b4d4b4b8c1bcc0bcc0c1c0c0dcc0c1ddc0dcc0c1c0dcc0c1
c0c0bcc0bfbcc0bdc1c0bcbfbdb8c0bfbdc1bcc1b8c0c1bcc0dcc0c1c0c1dddddcddc1c0dcc0dcc0bcbcb9bcbcb8dcdcdbdcdbdcdcfddcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1c1
c1c1c1c1c1b4c1d8c1d4c1d8b4d4b4d4b8d4b3d8b4b8c1dcc0dcc0dcc0c1c0dddcc0c1c0ddc0c1c0c0dcc1c0c1c0c1b8c0bdc1bfbcc1c0b8bcc0bfc0bdc1c0bdc1c0c1ddc0c1c0dcddc1dddddcc0c1c0dcc0c1bcc1b9bcbcbcdbbbdcdbdcdcfddcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1d9c1c1c1c1c1c1b4c1b8d4d4c1b8d4d8b4d4b8b4d4b8b8c1bcc0bcc0bcc0dcc0c0c1ddc0dcc0c0c1dcbfc0c1c0bcc0c0c1bcbdbcb9bcb9c0c1bdbcc1b8c0bcc1c0c1c0bcc1c0dcc0c1dddcdddddcdddcc0dcc0bcbcb8
b8c1bcb8dcdbdcdcdcdcdcdedcdedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1b8d4c1b8d8d4d8b4d4b8d4b8d4b8b8c1c0dcc0c1c0dcc0c0dcc0c0dcc0c1dcc0c0c0dcc0c0
c1bdc1bcbfc0c1bdc1bdbcbfbcc1bdc0c0c1c0c0bcc0c1c0c0c1c0dddcddc1ddc1dddcddc1dcc0c1bcbcbcbcdcdbbbdbdcdcdcfdfddedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1d9c1c1c1c1c1
c1c1c1c1c1c1d8c1d4b8d4b4d8d4b7d4b8d4b8d8b8c0bcc0bcc1bcc1c0dcc0c1c0ddc0c0dcc1c0c0c1c0c1c0d9bcbfbcc0bcc1b9bcbfbdbcc1b8c0bcc1c0c1c0c0dcc0dcc1c0dddddcdddddcdddcc0dcbcc1b8b8bcbcbcdcdbdbdcdcdcdcdedededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1b4c1c1d4b4d8d4d8d8b4d8d4b8d3b8d4b8b8bcdcc0c0c0c0c0dcc0c1c0dcc0dcc0d9c0bcc1bddcc0bcbdc1c0c1b9c0bdc1bdbcc1bdc0c0c1c0bcc0d9dcc1c0c1c0c0dcddc1dddcc1dddcdddcc0dcc0bcbcc1b8
bcb8dcbbdbdcdcdcfddcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1c1c1c1c1c1c1c1c1b8d4c1d8d4b8d4b8d8d4b8d4b8d8b8b8d8c1c0bcbcbcdcc0bcc0dcc0c0c1c0c1dcc0d9c0dcc0c1bdc1
c0bcc0bcc1bcb8bdc1bdc1bcbfbcc0c1c0bcc0c0dcc0dcc0d9dcdddddddddeddc1dddcc1bcdcc1bcbcbcdcbbdcdbdcdcdcdcdededededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1b4c1
c1c1b8c1b8c1d8d4d8b8d8d8d3b8d4d8b8b8bcc0c1bdc0bcc0c1c0c0dcc0dcc0c0c0dcc0c1c0c0dcc0bcc1c0c1c0c0c0c1bcd9bcc0bcc0c1bcc0c1c0bcc1c0c1c0dcc0dddcdddcdddcdcdddcdddcc0b8b8b8c1bcdcdbdcdcdbdcdcfddcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1d4c1c1d4d8d8b8d4d8b4d8b8d8b8b8d8b8c1bcc0bcc1c0dcc0dcc0c1c0c0c0dcc1c0dcc0bcc1bdc1c0c0bcc0bcc1bcc0c0bcc0c1c0c1c0d9bcc0c1c0c0dcc0dcc0dcd9dddcdddcdedddcdddcdcdcbcc0bcbcb8bcdc
bbdbdcdcdcdcdefddededefed9defefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1b4c1c1b8d4b8c1b8c1d8b8d8d8b8d8d7d8d8b8b8d8bcbcc0bcc0c0bcc0dcc0dcc1c0c0c0c0c1c0d9c0dcc0c1c0c1c0
c0c0c1bcc0bfbcc0bcc0bcc0d8c0bcc1c0c0c1c0c1c0dcddc1ddddc1dedcdcddc1c0dcbcc1bcd8bcb8dcdbdbdcdcdcdcdedcdededefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1c1c1c1c1c1c1c1c1c1c1c1c1
d8d4d8d4d8d8d8d8b8d8b8d7d8d8b8bcc1bcc0bcbcc0c1c0dcc0c0dcc0dcc0c0dcc0dcc0dcc0dcc0c1c0bcc0c0c1bcc0c1c0c1c0bcc0c0c1c0dcc0c0dcc0ddc0dcdddcdcdddcdddddcdcdcdcc0bcc1bcbcdcdcbbdcdbdcdcdcdcdededefedefefefefafefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1b4c1b8d4c1b4d8c1b8d8b8d8d8b8d8d8d8d8d8b8b8b8b8dcc0bcc0c1c0bcc0bcdddcc0dcc0c1dcc0dcc0c1c0c1c0bcc0bcc1c0c1bcc0c0bcc0bcc0c1c0dcc0c0bcc1dcc0c1c0dcc1c0c1dddddcdedcdcdddcdcc1dcbcbcc1bcbcdcdbdc
dcdcdcfdc1dedcdefaddfadddefefafedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1c1c1d8d8d8d8d8d8d8d8b7d8d8d8d8b8b8bcbcbcc0bcc0dcc0bcc0c1c0dcc0c0c1c0c0c0dcc0c1c0c1c0c0bcc0
c0bcc1c0c1c0bcc0c1c0bcc1c0ddc0c0bcc1ddc0dcc0dcd8dddcc1dedcdddddcc0c1c0bcc1dcdcbbdcdbdcdcdcdcdedededededefefaddfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1c1c1c1c1c1c1c1b4c1b8c1d4c1b8c1b8c1
d8b8d8d8b8d8d8b8d7b8dcb8bcc1bcbdbcbdbcc0c1c0dcc0dcc0dcdcc0dcdcc0c0dcc0dcc0c1c0c1bcc0c0bcc0bcc0c1c0bcbfc0dcc0bcc1c0d9c0bcc1d9dcdddddcdddcdddcdcdcdcdcdcdcbcdcbcdcdcdbdcdbdcdcdcdcdedcd9defadefefafefefafefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1b4c1b8d4d8c1d8b8d8d8b8d8dcd8d8d8d8b8d8d8b8bcc1bcbcc1bcc0dcc0c0dcc0c0c0dcc0c0c1dcc0dcc0dcc0dcc0c0c1bcc0c1c0c1c0bcc0dcc0c0c1c0c0dcc0dcc0c0dcc0c1dcdddcdcdec1dedcdddcdddcc1bcc1bcdcd8dcdbdcdc
dcdcc1dedededed9fefeded9fedefafefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1b4c1c1c1c1c1b8c1b8d8d8d8d8d8d8d8d8bcd8bbd8dcb8bcbcc0bcbdc0c0c0bcc0dcc0c1c0dcc0c0dcc0c0c1c0c0c1c0c0c1c0dcc0c0bc
c0bcc0c0c1c0bcc1c0c0dcbfdcc0c1dcbfdcdcd9dcc1dddcdddcdddcdcc1dcdcc0dcc1dcbcdbdcd8dcd8dcfddeded9deded9ded9defefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1c1c1c1c1c1c1c1c1c1b4c1b8c1c1c1d8b8c1d8b8d8
d8d8d8d8d8d8b7d8b8dcb8bcbcbcbcbcbcc0c1c0dcc0dcc0dcdcc0dcc0dcc0dcc0dcc0c0c1c0c0dcc0c1c0dcc0c0c1c0c0bcc1c0c0bcc0bcc0dcc1c0dcdddcdcdddcdcdedcdddcdddcc1bcbcdcdcdcdcdbdcdcdcdcc1deded9defefadefed9defedefafefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1d8b4b8c1d8b8d8d8d8d8d8bcd8dcd8dcdcb8dcbcbcc1bcbdc1bcc0dcc0dcc0dcc0ddc0dcc0dcc0c1dddcc0dcc0dcc0dcc0bcc0c0bcc1bcc0c1c0c0c0dcc0c1c0c1bcc0dcd8c0dcdddcc1dedcc1dddcdcdcdddcc1d8bcdcdcdcdcdcdcd8dcdc
dcdededed9ded9dedefad9fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1b8c1b8d4d8c1d8c1d8d8b8d8bcd8d8d8d8bcd8d7dcd8bcd8bcbdbcbcc0bcc0c0bcc0c0dcc0dcc0c1ddc0dcc0c0c1dcc0c0c1c0c1c0dcc0c0c0
c0dcc0dcc0dcc0c1c0dcc0bcc1c0c0dcc0c1dcdddcdddcdcdedddcdcdcdcc0dcc1dcdcdcd7dcdcdcd8c1c1dec1dededed9d9defeded9defefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1d5c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1b8d8d8b8d8d8d8d8d8dc
dcd8dcbcdcbcdcbcbcbcbcbdbcc0bcdcc0c1dcc0dcc0ddddc0dcc0c0dcddddc0dcc0dcc0dcbdbcdcc0dcbdbcc0c1c0bcc0dcb9bcc1c0dcdcc1dcdcdddcdddcdddedcdcdcddc1dddcc1dcdcdcdcdcd8dcd8dcdcddded9ded9d9dededed9fadefefafefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1b8c1d8c1b8d8b8d8d8d8bcd8d8dcd8dcd8dbd8dcbcc1bcbcbdbcb8c0dcc0c0c0c1dddcc0dcdddcc1c0dcc0dcddddddc0dcc1ddc0bcc0c1c0dcc0c0c1c0c0dcc0bcbcc1bcc0c1ddc1dcc1dedcdcc1dddedcdcdcdcc0c1c0dcdcdcdcdcdcdcc1dcc1de
d9deded9fad9deded9deddfaddfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8d8c1d8d8d8bcd8d8dcd8d8dcdcdcdcbcdcdcbcbcbcb8c0bcc0c0dcc0dcddc0dddcddddddc0dcddc1c0dcc0c1c0ddc0bcc1ddbcc0bcbd
dcbcc0dcc0bcc1c0bcc0c1dcdcdcdddddcdcdddedcdcdcdedddcdcdcdcdcc1dcdcdcd8dcd8dcc1dcc1dec1d9ded9defad9defadefefafefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1c1b8b8c1b8d8d8b8d8d8d8bcd8dcdcd8dc
dcdcdcdcbcbcdcbcbdbcc0bcbcc0dcc0dcdddcddc1dddcdddddddcdddddcdddcc0dcc0c0bcc0dcc0c1c0c0dcc0c1c0bcc1bcc1bcc0c1c0dcdcddc1dcdcdddddedcdcdec1dcddc1dcdcc1dcdcd8dcd8dcdcc1ded9ded9ded9ded9deded9defedefafefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefe000000c1c1bec1c1c1c1c1c1c1c1c1c1c1c1b8c1c1b8d8b8b8d8d8b8dcd8d8dcd8dcd8dcdcbcdcbcdcbcbcbcbcbcc0c1c0dcc0c0dcdddddddcdddcdddcdddddcdddddddddcc0dcc0c1c0c0dcc0c1bcddc0bcc0bcc0bcc0bcdcdcc1dddcdcddc1dedcdcdcdedddcddc1dcdcc1dcdcd8dcdcd8dcc1c1ddc1d9d9
d9d9faded9d9deded9fedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1c1d8c1b8c1d8d8b8d8d8d8dcb8dcdcdcdcdcdcdcdcdcbcdcbcbcb9bcbcc0bcc0dcc1dddddcdddddddddddddddcddc1dddcc0ddc1c0dcc0dcbcc0bcc0c0bc
c1bcc1bcc1bcc1c1d9dcdddcc1dedcdddcc1dedddcdcdedcdcc1dddcc1dcdcd8d8dcc1c1dcc1ddd9ded9ded9d9defad9defadefed9fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1bec1c1bec1c1c1c1c1c1c1c1c1b8c1b8c1d8b8d8b8d8b8b8dcd8dcd8d8dcdcdcdcdcdc
dcbcbcdcbcbcbdbcbcc1c0c0c0dcdddddcdedddcddc1dddddddddcdddcddc0dcc0bcc0c0c1c0dcbdc0c0c0bcc0bcc0bcdcdcc0c1dddcdddcdedcdddcdcdeddc1dedcdcc1dcddc1dcdcdcc1dcdcc1dcc1dec1d9d9fad9d9ded9d9ded9dedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1d8b8d8d8d8dcd8b8dcdcbcdcdcdcdcdcdcbcdcdcbcbcbcbcbcbdc0bcdcdcc0dddcdddddcdddedddedcdddcdddddddddcddc1c0dcc0c0dcc0dcc1bcc1bcc1bcc0dcc0c0c1dcdcddddc1dcdddcdedddcdcdedcddd9ddc1c1dcc1dcc1dcc1c1dcc1c1c1d9c1ded9d9
ded9d9ded9defad9fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8c1d8c1b8b8c1b8d8b8d8b8dcd8dcd8dcdcdcdcdcbcdcdcbcbcdcbcbcbdbcbcbcc0c0c0dcddddc1dddedddddcddddddc1dcdddcdddcddc0c1bcdcc0c1bcddc0bcc0bc
c0c1bcc1dcdcc0dddcdcdcddc1dcdcdcdcdec1dddedcdcdcdcd9dcdcc1dcc1dcc1c1c1ddc1ddd9d9fad9fadefad9ded9dedefafefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1bec1c1bec1c1c1c1c1c1c1c1c1c1b8c1c1d8b8d8b8d8d8d8dcb8dcdcdcdcdcdcdcdcdcbcdcdc
bcdcbcc1bcc0c1c0dcc1c0dcdddddddddcddddc1dddcddddc1dddddddddcc0c0c0bcc0c0bcdcc0bcb8dcbcc0bcc0c1dcc1dcdddedcdec1dddec1dddcdedcc1dec1d9dcc1c1dcc1d8c1c1dcc1c1d9c1d9d9d9d9d9d9d9faded9ded9deddfafefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe0000
00c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8d8c1b8d8d8b8dcb8dcd8d8dcdcdcdcdcdcdcdcdcbcdcbcdcbcbcc0bcbcc0c0dcc0dddcddc1dddddedddddddddcdddddcdddcdddddcc1dcc0dcc0c0bcc1c0bcc0bcc1dcbcc0dcdddcc1dddcdddcdcdcdddcdec1ddd8dddcd9dddcc1c1dcd9dcc1c1c1dcc1d9c1d9c1d9fad9d9
d9d9ded9defadefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1bec1c1bec1c1c1c1c1c1c1b8c1c1c1b8c1d8b8dcb8d8d8bcdcdcc1dcdcdcdcdcdcdcdcdcdcbcdcc0bcbcc0dcbcc0dcc0c0dcdddddcdddcfedddcdddddcddddc1dddcddc0c0c1c0bcc1c0bcdcc0c1c0bcc0
c1dcc0dcdddcdcdddcdddcddc1dedcdedcdddec1dcc1c1dddcc1dcc1c1dcd9c1c1c1d9c1d9d9d9d9d9fad9fad9ded9ded9fefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1b8d8c1b8d8b8d8d8bcdcd8dcdcdcdcdcdcdcdcdcdcdcbcdcdcbcdc
bcc0c1bcc0c0dcc0dcc0dddcddc1dddddcddddc1dddddcdddddddddcdcdcc0dcc0bcc1bdbcdcb8c0dcbcc0dcc1dcdddddcdcdec1dedcdddcddc1dec1dcddc1ddc1c1c1c1dcd9c1c1c1c1bfc1d9d9c1d9c1d9d9d9d9ded9dedededed9fefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1c1c1
c1c1c1bec1c1bec1c1c1c1c1c1c1c1c1dcc1b8d8d8bcd8b8dcc1dcdcdcdcdcdcdcdcdcdcdcc0dcbcdcc0dcbcc0dcc1bcc0dcc0dcddc0dddddcdddcdddddcdddddcdddcddddddc0c1c0bcc0bcc1c0c0dcbcbcc0dcc0dcddc1dcdedddcdddcdcdddcc1dddcddc1ddc1dcd8d9dcc1c1c1c1c1bfc1c1c1d9c1d9d9d9c1d9f6d9d9
fad9d9defadeddfefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1c1bec1c1c1c1c1c1c1c1c1c1c1bcc1c1c1b8c1bcc1d8bcd8bcdcc1dcdcc1dcdcdcdcdcdcdcdcdcdcbcdcbcc0bcc0c0dcc0c0c1c0dcc0dcc0dddddddcdddddcdddddcdddcdddcc0dcc0c1dcc0dcbcbcc0c1c0c1bcc0dc
c0dddcdddcdcdddcc0c1c0dcddc1dddcc1d9c1ddc1d9dcc1c0c1c1c1c1d9c1c1bfc1d5d9d9d9d9d9d9d9ded9d9defadefafefefefefefefefefefefefefefefefefefefefefefefefefefefe000000c1d9c1c1c1c1c1bec1c1c1c1c1c1c1c1c1c1c1bcc1dcc1b8d8c1dcc1dcdcdcdcdcdcdcdcdcdcc0dcdcdcdcdcbcdcbcdc
bcdcc0dcdcc0dcc0dcc0dcc0dcdddddcdddddcddddddddc1dddcc0dcc0c0bcc0c1c0bcdcc0dcc0dcdcdcdcdddcc1c0dcbfc1b8b8d9c1c0c1ddc1b8bfc1c1c1c1c1c1c1d9c1d9c1c1bfc1d9c1d9d5c1d9c1f6d9d9faded9ded9fefedefefefefefefefefefefefefefefefefefefefefefefefefefe000000d9c1c1c1c1c1c1
c1c1bec1c1c1c1c1c1c1c1bcc1c1c1bcd8bcd8bcdcbcc1dcdcdcdcdcdcdcdcdcdcdcdcc0bcdcbcc0bcdcc0bcc0c0bcc0bcc0c1c0dcc0c0dcc0dddcdddddcdddcdddddddcc0c1dcc0c1bcc0dcc0bcbcc1dcc0c1c0b8b8b9c1b59797b5c198c1b5c1d9d9b4a1a1b5c1bfc1c1d9c1c1c1c1bfc1c1bfc1d9c1d9d9d9d9d9f6d9d9
d9dededed9fefedefefefefefefefefefefefefefefefefefefefefefefefe000000dec1dec1c1c1c1bec1c1c1c1c1c1c1c1c1c1c1c1c1bcc1b8c1d8bcc1dcbcc1dcbcdcc1bcdcdcdcdcdcdcdcdcbcdcbcc0bcc1c0dcbcc1c0dcbddcc0c1c0dcc0dcc0c1dddcdddddddddcdedcc0dcc0dcc0dcbcc1c0c1c0bcb9b8b99bc1b5
97a19793739393be97bebec1d9be737393a197c1bec1bfc1bfc1c1bfc1c1bfbed9d9c1d5d9d9d9d9defafad9dedefaddfefefefefefefefefefefefefefefefefefefefefefefefe000000dec1d9c1c1c1c1c1c1bec1bec1c1c1c1c1c1c1dcc1c1c1dcbcc1d8bcc1dcbcc1dcdcdcdcc0dcdcc0dcdcc0dcdcbcdcbcbcbcdcc0
dcc0bcbddcbcc0dcbcc0dcc0dcc0dcc0dcdcdcdddddddddcc0c1c0dcc0c0bcb8bdb8b99bb897b4979793736f6f6f738f93beb094b4bfd993536f7393a197b4c1bec1bfc1c1bfc1c1c1bed5d9c1d9c1d9c1d9d9ded9ded9defadefefefefefefefefefefefefefefefefefefefefefefefe000000d9d9c1dec1d9c1c1c1c1c1
c1c1c1c1c1c1c1c1c1c1bcc1c1c1bcdcb8dcc1dcdcbcdcbcdcdcdcdcdcdcdddcdcbcdcbcbcc0bcbcbcbcdcbcc1bcc0bcbcc0c1c0dcc0dcc0dcc0dddddcdddcdddddcc0bcbdb8b8b9b89b97979793737353536b4f4f4f4f6b739493949394b0bfc16f37363b537393a1b4beb4bebec1c1bebfc1bfc1d5d9d5d9d9d9d9d9d9fa
dededed9fedefefefefefefefefefefefefefefefefefefefefefe000000dedec1d9c1c1c1c1c1bec1bec1c1c1c1c1c1c1bcc1c1c1bcbcd8c1bcd8bcdcbcc1dcdcdcdcc0dcdcdddcdcdcc0dcbcdcbcbcc0c1c0bcc0bcc0bcbdc0bcc0dcc0dcbcc0dcc0dcdcc0c1ddc0c1c0b8b9b8b89c97979393736f534f374f8237016737
825394b49394938f9494d9be4f01361e37376f739397beb4bebebec1c1bebebfc1d9d9d5d9c1d9d9ded9ded9dededdfafefefefefefefefefefefefefefefefefefefefe000000ded9dec1d9c1c1c1c1c1c1c1c1bec1c1c1c1c1c1c1bcc1c1c1b8bcdcb8dcb8dcbcdcbcdcbcdcdcdcdcdcc0dcdcbcbcbcbcbcbcbcbcdcbcc0
bcc1bcbcbcbcc0bcc1c0dcc0c1c0c0dcc0c1bcb9b8b9b8989793937353534f4f4f674f8237823782376793b593948f93948f93bed993371e1e1e1e364f536f93939793bebebebec1d5bed5c1d9d9d9d9f6d9d9d9dedefadedefefefefefefefefefefefefefefefefefefefefe000000deded9dec1d9c1c1c1c1bec1c1c1c1
c1c1c1c1c1c1c1bcc1bcc1d8bcd8bcdcbcd8bcc1dcdcbcdcc0dcdcdcdcc0dcbcc1bcbcbcbcc1bcbcdcbcc0bcc1c0bcbcc0bcc0c0bcbdb8c0b8b99cc1b59793736f53533737823782013782013782378237676fb5b09493949393949393bed9b04f018201013637374f6f6f939393bebec1bec1bed5c1d5c1d9d9d9d9fad9de
ded9dddefefefefefefefefefefefefefefefefefefefe000000fededed9dec1d9c1c1c1c1c1bec1bec1c1c1c1c1c1c1c1c1dcc1bcd8bcb8d8bcdcbcdcbcc1dcdcdcdcdcdcc0dcdcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcbcb9bcb8b8b8b9b8c19798979793736f4f4f4f82676767376767676737676737674f4f6fa1d9b5b4
bec1bfd5c1d9d9d9fad9948201828201828237374f4f539393bebebebebec1bebfbed9c1d9d9d9d9d9d9dedefadefefefefefefefefefefefefefefefefefefe000000fefed9dec1d9c1d9c1c1c1bec1c1c1c1c1c1c1c1bcc1c1bcc1bcc1bcb8dcdcbcdcbcdcbcdcbcdcdcdcc0dcdcdcbcbcbcbcbcbcbcbcbcbcbcc0bcc0b8
bcb9bc9b9c9b9c97b4989793736f536b4f4f6f4f4f534f4f6f4f6f4f6f6f6f6f6f536f6f6f94bebebebebe94a19494939493938f533701010136010182014f374f53beb4bebebebebebec1bfbed9c1d9d9d9deded9ded9fefefefefefefefefefefefefefefefefefe000000fefedededec1dec1c1c1c1c1c1bec1bec1c1c1
c1c1c1c1c1c1dcc1d8bcbcb8dcb8dcbcdcbcdcbcdcbcdcdcbcdcbcc1bcbcbcbcbcbcbcc1bcbcbcbcc0b8b897c197939373576f535353535337534f37534f4f534f53534f534f4f4f4f4f4f4f539393beb0beb0beb0bebeb0beb0bebebebe8f67378237673782376782674f57bebebebebebebebec1bec1d9bfd9d9d9d9dede
ded9fefefefefefefefefefefefefefefefefe000000fefeded9dedec1d9c1d9c1c1c1c1c1c1c1c1c1c1c1bcc1bcc1bcc1bcc1d8bcb8dcbcd8bcdcbcc1dcdcdcc0dcdcbcdcbcbcbcbcbcbcbcbcbcbcbcdcb8b4c197989373736f6f53534f4f4f4f6b4f6b4f6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b6b93bebebebebebebebebe
bebebebebebebed5d58f676767678237820137826737b4b4b4b1bebebeb0b5bebebec1c1d9d9d9d9d9dededefefefefefefefefefefefefefefefefe000000fefefededed9d9d9c1c1c1c1c1bec1d9c1c1c1d9c1c1c1c1c1c1dcc1bcb8dcbcbcdcbcdcbcdcdcbcbcdcdcdcbcdcbcbcbcbcbcbcbcbcbcbcc1bcbcb8b4b09373
93946f6b6b6b6b6b674f674f674f6b674f676b4f67674f674f676b4f674f93bebebebebebebebebeb4bebebebebebec1d9d9be6b670167018201820167378257b8beb0a1b0b4bebeb0bebebebfbfc1d9d9ded9ded9defefefefefefefefefefefefefefefe000000fefefededefadec1d9c1d9c1c1c1c1c1c1bfc1c1c1c1d8
c1bcc1bcc1bcdcb8b8dcb8bcdcbcdcbcdcdcdcbcdcdcbcdcbcbcbcbcbcbcbcbcbcbcdcb8b8b493b0376f6f6f6f6b4f674f4f6b6b6b4f6b674f6b4f4f674f6b4f6b674f4f676b6fb1bebebebebebeb4bebebebebebec1d9d9d9d9c1bebe6b670182378237823782374fc1b897b1b1b1b1b4bebeb4bebec1bfc1d9d9dededed9
defefefefefefefefefefefefefefe000000fefefefeddded9dec1d9c1c1c1c1c1bec1c1c1c1c1c1c0c1c1bcc1dcc1bcdcbcbcdcbcdcbcdcbcdcbcdcdcdcbcdcbcdcbcbcbcbcbcbcbcbcbcb8b8b3b08eac6f4f6f706f906f6b6b674f4f4f674f6b4f4f676b4f6b6b676b4f6b6b4f6c93bebebeb0beb4bebebebebebef6d9d9
d9c1bebebebebebe4f8201820182376737820157dcc19393939394b0a1beb4bebebebfd9d9d9d9dedefed9fefefefefefefefefefefefefe000000fefefefefadededed9c1dec1c1c1c1c1bec1bfc1c1c1c1dcc1c1c1bcc1c1bcd8bcb8dcb8bcdcbcc1dcbcdcc0dcbcdcbcdcbcbcbcbcbcbcbcbcb8b8b4938a8ab04f6b6b6b
6f906f6f6b67676b4f6b4f676b6b4f674f4f4f4f674f676b8fbebeb0bebebebebebebec1f6ded9d9bebebebebebebebec1b1673782370182378237671ebcb7b4948f949394b193bea1bec1bec1d9d9fed9dededefefefefefefefefefefefefefe000000fefefefedefeded9f9dec1d9c1d9c1c1c1c1c1c1bfc1c1c1c1dcc1
c1dcbcc1bcbcdcbcbcdcbcbcdcbcdcbcdcdcdcbcbcbcbcbcdcbcbcbcbcb8b8b3af8e8666af4f6b4f6b6b6f708f6f6f6b4f674f676b4f4f676b6b676b6b4f4f6b6f93bebebebebebebec1d9d9d9d9bebebebeb0bebebeb0bebebebeb06701828237826701678284bbb7b49393939393b094b4beb4b5c1bfc1d9d9ded9ded9de
fefefefefefefefefefefe000000fefefedefed9deded9d9d9c1d9c1c1d9c1c1d9c1c1c1c1c1bcd9c1bcc1dcc1bcdcb8bcdcbcbcdcbcdcbcdcdcdcc0bcdcbcdcbcbcbcbcbcd8b8b4928e8e6666898f366b6b674f6b6b708f8f6f4f6b6b4f6b676b4f4f6b4f4f676b6b94bebebebebed9d9f6d9d9bebebebeb0bebebebebebe
bebebebebebeb167370167670182823753bcbbb7b0936f94939493b1b4bebeb5bed9c1d9d9dededefefefefefefefefefefefefe000000fefefeddfedefaded9dec1d9c1d9c1c1c1bec1c1d9c1c1c1c1bcc1d8bcc1bcc1bcdcb8bcbcdcbcdcbcc1dcbcdcdcdcbcbcbcbcbcbcbcbcb8b7af8e8a8a668666af374f6b4f674f6b
6b6f708f8f6b4f674f6b4f6b674f676b6b4f8fbebebec1d9d9fad9d9bebebeb0bebebebebebebeb4bebebeb0bebebebe8f673782378201378237b8babbb893938f9393939394b4b4b5b4bfd9c1d9ded9ded9defefefefefefefefefefe000000fefefefefefedddededededed9c1d9c1c1c1c1bec1bfc1d9c1c1d8c0c1dcc1
bcc1bcdcb8dcbcbcbcdcbcbcc1bcdcc0dcc1bcbcdcbcdcb8b8b4928e8a668681668ab0376b6b6b674f4f6b6b706f8f6f6b6b4f674f6b4f6b4f676f93d5c1f6d9d9c1bebebebebebebebebebebeb4bebebebebebebebeb4bebebe6f67376782378201673adcbabbb7936f8f9493949394beb4b5c1bebfd9d9ded9defedefefe
fefefefefefefe000000fefefefedefedefeded9d9c1ded9c1d9c1d9c1c1c1c1c1c1c1c1d8c1dcb8c1bcdcc1bcbcbcd8bcdcb8dcdcbcdcbcdcbcbcdcbcbcbcb8b8b4af8a66898685668566b04f4f6b4f4f6b674f6b4f6b708f6f706b6b674f674f6b6b94bed9d9d9bebebebebeb4bebebebebebeb4bebebebebebeb0bebebe
bebebebebe8f676701820137823784bbbadbb893738f8f939393b0beb4bec1bfc1d9c1ded9ded9fefefefefefefefefe000000fefefedefefed9ded9deded9d9c1d9c1c1c1c1bfc1bebfc1d9c1c0b8c1c0d8dcc1bcbcb8dcbcdcbcbcbcbcbcdcbcc1bcdcbcbcbcdcb8b8af8e816689828a666686898f4f6b4f6b674f6b674f
674f6b708f736f6b6b6b6f6f94b0bfc1bebebebebebebebebebebeb4bebebebebebeb0bebebebebebebebebebebebe8f670137828237673fbbbabbb7b4936f9393949394b098b4b5c1bfbfd9d9dedededefafefefefefefefe000000fefefefed9dedefeded9dedec1dec1d9c1d9c1c1c1c1c1c1c1b8c1c1dcc1bcc1bcc1dc
bcb8bcb8dcdcbcdcc1bcdcbcdcbcc1bcdcb8b8b3928a66818a868186816666af4f6b6b6b4f6b4f6b6b4f6b676b6b706f706f708f9093bebebebebeb0bebeb4bebeb0bebebebebebeb0bebebebebebebeb0bebeb0bebebed5be6b6782013701824fb8babadbbba1936f8f93939394b0beb4b5c1d9d9d9d9ded9dedefefefefe
fefefe000000fefefedefefeded9defaded9ded9d9c1d9c1c1bfc1bec1bfc1c1c1c1b8c1c1bcc1bcc1bcdcbcbcbcb8bcbcbcc1bcbcc1bcbcd8bcb8b4af8e6666668e8285668681668ab0376b4f6b674f4f6b674f4f6b67676f8f8f6f6f93bebebebebebebebebebebebebebebebeb0bebebebebebeb4bebebebebebebebebe
bed9d9be6b82378282378257dcbabadbb7a1936f8f9493939493beb4bebec1d9d9d9ded9ded9defefefefefe000000fefefefefedefafededddeded9d9ded9c1d9c1c1c1c1c1c1c1bfc1b8d9b8d8c1bcc1bcc1bcb8dcb8dcbcd8bcbcbcc1bcbcc1bcb8b4b38e668166668a86856681866685934f6b6b4f4f6b674f4f6b674f
4f6b6f906f908fbebebebebeb0bebebeb0bebebebebeb4bebebebebebeb4bebebebeb4bebebebebeb0bec1d9bebe67370182016737bcbabbbbbab7a1936f8f939393bea1bebeb4bfbfc1ded9dededefefefefefefe000000fefefefefedddededdfaded9d9dec1d9c1d9c1c1bfc1bec1bfc1c1c1b8c1c0b8c1c1bcbcc1bcbc
bcb8bcbcb8bcc1bcbcc1bcd8b8b3928a656666818e86666686816666898f4f4f6b6b674f6b676b4f6b676f906f6b8f93bebebebebebebebebebebebeb0bebebebebebeb4bebebebebebebebebebebeb4bebebed9f6b4be9367670182378257dbbbbadbbbb7a18f738f949394b0beb4beb5c1bfd9d9ded9deded9fefefefe00
0000fefefefedefed9fefadedddeded9ded9d9c1d9c1c1c1c1bec1c1b9c1c1c1b8c1bcbcc1c1bcc1bcb8bcc1bcbcb8bcbcc1bcb8b8b4af8e66666666668e8681868166856681b06b6f6b4f6b6b4f6b4f674f6b8f6f4f6b94bed9bebeb4bebebeb4bebebebebebebebeb0bebebebebebebebeb0bebebeb0bebebebebed9d9be
bebeb0673782373753b8babbbabbdbb7a18f938f939393a1beb4bebfc1bfd9d9ded9dedefefefefe000000fefefefefefededddefaded9ded9d9ded9d9c1bfc1bfbec1bec1c1c1bfb8c1c1c1c1bcc1c1bcb8bcb8bcc1b8bcc1b8bcb8b8b4af926666656665668a86666686666686668a8f4f6b6b4f676b4f6b4f6b6f906f67
6fb4befad9bebebebebebebebeb0bebeb4bebebebebebeb0bebeb0bebebebebebebebebebec1d9d5bebebebe94670182824f73bbbabbbabbbbb7a16f936f939493b1a1b4b5bec1d9d9d9ded9ded9defefe000000fefefefefededefafeded9ded9deded9c1ded9c1c1c1c1c1c1bec1b5c1b8bfb8b8c1c1bcbcb8c1bcb8bcb8
bcb8b8bcb8b8b8b4928a6566666666668a86818681668566818584676f4f4f6b4f674f676f906f4f6b94bebed9d9d5bebeb0bebebebebebebebebebebebeb4bebebebebebebebeb0bebebeb4bebebed9d9beb0bebebe8f673701673bdcbababbdabbbbb4738f8f948f9393bebebeb4bfbfc1d9d9dededefefefe000000fefe
fefefefefedddedddedededed9d9d9d9c1d9d9c1c1bec1bec1c1c1c1b8c1b9b8b8bfc1c1bcb8b8b8bcb8b8bcb8b8b8b4928e666666666566818b8666666685666686668a8f4f6b6b674f6b4f6b6f6f6b6b93bebebebec1d9d9bebebebebeb4bebebebebeb0bebebebebebebebebeb4bebebebebebebebebefac1bebebebebe
be8f6737826797dbbbbbbabbbadbb4937393939493b1b4b4bebec1bfd9d9ded9deded9fe000000fefefefefefefedefaded9ded9d9ded9dec1d9c1c1bfc1c1beb4c1b5c1c1c1b8b8c1b8b8b8b8c1b8bcb8b8bcb8b8b8b8b4af928a66666566666689828566858666856681868193676b4f6b4f676b6f906b6b6fb1beb0bebe
bed9d9c1bebeb0bebebebeb0bebebebebebebebebeb4bebebebebebebeb0bebebed9d9bebebebeb4bebebe6f67016753dcbababbdbbabbbbb4938f6f93939394beb4b5c1bebfd9d9ded9dedede000000fefefefefefefed9defededededed9ded9d9d9d9d9c1bfc1c1bec1c1b5c198c1b8c1b8c1b8b8b8bfb8b8b8b8b8b8b8
b8b4928e666566666665668a86866666816666866666868e6f6f6b6b4f6b6f8f6f4f6b93bebebebebebebed9d9bebebebebebebebebebebebeb0bebeb4bebebebebebeb4bebebebebebec1d9bebebebebebeb0bebe6b67014f97bbbbbabbbbbadbb7a193936f949393a1beb4b5c1c1d9c1d9ded9defe000000fefefefefefe
fefedefed9ded9deded9c1ded9c1d9d9c1bec1c1b5bec1bec1c1c1b9c1b8bfb8b8b8b8b8b8b8b8b8b8b4928e86666666656666668d8285868186818681668566658f676f4f6b6b6f906b6b94bebebebebeb0bebebed9d9bebeb4bebeb4bebeb4bebebebebebebebebeb0bebebebebebebeb4bed9f6beb0bebebebebebebeb1
6b676757dcbabbbadabbbbbbb7a1938f938f9493b098b4b5bfc1bfd9d9ded9fe000000fefefefefefefedefed9defeded9d9d9d9d9d9d9d9c1d9c1c1bec1b4beb4c1c1c19bc1c19bb8b8c1b8b8b8b8b8b8b4928e8a66666566666666658e8666816666866666856666868d8b4f6b6b708f6b4f70b0bebebeb4bebebebeb4be
d9f6bebebebebebebebebeb4bebebebebeb0bebebebebebeb0bebebebed9d9bebebeb0bebebebeb0bebe6f674fb8bbbabbbbbbbabadbb7a1936f93939394b0bebeb4bebfd9d9d9dede000000fefefefefefefefefeded9ded9deded9d9ded9d9c1d9c1bfc1bec1beb4c1b5b4c1c19bc1c1c1b89bb8c19bb8b8b4b4928e6665
666666656666668e86856686816685666685666586af6b6b6f8f706b6b93bebebebebebebebebebebed9d9d5bebebebebebebebebebebeb4bebebebebebeb0bebebebebebebefad9bebebebebeb4bebebebeb0b14f6773dcbbbabbbadbbbbabbb893936f9493939493b4b5c1bec1d9d9ded9000000fefefefefefefefefed9
defeded9ded9dec1ddc1d9d9d9c1bfc1bec1b5bec1b5c1c1c19bc19bc1c19bb8c1b8b8b4928e666666666566666566658e668666818666668566668666668a8f6f8f6f6b4f8fbebebeb0bebebebeb0bebeb0bed9d9c1bebeb0bebeb0bebebebebebebebebebebebebebebebeb4bebed9bfbeb4bebebebebebebebebebeb06c
73b8dbbbbabbbadbbbdabbb793936f939493be94b4b5c1bfc1d9d9de000000fefefefefefefefefedefeded9ded9ded9d9d9d9d9c1d9bfc1bfc1b5c1b4beb4b4b5b4c1c1c1c19bc1c19bb89784af8a666566666666666666668e86668186816685668566656685668e6b946b4f6bbebebebebebebeb4bebebebebebebef6d9
d5bebebebebebebebeb0bebeb4bebebeb4bebeb4bebebebebed9c1bebebebebebebeb4bebebebebe938f93dcbabadbbbbabbbbbabbb3a1938f939393b0bea1bebebfc1d9d9000000fefefefefefefefefefeddfadeddded9d9d9d9d9c1d9d9c1bfc1bec1bec1b5b4beb4c1b5c197b8c19b9bb4b4b4af8e6666666665666665
6666658f86658666668666666686668566668e676f6b6b93bebebebebebebebebebebebebebeb4b5d9d9c1bebeb4bebeb4bebebebebebeb4bebebebebebeb4bebec1f6bebebebeb4beb0bebebeb0bebebebe9493dcbbbbbbbadbbbdabbdbbbb493936f949394b0beb4b5c1bfbfd9000000fefefefefefefefefedefedefade
d9ded9dec1d9d9d9c1bfc1bfc1beb4beb4b5b4b5b4b4b8b597c197c1b4b4848e6665666566666566666566898a86668186816685668566856666858eb0676f74bebeb0bebebeb4bebebebebeb4bebebeb4bed9d9bebebebebebebebebebebebebebebebebebebeb5bebed9d9bebebebebebebebebebebebebebeb0bebec1dc
bababbbbbabbbbbabbb7b793939393939393beb4b5bec1d9000000fefefefefefefefefefefededed9ded9ded9d9d9c1d9d9bfc1bfc1bec1beb4beb4bec1b597c197c1c1b4a1b0928a6666666666666666666666898b658666658666668566666685668e898e6b93b0c1bebebeb4bebebeb4beb4beb5c1b5bebebed9d9d9be
c1bebec1bec1bec1bec1bec1bec1bec1c1d5bed9d9fad9bec1c1bfbfd9d9c1d9d9bfc1d9d9d9d9d9dcdbbbbadbbbdabbdbbabbbba1936f939493b1a1beb4bebfc1000000fefefefefefefefefefefefed9fededed9d9ded9d9d9c1d9bfc1bebfc1b5b4beb4bea1b4b5b4c1b4b4b4a1928e6666666566656665666566668982
85668566658665668685666689898965b0bed9d9d9c0d9d9d9ddd9c0d9d9c0d9d9d9d9d9c0d9ddddd9d9d9c0d9c0d9c0bfc0bfc0b9c0bdbdbdb9b8bdb8b8bdb8b9bdb9b9b89cb89cb89cb89cb89cb89bbfdedcdbdbbbbabbbbbabbbadbb7b4938f73939394b4bea1bebf000000fefefefefefefefefefefefededed9ded9de
d9c1d9c1d9d9c1bfc1c1bec1b5b4b5b4b4beb4b4b597b4a1af8e6a6665666666666666666666658e828566666686666686656666898eaf92afd8c1bd9f9f9b9f9f9f9b9f9b9f9f9b9f9f9f9f9f9b9f9f9b9f9f9f9f9b9f9f9b9f9f9b9f9b9f9b9b9b9b9f9b9fa09b9f9f9b9b9f9b9f9b9f9b9f9f9b9f9b9fbdbcdedcfdfddb
dbdbdabbdabbbbbbb7a1938f939493b0bebebebe000000fefefefefefefefefefefefefefeded9ded9d9d9d9d9c1d9bfc1bfbfb5c1b5b4bebebea1bea1b4b4a1b08e8a666666666566666566666566668e868666858665866566668a8dafafb3d3b4d4bc9b9f9bbca0b89f9fbd9fb99fa0bc9bbd9b9fbc9b9fbdbcb9bc9ba0
9bbd9bbc9bbd9bbc9bbc9fbd9f9fbd9bbcb8a09bbc9f9fbc9b9f9cbc9f9ba09b9f9fb8c0ddfddbdcdcfddcdbdbdbbadbbabbb7a1938f939493a1beb4be000000fefefefefefefefefefefefefeded9dededed9ded9d9d9c1bfd9c1bfc1b5c1b5b4b0bebea1be97b4b0848e6665666566666566666566666566ab8285666666
666586898dafb3d3b3d4b4afd85f9f7b9f9f9b9fb99f9b9b9fb89f9b9f9fbc9b9fbc9b9f9fbdbcbc9f9f9f9f9f9f9f9f9f9f9b9f9b9f9b9f9fbdbc9f9f9f9b9f9b9fbc9f9f9bbc9f9f9b9fc0dcdedcdbfddbfddcfddbdbdbdbdbdabbb7a1938f9394b0a1beb4000000fefefefefefefefefefefefefefefeded9ded9d9d9c1
d9d9c1bfbec1bec1b5b4bebeb4a1beb4b4b0938e6666666666666666666666666666668e82668566898e8eafb3b4d4b8d4b4b3b0b3d47b7f7a9f9b9f9f9f9f9f9f9f9f9f9f9f9b9fa09f9ba09b9fb8bd9b9f9b9f9ba0b89f9ba09b9f9f9f9fbc9f9bbcbd9b9f9ba09f9f9f9b9f9b9f9f9b9f9fbcc0dddddcdbdbdbdcfcfddc
fddbdbdbdbdbdbb89393938f9394b4be000000fefefefefefefefefefefefefefededddeded9ded9d9d9c1d9d9c1bfc1beb5b4b5b4a1bebea1b0938e8a6666666566666566656665666566668a8a898eafafb3d4b3d4b3d4d4b4d3b0b4afd85f625f7f9f9f9b9f9b9fbd9b9f9ba0b89f9f9b9f9f9f9f9f9fbcbdbc9f9f9f9f
9f9f9f9f9fbc9ba09b9f9b9fbd9b9f9fbc9f9b9f9c9f9f9fa09b9f9fbdc1dddedcdbdbfcdbdbdbdbdcdbfddcfcdbdbdbdbd89393939493b1b4000000fefefefefefefefefefefefefefefefadefaded9ded9d9d9c1bfc1bfbec1c1b5b4bebea1a1b097938e666665666665666666666666666666658bafafb3b3d3b4d4b0b3
b4d4b4b3b0b3b4b0b87b7a5f5e7b9f9f9f9f9b9f9f9f9f9f9f9b9f9f9b9fb89f9ba09bbcbd9b9f9b9f9b9f9b9f9b9f9f9f9f9f9fb9bcbca09b9f9b9fbc9f9b9fb89f9f9f9bbcc0dddedddcdbdbdbfcdcdbdbfcdbfddbdcfcdbdbdcc193939393a1be000000fefefefefefefefefefefefefefedefedddeded9d9dec1d9d9c1
bfc1bfbebeb4beb4bebeb4b0938e6a6666666666666665666666658a8eafd48bb0d4b4d4b4afb3b4b4d4b4d4b0b3b0d3b3b87b635e635e7b9f9b9f9f9b9f9f9b9f9fa09b9f9f9f9f9f9f9f9f9bbcbdb89f9f9fa0bc9f9f9b9f9f9b9f9f9fbd9b9f9f9f9f9f9b9f9f9f9f9b9f9fbcc0dcdddedcdbdbdcdbdbdbfcdcdbdbdbfd
dbdcfcdcdbdcbe9393949393000000fefefefefefefefefefefefefefefefedefadddeded9d9d9d9d9c1bfc1bfc1b5c1beb4b4b0938e8a666666656665666666668992b4d4d8c1d88bd4b3b4afb4b4b0b3d4d4b4afb4d0b3b0b4b87b5e5f5e5f637b9f9f9b9f9f9cbc9f9b9f9fbc9ba09b9fb89f9bbc9bbcbd9f9b9f9b9f9b
9fa0bc9b9f9f9cbcb89f9b9f9b9f9c9f9f9b9f9b9f9f9bc0dcdddddedddbdbdbfcdbdbdbdbfcdbdbdbdbfcdcfcdcfddcb4948f93be000000fefefefefefefefefefefefefefefefefedddeded9d9d9d9c1d9c1bfc1b5c1b5b4b5b4b193938e8a66656666666666658eafd4d8d8b4b484d4a9b4b0afd4b3d0b3d4d4b3afb4b4
b3b0b4b3b87f5e635e635e5f7f9b9f9f9b9f9f9b9f9f9f9b9f9f9f9f9f9f9fa09fbdbcb99f9f9f9f9f9f9f9b9fbc9b9fbcbd9f9f9f9fbc9f9f9b9fa09f9f9cbcc0ddc1dedddcdbdbdbdbdcdbfcdbdbdcdbfddbdcdbdbfddcdcd9b4939493000000fefefefefefefefefefefefefefefefefedefadddededed9d9d9d9bfc1c1
beb5c1b5b4b4b0b08e89666666658a8eafd4d8d8d4b4b0b0afafb48fb4b3b4b4afb4b4d4b4b4d4b0d3b0b4b3d4b85f5e5f5e5f625e7b7f9b9f9f9b9f9fbc9b9f9f9f9b9f9b9f9b9f9b9f9bbcbdbc9b9f9b9f9b9f9f9b9f9f9bbdb89f9ba09b9f9b9f9f9fb89f9bbcbddcdddddddddcdbdbfcdbfcdbdcdbdbfcdbdbdbfcdcfd
dcfdfdc1939393be000000fefefefefefefefefefefefefefefefefefedefaded9ded9ded9c1d9bfbfc1beb5b4beb4b0928a8a658eafb4d4d8c1b4b084b0afaf84b0b0d4acb4d0b3b0b4b3b4d4d0b3b0b3b0b3d0b3b8b8625f625f5e5f635e5f7f9b9f9f9b9fa09f9f9c9f9fbc9fa09f9f9f9f9f9bbcbdbc9f9fa0bc9b9fa0
9f9b9fbcbd9f9f9f9f9f9f9bbc9f9f9f9fbcdddddcdddedddcdbdbdcdbdbdbfcdbdbdbdbfddcdcfddcfddcdcbe73949393000000fefefefefefefefefefefefefefefefefefefededdfaded9d9c1d9d9c1c1bfc1b5c1b5b4b092ab8eb3d4d8c1b4b4af92afb0af84b0afaf84c1acb4b3b0d3b4d4d4b3b4b4afb4b4b0b3b0d4
9b5f5e5f5e635e5e5f627b7f9f9b9f9f9b9f9b9f9f9b9f9b9f9bbc9b9f9b9f9fb8bcb99f9b9f9f9f9b9f9f9fb9bc9b9fb89f9b9f9fa09b9f9bbcc1dddcdddddddcfddbdbfcdbdbdbdbdbfddcfddcfdfdfddcfcdbd8938f9393be000000fefefefefefefefefefefefefefefefefefefeddfadeded9ded9d9c1d9bfc1bec1b5
c1c1b4afb4b4d4b4b4afafb092b0b084afb084afb0b0b4acb4b0b3b0b4d4b4b0d4afd4b4cfb3b0b3d87b5e635e635e5f5f625f5e7b7f9b9f9b9f9f9fbc9b9fa09f9f9f9ba09f9f9f9c9fbdbc9f9f9f9b9fbc9b9fb9bc9f9f9f9f9fa09f9f9b9f9f9fc0dddddddddcfedddcdbdbdbdbfddcdcfddcdcfdfddcdbdcdbdbdcb46f
939394b0000000fefefefefefefefefefefefefefefefefefefefeded9ddded9d9d9d9c1d9bfc1beb4bfc1d4b4b3b0afb092b084afb084afafb0afafb084afd4b0afd4b4b3d4d4b3b4afb4b4afb4b4d4afd87b7b5e5f5e5f625e5f5e635e7f7f9f9f9b9f9b9f9f9f9b9fb89f9f9f9bbc9b9f9f9fb9bc9b9f9f9b9f9f9fbcbd
9ba09b9f9b9f9b9f9f9b9fbddddcdddcdddddddcdcdbdbdcfddcfdfddcfdfddbdbdcfcdbfcdbd9936f949393b4000000fefefefefefefefefefefefefefefefefefefefefedefadeded9ded9d9c1bfbfc1b5c1c1d8b4b0af84afb0afb0b0afb084b084b0b0afb0b0beb0b4afb4d4b4d4b0b3b4afb0b3b0afb4b4d85e635f62
5f5e5f635e5f5e5f5e7b9f9b9f9f9f9c9f9b9f9f9f9b9f9f9f9f9f9fb89f9fbdbc9c9f9f9c9f9b9fbcbc9b9f9f9f9fbc9b9f9fbcc1dddddddddddcdddedcfddcfddcfddcfcdcdbdbdcfcdbdbdbdbdc936f8f93939493000000fefefefefefefefefefefefefefefefefefefefedefeded9deddd9d9d9d9c1bfbec1b5bfc1c1
d4b4b0af84b0af84afb0afb0afaf84b0afb4b0b0afb4b3d4d4b3b4d0b3d4b4d0b3b4b0b3d85f5e5e5f5e635e5e5f625f625f627b7f9f9b9f9f9f9fbc9b9fa09f9b9f9c9f9b9fa09bbcbcbc9b9f9f9f9fbcb99f9f9f9b9f9b9f9fa0b8bcdddddcdddcdddddeddfddcfdfddcfddbdcdbfcdbfcdbdbfcdbdcb46f6f93939493be
000000fefefefefefefefefefefefefefefefefefefefefefefedefad9ded9dec1d9c1c1bfc1b4d9d8c1d8c1b4b092afb0b084afb0afb0b0af84d4acb0b4b4d4b4b3b4b0b3b0b3b0b3b4afb3d4d8477e5f635e5f5e5f635e5f5e5f5e5f7f9b9f9f9b9f9f9c9f9f9f9b9f9f9f9f9f9f9b9fa0b8bdbc9f9f9b9fb9bc9f9fb89f
a09f9b9f9bbcdddddcdddddedddedededcfcdcdbfcdbdbfcdbdcdbdbdbdcdbdbdc938f939093b0a1be000000fefefefefefefefefefefefefefefefefefefefefefededddeded9d9d9d9d9d9bfbec1b5b5c1b4c1c1d8d4d4b084afafb084af8492b0afb8a8d4b3d4d4d4b4b0b3d0b4b0b3b4b0d4b4b3c1465f5e5e635e635e
5e5f5e635e635e5f7f9b9f9f9b9f9f9f9b9f9fb89f9b9f9b9f9f9f9b9fb8bdb89f9f9fbcbd9ba09f9f9b9f9f9f9fc0dcdddddedddedededddedcdbdbdbdcfcdbdbdbdbfcdbdbfcdbdcb56f6f93939493beb4000000fefefefefefefefefefefefefefefefefefefefefefefefefadeded9dedec1bfc1bfbec1b4b5c1afd4d4
c1c1d8d4b084afb0b0afb0afb0d48cb3b4b4d4b3b0b3b0b3b4cfb4cfb4afb4b4b85e635f5e5f5e5f635e635e5e5f5e5f625e7f9b9f9f9b9f9f9fb89f9f9f9fbc9f9b9fbc9f9fa0bcbd9b9f9bbdb89f9b9f9f9f9b9f9bbcdddddedededededddddededbdbfcdbdbdbdcfcdbdbdbdcdbdbdbc18f6f8f93939394b4be000000fe
fefefefefefefefefefefefefefefefefefefefefefededdfadeded9d9d9d9d9c1bfbeb5b4b5c184afb4b4d4c1d8d4b484afb0b084afd887d4d4d4b4b4cfb4d4b0b3b4b4b0b3b4afd49b5f5e5e635e635e5e5f5e5f635e635e5f5f627b9f9b9f9f9ba09f9f9ba09b9f9b9fa09b9f9b9fb8bcbc9fa0bcbd9f9f9f9b9f9fbcbc
c0dedededddddddddddeddfddbdbdbdbfcdbdbdbdcfcdbfcdbdbdc936f6f939493b197b5c1000000fefefefefefefefefefefefefefefefefefefefefefefefefededdded9ded9d9c1d9bfc1c1b5b4bec184b0b0afb4c1c1c1d4b484afafb0d488d8b4b3b4afb4b3b0b3b0b3b0b3b4cfb4d45f5e5f635e5f5e5f5f625e635e
5e5f5e635e5e637b9f9f9b9f9f9f9b9f9f9fa09f9f9b9f9f9f9f9f9cbdb89fb89f9b9f9b9fbdbcb8c0dedddcdddcddc1dddcdddedcdbdbfcdcdbdbdbfcdbdbdcdbdbdbbe6f938f949393a1beb4be000000fefefefefefefefefefefefefefefefefefefefefefefefefedefafeded9ded9d9d9c1bfb5c1b5b4bec192afb092
b0b4d4d8c1d4b4b084c18bd4d4b0b3d0b4b0b3b0b4d0b3d0b4b0b3b45e7b5e5e5f625f625e5f5f5e5f5f625f5e635f5e7f7b9f9f9f9b9f9f9b9f9b9f9b9f9f9f9b9f9b9f9fbcbdbcbd9f9fbcbdbcb8bdbcdddddddddddddddddddddedddcdbdbdbdbdbfcdcdbdbdbfcdbdbfd738f6f9393b094beb4bebf000000fefefefefe
fefefefefefefefefefefefefefefefefefefefefeded9deded9d9c1d9d9c1c1beb5b4b4bed884afb0afafb0b4d4d8c1d4d4beb0b8d4b3b4b3b4b3d4b3b4b3b4b3b4b3b4d4467f635e5f5e5e5f7e5e5f7e625f7a635e7a637a5f7e7b9b9f9f9bbd9fbc9f9f9fb89f9fbc9fbd9bbc9bbcb9bcb9bcb9bcbdbc9bdddddcdddcdd
dcdddcdddcdeddfddbdbfcdbdbdbdbfcdcdbdbdbdcbe6f6f8f949393a1beb4bec1000000fefefefefefefefefefefefefefefefefefefefefefefefefefedddefed9deded9d9c1d9bfc1c1b5b5a1bed892b084b092b0afb0d4c1c1c1b0d4b4b4d4b4b4d4b4b4d4b4d4b4d4d4b4d8479b7b7f7b7f7b7f7b7b7f7b7b7b7f7b7b
7f7b7f7f7b7f7f9bbcbdbcb8bdb8bdbcbdbcb9bcb9bcbcbdbcbdbcbcbcbd9f9f9b9fc0dedcdddddddddddddddddddddcdcdbdbdcdbfddbdbdbdbfcdbdbd96f738f939393b1a1c1bec1d9000000fefefefefefefefefefefefefefefefefefefefefefefefefefefeded9feded9d9d9d9d9c1bebeb5b4b4bebeb492b0afb092
b084afb4d4d8acb4d4d4d4d4d4d4d4d4d4b4d4b4d4b4d4d85e7f7f7f7b7f7b7f7b7f7f7b7f7f7f7b7f7f7b7f7b7b7f7b7f9fb89fbdbcbdbcb9bcb9bca09fbcbd9bbcb8bdb8bd9b9f9b9fbcdddddddddddcdddcdddcdddededddcdbdbfcdbdbdbdbfcdbdbdbdc936f8f939393bea1beb5bebfc1000000fefefefefefefefefe
fefefefefefefefefefefefefefefefefefefededed9deded9c1d9d9c1bfc1beb5a1a1beb4af93afb0af92b0af84d4beb0b4b4b3b4b3b0b3b4b3b0d3b0d3b4b4b85f7a5f5e625f625f5e5f5e5f5e5e5e5f5e5f5e5e635e5f5e7b7f9f9f9b9f9b9f9f9f9f9f9bbc9b9f9fa0bc9fbdbc9f9f9f9bc0dddcdddcdddddddddddddd
dcdddedbdbdbdbdbdbfcdbdcdbdbdcc16f738f94939493beb4bec1d9d9000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9d9d9c1bfc1beb4bebebe93c1b4afb092b0b0afb0afb0d48bd4b4b0d3b4b4b0b4d4b3b4b4b0afb4b87b635e5f5f5e5f625f625f625f635f625f625f5f5e
635e635e7b7b9f9f9f9f9b9f9b9f9f9f9fa09b9fb8bdb89fbdb89f9bbcdedddddddddcdddcdddcdddddddddedcdbdcfcdbdbdcdbfcdbdbdc936f8f9393b0a1beb4b5c1bfc1d9000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9fefaded9ded9d9c1bfbec1b4bea1bebfb384b0af84b0af
8484d4acb1d4b3b0afd4b3cfb4b0b3afd4b4b3b87f5e5f625e635e5f5e5f5e5f5e5e5e5f5e5f5e625f5e5f5e5f627b9f9b9f9b9f9fa09fb89f9b9f9f9fbcbd9f9fb8bdbcbcc0dcdddcdddddddddddddddddcdddededbdbfcdbdcfcdbdbdbdbdcb46f6f9093949394b4b5c1bfc1d9de000000fefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefededdded9d9d9c1d9bfc1beb5b4be93b4beb4afb0afb0afb0afb0d887d4b4b4b4b3b0b4b0b3d0b4b4afb4b87b5e635e5f5f5e5f625f625f625f635e635e635f5e5f625f625f5e7b7f9f9f9f9b9f9b9f9f9f9f9fb8bd9b9f9b9fbdbcc0dedddddddddcdddcdddcdddcdddeddfddb
dbdbdbdbdbdbfcdbdcc1738f93939393a1beb4bebfc1d9d9d9000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefaded9ded9ded9d9c1bfc1beb4bea1b1a1c1b484afb084afb0afb4c1b0d8d4b3b0b4b3afb4b3b4afb4d49b7e5f5e5f625e635e5f5e5f5e5f5e5e5f5e5f5e5e635e5f5e5f
5e635e7b9f9b9f9f9f9f9f9c9f9bbcbdbc9f9f9f9b9fc1dddddcdddcdddddddddddddddddddddddedbdbdbdcfcdbdcdbdbdc936f708f939493beb4b5bec1d9d9defe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeddfededed9d9d9c1d9c1bfbeb5b4bea1beb4c1b084afb084afb0b0
c18bd4b4d4b3d0b4d4b0b0d3b0b3b49b5f625f5e5f5f5e635e635e635e635f625f625f5f5e635e635e635e635e7f9f9b9f9f9b9f9f9f9fb8bd9b9fb89f9f9fc0dedddddddddcdddcdddcdddcdddcdeddfddbdbfcdbdbdbfcdbdcc16f8f9393939394b4b5c1c1d9c1d9d9de000000fefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefeded9fadeded9d9d9d9c1bfc1b5b4be9394b4c1b4afb0af93af84d4acb0d4b4b4b3b0b3b3b4b0b3b4d49f5e5f5e635e625f5e5f5e5f5e5f5e5e5f5e5f5e625f5e5f5e5f5e5f5e5f5e7b9f9f9b9f9f9b9fb8bd9f9f9f9fa09bdcdedededddcdddddddddddddddddddddddedcdbdbdbdbfc
dbdbdbdc936f738f9394a1bea1c1bed9d9d9deded9000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedededed9ded9d9c1d9c1bec1b5b4bea194a1c184afb0afb0afb0c188b4d4d4b4b3b0b4d0b3b4d0d87b5e635e5f5e5f5f5e635e635e635e635f625f625f5f5e635e635e635e63
5e637f9b9f9f9b9fbcbdbc9f9b9f9f9bbcdddddddedddddddddcdddcdddcdddcdddedddcdbdbfddbdcdbdbdcb46f8f8f9394b0beb4beb5bfc1d9d9d9defe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefed9ded9ded9d9d9c1bfbec1b5a1be9393bec184afb0afb084d4acb0
b3d4d4b4d3b0b3b0b0b3d87b5f5e635e635e625f5e5f5e5f5e5f5e5e5f5e5f5e625f5e5f5e5f5e5f5e5f5e7b7f9b9f9f9fb9bc9bbd9f9b9f9fc0dedcdddededddcdddddddddddddddddcdddefddbdbdbdbfcdbdbc16f6f939493939397bec1bec1d9d9deded9de000000fefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefededed9d9dec1bfc1bfbec1b5b0bebe93c1d484afb092afb4d488b0b3d4b4b4b3b4d3b0b4d85f625f5e5f5e5f5f625f625f625f625f635e635e5f5f625f625f625f625f625f625f7f9b9b9fbcbd9f9b9f9f9bbcdddddddcdddddedddcdddddcdddcdddddddddedcdbdbdbdbdbdbdcb46f
708f939394beb4b5c1bfc1d9d9d9fedefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9fededed9d9d9d9c1beb5b4b5a1939394bed88484b0b0afb4c1b0b0b4d4d4b4afb4b4b3d8465f625f625f625e5f5e5e5f5e5f5e5e5e5f5e5f625e5f5e5e5f5e5f5e5f5e5f5e5f
7a7f9fb8bd9b9f9f9f9bbcdddedddddddddededddddddcdddddddddcdddededbdbdbfddbdbdcc16f6f93939394b0b4b4bebfc1d9d9d9deded9fe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefededefed9d9d9d9c1d9c1c1beb5b4bebe9393bfd4afb0af84d0c1acb4b3d4
b4d4b4b4afd4d8475e5f5e5f5e5f5f5e635f625f625f635f625f625f5f5e635f625f625f625f625f625f7f7b9f9f9f9f9b9f9fc0dedcdddcdddcdddededddcdddddddcdddddedddedbdbdbdbdbdbfd936f938f939493a1beb5bfc1d9d9dededefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefed9fededed9d9d9c1bfbfbeb4b5b493be9393beb492b0af84d4acb0b4b3d4d4d4b3b4b4b846635e635e635e625f5e5e5f5e5f5e5e5e5f5e5f5e625f5e5e5f5e5f5e5f5e5f5e5f625f7f7b9f9b9f9f9bbcdddddddddddddddddddedddddddcdddddddcdddededbdbfcdbdbdcb46f8f8f949393be
beb4bec1d9d9d9d9ded9fefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9dededed9ded9c1c1bfc1b5b5b493be9393c1b4af93af84d488b0b4b3b4d4d4b3d49b5e5f5e5f5e5f5f5e635f625f625f635f625f625f5f5e635f5e635e635e635e635e5f5e7a7f7f
7b9f9b9fbcdddedddcdddcdddcdddcdddededddddddcdddddddddedbdbdbdbdbd96f6f7393939493a1b4b5c1d9c1d9d9ded9defefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefed9ded9d9d9d9d9c1bec1b4bebe93a19493bfb4afb0afb4b0b0afb4afd4b4
b4d87b5f5e635e635e625f5e5e5f5e5f5e5e5e5f5e5f5e625f5e5e635e5f5e5f5e5f5e5f627b7f7b5e7f7b9f9bc0dedddcdddddddddddddddddedddcdddcdddddcdddefddbdbdbdbdc936f8f8f939393bebeb5c1bfc1d9d9dededefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefed9deded9ded9d9c1d9c1bebeb5b4a194b093bec1b492b0b0d8acb4b0b4d0b4d4d843625f5e5e5f5e5f5f625f635e635e635f635e635e5f5f5e635f5e5e635e635e635e5f7b7f5e635f7f9f9ffedddcdddddddcdddcdddcdddededddddddddcdddddedcdbdbdbdcc16f6f939493b193beb4c1bec1d9
d9ded9ded9fefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefefaded9d9d9d9d9d9c1bfb4bebeb494939393c1b484afd4adb0d3b4b3b4d4d82e7b5e635f625f625e5f5e5e5f5e5f5e5e5e5f5e635e625f5e5e635f5e5f5e5f5e5f7e7f5f5f5e5e7b9bbc
dddddddddcdddddddddddddcdddededddcdddddddededcdbdbdbc1936f938f9393a1beb4b5bebfd9d9ded9fedefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefededddededed9d9c1bfc1c1bfb4bea1be939493bec1b0af84c187b4afb0d3b4c1127f
5e5e5f5e5f5f5e635f625f625f635f625f5e5f5f5e635f5e5e5f625f625f625f7b7f5e7f9b9f9f7f9fbcc1dddddddcdddddcdddddddddddededddcdddddddedcdbdbdbbe6f738f93949394b4b5c1c1c1d9d9d9ded9defefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefedefad9ded9ded9d9d9bfbebec1b5b4be93a193bec1b4afb48bb0d4b4afb4d82e9b635f625f625e635e5e5f5e5f5e5e5e5f5e635e625f5e5e635f625f5e5f5e7b7b9f9b9f9b7f7f5f5e47637fbcdcc0dddddcdddddcdddcdddddedddddddcdedddcdbdbc1736f8f93949393beb4b5bed9d9d9ded9dedefe
fefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedddededed9d9d9c1d9c1c1bebeb4be93b1939394c1a1b0d88cb4afb4b4b8467f7b7a5e5f5e5f5f5e635f625f625f635f625f5e5f5f5e635f5e5e5f7e7b9f9f9f9f7f5e6346464646464646477f
bcdcdddddcdddddddddddcdededddcdddddedbdbdca16f8f939493a1bea1bec1c1d9c1ded9ded9fefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefed9ded9ded9d9c1bfbfbeb4b5b4bea1949393b5c1afd48fb0b4afd4b85f7a7f7b635e
635e625f5e5e5f5e5f5e5e5e5f5e635e625f5e5e7b7f9b9f9b9f7b7e5e4746464646464646464646465f9fbcddddddc1dddcdddddddedddddddedddcdbd96f6f9393939493beb4bebfbfd9d9d9defedefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefededed9ded9d9c1d9c1bfb4bea1be93be9393beb4b4d48cd3b4b39b7b637a7f7b5e5f5f5e635f625f625f635f625f5e5e5f7a7f7b9f9f9f9f7f637a63474646464646464646464646464646465f9fbcdddddddddddcdddededddcdddedbdc938f6f90939393beb4bec1c1c1d9d9ded9defefefefefefefe
fe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9feded9d9ded9c1bfbebfbeb4bea1b0949393bed8b4b0b0b4d49b7f5e5f5f7f7f5e625f5e5e5f5e5f5e5e5e5f5e7f9b9f9b9f9f7f5f5e46465e635e464646464646464646464646464646464646
5e9fbcdddec1dddddddedddddededcb46f6f93939394b0b4b5bebfd9d9d9d9deded9fefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefed9ded9d9d9d9c1c1beb4b5b494a1939493d5c1c187d4b47b7f5e635e7f7b7b5f5e5f
635e635e625f7f9b9fb89f9f7f5f5e46464646465f5e46464646464646464646464646464646464646464762bcc0dddddcdddededdddded96f6f8f939493bea1beb5c1bfc1d9dededefefedefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefeded9defaded9d9d9c1d9bfc1b5be97be93be939393c1de8fb0d87b7e5f5e5f5e7f7f7a635e5e5f5e7b9b9f9b9f9f7f635f464646464646465f625f46464646464646464646464646464646464646464646467fbcdddedddddededdfe936f90939393b0a1beb4b5c1d9d9d9d9ded9defefefefefefefefefe000000
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefededddeded9ded9c1bfc1bec1b5b4be93b1939393bec18bd85f7b625f625f5e7b7f7b7b9f9b9f9f9f7f7f5e47464646464646464646465e5f464646464646464646464646464646464646464646464646
46467f9fc1dedefedebf8f738f93949394b4b5c1c1d9c1d9ded9fedefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefadeddded9d9d9d9d9c1bfb4b5b4bea19394938fd9b1c15f5e5f5e5f5e637bbc9fbc9f9f7f5f
5e464646464646464646464646465e635e46464646464646464646464646464646464646464646465e465e465e7fbcddfedd936f8f939393beb0b5b4bebfc1d9d9d9defed9fefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefededdfaded9ded9d9c1d9bec1b5b4be939493939493beb4467b627b7b9fb89f9b9f9f7b5e4646464646464646464646464646465e635e464646465f465e465e475e5f5e5f5e5e5f4a5f465f5e475e47464746475e5f9fddb46f93939493b1a1b4b5c1bfc1d9d9dededefefefefefefefefefefefefe000000fefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9ded9d9d9c1bfbeb4beb4b09493939393b97b9f9b9f9f9f7f7f635e635e4646464646474646464746475f465f465f5e635e5e5f625e5f5e5f5e5e5e5e625e5e5f5e5e5e5e465e5e465e5e7a9f9f
9b9793946f8f949393b0a1beb5bec1d9d9d9d9ded9d9fefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9c1d9c1bfc1b5bea193be93938fa1bf9f7f5e5f465f5e5e5f5e5f637b625f5f5e63
5e7b625e5e625e5e9a7e5e5e5e5e465e46454645464546452a452d2d2d292e29111515455e9eb897936f6f8f6f939393949394b4b4bebebfc1d9ded9dededefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefeded9deded9ded9d9c1beb5b4bebe93b094938f93b5b89f625d5e465e45465d7a7e5e45452d412d2d29292d29292d5e622d11121511111111161111161111151112111115111545467a9b97936f6f6f8f938f9393949393be97beb5c1c1c1d9d9d9ded9fefefefefefefefefefefefefefe000000fefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9d9d9c1d9c1c1b5b4a194939394936f9377975e2d11111211162d5e5d2d11121115121116111116455e2d111115111111161511111511111512111515465e7a9b9793938f6f6f8f938f94939493
94b0a1beb4beb5c1c1bfd9d9dededefedefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9ded9d9d9c1d9bec1b5beb494939394938f8f73939b5e2d151111152d5e5e15111611111511
15112d62451215161115121511111511161116112d455e7a9ba1936f6f8f6f738f93909393939393b0a194b4b5b4c1bfbfd9d9d9d9ded9faddfefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefedefededed9d9d9c1bfbec1b4be97beb0939493938f6f73977a5e2d151211455e4515111512111512155d5e151111111611151116111215112d455e7a9b9793736f6f936f8f938f949393939493949394b4beb4b5bebec1c1c1d9ded9dedededefefefefefefefefefefefefefefe000000fefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9ded9d9c1bfbebeb5b4b49493a1939493938f6f93937b7a451512455e5d2e1115111611455e451215111515111215112d455e7a7b979393736f6f8f8f938f939493939393b1a19393beb4bea1bec1be
c1c1bfd9d9d9d9ded9fefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9deded9d9d9c1c1bfc1beb5b4be939493939493948f6f6f939b7a2d15455e45151215112d5e4515
1511161112112d455e7e9b97938f6f6f8f6f909393949394939393be9394a193bebe97b4b5c1bebfc1bfd9c1ded9dededdfedefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefed9ded9ded9d9d9c1bfbeb4beb4bea1b19393939393938f8f73939b5e2d455e4515111245622d111211112d45627a9b97938f6f736f8f938f9393939393939394939493bea1bebeb4c1b5b5c1bebfc1d9c1d9d9d9ded9defadefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeddded9ded9d9c1bfc1bfbeb4be97be93be93939493938f8f7393979a7e7a4515455d46112d45627a7b979373936f6f6f908f939493939493939493b1a193beb497beb4b4bebebec1bfc1c1d9c1d9d9d9d9de
faded9defefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9faded9d9d9d9c1d9c1bebfb4b5b4bea1b1939393949393908f7394a19e7a465d625d5e7e9ba1936f
6f6f8f6f8f9393939393939394a193be93bea1bebeb4b5b5c1b5bec1bfc1bfc1d9d9d9d9d9d9deded9dedddefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
dededed9deded9d9d9c1bfc1bec1b5b4be97be939493939393938f6f8f949b9e9e9b9b97936f6f6f8f8f938f93949394939394939493b0be97b4beb4b5b4bec1bec1bfc1c1bfc1d9d9d9d9d9ded9deded9defefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9d9d9c1d9c1bfbec1beb5b4beb4a1949394939393938f93949793738f6f8f938f939393949393b093949793beb4b4b5b4b5bec1bec1bfc1bfc1d9c1d9d9d9ded9d9d9deded9defed9defefefefefe
fefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefed9defeded9ded9d9d9c1d9bfc1bebeb4b5b4beb4979493949393939393949394939394939394939394
a194a1beb4b5b4b5b5c1bec1bfc1bfc1d9c1d9d9d9d9d9ded9d9defaded9dedefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefeded9ded9ded9d9d9d9c1d9c1bfc1bebeb4b5b4b4be93be93949393939393939393939493b4be97beb4beb4bebebec1c1c1bfc1d9c1d9d9d9d9d9ded9deded9dedededdfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9deded9ded9d9d9c1d9c1bfc1bebeb5b4b4be97b4be93be93949794b4be97b4b5b4b5c1bebfc1bfc1c1bfd9d9d9d9d9d9ded9ded9ded9deded9fefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeded9ded9deded9d9d9d9c1bfc1c1c1bfbec1b5b5b4b5b4beb4b5b4b5b4b5bebebec1bfc1c1d9
c1d9ded9d9d9ded9ded9deddfadeddfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefeded9deded9ded9d9d9d9d9d9c1bfc1c1bec1bec1b5c1bec1bec1c1c1c1d9c1d9d9d9d9ded9d9faded9dedefefefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefededed9feded9deded9d9d9d9d9d9d9c1bfc1d9c1d9c1d9c1bfd9d9d9d9d9d9ded9ded9dededdfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefeddded9ded9ded9deded9d9d9ded9d9d9d9d9d9d9ded9d9ded9deded9fefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefedefedefed9dedededed9ded9ded9ded9ded9dededdfefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefedefefaddfefefedefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe000000fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe
fefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefefe0000000500000007010100000003000000000000}}{\i\shad\lang1024 
\par }\pard \s16\qc\ri360\widctlpar\tqc\tx4320\tqr\tx8640 {\i\lang2057 
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s21\qr\widctlpar \f5\fs36\lang2057 {\cs20\b\fs40 An Introduction to the Dylan C FFI
\par }\pard \s21\widctlpar {\cs20\b\fs40 
\par }We aim to cover the following:
\par 
\par \pard \s21\li720\widctlpar How C types and objects are represented in Dylan
\par \pard \s21\widctlpar 
\par \tab How to allocate, manipulate, and deallocate C objects in Dylan
\par 
\par \tab How to import C functions for use in Dylan code
\par 
\par \pard \s21\li720\widctlpar How to export Dylan functions for use in C code, both as static DLL interfaces and as callbacks
\par \pard \s21\widctlpar 
\par \tab How to use and re-use the existing Win32 interface libraries 
\par 
\par \pard \s21\li720\widctlpar How to use the Harlequin Dylan environment for mixed-language development
\par \pard \s21\widctlpar 
\par \pard \s21\li720\widctlpar How to avoid the gotchas
\par \pard\plain \widctlpar \f7\fs20 {\b\f5\fs32\lang2057 
\par }\pard \qr\widctlpar {\b\f5\fs32\lang2057 \page }{\cs20\b\f5\fs40\lang2057 C Types in Dylan
\par }\pard \widctlpar {\b\f5\fs32\lang2057 
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 A C type is {\i designated} by a corresponding Dylan class
\par {\f4 
\par }Designator classes for the core C types are predefined: e.g. {\b\f11 <C-char>}{\b , 
\par }{\b\f11 <C-int>}{\b , }{\b\f11 <C-unsigned-long>}{\b , }{\b\f11 <C-char*>}{\b . }Note the naming convention.
\par {\f4 
\par }A designator class is used when specifying field, argument, and result types in interface definitions
\par {\f4 
\par }A class designating a C pointer type is concrete and is used to represent instances of that C type in Dylan: e.g. {\b\f11 char*} is represented by instances of the Dylan designator class {\b\f11 <C-char*>}
\par {\f4 
\par }A class designating a C integer or floating point type is abstract and one of Dylan's standard numeric classes is used to represent instances of that C type in Dylan: e.g. {\b\f11 char} is represented by instances of Dylan {\b\f11 <integer>}{\b\f29 

\par 
\par }\pard\plain \qr\widctlpar \f7\fs20 {\b\f5\fs32\lang2057 \page }{\cs20\b\f5\fs40\lang2057 Heap Allocation of C Types in Dylan
\par }\pard \widctlpar {\b\f5\fs32\lang2057 
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 Instances of C pointer types can be constructed using {\b make}: e.g. 
\par {\b make(<C-char*>)} allocates enough space for a single {\b char} and returns a pointer to it in the form of an instance of {\b <C-char*>}
\par 
\par Larger arrays can be constructed by providing an {\b element-count:} keyword: e.g. {\b make(<C-char*>, element-count: 100)} allocates space for 100 {\b char}s and returns a pointer to that space.
\par 
\par Memory can be freed using {\b destroy}: e.g. {\b 
\par 
\par \tab let chars = make(<C-char*>, element-count: 100);
\par \tab ... // do something with chars
\par \tab destroy(chars);}
\par 
\par The Dylan object remains available after the memory it referred to has been deallocated, and dereferencing it afterwards carries the same penalties as it does in C
\par 
\par \pard\plain \qr\widctlpar \f7\fs20 {\b\f5\fs32\lang2057 \page }{\cs20\b\f5\fs40\lang2057 Stack Allocation of C Types in Dylan
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 
\par Alternatively, memory can be allocated on the stack using 
\par {\b with-stack-structure}, a macro that takes the same arguments as {\b make} but automatically deallocates the memory when the code in its body exits: e.g.
\par 
\par \tab {\b with-stack-structure 
\par \tab     (chars :: <C-char*>, element-count: 100)
\par \tab   ... // do something with chars
\par \tab end;}
\par 
\par Harlequin Dylan\rquote s automatic finalization mechanism is also a possibility for handling deallocation of C memory, but this is not directly supported by the FFI.
\par 
\par \pard\plain \qr\widctlpar \f7\fs20 {\b\f5\fs32\lang2057 \page }{\cs20\b\f5\fs40\lang2057 Manipulation of C Pointers as Arrays in Dylan
\par }\pard \widctlpar {\f5\fs32\lang2057 
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 Dylan's {\b element} and {\b element-setter} and their syntactic abbreviation {\b [ ]} can be used to access an element of a C array: e.g.
\par 
\par \tab {\b let ints = make(<C-int*>, element-count: 50);
\par \tab for (i from 0 below 50)
\par \tab   ints[ i ] := i;
\par \tab finally
\par \tab   ints
\par \tab end;}
\par 
\par The function {\b pointer-value-address} can be used to get a pointer to an array element: e.g.
\par 
\par {\b \tab let midpointer :: <C-int*> 
\par           = pointer-value-address(ints, index: 25);
\par \tab // so, midpointer[0] and ints[25] now access the \tab 
\par }\pard \s21\li720\widctlpar {\b // same location in memory
\par }\pard \s21\widctlpar 
\par Pointer arithmetic via {\b +} and {\b -} is not supported in Dylan. The appropriate combination {\b pointer-value-address} and {\b element} can be used as required.
\par 
\par \pard\plain \qr\widctlpar \f7\fs20 {\cs20\b\f5\fs40\lang2057 \page C Pointers as Addresses in Dylan
\par }\pard \widctlpar {\f5\fs32\lang2057 
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 A pointer object's address is returned as a numeric value by {\b pointer-address(pointer)}
\par 
\par Two pointer objects can be compared using the standard Dylan comparison operations {\b <}, {\b =}, and so on, just as they can be with the corresponding operators in C.
\par 
\par A NULL pointer for a pointer designator class is returned by {\b null-pointer}: e.g. {\b null-pointer(<C-char*>)}
\par 
\par A pointer can be tested for being NULL with {\b null-pointer?(pointer)}
\par \pard\plain \widctlpar \f7\fs20 {\f5\fs32\lang2057 
\par }\pard \qr\widctlpar {\b\f5\fs32\lang2057 \page }{\cs20\b\f5\fs40\lang2057 C Type Casting and Introspection in Dylan
\par }{\f5\fs32\lang2057 
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 The generic function {\b C-type-cast} emulates the behaviour of casting in C: e.g.
\par 
\par \tab {\b let ints :: <C-int*> = make(<C-int*>, element-count: 50);
\par \tab let chars :: <C-char*> = C-type-cast(<C-char*>, ints);
\par \tab let null-ptr :: <C-char*> = C-type-cast(<C-char*>, 0);
\par        let addr = C-type-cast(<C-unsigned-long>, ints);
\par }
\par The introspection functions {\b size-of} and {\b alignment-of} can be called on designator classes, the former where {\b sizeof} might be used in C for interfaces that require it: e.g.
\par 
\par \pard \s21\li720\widctlpar {\b let struct = make(<PlotParamsEx*>);
\par Plot(struct, size-of(<PlotParamsEx>));
\par }\pard \s21\widctlpar {\b 
\par }
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 Using C Functions in Dylan
\par }\pard \s21\widctlpar 
\par A C function is described to Dylan using {\b define C-function}. Example:
\par \pard \s21\li720\widctlpar 
\par {\b\f11 WINUSERAPI 
\par }{\f11 int 
\par }{\b\f11 WINAPI
\par }{\f11 MessageBoxA}{\b\f11 (
\par     }{\f11 HWND hWnd}{\b\f11  ,
\par     }{\f11 LPCSTR lpText}{\b\f11 ,
\par     }{\f11 LPCSTR lpCaption}{\b\f11 ,
\par     }{\f11 UINT uType}{\b\f11 );
\par }\pard \s21\widctlpar 
\par becomes:{\b 
\par }\pard \s21\li720\widctlpar {\b\f11 
\par define C-function }{\f11 MessageBox}{\b\f11 
\par   parameter }{\f11 hWnd}{\b\f11       :: }{\f11 <HWND>}{\b\f11 ;
\par   parameter }{\f11 lpText}{\b\f11     :: }{\f11 <LPCSTR>}{\b\f11 ;
\par   parameter }{\f11 lpCaption}{\b\f11  :: }{\f11 <LPCSTR>}{\b\f11 ;
\par   parameter }{\f11 uType}{\b\f11      :: }{\f11 <UINT>}{\b\f11 ;
\par   result    }{\f11 value}{\b\f11      :: }{\f11 <C-int>}{\b\f11 ;
\par   c-name: }{\f11 \ldblquote MessageBoxA\rdblquote }{\b\f11 , c-modifiers: }{\f11 \ldblquote }{\b\f11 __stdcall}{\f11 \rdblquote }{\b\f11 ;
\par end C-function;
\par }\pard \s21\qr\li720\widctlpar {\b \page }{\cs20\b\fs40 C Function Parameter Annotations
\par }\pard \s21\widctlpar {\cs20 
\par Pointer-typed parameters may optionally be annotated in one of the following ways to give a more convenient interface:
\par 
\par }\pard \s21\li720\widctlpar {\cs20\b\f11 input        parameter}{\cs20\f11  ptr             }{\cs20\b\f11 ::}{\cs20\f11  <C-int*>}{\cs20\b\f11 ;}{\cs20\b 
\par 
\par }\pard \s21\widctlpar {\cs20 A straightforward input parameter, the same as specifying just }{\cs20\b parameter}{\cs20  with no annotations. The Dylan function defined accepts a }{\cs20\b <C-int*>}{\cs20  in this position.
\par }\pard \s21\li720\widctlpar {\cs20\b 
\par }{\cs20\b\f11 output       parameter }{\cs20\f11 int-ref-result  }{\cs20\b\f11 ::}{\cs20\f11  <C-int*>}{\cs20\b\f11 ;}{\cs20\b 
\par }\pard \s21\widctlpar {\cs20 
\par An output parameter: i.e. a reference passed in order to allow the C function to return an extra value. The Dylan function defined does not take an argument corresponding to this parameter, instead constructing the }{\cs20\b <C-int*>}{\cs20 
 automatically and dereferencing it on return to yield an extra result value (an }{\cs20\b <integer>}{\cs20  in this case).
\par }\pard \s21\li720\widctlpar {\cs20\b\f11 
\par input output parameter}{\cs20\f11  int-call-by-ref }{\cs20\b\f11 ::}{\cs20\f11  <C-int*>}{\cs20\b\f11 ;}{\cs20 
\par }\pard \s21\widctlpar {\cs20 
\par A parameter used in a call by reference style. The Dylan function accepts an }{\cs20\b <integer>}{\cs20  in this position and returns and extra }{\cs20\b <integer>}{\cs20  result in this case. Again, allocation and dereference of the }{\cs20\b <C-int*>}{
\cs20  is handled internally.
\par }\pard \s21\qr\widctlpar {\cs20\b\fs40 C Function Options
\par }\pard \s21\widctlpar 
\par A {\b c-name:} must normally be specified, giving the C name of the function being interfaced to.
\par 
\par Some {\b c-modifiers:} may optionally be specified in a string. The legal values are platform dependent. Under win32, the calling convention specifiers {\b __stdcall} and {\b __syscall} are recognized. Most win32 API functions are {\b __stdcall}
 functions.
\par 
\par Example:
\par 
\par \pard \s21\li720\widctlpar {\b\f11 define C-function }{\f11 DisplayStatus
\par }{\b\f11   parameter}{\f11  status-code :: <C-int>;
\par }{\b\f11   result    }{\f11 success     :: <C-int>;
\par }{\b\f11   //}{\f11  Options are always listed last, comma-separated
\par }{\b\f11   c-name: }{\f11 \ldblquote DisplayStatus\rdblquote }{\b\f11 , c-modifiers:}{\f11  \ldblquote }{\b\f11 __stdcall}{\f11 \rdblquote ;
\par }{\b\f11 end C-function;}{\b 
\par }\pard \s21\widctlpar {\b 
\par }As a special case, the {\b indirect:} {\b #t} option results in the definition of a C function {\i caller} rather than a Dylan wrapper around a particular C function. In this case, {\b c-name:}
 may not be specified, and the resulting Dylan function accepts a C function pointer as an extra first argument.
\par \pard \s21\qr\widctlpar {\cs20\b\fs40 Exporting Dylan Functions to C
\par }\pard \s21\widctlpar 
\par A C interface to a Dylan function can be defined with {\b define C-callable-wrapper}. Example:
\par \pard \s21\li720\widctlpar 
\par {\f11 char *PromptUser(char *text);
\par }\pard \s21\widctlpar 
\par as used by some C code may be implemented via:
\par 
\par \pard \s21\li720\widctlpar {\b\f11 define C-callable-wrapper }{\f11 $Prompt-pointer }{\b\f11 of }{\f11 Prompt
\par }{\b\f11   parameter}{\f11  prompt-text }{\b\f11 ::}{\f11  <C-string>}{\b\f11 ;
\par   result}{\f11     input-text  }{\b\f11 ::}{\f11  <C-string>}{\b\f11 ;
\par   c-name: \ldblquote }{\f11 PromptUser}{\b\f11 \rdblquote , export: #t;
\par end C-callable-wrapper;
\par }\pard \s21\widctlpar {\b 
\par Prompt} is the Dylan function being wrapped. {\b $Prompt-pointer} gets bound to a C function pointer to the wrapper function. {\b PromptUser} is the name seen by C. The {\b export:} option ensures that {\b PromptUser}
 is exported from the Dylan DLL containing the definition.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 C Callable Wrapper Parameter Annotations
\par }\pard \s21\widctlpar 
\par The possibilities are the same as for {\b define C-function} parameters. {\cs20 Pointer-typed parameters may optionally be annotated in one of the following ways to give a more convenient interface:
\par 
\par }\pard \s21\li720\widctlpar {\cs20\b\f11 input        parameter}{\cs20\f11  ptr             }{\cs20\b\f11 ::}{\cs20\f11  <C-int*>}{\cs20\b\f11 ;}{\cs20\b 
\par 
\par }\pard \s21\widctlpar {\cs20 The default. The wrapped Dylan function must accept a }{\cs20\b <C-int*>}{\cs20  in this position.
\par }\pard \s21\li720\widctlpar {\cs20\b 
\par }{\cs20\b\f11 output       parameter }{\cs20\f11 int-ref-result  }{\cs20\b\f11 ::}{\cs20\f11  <C-int*>}{\cs20\b\f11 ;}{\cs20\b 
\par }\pard \s21\widctlpar {\cs20 
\par The Dylan function must return an extra }{\cs20\b <integer> }{\cs20 parameter in this case. Storing this extra result into the reference provided by the C caller is handled automatically by }{\cs20\b define C-callable-wrapper}{\cs20 .
\par }\pard \s21\li720\widctlpar {\cs20\b\f11 
\par input output parameter}{\cs20\f11  int-call-by-ref }{\cs20\b\f11 ::}{\cs20\f11  <C-int*>}{\cs20\b\f11 ;}{\cs20 
\par }\pard \s21\widctlpar {\cs20 
\par The wrapped Dylan function must accept an }{\cs20\b <integer>}{\cs20  in this position and return an extra }{\cs20\b <integer>}{\cs20  result in this case. Dereference of the }{\cs20\b <C-int*>}{\cs20 
 provided by the C caller on call, and storage of the extra result value on return is handled automatically be }{\cs20\b define C-callable-wrapper}{\cs20 .
\par }\pard \s21\qr\widctlpar {\cs20 \page }{\cs20\b\fs40 C Callable Wrapper Options
\par }\pard \s21\widctlpar 
\par The {\b c-name:} is optional, in case the C callable wrapper is only to be used via its function pointer as a callback.
\par 
\par As with {\b define C-function}, some {\b c-modifiers:} may optionally be specified in a string. The legal values are platform dependent. Under win32, the calling convention specifiers {\b __stdcall} and {\b __syscall}
 are recognized. Most win32 API functions are {\b __stdcall} functions.
\par 
\par Again, options are always listed last, comma-separated.{\cs20 
\par }\pard \s21\qr\widctlpar \page {\cs20\b\fs40 Using C Variables in Dylan
\par }\pard \s21\widctlpar 
\par Accessor functions for C variables can be defined using {\b define C-variable}:
\par 
\par \pard \s21\li720\widctlpar {\f11 int process_count;}
\par \pard \s21\widctlpar 
\par could be imported using:
\par 
\par \pard \s21\li720\widctlpar {\b\f11 define C-variable}{\f11  process-count }{\b\f11 :: }{\f11 <C-int>
\par }{\b\f11   c-name: \ldblquote }{\f11 process_count}{\b\f11 \rdblquote , import: #t;
\par end C-variable;}{\f11 
\par }\pard \s21\widctlpar 
\par which defines {\b process-count()} and {\b process-count-setter(new-value)}. The option {\b import: #t} is required if the C variable is imported from a different DLL.
\par 
\par Addresses of C variables can be accessed using {\b define C-address}:
\par 
\par \pard \s21\li720\widctlpar {\b\f11 define C-address}{\f11  $process-count-pointer }{\b\f11 :: }{\f11 <C-int*>
\par }{\b\f11   c-name: \ldblquote }{\f11 process_count}{\b\f11 \rdblquote , import: #t;
\par end C-address;
\par }\pard \s21\widctlpar {\b 
\par }which binds {\b $process-count-pointer} to an instance of {\b <C-int*>}.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 Exporting Dylan Variables to C
\par }\pard \s21\widctlpar 
\par There is no support for exporting Dylan variables to C directly. 
\par 
\par Instead, encapsulating functional interfaces must be defined and exported.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 Linking Dylan with C Libraries
\par }\pard \s21\widctlpar 
\par Having defined a Dylan interface to C functions or variables from a C library, that library must be linked with the Dylan code.
\par 
\par Use {\b Project>Insert File\'85} in the environment\rquote s project window to include the appropriate .lib files in your project. 
\par 
\par The project manager will link against the .libs listed in the project\rquote s file list the next time the project is built.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 Using C Structs and Unions in Dylan
\par }\pard \s21\widctlpar 
\par C structs can be described using {\b define C-struct}:
\par 
\par \pard \s21\li720\widctlpar {\b\f11 typedef struct }{\f11 tagPOINT}{\b\f11 
\par \{
\par     }{\f11 LONG  x}{\b\f11 ;
\par     }{\f11 LONG  y}{\b\f11 ;
\par \} }{\f11 POINT}{\b\f11 , *}{\f11 LPPOINT}{\b\f11 ;
\par }\pard \s21\widctlpar {\b 
\par }might become (using our standard win32 name translation conventions):
\par \pard \s21\li720\widctlpar {\b\f11 
\par define C-struct}{\f11  <POINT>
\par   }{\b\f11 slot}{\f11  x-value        }{\b\f11 ::}{\f11  <LONG>;
\par   }{\b\f11 slot}{\f11  y-value        }{\b\f11 ::}{\f11  <LONG>;
\par   }{\b\f11 //}{\f11  Options are listed last, comma separated:
\par   }{\b\f11 pointer-type-name:}{\f11  <LPPOINT>}{\b\f11 ,
\par }{\f11   }{\b\f11 c-name:}{\f11  "struct tagPOINT";
\par }{\b\f11 end C-struct}{\f11  <POINT>;
\par }\pard \s21\widctlpar 
\par which defines the {\b <POINT>} struct designator class, {\b x-value}, {\b x-value-setter}, {\b y-value}, and {\b y-value-setter} accessors, and the {\b <LPPOINT>} pointer designator class. The {\b define C-union}
 macro for describing C unions is analogous.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 C Struct and Union Slot Annotations
\par }\pard \s21\widctlpar 
\par Embedded array and bitfield slots of structs and unions require special syntax. For example:
\par 
\par \pard \s21\li720\widctlpar {\f11   char name[64];
\par }\pard \s21\widctlpar {\f11 
\par }becomes:
\par \pard \s21\li720\widctlpar {\f11 
\par   }{\b\f11 array slot}{\f11  name-array }{\b\f11 :: }{\f11 <C-char>, }{\b\f11 length:}{\f11  64,
\par }{\b\f11     address-getter: }{\f11 name-value}{\b\f11 ;
\par }\pard \s21\widctlpar {\b 
\par }Note the modified naming convention used. The accessors {\b name-array} and {\b name-array-setter} have an extra index argument. 
\par 
\par The {\b address-getter:} option can be used with any slot, but is particularly useful for embedded arrays and structs. The getter returns a pointer to the location of the slot within the given struct.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 Subtyping and Mapping C Designator Classes
\par }\pard \s21\widctlpar 
\par Special subclasses of designator classes may be defined with {\b define C-subtype }to further distinguish instances by type or create a hierarchy, to mix in Dylan protocols, or to add Dylan slots. Example:
\par 
\par \pard\plain \li720\widctlpar \f7\fs20 {\b\f11\fs36\lang2057 define}{\f11\fs36\lang2057  }{\b\f11\fs36\lang2057 open}{\f11\fs36\lang2057  }{\b\f11\fs36\lang2057 C-subtype}{\f11\fs36\lang2057  <HANDLE> }{\b\f11\fs36\lang2057 (}{\f11\fs36\lang2057 <C-void*>}
{\b\f11\fs36\lang2057 )}{\f11\fs36\lang2057  }{\b\f11\fs36\lang2057 end}{\f11\fs36\lang2057 ;
\par }{\b\f11\fs36\lang2057 define}{\f11\fs36\lang2057  }{\b\f11\fs36\lang2057 C-subtype}{\f11\fs36\lang2057  <HWND> }{\b\f11\fs36\lang2057 (}{\f11\fs36\lang2057 <HANDLE>}{\b\f11\fs36\lang2057 ) end;
\par define}{\f11\fs36\lang2057  }{\b\f11\fs36\lang2057 C-subtype}{\f11\fs36\lang2057  <HEVENT> }{\b\f11\fs36\lang2057 (}{\f11\fs36\lang2057 <HANDLE>}{\b\f11\fs36\lang2057 ) end;}{\f11\fs36\lang2057 
\par }\pard\plain \s21\widctlpar \f5\fs36\lang2057 
\par Further, automatic conversion behaviour may be specified with {\b define C-mapped-subtype}. Example:
\par 
\par \pard \s21\li720\widctlpar {\b\f11 define C-mapped-subtype }{\f11 <c-string> }{\b\f11 (}{\f11 <C-char*>,}{\b\f11  }{\f11 <string>}{\b\f11 ) 
\par   export-map }{\f11 type-union(<byte-string>, <c-string>),}{\b\f11 
\par     export-function: }{\f11 export-c-string}{\b\f11 ;
\par   pointer-type }{\f11 <c-string*>;}{\b\f11 
\par end C-mapped-subtype;
\par 
\par }\pard \s21\widctlpar Now, where {\b <C-string}> is specified in an interface, {\b export-c-string} will be used to convert objects passing from Dylan to C. {\b <C-string>} also mixes in {\b <string>} and so can be extended to conform to Dylan\rquote 
s collection protocols.
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 The Provided Win32 Interface Libraries
\par }\pard \s21\widctlpar 
\par Many of the core win32 interfaces have already been imported in raw form.
\par 
\par The Dylan library {\b win32-common} is particularly useful when importing new win32 functionality because it defines and exports designator classes for the fundamental C types used in win32 interfaces such as {\b UINT}, {\b HWND}, and so on.
\par 
\par By exploiting the win32 definitions already available, transcribing interfaces is often straightforward.
\par 
\par The name translation convention used when importing win32 interfaces is simple and minimal. 
\par 
\par {\pntext\pard\plain\f1\fs36 \'a8\tab}\pard \s21\fi-360\li360\widctlpar\tx360{\*\pn \pnlvlblt\pnf1\pnstart1\pnindent360\pnhang{\pntxtb \'a8}}Type names are enclosed in {\b <} {\b >}. Example: {\b HWND} becomes {\b <HWND>}
\par {\pntext\pard\plain\f1\fs36 \'a8\tab}Constants are prefixed with {\b $}. Example: {\b OPAQUE} becomes {\b $OPAQUE}
\par {\pntext\pard\plain\f1\fs36 \'a8\tab}Underscores become hyphens. Example: {\b RT_MENU} becomes {\b $RT-MENU}
\par {\pntext\pard\plain\f1\fs36 \'a8\tab}Mixed case names are left as-is. Example: {\b CreateWindow} becomes {\b CreateWindow}, not {\b Create-Window}
\par \pard \s21\widctlpar {\b 
\par }See the online documentation for more details of the standard win32 mapping.
\par \pard \s21\qr\li720\widctlpar {\cs20\b\fs40 \page Gotchas and Further Reading
\par }\pard \s21\widctlpar 
\par Integer mapping can be a problem. Harlequin Dylan\rquote s {\b <integer>} type is not wide enough to represent all 32 bit integers. The standard win32 mapping often falls back to {\b <machine-word>} where a particular value can\rquote 
t be represented as an {\b <integer>}.
\par 
\par New FFI types including structs, unions, subtypes, and pointer types cannot be defined in interactive development mode libraries because the compiler needs access to full static information to process them. Define raw FFI interfaces in a production mode l
ibrary and test in an interactive mode client.
\par 
\par Non local exits taken across foreign calls can result in unpredictable behaviour. In particular, cleanups registered in the language leapt across, C or Dylan, will not be respected.
\par 
\par There isn\rquote t time in a 1 hour presentation to cover everything in detail. Refer to the online documentation for the full set of options, operations, and utility classes available. 
\par 
\par The existing win32, OLE, and COM interfaces and example code provided with Harlequin Dylan are an valuable resource. It\rquote s worth browsing them to learn more about how to use the FFI effectively. 
\par \pard \s21\qr\widctlpar \page {\cs20\b\fs40 Oh, and a Few More Gotchas\'85
\par }\pard \s21\widctlpar 
\par The Dylan FFI does not allow direct access to immediate struct values. 
\par 
\par Where structs are passed by value, an instance of a pointer to the struct type must be supplied.
\par 
\par Where structs are returned by value, an instance of a pointer to the struct type is allocated and returned (so requiring deallocation).
\par 
\par A pointer to a struct embedded in another struct or union can be got using an {\b address-getter:} for the slot.
\par 
\par Anonymous embedded structs must be given names and defined at top level when transcribing interfaces.
\par }