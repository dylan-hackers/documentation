%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 595.3 841.9 0 1 18 FMDOCUMENT
0 0 /Times-Bold FMFONTDEFINE
1 0 /Times-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Helvetica-Bold FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /Helvetica FMFONTDEFINE
6 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "i" 1
%%BeginPaperSize: A4
%%EndPaperSize
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
113.4 694.5 544.26 739.85 R
7 X
0 0 0 1 0 0 0 K
V
0 18 Q
0 X
(Pr) 113.4 699.54 T
(ototype Dylan Pr) 132.06 699.54 T
(oducer) 262.72 699.54 T
255.13 433.71 544.26 473.39 R
7 X
V
1 10 Q
0 X
(The status of this document is \322W) 255.13 466.73 T
(ORKING\323 if signed only by its) 389.89 466.73 T
(author\050s\051; it is \322ISSUED\323 if signed by the W) 255.13 454.73 T
(orkpac) 433.65 454.73 T
(ka) 461.22 454.73 T
(g) 470.56 454.73 T
(e Mana) 475.46 454.73 T
(g) 505.63 454.73 T
(er; it) 510.53 454.73 T
(is \322DELIVERED\323 if signed by the Pr) 255.13 442.73 T
(oject Dir) 404.68 442.73 T
(ector) 440.14 442.73 T
(.) 459.58 442.73 T
255.13 615.12 544.26 657.65 R
7 X
V
2 12 Q
0 X
(T) 255.13 649.65 T
(on) 261.5 649.65 T
(y Mann, Rod Mo) 273.32 649.65 T
(yse,) 355.87 649.65 T
(Simon Green, Robert Mathe) 255.13 635.65 T
(ws) 390.81 635.65 T
(Harlequin Ltd.) 255.13 621.65 T
(________________________) 396.86 621.65 T
255.13 547.09 544.26 586.78 R
7 X
V
0 X
(Jor) 255.13 578.78 T
(gen Bundg) 269.58 578.78 T
(aard) 321.85 578.78 T
(________________________) 396.86 578.78 T
(DDC International) 255.13 564.78 T
255.13 501.74 544.26 530.09 R
7 X
V
0 X
(Gianluigi Castelli) 255.13 522.09 T
(________________________) 396.86 522.09 T
(Project Director) 255.13 508.09 T
113.4 629.3 226.78 657.65 R
7 X
V
0 F
0 X
(Written by:) 113.4 649.65 T
113.4 558.43 226.78 586.78 R
7 X
V
0 X
(Issued by:) 113.4 578.78 T
113.4 501.74 226.78 530.09 R
7 X
V
0 X
(Deli) 113.4 522.09 T
(v) 133.94 522.09 T
(er) 139.82 522.09 T
(ed by:) 150.26 522.09 T
113.4 388.36 226.78 416.7 R
7 X
V
0 X
-0.07 (Pr) 113.4 408.7 P
-0.07 (oject deli) 125.84 408.7 P
-0.07 (v) 171.97 408.7 P
-0.07 (erable id:) 177.85 408.7 P
255.13 388.36 544.26 416.7 R
7 X
V
2 F
0 X
(TR4.2.4-01) 255.13 408.7 T
113.4 331.66 226.78 360.01 R
7 X
V
0 F
0 X
(Document code:) 113.4 352.01 T
113.4 274.97 226.78 303.32 R
7 X
V
0 X
(Date of \336rst issue:) 113.4 295.32 T
(Date of last issue:) 113.4 281.32 T
113.4 218.28 226.78 246.62 R
7 X
V
0 X
(A) 113.4 238.62 T
(v) 120.86 238.62 T
(ailability:) 126.74 238.62 T
255.13 331.66 544.26 360.01 R
7 X
V
2 F
0 X
(Harlequin GLUE4.2.4 - 01) 255.13 352.01 T
255.13 274.97 544.26 303.32 R
7 X
V
0 X
(1995-10-31) 255.13 295.32 T
(1995-10-31) 255.13 281.32 T
255.13 218.28 544.26 246.62 R
7 X
V
0 X
(Con\336dential) 255.13 238.62 T
255.13 155.91 544.26 189.93 R
7 X
V
1 10 Q
0 X
-0.12 (The contents of this document ar) 255.13 183.26 P
-0.12 (e con\336dential and subject to copyrights) 384.99 183.26 P
(pr) 255.13 171.26 T
(otection. Any infring) 263.57 171.26 T
(ement will be pr) 345.97 171.26 T
(osecuted by law) 410.24 171.26 T
(.) 473.38 171.26 T
198.43 59.54 544.26 133.24 R
7 X
V
1 0 1 0 0 1 0 K
0 93 Q
0 X
1 0 1 0 0 1 0 K
(omi/glue) 198.43 71.24 T
0 0 0 1 0 0 0 K
5.68 19.85 102.06 813.55 R
3 X
0 0 0 1 0 0 0 K
V
0.5 H
2 Z
0 X
N
113.4 751.19 544.26 790.87 R
7 X
V
1 0 1 0 0 1 0 K
0 0 0 1 0 0 0 K
0 36 Q
0 X
(ESPRIT PR) 116.53 736.07 T
(OJECT 6062) 302.47 736.07 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "i" 1
%%Page: "ii" 2
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "ii" 2
%%Page: "iii" 3
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
297.65 753.95 531.65 771.95 R
7 X
V
0 X
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
0 12 Q
(CHANGE HIST) 63.65 736.95 T
(OR) 147.78 736.95 T
(Y) 165.36 736.95 T
(This is the \336rst v) 63.65 696.95 T
(ersion.) 148.87 696.95 T
FMENDPAGE
%%EndPage: "iii" 3
%%Page: "iv" 4
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
297.65 753.95 531.65 771.95 R
7 X
V
0 X
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
FMENDPAGE
%%EndPage: "iv" 4
%%Page: "v" 5
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10 Q
(v) 526.09 84.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
0 0 0 1 0 0 0 K
0 0 0 0 1 1 1 K
3 15 Q
7 X
0 0 0 0 1 1 1 K
(1.) 63.65 734.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 X
0 0 0 1 0 0 0 K
(Contents) 90.65 734.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(1.) 63.65 713.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pur) 90.65 713.95 T
(pose) 109.86 713.95 T
(1) 144.53 713.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.) 63.65 693.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Executi) 90.65 693.95 T
(v) 129.19 693.95 T
(e Summary) 135.07 693.95 T
(1) 206.06 693.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(2.1) 90.65 680.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Ov) 117.65 680.62 T
(ervie) 130.93 680.62 T
(w of the Dylan Producer) 152.64 680.62 T
(1) 271.78 680.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2) 90.65 667.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter Outline) 117.65 667.62 T
(2) 199.22 667.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(2.2.1) 117.65 655.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter 3. The Dylan Implementation Model) 144.65 655.29 T
(2) 335.74 655.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2.2) 117.65 643.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter 4. The Dylan Producer Representation) 144.65 643.29 T
(2) 342.39 643.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2.3) 117.65 631.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter 5. T) 144.65 631.29 T
(ok) 194.12 631.29 T
(ens and the ICR) 204.02 631.29 T
(2) 278.18 631.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2.4) 117.65 619.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter 6. The Dylan Runtime) 144.65 619.29 T
(2) 278.25 619.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2.5) 117.65 607.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter 7. Dylan Features Mapped to ANDF) 144.65 607.29 T
(2) 334.9 607.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2.2.6) 117.65 595.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Chapter 8. Conclusions) 144.65 595.29 T
(3) 248.26 595.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(3.) 63.65 575.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Dylan Implementation Model) 90.65 575.95 T
(3) 276.98 575.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.1) 90.65 562.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Object Representation) 117.65 562.62 T
(3) 226.71 562.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(3.1.1) 117.65 550.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 144.65 550.29 T
(agging Scheme) 149.96 550.29 T
(3) 221.34 550.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.2) 117.65 538.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Inte) 144.65 538.29 T
(gers and Characters) 160.05 538.29 T
(3) 248.91 538.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.3) 117.65 526.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Box) 144.65 526.29 T
(ed Objects) 161.17 526.29 T
(4) 213.66 526.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.4) 117.65 514.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 144.65 514.29 T
(ariably Sized Objects) 150.76 514.29 T
(4) 246.3 514.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.5) 117.65 502.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Function Objects) 144.65 502.29 T
(5) 223.26 502.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.2) 90.65 489.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Calling Con) 117.65 489.62 T
(v) 170.69 489.62 T
(ention) 176.02 489.62 T
(5) 214.52 489.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(3.2.1) 117.65 477.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(External Entry Point Con) 144.65 477.29 T
(v) 245.64 477.29 T
(ention) 250.49 477.29 T
(6) 285.49 477.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.2) 117.65 465.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Internal Entry Point Con) 144.65 465.29 T
(v) 242.86 465.29 T
(ention) 247.71 465.29 T
(7) 282.71 465.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.3) 117.65 453.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Ar) 144.65 453.29 T
(gument P) 155.02 453.29 T
(assing Mechanisms) 192.93 453.29 T
(7) 280.98 453.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.3) 90.65 440.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Special Features) 117.65 440.62 T
(8) 201.05 440.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(3.3.1) 117.65 428.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unwind-protect) 144.65 428.29 T
(8) 215.75 428.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.3.2) 117.65 416.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(bind-e) 144.65 416.29 T
(xit) 170.05 416.29 T
(8) 190.61 416.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.3.3) 117.65 404.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(apply) 144.65 404.29 T
(9) 176.87 404.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.3.4) 117.65 392.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Multiple V) 144.65 392.29 T
(alues) 187.71 392.29 T
(9) 218.26 392.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(3.4) 90.65 379.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Garbage Collection) 117.65 379.62 T
(10) 214.49 379.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.5) 90.65 366.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Name Mangling) 117.65 366.62 T
(10) 200.45 366.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(4.) 63.65 346.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Dylan Pr) 90.65 346.95 T
(oducer Repr) 159.77 346.95 T
(esentation) 223.87 346.95 T
(11) 287.87 346.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.1) 90.65 333.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Introduction) 117.65 333.62 T
(11) 183.03 333.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.2) 90.65 320.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(P) 117.65 320.62 T
(arsing and Macro Expansion) 123.6 320.62 T
(12) 260.77 320.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3) 90.65 307.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Con) 117.65 307.62 T
(v) 135.54 307.62 T
(erting) 140.88 307.62 T
(13) 177.54 307.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.4) 90.65 294.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Optimisation) 117.65 294.62 T
(14) 186.1 294.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(4.4.1) 117.65 282.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Introduction) 144.65 282.29 T
(14) 204.09 282.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.4.2) 117.65 270.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Optimisation Examples) 144.65 270.29 T
(15) 248.82 270.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.5) 90.65 257.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Code Generation: The \324Emit\325 Protocols) 117.65 257.62 T
(16) 302.18 257.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(4.5.1) 117.65 245.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(emit@of) 144.65 245.29 T
(fset on a <lambda-leaf>) 179.72 245.29 T
(17) 285.14 245.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.5.2) 117.65 233.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(emit-lambda-body-prolog) 144.65 233.29 T
(17) 257.97 233.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.5.3) 117.65 221.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(emit-lambda-body) 144.65 221.29 T
(17) 228.53 221.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.5.4) 117.65 209.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(emit-lambda-body-epilog) 144.65 209.29 T
(18) 256.86 209.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.5.5) 117.65 197.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(emit@of) 144.65 197.29 T
(fset for the ANDF Back End) 179.72 197.29 T
(18) 304.42 197.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(5.) 63.65 177.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 90.65 177.95 T
(ok) 97.55 177.95 T
(ens and the ICR) 110.1 177.95 T
(18) 205.1 177.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(5.1) 90.65 164.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Ov) 117.65 164.62 T
(ervie) 130.93 164.62 T
(w of Dylan T) 152.64 164.62 T
(ok) 210.72 164.62 T
(ens) 221.61 164.62 T
(18) 247.27 164.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.1.1) 117.65 152.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Coercions) 144.65 152.29 T
(19) 195.2 152.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.2) 117.65 140.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Constants) 144.65 140.29 T
(19) 194.1 140.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.3) 117.65 128.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Primiti) 144.65 128.29 T
(v) 172.19 128.29 T
(e Operations) 177.04 128.29 T
(19) 237.86 128.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.4) 117.65 116.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(String Routines) 144.65 116.29 T
(19) 217.16 116.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "v" 5
%%Page: "vi" 6
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10 Q
(vi) 63.65 84.9 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0 Z
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.1.5) 117.65 738.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Runtime Structures) 144.65 738.29 T
(19) 232.15 738.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.6) 117.65 726.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Thread Primiti) 144.65 726.29 T
(v) 203.01 726.29 T
(es) 207.86 726.29 T
(19) 226.19 726.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.7) 117.65 714.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Frequently Used Operations) 144.65 714.29 T
(19) 267.41 714.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.1.8) 117.65 702.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Shape De\336nitions) 144.65 702.29 T
(19) 226.04 702.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(5.2) 90.65 689.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 117.65 689.62 T
(ok) 123.49 689.62 T
(en Use in Relation to the ICR) 134.38 689.62 T
(19) 275.54 689.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.2.1) 117.65 677.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <entry>) 144.65 677.29 T
(20) 229.81 677.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.2) 117.65 665.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <e) 144.65 665.29 T
(xit>) 197.91 665.29 T
(20) 224.11 665.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.3) 117.65 653.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <if>) 144.65 653.29 T
(20) 215.37 653.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.4) 117.65 641.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <reference>) 144.65 641.29 T
(20) 246.45 641.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.5) 117.65 629.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <return>) 144.65 629.29 T
(20) 233.14 629.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.6) 117.65 617.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <combination>) 144.65 617.29 T
(20) 259.26 617.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.7) 117.65 605.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <funn) 144.65 605.29 T
(y-function-combination>) 211.8 605.29 T
(21) 322.43 605.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.8) 117.65 593.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <multiple-v) 144.65 593.29 T
(alue-combination>) 235.04 593.29 T
(21) 320.67 593.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.2.9) 117.65 581.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ICR Node <primiti) 144.65 581.29 T
(v) 220.6 581.29 T
(e-combination-leaf>) 225.45 581.29 T
(21) 317.18 581.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(5.3) 90.65 568.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Primiti) 117.65 568.62 T
(v) 147.94 568.62 T
(es and T) 153.28 568.62 T
(ok) 189.66 568.62 T
(en Mappings) 200.55 568.62 T
(21) 268.69 568.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(5.3.1) 117.65 556.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(General T) 144.65 556.29 T
(ok) 184.11 556.29 T
(ens) 194.01 556.29 T
(22) 217.34 556.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.2) 117.65 544.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(General Primiti) 144.65 544.29 T
(v) 206.34 544.29 T
(es) 211.19 544.29 T
(22) 229.52 544.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.3) 117.65 532.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Lo) 144.65 532.29 T
(w-Le) 155.51 532.29 T
(v) 176.36 532.29 T
(el Apply Primiti) 181.21 532.29 T
(v) 245.97 532.29 T
(es) 250.82 532.29 T
(23) 269.15 532.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.4) 117.65 520.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Inte) 144.65 520.29 T
(ger Primiti) 160.05 520.29 T
(v) 202.86 520.29 T
(es) 207.71 520.29 T
(25) 226.04 520.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.5) 117.65 508.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Float Primiti) 144.65 508.29 T
(v) 195.25 508.29 T
(es) 200.1 508.29 T
(33) 218.43 508.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.6) 117.65 496.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Accessor Primiti) 144.65 496.29 T
(v) 211.34 496.29 T
(es) 216.19 496.29 T
(38) 234.52 496.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.7) 117.65 484.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Other T) 144.65 484.29 T
(ok) 175.23 484.29 T
(ens Produced When Emitting Nodes) 185.13 484.29 T
(45) 340.67 484.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5.3.8) 117.65 472.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Literal Dumping) 144.65 472.29 T
(48) 221.59 472.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(6.) 63.65 452.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Dylan Runtime) 90.65 452.95 T
(49) 203.99 452.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(6.1) 90.65 439.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ANDF T) 117.65 439.62 T
(ok) 156.18 439.62 T
(en Expansions) 167.07 439.62 T
(49) 241.93 439.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(6.1.1) 117.65 427.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Example Expansion 1: INTEGER) 144.65 427.29 T
(49) 290.47 427.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.2) 117.65 415.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Example Expansion 2: CHARA) 144.65 415.29 T
(CTER) 272.3 415.29 T
(50) 307.86 415.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.3) 117.65 403.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Example Expansion 3: GO) 144.65 403.29 T
(T) 251.74 403.29 T
(O_IF_TR) 257.67 403.29 T
(UE) 296.16 403.29 T
(50) 319.49 403.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.4) 117.65 391.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Example Expansion 4: GO) 144.65 391.29 T
(T) 251.74 391.29 T
(O_IF_F) 257.67 391.29 T
(ALSE) 288.6 391.29 T
(50) 323.6 391.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.5) 117.65 379.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Example Expansion 5: SLO) 144.65 379.29 T
(T_READ, SLO) 256.19 379.29 T
(T_WRITE, and STR) 318.01 379.29 T
(UCT_A) 400.66 379.29 T
(CCESS) 432.48 379.29 T
(50) 473.05 379.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(6.2) 90.65 366.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dylan C Runtime Reference) 117.65 366.62 T
(51) 253.6 366.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(6.2.1) 117.65 354.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Runtime Primiti) 144.65 354.29 T
(v) 227.19 354.29 T
(es) 232.04 354.29 T
(51) 250.37 354.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(7.) 63.65 334.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Dylan F) 90.65 334.95 T
(eatur) 131.35 334.95 T
(es Mapped to ANDF) 158.46 334.95 T
(57) 275.45 334.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(7.1) 90.65 321.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Sample of Dylan Features) 117.65 321.62 T
(57) 263.07 321.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2) 90.65 308.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The Dylan Features Mapped to ANDF) 117.65 308.62 T
(58) 298.2 308.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10 Q
(7.2.1) 117.65 296.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(De\336ning V) 144.65 296.29 T
(ariables) 188.26 296.29 T
(58) 229.36 296.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.2) 117.65 284.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(De\336ning Functions) 144.65 284.29 T
(59) 231.6 284.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.3) 117.65 272.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(De\336ning Methods of Generic Functions) 144.65 272.29 T
(60) 314.08 272.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.4) 117.65 260.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Ev) 144.65 260.29 T
(aluating V) 155.51 260.29 T
(ariables and Calling Functions) 196.34 260.29 T
(61) 328.28 260.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.5) 117.65 248.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Calling Generic Functions) 144.65 248.29 T
(61) 260.2 248.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.6) 117.65 236.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(if) 144.65 236.29 T
(61) 160.76 236.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.7) 117.65 224.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Multiple-V) 144.65 224.29 T
(alue Generation) 188.54 224.29 T
(62) 262.13 224.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.8) 117.65 212.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Multiple-V) 144.65 212.29 T
(alue Binding) 188.54 212.29 T
(63) 249.93 212.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.9) 117.65 200.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(bind-e) 144.65 200.29 T
(xit) 170.05 200.29 T
(63) 190.61 200.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.10) 117.65 188.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unwind-protect) 144.65 188.29 T
(64) 215.75 188.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2.11) 117.65 176.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Closures) 144.65 176.29 T
(66) 189.65 176.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(8.) 63.65 156.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Conclusions) 90.65 156.95 T
(67) 164.66 156.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9.) 63.65 136.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Refer) 90.65 136.95 T
(ences and Bibliograph) 119.08 136.95 T
(y) 232.92 136.95 T
(69) 250.92 136.95 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "vi" 6
%%Page: "1" 7
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(1) 526.09 84.9 T
3 15 Q
(1.) 63.65 734.95 T
(Purpose) 90.65 734.95 T
2 11 Q
-0.04 (This deli) 63.65 712.62 P
-0.04 (v) 102.15 712.62 P
-0.04 (erable and its associated softw) 107.48 712.62 P
-0.04 (are demonstration represent the culmination of Harlequin\325) 241.03 712.62 P
-0.04 (s ef) 496.22 712.62 P
-0.04 (forts) 511.48 712.62 P
0.01 (in W) 63.65 699.62 P
0.01 (orkpackage 4 of the GLUE project. The original goal w) 84.47 699.62 P
0.01 (as to establish the ef) 328.84 699.62 P
0.01 (\336cac) 417.82 699.62 P
0.01 (y of ANDF\325) 438.42 699.62 P
0.01 (s support) 491.61 699.62 P
-0.16 (for the compilation of adv) 63.65 686.62 P
-0.16 (anced languages by de) 177.61 686.62 P
-0.16 (v) 276.13 686.62 P
-0.16 (eloping a Dylan producer) 281.46 686.62 P
-0.16 (. This includes the de) 392.49 686.62 P
-0.16 (v) 485.37 686.62 P
-0.16 (elopment) 490.71 686.62 P
0.1 (of the appropriate load-time and runtime support for adv) 63.65 673.62 P
0.1 (anced languages based on ANDF hooks. Dylan is) 312.83 673.62 P
0.28 0.01 (an adv) 63.65 660.62 B
0.28 0.01 (anced, modern, dynamically typed, object-oriented programming language which contains features) 92.72 660.62 B
0.23 (not found in most other languages, such as automatic memory management and an e) 63.65 647.62 P
0.23 (xception mechanism.) 437.93 647.62 P
0.28 0.21 (The language is still under de) 63.65 634.62 B
0.28 0.21 (v) 200.78 634.62 B
0.28 0.21 (elopment, although most of the design w) 206.32 634.62 B
0.28 0.21 (ork that remains concerns the) 395.25 634.62 B
(standard language libraries rather than the semantics of the language itself.) 63.65 621.62 T
0.28 0.03 (This task w) 63.65 596.62 B
0.28 0.03 (as tackled in four stages. In the f) 115.18 596.62 B
0.28 0.03 (irst stage Harlequin used their background in e) 260.63 596.62 B
0.28 0.03 (xisting imple-) 469.55 596.62 B
0.28 0.14 (mentations of de) 63.65 583.62 B
0.28 0.14 (v) 139.47 583.62 B
0.28 0.14 (elopment en) 144.94 583.62 B
0.28 0.14 (vironments to identify the features which require support from ANDF to) 200.38 583.62 B
0.28 0.03 (allo) 63.65 570.62 B
0.28 0.03 (w both the ef) 79.98 570.62 B
0.28 0.03 (f) 138.61 570.62 B
0.28 0.03 (icient compilation of Dylan and the ef) 141.69 570.62 B
0.28 0.03 (f) 311.49 570.62 B
0.28 0.03 (icient implementation of its runtime system. The) 314.57 570.62 B
0.22 (second stage took the results of this w) 63.65 557.62 P
0.22 (ork and be) 232.23 557.62 P
0.22 (g) 278.94 557.62 P
0.22 (an the incremental de) 284.38 557.62 P
0.22 (v) 379.17 557.62 P
0.22 (elopment of a Dylan producer) 384.51 557.62 P
0.22 (. In) 516.76 557.62 P
0.28 0.12 (the f) 63.65 544.62 B
0.28 0.12 (irst instance, a small subset of Dylan w) 83.76 544.62 B
0.28 0.12 (as implemented, leading to an initial e) 262.63 544.62 B
0.28 0.12 (v) 436.36 544.62 B
0.28 0.12 (aluation of ANDF\325) 441.7 544.62 B
0.28 0.12 (s) 527.37 544.62 B
(ability to support the rele) 63.65 531.62 T
(v) 173.98 531.62 T
(ant language features and runtime system.) 179.2 531.62 T
0.01 (The third stage focused on inter) 63.65 506.62 P
0.01 (-language w) 203.08 506.62 P
0.01 (orking. Softw) 257.05 506.62 P
0.01 (are components written in ANDF-supported lan-) 317.45 506.62 P
0.2 (guages were combined with Dylan producer output, with the aim of ensuring that no performance penalty) 63.65 493.62 P
(w) 63.65 480.62 T
(as imposed on the other ANDF-based components.) 71.48 480.62 T
0.28 0.17 (This deli) 63.65 455.62 B
0.28 0.17 (v) 104 455.62 B
0.28 0.17 (erable reports the w) 109.5 455.62 B
0.28 0.17 (ork of the fourth stage, the incremental e) 200.7 455.62 B
0.28 0.17 (xtension of the implementation) 388.66 455.62 B
0.18 (to) 63.65 442.62 P
0.18 (w) 71.93 442.62 P
0.18 (ards a prototype Dylan system. The incremental approach allo) 79.76 442.62 P
0.18 (wed the impact of v) 354.31 442.62 P
0.18 (arious language fea-) 442.11 442.62 P
0.28 0 (tures on the runtime to be studied, and also allo) 63.65 429.62 B
0.28 0 (wed the controlled introduction of a range of optimisation) 274.42 429.62 B
(techniques used by Harlequin.) 63.65 416.62 T
(This w) 63.65 391.62 T
(ork w) 93.79 391.62 T
(as sponsored by the Commission of the European Communities.) 119.03 391.62 T
3 15 Q
(2.) 63.65 349.95 T
(Ex) 90.65 349.95 T
(ecutive Summar) 108.84 349.95 T
(y) 224.87 349.95 T
3 12 Q
(2.1) 63.65 310.95 T
(Over) 90.65 310.95 T
(vie) 118.12 310.95 T
(w of the Dylan Pr) 134.62 310.95 T
(oducer) 231.73 310.95 T
2 11 Q
0.25 (An important design goal for Dylan has been to pro) 63.65 289.62 P
0.25 (vide a de) 292.71 289.62 P
0.25 (gree of algorithmic interchangeability in cer-) 332.76 289.62 P
-0.17 (tain important subsystems of the implementation such as the g) 63.65 276.62 P
-0.17 (arbage collector) 336.19 276.62 P
-0.17 (, the function calling mecha-) 406.14 276.62 P
0.28 0.14 (nism, and the manipulation of tagged data. The abstraction of these important subsystems allo) 63.65 263.62 B
0.28 0.14 (ws rapid) 492.85 263.62 B
-0.07 (e) 63.65 250.62 P
-0.07 (xperimentation with dif) 68.37 250.62 P
-0.07 (ferent implementations for these systems. ANDF link and install times are signi\336-) 171.84 250.62 P
0.13 (cantly lo) 63.65 237.62 P
0.13 (wer than compilation times for real programs such as the Dylan compiler itself. The de) 101.69 237.62 P
0.13 (v) 485.37 237.62 P
0.13 (elopment) 490.71 237.62 P
-0.07 (and e) 63.65 224.62 P
-0.07 (v) 86.82 224.62 P
-0.07 (aluation of ne) 92.04 224.62 P
-0.07 (w language implementation strate) 152.12 224.62 P
-0.07 (gies can be hampered by the time tak) 300.53 224.62 P
-0.07 (en to recompile) 463.36 224.62 P
0.28 0.01 (the compiler) 63.65 211.62 B
0.28 0.01 (, language test suites, and bench-marking programs. By mo) 118.96 211.62 B
0.28 0.01 (ving as man) 383.05 211.62 B
0.28 0.01 (y of the details of the) 436.77 211.62 B
0.27 (implementation as possible into the Dylan tok) 63.65 198.62 P
0.27 (en library) 267.42 198.62 P
0.27 (, the \322edit-compile-e) 309.43 198.62 P
0.27 (v) 400.42 198.62 P
0.27 (aluate\323 c) 405.64 198.62 P
0.27 (ycle for e) 444.53 198.62 P
0.27 (xperimen-) 486.44 198.62 P
0.28 0.22 (tation with implementation techniques has been signif) 63.65 185.62 B
0.28 0.22 (icantly shortened. Changes to tok) 313.88 185.62 B
0.28 0.22 (en def) 468.97 185.62 B
0.28 0.22 (initions) 497.12 185.62 B
0.18 (become ef) 63.65 172.62 P
0.18 (fecti) 109.06 172.62 P
0.18 (v) 128.33 172.62 P
0.18 (e as soon as the producer output is re-installed, and the pre) 133.67 172.62 P
0.18 (viously-produced test-suite and) 393.2 172.62 P
-0.15 (benchmark programs need only be re-installed with the modi\336ed tok) 63.65 159.62 P
-0.15 (en library before the ne) 363.74 159.62 P
-0.15 (w implementa-) 465.5 159.62 P
(tion strate) 63.65 146.62 T
(gy can be e) 107.18 146.62 T
(v) 156.69 146.62 T
(aluated.) 161.91 146.62 T
FMENDPAGE
%%EndPage: "1" 7
%%Page: "2" 8
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(2) 63.65 84.9 T
2 11 Q
-0.02 (The Dylan tok) 63.65 737.62 P
-0.02 (en library has been carefully designed to support the v) 127.05 737.62 P
-0.02 (arying combinations of runtime acti) 365.19 737.62 P
-0.02 (v-) 522.48 737.62 P
-0.16 (ity described abo) 63.65 724.62 P
-0.16 (v) 138.32 724.62 P
-0.16 (e, while k) 143.65 724.62 P
-0.16 (eeping the e) 186.3 724.62 P
-0.16 (xternally visible set of tok) 238.97 724.62 P
-0.16 (ens simple. This is desirable as a simpler) 353.11 724.62 P
0.28 0.02 (tok) 63.65 711.62 B
0.28 0.02 (en library helps to k) 77.64 711.62 B
0.28 0.02 (eep the compiler back-end relati) 166.95 711.62 B
0.28 0.02 (v) 310.01 711.62 B
0.28 0.02 (ely simple: comple) 315.36 711.62 B
0.28 0.02 (xity is mo) 399.74 711.62 B
0.28 0.02 (v) 444.3 711.62 B
0.28 0.02 (ed out of the com-) 449.65 711.62 B
0.17 (piler and into the tok) 63.65 698.62 P
0.17 (en library) 155.89 698.62 P
0.17 (. A manageable tok) 197.8 698.62 P
0.17 (en library also pro) 283.74 698.62 P
0.17 (vides the possibility of future e) 364.44 698.62 P
0.17 (xtensi-) 501.71 698.62 P
0.23 (bility without the need for e) 63.65 685.62 P
0.23 (xtensi) 187.14 685.62 P
0.23 (v) 213.15 685.62 P
0.23 (e modi\336cation to the compiler) 218.48 685.62 P
0.23 (. In the ideal case, only the de\336nitions in) 351.39 685.62 P
(the tok) 63.65 672.62 T
(en library w) 93.79 672.62 T
(ould need to be changed.) 146.83 672.62 T
(The follo) 63.65 647.62 T
(wing six chapters gi) 104.01 647.62 T
(v) 192.03 647.62 T
(e the details of this w) 197.36 647.62 T
(ork with rele) 291.05 647.62 T
(v) 346.99 647.62 T
(ant conclusions.) 352.21 647.62 T
3 12 Q
(2.2) 63.65 609.95 T
(Chapter Outline) 90.65 609.95 T
3 10 Q
(2.2.1) 63.65 575.29 T
(Chapter 3. The Dylan Implementation Model) 90.89 575.29 T
2 11 Q
0.01 (This chapter e) 63.65 554.62 P
0.01 (xplains the techniques which are used by the producer to implement the dynamic features of) 125.82 554.62 P
(Dylan.) 63.65 541.62 T
3 10 Q
(2.2.2) 63.65 507.29 T
(Chapter 4. The Dylan Pr) 90.89 507.29 T
(oducer Representation) 203.5 507.29 T
2 11 Q
0.28 0.11 (This chapter gi) 63.65 486.62 B
0.28 0.11 (v) 131.56 486.62 B
0.28 0.11 (es the details of the representations used in the Dylan producer) 137.01 486.62 B
0.28 0.11 (, and relates them to the) 422.53 486.62 B
(requirements of the language.) 63.65 473.62 T
(It contains sections on:) 63.65 448.62 T
4 F
(\245) 99.65 429.62 T
2 F
(P) 113.4 429.62 T
(arsing and macro e) 119.35 429.62 T
(xpansion) 202.58 429.62 T
4 F
(\245) 99.65 413.62 T
2 F
(Con) 113.4 413.62 T
(v) 131.3 413.62 T
(erting) 136.63 413.62 T
4 F
(\245) 99.65 397.62 T
2 F
(Optimising) 113.4 397.62 T
4 F
(\245) 99.65 381.62 T
2 F
(Code generation: the \324emit\325 protocols) 113.4 381.62 T
3 10 Q
(2.2.3) 63.65 347.29 T
(Chapter 5. T) 90.89 347.29 T
(okens and the ICR) 147.88 347.29 T
2 11 Q
0.28 0 (This gi) 63.65 326.62 B
0.28 0 (v) 94.54 326.62 B
0.28 0 (es details of the structure of the Dylan T) 99.88 326.62 B
0.28 0 (ok) 278.57 326.62 B
0.28 0 (en Library) 289.47 326.62 B
0.28 0 (, with e) 335.2 326.62 B
0.28 0 (xamples of ho) 368.31 326.62 B
0.28 0 (w the tok) 430.97 326.62 B
0.28 0 (ens map onto) 472.39 326.62 B
(the Implicit Continuation Representation \050ICR\051 described in Chapter 4.) 63.65 313.62 T
3 10 Q
(2.2.4) 63.65 279.29 T
(Chapter 6. The Dylan Runtime) 90.89 279.29 T
2 11 Q
(This chapter describes the details of the Dylan runtime.) 63.65 258.62 T
(It contains sections on:) 63.65 233.62 T
4 F
(\245) 99.65 214.62 T
2 F
(ANDF tok) 113.4 214.62 T
(en e) 160.04 214.62 T
(xpansions) 177.89 214.62 T
4 F
(\245) 99.65 198.62 T
2 F
(Primiti) 113.4 198.62 T
(v) 143.69 198.62 T
(e functions in C) 149.03 198.62 T
3 10 Q
(2.2.5) 63.65 164.29 T
(Chapter 7. Dylan Features Mapped to ANDF) 90.89 164.29 T
2 11 Q
(This chapter tak) 63.65 143.62 T
(es a range of Dylan features and describes ho) 134.41 143.62 T
(w the) 333.29 143.62 T
(y map onto ANDF) 357.26 143.62 T
(.) 438.57 143.62 T
FMENDPAGE
%%EndPage: "2" 8
%%Page: "3" 9
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(3) 526.09 84.9 T
(2.2.6) 63.65 738.29 T
(Chapter 8. Conc) 90.89 738.29 T
(lusions) 167.37 738.29 T
2 11 Q
(This chapter presents conclusions and contains a bibliograph) 63.65 717.62 T
(y) 330.92 717.62 T
(.) 335.7 717.62 T
3 15 Q
(3.) 63.65 675.95 T
(The Dylan Implementation Model) 90.65 675.95 T
3 12 Q
(3.1) 63.65 636.95 T
(Object Representation) 90.65 636.95 T
2 11 Q
-0.01 (Dylan objects are dynamically typed. The language permits a program to determine the class of an) 63.65 615.62 P
-0.01 (y object) 496.52 615.62 P
0.28 0.09 (at runtime. Harlequin\325) 63.65 602.62 B
0.28 0.09 (s implementation achie) 163.74 602.62 B
0.28 0.09 (v) 268.13 602.62 B
0.28 0.09 (es this by using a standard con) 273.56 602.62 B
0.28 0.09 (v) 412.13 602.62 B
0.28 0.09 (ention for associating the) 417.56 602.62 B
(type with an object based on tagging.) 63.65 589.62 T
0.05 (In man) 63.65 564.62 P
0.05 (y circumstances, the Dylan compiler can statically determine the type of an object. This kno) 94.39 564.62 P
0.05 (wledge) 499.88 564.62 P
-0.24 (can be used to select an alternati) 63.65 551.62 P
-0.24 (v) 204.3 551.62 P
-0.24 (e representation which is more ef) 209.63 551.62 P
-0.24 (\336cient than the canonical representation.) 354.5 551.62 P
-0.16 (F) 63.65 538.62 P
-0.16 (or e) 69.6 538.62 P
-0.16 (xample, the canonical representation of a double \337oat object in Dylan is as a pointer to heap-allocated) 86.07 538.62 P
-0.02 (storage which contains the IEEE bit pattern of the double \337oat in addition to a reference to the Dylan class) 63.65 525.62 P
0.28 0.08 (object) 63.65 512.62 B
0 F
0.28 0.08 (<double-f) 94.12 512.62 B
0.28 0.08 (loat>) 139.62 512.62 B
2 F
0.28 0.08 (. The compiler may choose to represent the v) 164.01 512.62 B
0.28 0.08 (alue as a direct bit pattern, where) 367.72 512.62 B
0.28 0.08 (v) 517.6 512.62 B
0.28 0.08 (er) 523.02 512.62 B
(this does not violate the semantics of the program.) 63.65 499.62 T
3 10 Q
(3.1.1) 63.65 465.29 T
(T) 90.89 465.29 T
(a) 96.2 465.29 T
(g) 101.66 465.29 T
(ging Sc) 107.67 465.29 T
(heme) 143.69 465.29 T
2 11 Q
0.12 (All Dylan v) 63.65 444.62 P
0.12 (alues are represented as data of the same size, or) 115.55 444.62 P
5 10 Q
0.12 (SHAPE) 332.65 444.62 P
2 11 Q
0.12 (. The size is the size of a pointer) 366.55 444.62 P
0.12 (. The) 508.93 444.62 P
0.28 0.24 (bit pattern of these v) 63.65 431.62 B
0.28 0.24 (alues contains tag bits which indicate whether the v) 160.24 431.62 B
0.28 0.24 (alue is actually a pointer) 401.48 431.62 B
0.28 0.24 (, or) 515.98 431.62 B
(whether it is a direct v) 63.65 418.62 T
(alue.) 161.44 418.62 T
0.21 (T) 63.65 393.62 P
0.21 (o some e) 69.49 393.62 P
0.21 (xtent, the details of the tagging scheme are abstracted by means of ANDF tok) 108.84 393.62 P
0.21 (ens. Ho) 452.97 393.62 P
0.21 (we) 486.51 393.62 P
0.21 (v) 499.06 393.62 P
0.21 (er) 504.39 393.62 P
0.21 (, the) 512.5 393.62 P
0.28 0.1 (compiler is a) 63.65 380.62 B
0.28 0.1 (w) 122.17 380.62 B
0.28 0.1 (are of the groups of types which are similarly tagged. Since there are three major groups) 130.1 380.62 B
-0.04 (\050inte) 63.65 367.62 P
-0.04 (gers, characters and e) 83.65 367.62 P
-0.04 (v) 177.94 367.62 P
-0.04 (erything else\051, the anticipated representation for all platforms is to use tw) 183.28 367.62 P
-0.04 (o bits.) 504.79 367.62 P
3 10 Q
(3.1.2) 63.65 195.29 T
(Integ) 90.89 195.29 T
(er) 114.88 195.29 T
(s and Character) 124.18 195.29 T
(s) 199.61 195.29 T
2 11 Q
0.28 0.08 (Inte) 63.65 174.62 B
0.28 0.08 (gers and characters are represented as direct v) 80.9 174.62 B
0.28 0.08 (alues, using the tag bits as the only indication of type.) 288.07 174.62 B
0.28 0.04 (The tagging scheme w) 63.65 161.62 B
0.28 0.04 (ould normally use the least signif) 164.47 161.62 B
0.28 0.04 (icant tw) 313 161.62 B
0.28 0.04 (o bits \050although this is only f) 348.63 161.62 B
0.28 0.04 (inally deter-) 477.46 161.62 B
0.28 0.02 (mined by the tok) 63.65 148.62 B
0.28 0.02 (en library at install time\051. W) 138.89 148.62 B
0.28 0.02 (ith the normal scheme, a character or inte) 265 148.62 B
0.28 0.02 (ger is con) 449.55 148.62 B
0.28 0.02 (v) 492.6 148.62 B
0.28 0.02 (erted to) 497.95 148.62 B
0.28 0.22 (its untagged representation by arithmetic right shifting by tw) 63.65 135.62 B
0.28 0.22 (o bits. Similarly the con) 346.74 135.62 B
0.28 0.22 (v) 458.46 135.62 B
0.28 0.22 (ersion from an) 464.02 135.62 B
(untagged to a tagged representation is to shift left and add in the tag bits.) 63.65 122.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 240.63 317.62 T
(able 1.) 246.48 317.62 T
(T) 281.3 317.62 T
(agging Scheme) 287.14 317.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(T) 236.15 292.62 T
(ag Bits) 242.47 292.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 290.15 292.62 T
(ype) 296.67 292.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(00) 236.15 272.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Heap Allocated) 290.15 272.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(01) 236.15 258.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Inte) 290.15 258.62 T
(gers) 307.09 258.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 236.15 244.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Characters) 290.15 244.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(11) 236.15 230.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Unused) 290.15 230.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
284.15 310.95 284.15 225.95 2 L
V
0.25 H
0 Z
N
230.15 281.95 365.15 281.95 2 L
V
0.5 H
N
230.15 267.95 365.15 267.95 2 L
V
0.25 H
N
230.15 253.95 365.15 253.95 2 L
V
N
230.15 239.95 365.15 239.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 9
%%Page: "4" 10
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(4) 63.65 84.9 T
2 11 Q
0.28 0.15 (Operations on these v) 63.65 737.62 B
0.28 0.15 (alues \050e.g., addition, or other arithmetic operations\051 are al) 162.9 737.62 B
0.28 0.15 (w) 426.89 737.62 B
0.28 0.15 (ays performed on the) 434.86 737.62 B
0.28 0.25 (untagged representation. This is sub-optimal, because it is possible to perform arithmetic operations) 63.65 724.62 B
0.03 (directly on the tagged v) 63.65 711.62 P
0.03 (alues. It is planned to impro) 167.36 711.62 P
0.03 (v) 290.15 711.62 P
0.03 (e this mechanism at a later date, along with a re) 295.49 711.62 P
0.03 (vision) 504.75 711.62 P
(of the tagging scheme.) 63.65 698.62 T
3 10 Q
(3.1.3) 63.65 664.29 T
(Bo) 90.89 664.29 T
(x) 103.92 664.29 T
(ed Objects) 109.38 664.29 T
2 11 Q
0.28 0.09 (Apart from inte) 63.65 643.62 B
0.28 0.09 (gers and characters, all Dylan objects are indirectly represented as) 133.82 643.62 B
1 F
0.28 0.09 (boxed) 436.33 643.62 B
2 F
0.28 0.09 ( v) 463.05 643.62 B
0.28 0.09 (alues \050that is,) 471.48 643.62 B
-0.03 (the) 63.65 630.62 P
-0.03 (y are pointers to heap allocated box) 76.93 630.62 P
-0.03 (es\051. The runtime system is responsible for ensuring that these box) 233 630.62 P
-0.03 (ed) 521.26 630.62 P
0.28 0.18 (v) 63.65 617.62 B
0.28 0.18 (alues are appropriately tagged, because the runtime system pro) 69.05 617.62 B
0.28 0.18 (vides the allocation service, and must) 358.66 617.62 B
(ensure appropriate alignment.) 63.65 604.62 T
0.11 (Box) 63.65 579.62 P
0.11 (ed objects are dynamically identi\336ed by their \336rst slot, which is an identi\336cation wrapper) 81.82 579.62 P
0.11 (. This identi-) 474.9 579.62 P
-0.03 (\336cation wrapper \050itself a box) 63.65 566.62 P
-0.03 (ed Dylan object\051 contains a pointer to the class of the object it is wrapping, as) 190.46 566.62 P
(well as some encoded information for the g) 63.65 553.62 T
(arbage collector about which slots should be traced.) 254.53 553.62 T
(Figure 1.) 242.58 323.62 T
(Box) 287.8 323.62 T
(ed Objects) 305.98 323.62 T
0.28 0.02 (Note that tw) 63.65 300.62 B
0.28 0.02 (o indirections are necessary to f) 118.71 300.62 B
0.28 0.02 (ind the class of an object. In practice, this is a rare operation,) 259.74 300.62 B
0.28 0.18 (because almost all dynamic class testing within Dylan is implicit, and the implementation can use the) 63.65 287.62 B
0.28 0.2 (wrapper for these implicit tests. Note that there is potentially a man) 63.65 274.62 B
0.28 0.2 (y-to-one correspondence between) 376.71 274.62 B
(wrapper objects and class objects.) 63.65 261.62 T
0.28 0.1 (The Dylan compiler b) 63.65 236.62 B
0.28 0.1 (uilds literal box) 163.2 236.62 B
0.28 0.1 (ed objects statically whene) 234.42 236.62 B
0.28 0.1 (v) 356.03 236.62 B
0.28 0.1 (er it can. In practice, this will include) 361.47 236.62 B
-0.04 (most function objects apart from closures, virtually all wrappers, and most class objects, as well as strings,) 63.65 223.62 P
(symbols, and literal v) 63.65 210.62 T
(ectors and lists.) 158.2 210.62 T
3 10 Q
(3.1.4) 63.65 176.29 T
(V) 90.89 176.29 T
(ariab) 96.96 176.29 T
(l) 120.76 176.29 T
(y Siz) 123.39 176.29 T
(ed Objects) 146.28 176.29 T
2 11 Q
-0.03 (V) 63.65 155.62 P
-0.03 (ariably sized objects, such as strings, v) 70.37 155.62 P
-0.03 (ectors and arrays, are box) 240.49 155.62 P
-0.03 (ed objects which contain a) 352.91 155.62 P
1 F
-0.03 (r) 472.2 155.62 P
-0.03 (epeated slot) 476.07 155.62 P
2 F
-0.03 (.) 528.9 155.62 P
0.28 0.1 (The repeated slot is implemented as a v) 63.65 142.62 B
0.28 0.1 (ariably sized data area preceded by a normal slot containing the) 242.93 142.62 B
0.28 0.02 (size of the v) 63.65 129.62 B
0.28 0.02 (ariably sized data represented as a tagged inte) 117.89 129.62 B
0.28 0.02 (ger) 321.8 129.62 B
0.28 0.02 (. The size slot is used at the Dylan language) 335.3 129.62 B
0.28 0.13 (le) 63.65 116.62 B
0.28 0.13 (v) 71.58 116.62 B
0.28 0.13 (el to determine the size of the array) 77.05 116.62 B
0.28 0.13 (. There is also a special encoding for it in the tracing data of the) 238.7 116.62 B
0 0 0 1 0 0 0 K
63.65 348.95 531.65 524.95 C
0 0 0 1 0 0 0 K
J
108.65 481.99 189.65 481.99 189.65 373.99 108.65 373.99 4 Y
7 X
0 0 0 1 0 0 0 K
V
J
108.65 481.99 189.65 481.99 189.65 373.99 108.65 373.99 4 Y
J
108.65 478.24 108.65 481.99 112.4 481.99 3 L
0.5 H
2 Z
0 X
N
[7.206 6.245] 7.206 I
112.4 481.99 185.9 481.99 2 L
N
J
185.9 481.99 189.65 481.99 189.65 478.24 3 L
N
[7.213 6.251] 7.213 I
189.65 478.24 189.65 377.74 2 L
N
J
189.65 377.74 189.65 373.99 185.9 373.99 3 L
N
[7.206 6.245] 7.206 I
185.9 373.99 112.4 373.99 2 L
N
J
112.4 373.99 108.65 373.99 108.65 377.74 3 L
N
[7.213 6.251] 7.213 I
108.65 377.74 108.65 478.24 2 L
N
J
252.65 400.99 333.65 481.99 R
7 X
V
0 X
N
J
405.65 481.99 486.65 481.99 486.65 373.99 405.65 373.99 4 Y
7 X
V
J
405.65 481.99 486.65 481.99 486.65 373.99 405.65 373.99 4 Y
J
405.65 478.24 405.65 481.99 409.4 481.99 3 L
0 X
N
[7.206 6.245] 7.206 I
409.4 481.99 482.9 481.99 2 L
N
J
482.9 481.99 486.65 481.99 486.65 478.24 3 L
N
[7.213 6.251] 7.213 I
486.65 478.24 486.65 377.74 2 L
N
J
486.65 377.74 486.65 373.99 482.9 373.99 3 L
N
[7.206 6.245] 7.206 I
482.9 373.99 409.4 373.99 2 L
N
J
409.4 373.99 405.65 373.99 405.65 377.74 3 L
N
[7.213 6.251] 7.213 I
405.65 377.74 405.65 478.24 2 L
N
J
108.65 454.99 189.65 481.99 R
7 X
V
0 X
N
108.65 427.99 189.65 454.99 R
7 X
V
0 X
N
108.65 400.99 189.65 427.99 R
7 X
V
0 X
N
252.65 454.99 333.65 481.99 R
7 X
V
0 X
N
252.65 427.99 333.65 454.99 R
7 X
V
0 X
N
252.65 400.99 333.65 427.99 R
7 X
V
0 X
N
405.65 454.99 486.65 481.99 R
7 X
V
0 X
N
405.65 427.99 486.65 454.99 R
7 X
V
0 X
N
405.65 400.99 486.65 427.99 R
7 X
V
0 X
N
108.65 373.99 189.65 373.99 2 L
N
405.65 373.99 486.65 373.99 2 L
N
0 11 Q
(Dylan Object) 117.65 492.48 T
(Wrapper) 272.26 490.99 T
(Class) 434.59 491.21 T
5 10 Q
(Wr) 117.65 463.99 T
(apper slot) 130.32 463.99 T
(Data slot 1) 117.65 436.99 T
(Data slot 2) 117.65 409.99 T
241.36 463.99 241.36 466.97 251.74 463.99 241.36 461.02 4 Y
0 Z
N
241.36 463.99 241.36 466.97 251.74 463.99 241.36 461.02 4 Y
V
189.65 463.99 241.11 463.99 2 L
2 Z
N
(Wr) 261.65 463.99 T
(apper slot) 274.32 463.99 T
(Class) 261.65 436.99 T
(T) 261.65 409.99 T
(r) 266.56 409.99 T
(acing data) 269.79 409.99 T
394.36 463.99 394.36 466.97 404.74 463.99 394.36 461.02 4 Y
0 Z
N
394.36 463.99 394.36 466.97 404.74 463.99 394.36 461.02 4 Y
V
369.65 463.99 394.11 463.99 2 L
2 Z
N
333.65 445.99 369.65 445.99 2 L
N
369.65 445.99 369.65 463.99 2 L
N
(Wr) 414.65 463.99 T
(apper slot) 427.32 463.99 T
(Meta class) 414.65 436.99 T
(Class name) 414.65 409.99 T
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 10
%%Page: "5" 11
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(5) 526.09 84.9 T
2 11 Q
-0.26 (wrapper so that the memory manager kno) 63.65 737.62 P
-0.26 (ws ho) 245.13 737.62 P
-0.26 (w to trace the repeated data. F) 270.57 737.62 P
-0.26 (or e) 401.13 737.62 P
-0.26 (xample, an instance of the) 417.5 737.62 P
0 F
(<byte-string>) 63.65 724.62 T
("f) 130.26 724.62 T
(oo") 139.76 724.62 T
2 F
(is represented as in Figure) 162.86 724.62 T
(2 on page) 281.09 724.62 T
(5.) 326.61 724.62 T
(Figure 2.) 209.35 546.62 T
(An Instance of) 254.57 546.62 T
0 F
(<byte-string>) 322.08 546.62 T
3 10 Q
(3.1.5) 63.65 514.29 T
(Function Objects) 90.89 514.29 T
2 11 Q
-0.1 (Dylan pro) 63.65 493.62 P
-0.1 (vides tw) 107.68 493.62 P
-0.1 (o b) 144.45 493.62 P
-0.1 (uilt-in classes of functions:) 157.88 493.62 P
0 F
-0.1 (<generic-function>) 279.1 493.62 P
2 F
-0.1 ( and) 368.63 493.62 P
0 F
-0.1 (<method>) 389.82 493.62 P
2 F
-0.1 (. These both obe) 437.8 493.62 P
-0.1 (y the) 510.05 493.62 P
0.28 0.23 (same general purpose calling con) 63.65 480.62 B
0.28 0.23 (v) 218.31 480.62 B
0.28 0.23 (ention, b) 223.88 480.62 B
0.28 0.23 (ut also support specialised calling con) 264.5 480.62 B
0.28 0.23 (v) 441.55 480.62 B
0.28 0.23 (entions \050described) 447.11 480.62 B
0.28 0.15 (belo) 63.65 467.62 B
0.28 0.15 (w\051 which the compiler may use depending on the detail of its kno) 82.93 467.62 B
0.28 0.15 (wledge about the function being) 384.19 467.62 B
0.28 0.05 (called, and the circumstances. Slots in the function object point to the code which implements each con-) 63.65 454.62 B
(v) 63.65 441.62 T
(ention.) 68.98 441.62 T
0.28 0.01 (All functions also ha) 63.65 416.62 B
0.28 0.01 (v) 155.85 416.62 B
0.28 0.01 (e a slot which encodes the number of required parameters the function accepts, and) 161.19 416.62 B
-0.26 (whether the function accepts optional or k) 63.65 403.62 P
-0.26 (e) 247.12 403.62 P
-0.26 (yw) 251.84 403.62 P
-0.26 (ord parameters. Another slot in each function object contains) 265.17 403.62 P
-0.19 (a v) 63.65 390.62 P
-0.19 (ector of the types which are acceptable for each required parameter) 76.42 390.62 P
-0.19 (. These slots are used for consistenc) 369.54 390.62 P
-0.19 (y) 526.15 390.62 P
(checking of the ar) 63.65 377.62 T
(guments.) 142.56 377.62 T
0.28 0.16 (Generic functions ha) 63.65 352.62 B
0.28 0.16 (v) 158.86 352.62 B
0.28 0.16 (e further slots which support the method dispatching process \321 including a slot) 164.35 352.62 B
0.28 0.04 (which contains a v) 63.65 339.62 B
0.28 0.04 (ector of all the methods belonging to the generic function, and a slot which contains a) 147.19 339.62 B
(cache of sorted applicable methods for combinations of ar) 63.65 326.62 T
(guments which ha) 318.84 326.62 T
(v) 398.66 326.62 T
(e been processed before.) 404 326.62 T
0.28 0.22 (Methods may be closures, in which case a slot in the method object contains the en) 63.65 301.62 B
0.28 0.22 (vironment for the) 450.62 301.62 B
0.28 0.05 (method, which is represented as a v) 63.65 288.62 B
0.28 0.05 (ector of closed-o) 223.68 288.62 B
0.28 0.05 (v) 298.88 288.62 B
0.28 0.05 (er v) 304.27 288.62 B
0.28 0.05 (ariables. If the v) 321.27 288.62 B
0.28 0.05 (ariable is kno) 394.25 288.62 B
0.28 0.05 (wn actually to be) 454.52 288.62 B
0.21 (constant, then the constant v) 63.65 275.62 P
0.21 (alue is stored directly in the v) 189.16 275.62 P
0.21 (ector) 320.39 275.62 P
0.21 (. Alternati) 341.78 275.62 P
0.21 (v) 386.31 275.62 P
0.21 (ely) 391.65 275.62 P
0.21 (, if there is an) 404.38 275.62 P
0.21 (y possibility of) 465.22 275.62 P
0.25 (an assignment to the v) 63.65 262.62 P
0.25 (ariable, then the v) 162.74 262.62 P
0.25 (alue is stored with an e) 242.01 262.62 P
0.25 (xtra indirection to a) 344.19 262.62 P
1 F
0.25 (value cell) 434.38 262.62 P
2 F
0.25 (, which may) 477.08 262.62 P
(be shared between man) 63.65 249.62 T
(y closures with related en) 166.42 249.62 T
(vironments.) 278.4 249.62 T
3 12 Q
(3.2) 63.65 211.95 T
(Calling Con) 90.65 211.95 T
(vention) 156.84 211.95 T
2 11 Q
-0.19 (Dylan permits an) 63.65 186.62 P
-0.19 (y number of ar) 138.88 186.62 P
-0.19 (guments of an) 203.18 186.62 P
-0.19 (y Dylan class to be passed to a function. The implementation) 264.97 186.62 P
0.28 0.05 (is obliged to check the ar) 63.65 173.62 B
0.28 0.05 (guments to ensure that there are an appropriate number) 176.31 173.62 B
0.28 0.05 (, with appropriate types,) 423.1 173.62 B
0.28 0.02 (and a Dylan condition must be signalled if the parameters are inappropriate. This general calling con) 63.65 160.62 B
0.28 0.02 (v) 512.23 160.62 B
0.28 0.02 (en-) 517.58 160.62 B
0.28 0.01 (tion, supported by all function objects, is implemented by a slot called) 63.65 147.62 B
0 F
0.28 0.01 (XEP) 379.11 147.62 B
2 F
0.28 0.01 (, which points to the) 399.91 147.62 B
1 F
0.28 0.01 (eXternal) 493.71 147.62 B
-0.23 (Entry P) 63.65 134.62 P
-0.23 (oint \050XEP\051) 96.45 134.62 P
2 F
-0.23 ( code for that function. The XEP checks all the ar) 143.58 134.62 P
-0.23 (guments for consistenc) 358.91 134.62 P
-0.23 (y) 459.72 134.62 P
-0.23 (, and signals an) 464.51 134.62 P
0.24 (error if necessary) 63.65 121.62 P
0.24 (. If the function accepts k) 139.77 121.62 P
0.24 (e) 252.67 121.62 P
0.24 (yw) 257.39 121.62 P
0.24 (ord or optional ar) 270.73 121.62 P
0.24 (guments, then the supplied ar) 347.93 121.62 P
0.24 (guments are) 477.95 121.62 P
0 0 0 1 0 0 0 K
63.65 571.95 531.65 695.95 C
0 0 0 1 0 0 0 K
J
212.15 665.45 383.15 665.45 383.15 584.45 212.15 584.45 4 Y
7 X
0 0 0 1 0 0 0 K
V
J
212.15 665.45 383.15 665.45 383.15 584.45 212.15 584.45 4 Y
J
212.15 661.7 212.15 665.45 215.9 665.45 3 L
0.5 H
2 Z
0 X
N
[7.64 6.621] 7.64 I
215.9 665.45 379.4 665.45 2 L
N
J
379.4 665.45 383.15 665.45 383.15 661.7 3 L
N
[7.206 6.245] 7.206 I
383.15 661.7 383.15 588.2 2 L
N
J
383.15 588.2 383.15 584.45 379.4 584.45 3 L
N
[7.64 6.621] 7.64 I
379.4 584.45 215.9 584.45 2 L
N
J
215.9 584.45 212.15 584.45 212.15 588.2 3 L
N
[7.206 6.245] 7.206 I
212.15 588.2 212.15 661.7 2 L
N
J
212.15 638.53 383.15 665.53 R
7 X
V
0 X
N
212.15 611.53 383.15 638.53 R
7 X
V
0 X
N
212.15 584.53 383.15 611.53 R
7 X
V
0 X
N
0 11 Q
("f) 221.15 676.02 T
(oo") 230.64 676.02 T
5 10 Q
(<b) 221.15 647.53 T
(yte-str) 232.35 647.53 T
(ing>-wr) 260.28 647.53 T
(apper) 293.24 647.53 T
(siz) 221.15 620.53 T
(e = 3) 233.22 620.53 T
(repeated data ="f) 221.15 593.53 T
(oo") 297.51 593.53 T
0 0 0 1 0 0 0 K
-8.35 24.95 603.65 816.95 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 11
%%Page: "6" 12
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(6) 63.65 84.9 T
2 11 Q
0.28 0.02 (processed, and appropriate v) 63.65 737.62 B
0.28 0.02 (alues are calculated for the formal parameters of the function. If the parame-) 190.59 737.62 B
(ters are not in error) 63.65 724.62 T
(, the XEP code calls the) 147.51 724.62 T
1 F
(Internal Entry P) 255.36 724.62 T
(oint \050IEP\051) 326.58 724.62 T
2 F
(of the function.) 373.63 724.62 T
0.28 0.02 (Ev) 63.65 699.62 B
0.28 0.02 (ery Dylan function also has an internal entry point, which is represented as code stored in a slot called) 75.75 699.62 B
0 F
0.28 0.06 (IEP) 63.65 686.62 B
2 F
0.28 0.06 (. All ar) 80.94 686.62 B
0.28 0.06 (gument checking and parameter processing must ha) 112.62 686.62 B
0.28 0.06 (v) 344.81 686.62 B
0.28 0.06 (e been performed before calling the IEP) 350.2 686.62 B
0.28 0.06 (.) 528.9 686.62 B
-0.14 (The compiler may choose to call the IEP of a function directly if it can v) 63.65 673.62 P
-0.14 (erify and process the ar) 380.7 673.62 P
-0.14 (guments of) 482.59 673.62 P
(the call statically) 63.65 660.62 T
(, at compile time.) 137.48 660.62 T
-0.08 (The compiler is responsible for generating the IEP code for each Dylan function; ho) 63.65 635.62 P
-0.08 (we) 432.33 635.62 P
-0.08 (v) 444.88 635.62 P
-0.08 (er) 450.21 635.62 P
-0.08 (, it does not gen-) 458.32 635.62 P
0.28 0.02 (erate the XEP code. Functions with) 63.65 622.62 B
1 F
0.28 0.02 (congruent) 224.54 622.62 B
2 F
0.28 0.02 ( parameters \050i.e., same number of required parameters, and) 269.32 622.62 B
0.28 0.12 (similar usage of optional and k) 63.65 609.62 B
0.28 0.12 (e) 204.58 609.62 B
0.28 0.12 (yw) 209.41 609.62 B
0.28 0.12 (ord parameters\051 share the same XEP code, which is pro) 222.99 609.62 B
0.28 0.12 (vided by the) 475.4 609.62 B
0.28 0.17 (runtime system. There are approximately 40 separate XEP functions in the runtime system, which are) 63.65 596.62 B
-0.27 (appropriate for all the v) 63.65 583.62 P
-0.27 (ariations of Dylan parameters. The f) 166.17 583.62 P
-0.27 (act that the XEP code is a shared resource leads) 324.18 583.62 P
-0.24 (to a signi\336cant sa) 63.65 570.62 P
-0.24 (ving in o) 139.4 570.62 P
-0.24 (v) 177.87 570.62 P
-0.24 (erall code size, compared with a system where the compiler generates ar) 183.2 570.62 P
-0.24 (gument) 498.65 570.62 P
-0.07 (checking code for each function. By implementing the XEP code in the runtime system, it is possible for it) 63.65 557.62 P
0.07 (to be written with detailed kno) 63.65 544.62 P
0.07 (wledge of the calling con) 198.47 544.62 P
0.07 (v) 309.52 544.62 P
0.07 (ention for that platform, to an e) 314.85 544.62 P
0.07 (xtent which is not) 452.9 544.62 P
-0.2 (describable in ANDF) 63.65 531.62 P
-0.2 (. This permits greater ef) 156.46 531.62 P
-0.2 (\336cienc) 260.79 531.62 P
-0.2 (y during the ar) 289.95 531.62 P
-0.2 (gument processing stage \321 for instance,) 353.61 531.62 P
0.02 (when grouping together the dynamically sized number of optional parameters to produce a stack-allocated) 63.65 518.62 P
(Dylan v) 63.65 505.62 T
(ector of them.) 98.62 505.62 T
3 10 Q
(3.2.1) 63.65 471.29 T
(External Entr) 90.89 471.29 T
(y P) 153.23 471.29 T
(oint Con) 167.84 471.29 T
(vention) 207.99 471.29 T
2 11 Q
-0.04 (The XEP con) 63.65 450.62 P
-0.04 (v) 122.4 450.62 P
-0.04 (ention is the general calling con) 127.74 450.62 P
-0.04 (v) 267.35 450.62 P
-0.04 (ention for all Dylan functions. It in) 272.69 450.62 P
-0.04 (v) 425.71 450.62 P
-0.04 (olv) 430.99 450.62 P
-0.04 (es passing the ar) 444.89 450.62 P
-0.04 (gu-) 516.98 450.62 P
-0.15 (ments of the function \050the) 63.65 437.62 P
1 F
-0.15 (langua) 179.31 437.62 P
-0.15 (g) 209.76 437.62 P
-0.15 (e) 215.15 437.62 P
2 F
-0.15 ( parameters\051, as well tw) 220.03 437.62 P
-0.15 (o e) 324.1 437.62 P
-0.15 (xtra ar) 336.92 437.62 P
-0.15 (guments \050the) 364.98 437.62 P
1 F
-0.15 (implementation) 424.57 437.62 P
2 F
-0.15 ( parame-) 493.01 437.62 P
(ters\051. The implementation parameters are:) 63.65 424.62 T
4 F
(\245) 99.65 405.62 T
1 F
(ar) 113.4 405.62 T
(gcount) 122.77 405.62 T
2 F
(, the number of language parameters, e) 152.71 405.62 T
(xpressed as an inte) 323.61 405.62 T
(ger) 406.23 405.62 T
4 F
(\245) 99.65 389.62 T
1 F
(function) 113.4 389.62 T
2 F
(, the Dylan function object being called) 149.46 389.62 T
0.28 0.13 (The implementation parameters are necessary for the implementation of the XEP code, so that the lan-) 63.65 364.62 B
(guage ar) 63.65 351.62 T
(guments can be check) 101.01 351.62 T
(ed, and so that the IEP code can be located.) 197.74 351.62 T
(F) 63.65 326.62 T
(or e) 69.6 326.62 T
(xample, consider the follo) 86.23 326.62 T
(wing Dylan code:) 200.83 326.62 T
0 F
(de\336ne method func1 \050a, b, #r) 99.65 307.62 T
(est optionals, #k) 234.2 307.62 T
(ey k) 309.57 307.62 T
(ey1, k) 328.71 307.62 T
(ey2\051) 356.1 307.62 T
(end method;) 99.65 294.62 T
(func1\0501, 2, k) 99.65 268.62 T
(ey2: 99\051;) 157.6 268.62 T
2 F
(F) 63.65 243.62 T
(or the call to) 69.6 243.62 T
0 F
(func1) 127.65 243.62 T
2 F
(, abo) 153.93 243.62 T
(v) 175.14 243.62 T
(e, the parameters are described in T) 180.48 243.62 T
(able) 336.29 243.62 T
(2 on page) 357.37 243.62 T
(6.) 402.89 243.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 194.6 193.62 T
(able 2.) 200.44 193.62 T
(XEP P) 235.27 193.62 T
(arameters for the Call to) 264.75 193.62 T
0 F
(func1) 374.42 193.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(XEP P) 195.65 168.62 T
(arameters) 227.01 168.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 298.65 168.62 T
(alues) 305.58 168.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(language parameters) 195.65 148.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(1) 298.65 148.62 T
2 F
(,) 304.15 148.62 T
0 F
(2) 309.65 148.62 T
2 F
(,) 315.15 148.62 T
0 F
(#"k) 320.65 148.62 T
(ey2") 338.26 148.62 T
2 F
(,) 360.25 148.62 T
0 F
(99) 365.75 148.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(ar) 195.65 134.62 T
(gcount) 205.02 134.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(4) 298.65 134.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(function) 195.65 120.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(generic function) 298.65 120.62 T
0 F
(func1) 373.18 120.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
292.65 186.95 292.65 115.95 2 L
V
0.25 H
0 Z
N
189.65 157.95 405.65 157.95 2 L
V
N
189.65 143.95 405.65 143.95 2 L
V
N
189.65 129.95 405.65 129.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 12
%%Page: "7" 13
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(7) 526.09 84.9 T
(3.2.2) 63.65 738.29 T
(Internal Entr) 90.89 738.29 T
(y P) 149.89 738.29 T
(oint Con) 164.5 738.29 T
(vention) 204.65 738.29 T
2 11 Q
0.21 (The IEP con) 63.65 717.62 P
0.21 (v) 118.63 717.62 P
0.21 (ention uses a \336x) 123.96 717.62 P
0.21 (ed number of language parameters, corresponding to each of the parameters) 195.63 717.62 P
(of the function \0505 in the case of) 63.65 704.62 T
0 F
(func1) 204.17 704.62 T
2 F
(, abo) 230.45 704.62 T
(v) 251.67 704.62 T
(e\051. In addition, there are tw) 257.01 704.62 T
(o implementation parameters:) 376.33 704.62 T
4 F
(\245) 99.65 685.62 T
1 F
(mlist) 113.4 685.62 T
2 F
(, a list of the ne) 134.79 685.62 T
(xt applicable methods to call if the function is a method called from a) 202.46 685.62 T
-0.04 (generic function \050this parameter is used to support calls to) 113.4 672.62 P
0 F
-0.04 (next-method) 370.87 672.62 P
2 F
-0.04 (\051. If the function is not) 430.14 672.62 P
(being called from a generic function, the v) 113.4 659.62 T
(alue is) 300.08 659.62 T
0 F
(#f) 331.24 659.62 T
2 F
( \050f) 340.41 659.62 T
(alse\051.) 350.37 659.62 T
4 F
(\245) 99.65 643.62 T
1 F
(function) 113.4 643.62 T
2 F
(, the Dylan function object being called \050as for the XEP\051.) 149.46 643.62 T
0.12 (The implementation parameters are not oblig) 63.65 618.62 P
0.12 (atory for all IEP code. It is only necessary to pass) 262.46 618.62 P
1 F
0.12 (mlist) 484.35 618.62 P
2 F
0.12 ( if the) 505.75 618.62 P
0.28 0.08 (function contains a call to) 63.65 605.62 B
0 F
0.28 0.08 (next-method) 183.57 605.62 B
2 F
0.28 0.08 (. It is only necessary to pass) 243.68 605.62 B
1 F
0.28 0.08 (function) 373.86 605.62 B
2 F
0.28 0.08 ( if the function is a closure) 410.53 605.62 B
0.28 0.07 (\050because the v) 63.65 592.62 B
0.28 0.07 (alue is used by the IEP code to locate the en) 127.87 592.62 B
0.28 0.07 (vironment of the closure\051. If the IEP is called) 327.18 592.62 B
0.28 0.01 (from the XEP code, both the implementation parameters will al) 63.65 579.62 B
0.28 0.01 (w) 346.05 579.62 B
0.28 0.01 (ays be set, e) 353.89 579.62 B
0.28 0.01 (v) 407.76 579.62 B
0.28 0.01 (en though the) 413.11 579.62 B
0.28 0.01 (y may not be) 473.55 579.62 B
(necessary) 63.65 566.62 T
(. F) 105.69 566.62 T
(or the same call to) 117.14 566.62 T
0 F
(func1) 200.54 566.62 T
2 F
(, abo) 226.82 566.62 T
(v) 248.04 566.62 T
(e, the parameters are described in T) 253.38 566.62 T
(able) 409.19 566.62 T
(3 on page) 430.27 566.62 T
(7.) 475.79 566.62 T
0.28 0.03 (Note that the language parameters no) 63.65 417.62 B
0.28 0.03 (w correspond to the formal parameters of the function, whereas, for) 229.7 417.62 B
(the XEP) 63.65 404.62 T
(, the) 99.4 404.62 T
(y corresponded to the supplied ar) 118.18 404.62 T
(guments.) 264.31 404.62 T
0.28 0 (The v) 63.65 379.62 B
0.28 0 (alue of) 89.01 379.62 B
1 F
0.28 0 (optionals) 122.56 379.62 B
2 F
0.28 0 ( in the set of language parameters is the Dylan v) 163.53 379.62 B
0.28 0 (ector) 378.2 379.62 B
0 F
0.28 0 (#[#"k) 403.22 379.62 B
0.28 0 (ey2", 99]) 430 379.62 B
2 F
0.28 0 ( which corre-) 472.44 379.62 B
0.28 0.13 (sponds to all the optional ar) 63.65 366.62 B
0.28 0.13 (guments. The language parameter corresponding to) 190.49 366.62 B
0 F
0.28 0.13 ( k) 424.15 366.62 B
0.28 0.13 (ey1) 433.44 366.62 B
2 F
0.28 0.13 ( is) 449.71 366.62 B
0 F
0.28 0.13 (#f) 463.61 366.62 B
2 F
0.28 0.13 (, because the) 473.04 366.62 B
0.28 0.28 (k) 63.65 353.62 B
0.28 0.28 (e) 69.32 353.62 B
0.28 0.28 (yw) 74.32 353.62 B
0.28 0.28 (ord) 88.22 353.62 B
0 F
0.28 0.28 (#"k) 107.05 353.62 B
0.28 0.28 (ey1") 125.51 353.62 B
2 F
0.28 0.28 ( w) 148.63 353.62 B
0.28 0.28 (as not supplied. Ho) 160.06 353.62 B
0.28 0.28 (we) 250.94 353.62 B
0.28 0.28 (v) 264.06 353.62 B
0.28 0.28 (er) 269.68 353.62 B
0.28 0.28 (, the language parameter corresponding to) 278.35 353.62 B
0 F
0.28 0.28 ( k) 476.48 353.62 B
0.28 0.28 (ey2) 486.07 353.62 B
2 F
0.28 0.28 ( is) 502.81 353.62 B
0 F
0.28 0.28 (99) 517.33 353.62 B
2 F
0.28 0.28 (,) 528.9 353.62 B
(because) 63.65 340.62 T
0 F
(#"k) 101.21 340.62 T
(ey2") 118.82 340.62 T
2 F
( w) 140.81 340.62 T
(as supplied with that v) 151.4 340.62 T
(alue.) 250.12 340.62 T
3 10 Q
(3.2.3) 63.65 306.29 T
(Ar) 90.89 306.29 T
(gument P) 101.85 306.29 T
(assing Mec) 147.11 306.29 T
(hanisms) 200.92 306.29 T
2 11 Q
0.28 0.06 (The XEP and IEP calling con) 63.65 285.62 B
0.28 0.06 (v) 196.1 285.62 B
0.28 0.06 (entions are currently implemented using the standard C ar) 201.49 285.62 B
0.28 0.06 (gument passing) 461.82 285.62 B
0.28 0.01 (mechanism, corresponding to) 63.65 272.62 B
1 F
0.28 0.01 (caller par) 197.4 272.62 B
0.28 0.01 (ameter) 241.32 272.62 B
0.28 0.01 (s) 271.83 272.62 B
2 F
0.28 0.01 (in ANDF) 279.15 272.62 B
0.28 0.01 (. F) 319.88 272.62 B
0.28 0.01 (or the XEP con) 331.64 272.62 B
0.28 0.01 (v) 399.71 272.62 B
0.28 0.01 (ention, the) 405.06 272.62 B
1 F
0.28 0.01 (function) 454.94 272.62 B
2 F
0.28 0.01 ( and) 491.1 272.62 B
1 F
0.28 0.01 (ar) 513.09 272.62 B
0.28 0.01 (g-) 522.48 272.62 B
0.28 0.02 (count) 63.65 259.62 B
2 F
0.28 0.02 ( parameters are passed f) 88.17 259.62 B
0.28 0.02 (irst, respecti) 194.74 259.62 B
0.28 0.02 (v) 248.74 259.62 B
0.28 0.02 (ely) 254.1 259.62 B
0.28 0.02 (, follo) 266.87 259.62 B
0.28 0.02 (wed by the language parameters. F) 293.27 259.62 B
0.28 0.02 (or the IEP con) 448.38 259.62 B
0.28 0.02 (v) 512.23 259.62 B
0.28 0.02 (en-) 517.58 259.62 B
-0.04 (tion, only the language parameters are passed in this w) 63.65 246.62 P
-0.04 (ay) 303.89 246.62 P
-0.04 (, and the) 313.56 246.62 P
1 F
-0.04 (mlist) 353.76 246.62 P
2 F
-0.04 ( and) 375.15 246.62 P
1 F
-0.04 (function) 396.45 246.62 P
2 F
-0.04 ( parameters are passed) 432.51 246.62 P
(in global v) 63.65 233.62 T
(ariables if required.) 110.43 233.62 T
0.1 (The usage of caller parameters is sub-optimal for Dylan, because it implies that no tail call optimisation is) 63.65 208.62 P
0.28 0.17 (possible between the XEP and the IEP) 63.65 195.62 B
0.28 0.17 (. This has a cost in terms of en) 239.57 195.62 B
0.28 0.17 (vironment \050stack\051 space and also) 380.99 195.62 B
(because those parameters which are passed on the stack must be copied onto a ne) 63.65 182.62 T
(w stack frame.) 420.79 182.62 T
0.28 0.06 (It is planned to use) 63.65 157.62 B
1 F
0.28 0.06 (callee) 152.15 157.62 B
2 F
0.28 0.06 ( parameters for the Dylan language parameters, using the caller parameters for) 178.78 157.62 B
0.28 0.06 (implementation parameters only) 63.65 144.62 B
0.28 0.06 (. This will permit the XEP code to rearrange the language parameters as) 207.57 144.62 B
0 (appropriate and tail-call the IEP with modi\336ed callee parameters \050and o) 63.65 131.62 P
0 (v) 378.17 131.62 P
0 (erwritten callee parameters corre-) 383.51 131.62 P
(sponding to the dif) 63.65 118.62 T
(ferent set of implementation parameters\051.) 146.18 118.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 196.74 516.62 T
(able 3.) 202.58 516.62 T
(IEP P) 237.41 516.62 T
(arameters for the Call to) 262.61 516.62 T
0 F
(func1) 372.28 516.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(IEP P) 195.65 491.62 T
(arameters) 223.35 491.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 298.65 491.62 T
(alues) 305.58 491.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(language parameters) 195.65 471.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(1) 298.65 471.62 T
2 F
(,) 304.15 471.62 T
0 F
(2) 309.65 471.62 T
2 F
(,) 315.15 471.62 T
1 F
(optionals) 320.65 471.62 T
2 F
(,) 361.6 471.62 T
0 F
(#f) 367.1 471.62 T
2 F
(,) 376.26 471.62 T
0 F
(99) 381.76 471.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(mlist) 195.65 457.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(#f) 298.65 457.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(function) 195.65 443.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(generic function) 298.65 443.62 T
0 F
(func1) 373.18 443.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
292.65 509.95 292.65 438.95 2 L
V
0.25 H
0 Z
N
189.65 480.95 405.65 480.95 2 L
V
N
189.65 466.95 405.65 466.95 2 L
V
N
189.65 452.95 405.65 452.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 13
%%Page: "8" 14
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(8) 63.65 84.9 T
2 11 Q
0.28 0.06 (Although this change is e) 63.65 737.62 B
0.28 0.06 (xpected to relie) 177.85 737.62 B
0.28 0.06 (v) 246.86 737.62 B
0.28 0.06 (e one of the last bottlenecks to implementation speed which is) 252.25 737.62 B
0.28 0.25 (related to the use of ANDF) 63.65 724.62 B
0.28 0.25 (, this has not yet been attempted. The cost of making the change is lar) 190.04 724.62 B
0.28 0.25 (ge,) 518.02 724.62 B
0.04 (because it requires a complete re) 63.65 711.62 P
0.04 (write of most of the runtime system code. This re) 207.43 711.62 P
0.04 (write w) 424.42 711.62 P
0.04 (ould also require) 457.64 711.62 P
-0.07 (a change of source language \050the runtime system is currently written in C, b) 63.65 698.62 P
-0.07 (ut w) 396.07 698.62 P
-0.07 (ould probably be re) 415.14 698.62 P
-0.07 (written) 500.48 698.62 P
0.28 0.11 (directly in TNC because no C compiler is compatible with ANDF\325) 63.65 685.62 B
0.28 0.11 (s callee parameter mechanism\051. This) 365.86 685.62 B
-0.08 (calling con) 63.65 672.62 P
-0.08 (v) 111.71 672.62 P
-0.08 (ention change will be a necessary part of the e) 117.04 672.62 P
-0.08 (v) 319.22 672.62 P
-0.08 (olution of the producer from) 324.5 672.62 P
1 F
-0.08 (pr) 452.13 672.62 P
-0.08 (ototype) 461.41 672.62 P
2 F
-0.08 ( to) 493.79 672.62 P
1 F
-0.08 (pr) 507.7 672.62 P
-0.08 (od-) 516.98 672.62 P
(uct) 63.65 659.62 T
2 F
( status.) 77.09 659.62 T
3 12 Q
(3.3) 63.65 621.95 T
(Special Features) 90.65 621.95 T
3 10 Q
(3.3.1) 63.65 587.29 T
(unwind-pr) 90.89 587.29 T
(otect) 139.02 587.29 T
0 11 Q
0.28 0.07 (unwind-pr) 63.65 566.62 B
0.28 0.07 (otect) 114.24 566.62 B
2 F
0.28 0.07 ( \050or) 137.2 566.62 B
0 F
0.28 0.07 (cleanup) 156.45 566.62 B
2 F
0.28 0.07 ( as it has been renamed in inf) 193.64 566.62 B
0.28 0.07 (ix Dylan\051 is used to protect a body of code so) 325.78 566.62 B
0.28 0.02 (that a cleanup action will al) 63.65 553.62 B
0.28 0.02 (w) 186.65 553.62 B
0.28 0.02 (ays be tak) 194.5 553.62 B
0.28 0.02 (en whene) 239.08 553.62 B
0.28 0.02 (v) 281.05 553.62 B
0.28 0.02 (er the dynamic scope of the body is left, either because) 286.4 553.62 B
0.28 0.02 (the body has f) 63.65 540.62 B
0.28 0.02 (inished normally) 126.12 540.62 B
0.28 0.02 (, or because there has been a) 200.2 540.62 B
1 F
0.28 0.02 (non-local e) 330.9 540.62 B
0.28 0.02 (xit) 380.94 540.62 B
2 F
0.28 0.02 (, or) 391.99 540.62 B
1 F
0.28 0.02 (NLX) 410.04 540.62 B
2 F
0.28 0.02 ( \050see Section) 430.26 540.62 B
0.28 0.02 (3.3.2) 490.01 540.62 B
0.28 0.02 ( on) 517.6 540.62 B
(page) 63.65 527.62 T
(8\051.) 87.17 527.62 T
0.28 0.23 (The protection mechanism is implemented by maintaining a chain of) 63.65 502.62 B
1 F
0.28 0.23 (unwind pr) 387.42 502.62 B
0.28 0.23 (otect fr) 434.24 502.62 B
0.28 0.23 (ames \050UPFs\051) 467.7 502.62 B
2 F
0.28 0.23 (,) 528.9 502.62 B
0.28 0 (which correspond to the currently acti) 63.65 489.62 B
0.28 0 (v) 232.02 489.62 B
0.28 0 (e cleanups in the dynamic en) 237.36 489.62 B
0.28 0 (vironment. The head of the chain is a) 365.81 489.62 B
0.28 0.04 (global v) 63.65 476.62 B
0.28 0.04 (ariable. When the dynamic scope of a ne) 99.68 476.62 B
0.28 0.04 (w protected body is entered, the producer arranges for a) 281.68 476.62 B
0.28 0.04 (ne) 63.65 463.62 B
0.28 0.04 (w UPF structure to be created, as a local v) 73.84 463.62 B
0.28 0.04 (ariable. The f) 263.61 463.62 B
0.28 0.04 (ields of this structure are then initialised. The) 323.1 463.62 B
0.28 0.04 (y) 526.15 463.62 B
0.28 0.22 (include the ne) 63.65 450.62 B
0.28 0.22 (xt entry in the chain \050the current contents of the global v) 128.79 450.62 B
0.28 0.22 (ariable\051, the destination of the) 392.14 450.62 B
0.28 0.08 (cleanup code for this frame \050which is the result of a call to) 63.65 437.62 B
0 F
0.28 0.08 (setjmp) 331.73 437.62 B
2 F
0.28 0.08 (\051, and the ultimate destination for the) 364 437.62 B
0.28 0.18 (NLX \050which is initialised to 0 to indicate that there is no NLX occurring\051. The global v) 63.65 424.62 B
0.28 0.18 (ariable is then) 466.89 424.62 B
(updated to point to the ne) 63.65 411.62 T
(w frame.) 175.51 411.62 T
0.28 0.05 (If the protected body e) 63.65 386.62 B
0.28 0.05 (xits normally) 165.29 386.62 B
0.28 0.05 (, then the cleanup code is entered normally) 223.85 386.62 B
0.28 0.05 (. The cleanup code is f) 415.96 386.62 B
0.28 0.05 (irst) 517.44 386.62 B
0.17 (e) 63.65 373.62 P
0.17 (v) 68.26 373.62 P
0.17 (aluated, and then a function in the runtime system is called to mark the end of the cleanup. The runtime) 73.48 373.62 P
0.28 0.11 (function f) 63.65 360.62 B
0.28 0.11 (irst unlinks the UPF from the global chain, and then checks whether the cleanup w) 107.53 360.62 B
0.28 0.11 (as in) 483.76 360.62 B
0.28 0.11 (v) 504.64 360.62 B
0.28 0.11 (ok) 510.03 360.62 B
0.28 0.11 (ed) 521.15 360.62 B
-0.16 (because of a NLX \050which is true if the ultimate destination \336eld is not 0\051. In this case, as it is a normal e) 63.65 347.62 P
-0.16 (xit,) 517.28 347.62 P
(the runtime function just returns to the Dylan function, and the unwind-protect has \336nished.) 63.65 334.62 T
0.08 (If the cleanup code is in) 63.65 309.62 P
0.08 (v) 168.99 309.62 P
0.08 (ok) 174.27 309.62 P
0.08 (ed because of an NLX, then the runtime function \336nds the ultimate destination) 185.16 309.62 P
1 F
0.28 0.01 (bind e) 63.65 296.62 B
0.28 0.01 (xit fr) 90.98 296.62 B
0.28 0.01 (ame) 112.26 296.62 B
2 F
0.28 0.01 ( \050) 130.63 296.62 B
1 F
0.28 0.01 (BEF) 137.35 296.62 B
2 F
0.28 0.01 (\051 from the UPF) 157.55 296.62 B
0.28 0.01 (. The runtime function then passes this BEF to another runtime func-) 224.61 296.62 B
0.28 0.05 (tion \050as for) 63.65 283.62 B
0 F
0.28 0.05 (bind-exit\051) 116.14 283.62 B
2 F
0.28 0.05 ( to test whether there are an) 162.48 283.62 B
0.28 0.05 (y further interv) 286.99 283.62 B
0.28 0.05 (ening cleanups, or to transfer control to) 354.77 283.62 B
(the ultimate destination if not.) 63.65 270.62 T
3 10 Q
(3.3.2) 63.65 236.29 T
(bind-e) 90.89 236.29 T
(xit) 120.74 236.29 T
0 11 Q
0.28 0.04 (bind-exit) 63.65 215.62 B
2 F
0.28 0.04 ( is used to transfer control f) 106.16 215.62 B
0.28 0.04 (lo) 229.32 215.62 B
0.28 0.04 (w in Dylan to a destination point in the same le) 237.68 215.62 B
0.28 0.04 (xical and dynamic) 449.84 215.62 B
-0.19 (scope. In man) 63.65 202.62 P
-0.19 (y cases, the destination point is in the same function as the source, and the compiler is able to) 124.5 202.62 P
0.21 (optimise such a case into a simple jump. The destination is not necessarily in the same function, ho) 63.65 189.62 P
0.21 (we) 502.9 189.62 P
0.21 (v) 515.46 189.62 P
0.21 (er) 520.79 189.62 P
0.21 (,) 528.9 189.62 P
0.28 0.04 (because transfer may be from an inner closure to an outer one. Such a transfer of control is called a) 63.65 176.62 B
1 F
0.28 0.04 ( non-) 508.31 176.62 B
(local e) 63.65 163.62 T
(xit) 93.06 163.62 T
2 F
(\050or) 106.81 163.62 T
1 F
(NLX) 122.39 163.62 T
2 F
(\051, and requires a more comple) 142.56 163.62 T
(x mechanism.) 273.75 163.62 T
0.28 0.04 (If a bind-e) 63.65 138.62 B
0.28 0.04 (xit destination may be reached by an NLX, then producer creates a ne) 110.23 138.62 B
0.28 0.04 (w) 422.63 138.62 B
1 F
0.28 0.04 (bind e) 433.67 138.62 B
0.28 0.04 (xit fr) 461.12 138.62 B
0.28 0.04 (ame \050BEF\051) 482.53 138.62 B
2 F
0.28 0.21 (structure, as a local v) 63.65 125.62 B
0.28 0.21 (ariable. The f) 162.55 125.62 B
0.28 0.21 (ields of this structure are then initialised. The) 224.43 125.62 B
0.28 0.21 (y include the current) 435.83 125.62 B
0.28 0.09 (cleanup en) 63.65 112.62 B
0.28 0.09 (vironment \050the contents of the global dynamic en) 111.71 112.62 B
0.28 0.09 (vironment chain\051, and the destination of the) 334.04 112.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 14
%%Page: "9" 15
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(9) 526.09 84.9 T
2 11 Q
0.28 0.01 (bind-e) 63.65 737.62 B
0.28 0.01 (xit \050which is the result of a call to) 91.65 737.62 B
0 F
0.28 0.01 (setjmp) 245.11 737.62 B
2 F
0.28 0.01 (\051. The inner closure must store a pointer to the BEF in its) 276.94 737.62 B
(en) 63.65 724.62 T
(vironment, so that it can reach the destination.) 73.59 724.62 T
-0.04 (When an NLX occurs, the transfer of control is implemented by a call into the runtime system, passing the) 63.65 699.62 P
0.28 0.26 (pointer to the BEF as a parameter) 63.65 686.62 B
0.28 0.26 (. The runtime function f) 221.21 686.62 B
0.28 0.26 (irst checks whether there is an interv) 333.41 686.62 B
0.28 0.26 (ening) 506.16 686.62 B
0.28 0.33 (cleanup, by testing whether the tar) 63.65 673.62 B
0.28 0.33 (get dynamic en) 227.87 673.62 B
0.28 0.33 (vironment in the BEF matches the current global) 299.8 673.62 B
0.28 0.1 (dynamic en) 63.65 660.62 B
0.28 0.1 (vironment. If there is no interv) 115.46 660.62 B
0.28 0.1 (ening cleanup, then the transfer to the destination is achie) 254.8 660.62 B
0.28 0.1 (v) 515.73 660.62 B
0.28 0.1 (ed) 521.17 660.62 B
0.28 0.01 (with a) 63.65 647.62 B
0 F
0.28 0.01 (longjmp) 94.23 647.62 B
2 F
0.28 0.01 (. Alternati) 133.44 647.62 B
0.28 0.01 (v) 178.19 647.62 B
0.28 0.01 (ely) 183.54 647.62 B
0.28 0.01 (, if there is an interv) 196.31 647.62 B
0.28 0.01 (ening cleanup, then the ultimate destination f) 286.42 647.62 B
0.28 0.01 (ield of the) 486.36 647.62 B
(current UPF is set to the destination BEF) 63.65 634.62 T
(, and the cleanup code is in) 243.35 634.62 T
(v) 362.36 634.62 T
(ok) 367.64 634.62 T
(ed with a) 378.53 634.62 T
0 F
(longjmp) 421.61 634.62 T
2 F
(.) 460.73 634.62 T
3 10 Q
(3.3.3) 63.65 600.29 T
(appl) 90.89 600.29 T
(y) 111.3 600.29 T
2 11 Q
0.28 0.03 (The) 63.65 579.62 B
0 F
0.28 0.03 (apply) 83.89 579.62 B
2 F
0.28 0.03 ( function is used to call a second function with a dynamically sized number of ar) 110.32 579.62 B
0.28 0.03 (guments. The) 471.18 579.62 B
0.19 (dynamic ar) 63.65 566.62 P
0.19 (guments are supplied as a Dylan sequence. There is no direct support for this feature in ANDF) 112.82 566.62 P
0.25 (if the caller parameter passing mechanism is used, so the \336nal call to the second function is performed by) 63.65 553.62 P
0.28 0 (code inside the runtime system. The part of the implementation which is managed by the producer copies) 63.65 540.62 B
0.28 0.06 (the data of the Dylan sequence into a b) 63.65 527.62 B
0.28 0.06 (uf) 239.21 527.62 B
0.28 0.06 (fer) 248.22 527.62 B
0.28 0.06 (, before calling the primiti) 260.18 527.62 B
0.28 0.06 (v) 377.99 527.62 B
0.28 0.06 (e function in the runtime system.) 383.39 527.62 B
-0.24 (The primiti) 63.65 514.62 P
-0.24 (v) 112.94 514.62 P
-0.24 (e function is then responsible for cop) 118.28 514.62 P
-0.24 (ying the data out of the b) 279.86 514.62 P
-0.24 (uf) 388.19 514.62 P
-0.24 (fer and arranging it in re) 397.08 514.62 P
-0.24 (gisters) 502.93 514.62 P
0.28 0.04 (or on the stack for the call. The implementation is permitted to limit the number of v) 63.65 501.62 B
0.28 0.04 (alues which may be) 443.07 501.62 B
0.03 (passed in this w) 63.65 488.62 P
0.03 (ay) 133.6 488.62 P
0.03 (. Gi) 143.27 488.62 P
0.03 (v) 159.52 488.62 P
0.03 (en a static upper bound of the number which may be passed, it is possible to imple-) 164.86 488.62 P
0.01 (ment the primiti) 63.65 475.62 P
0.01 (v) 134.28 475.62 P
0.01 (e function portably \050e.g., in C\051 with e) 139.62 475.62 P
0.01 (v) 303.15 475.62 P
0.01 (ery ar) 308.48 475.62 P
0.01 (gument count case implemented with a sepa-) 333.64 475.62 P
(rate static call.) 63.65 462.62 T
0.14 (In practice, it is v) 63.65 437.62 P
0.14 (ery common for) 140.7 437.62 P
0 F
0.14 (apply) 214.73 437.62 P
2 F
0.14 ( to be used as a mechanism for supplying all the optional parame-) 241.02 437.62 P
0.24 (ters to a function. The compiler can often detect this case, and arrange to call the second function directly) 63.65 424.62 P
0.28 0.01 (via its IEP) 63.65 411.62 B
0.28 0.01 (, bypassing the primiti) 108.88 411.62 B
0.28 0.01 (v) 207.95 411.62 B
0.28 0.01 (e mechanism. In this case, the need to spread out the dynamic sequence) 213.29 411.62 B
-0 (of parameters is remo) 63.65 398.62 P
-0 (v) 159.09 398.62 P
-0 (ed completely) 164.42 398.62 P
-0 (, as the IEP calling con) 225.72 398.62 P
-0 (v) 326.7 398.62 P
-0 (ention e) 332.04 398.62 P
-0 (xpects a formal optional parameter to) 367 398.62 P
(be a dynamically sized v) 63.65 385.62 T
(ector) 172.24 385.62 T
(.) 193.62 385.62 T
3 10 Q
(3.3.4) 63.65 351.29 T
(Multiple V) 90.89 351.29 T
(alues) 137.52 351.29 T
2 11 Q
-0.16 (Dylan functions may return multiple v) 63.65 330.62 P
-0.16 (alues. Most callers require only a single v) 231.54 330.62 P
-0.16 (alue as a result of the func-) 413.47 330.62 P
0.28 0.06 (tion call, b) 63.65 317.62 B
0.28 0.06 (ut callers may optionally determine e) 111.49 317.62 B
0.28 0.06 (xactly ho) 278.48 317.62 B
0.28 0.06 (w man) 319.68 317.62 B
0.28 0.06 (y v) 349.74 317.62 B
0.28 0.06 (alues were returned. Functions which) 363.68 317.62 B
(return or use multiple v) 63.65 304.62 T
(alues are the e) 166.64 304.62 T
(xception rather than the rule, in practice.) 229.09 304.62 T
-0.27 (Harlequin\325) 63.65 279.62 P
-0.27 (s implementation of Dylan uses the normal ANDF function returning mechanism to return a sin-) 110.69 279.62 P
0.08 (gle Dylan v) 63.65 266.62 P
0.08 (alue, as this is the only v) 114.86 266.62 P
0.08 (alue that is used by almost all callers. In addition, each function sets a) 223.55 266.62 P
0.28 0.17 (count of the number of v) 63.65 253.62 B
0.28 0.17 (alues being returned, in a global v) 177.78 253.62 B
0.28 0.17 (ariable. This count can be e) 334.32 253.62 B
0.28 0.17 (xamined by the) 461.12 253.62 B
0.28 0.05 (caller) 63.65 240.62 B
0.28 0.05 (, if required, to determine ho) 87.96 240.62 B
0.28 0.05 (w man) 216.86 240.62 B
0.28 0.05 (y v) 246.88 240.62 B
0.28 0.05 (alues were returned. If a function is returning more than one) 260.79 240.62 B
(v) 63.65 227.62 T
(alue, the additional v) 68.87 227.62 T
(alues are stored in a global area, where the caller may retrie) 160.87 227.62 T
(v) 422.67 227.62 T
(e then, if desired.) 428 227.62 T
0.28 0.03 (The need to set a global v) 63.65 202.62 B
0.28 0.03 (ariable at e) 178.79 202.62 B
0.28 0.03 (v) 227.66 202.62 B
0.28 0.03 (ery return for Dylan is a source of inef) 233.03 202.62 B
0.28 0.03 (f) 405.3 202.62 B
0.28 0.03 (icienc) 408.39 202.62 B
0.28 0.03 (y for the implementa-) 434.66 202.62 B
-0.16 (tion. Ho) 63.65 189.62 P
-0.16 (we) 99.27 189.62 P
-0.16 (v) 111.82 189.62 P
-0.16 (er) 117.15 189.62 P
-0.16 (, it has not been a priority to \336nd a more ef) 125.26 189.62 P
-0.16 (\336cient solution, as the semantics of multiple-v) 311.39 189.62 P
-0.16 (alue) 513.32 189.62 P
0.28 0.02 (returning in Dylan ha) 63.65 176.62 B
0.28 0.02 (v) 159.09 176.62 B
0.28 0.02 (e recently been a subject of discussion. A language change has no) 164.44 176.62 B
0.28 0.02 (w been accepted) 458.12 176.62 B
0.03 (which mak) 63.65 163.62 P
0.03 (es it possible to determine the number of return v) 112.14 163.62 P
0.03 (alues statically in a lar) 328.74 163.62 P
0.03 (ge number of cases. W) 427.03 163.62 P
0.03 (e) 526.76 163.62 P
0.06 (ha) 63.65 150.62 P
0.06 (v) 73.81 150.62 P
0.06 (e not yet implemented this language change, b) 79.15 150.62 P
0.06 (ut when we do it will only be necessary to set a multiple) 283.44 150.62 P
0.28 0.1 (v) 63.65 137.62 B
0.28 0.1 (alue return count in those rare circumstances when functions are def) 68.97 137.62 B
0.28 0.1 (ined to return a dynamically sized) 377.68 137.62 B
(number of v) 63.65 124.62 T
(alues.) 117.14 124.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 15
%%Page: "10" 16
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(10) 63.65 84.9 T
3 12 Q
(3.4) 63.65 736.95 T
(Garba) 90.65 736.95 T
(g) 125.21 736.95 T
(e Collection) 132.66 736.95 T
2 11 Q
0.14 (Harlequin\325) 63.65 715.62 P
0.14 (s Dylan implementation is designed to be used with v) 110.69 715.62 P
0.14 (arious alternati) 347.25 715.62 P
0.14 (v) 412.8 715.62 P
0.14 (e types of g) 418.13 715.62 P
0.14 (arbage collec-) 469.51 715.62 P
0.28 0.09 (tor) 63.65 702.62 B
0.28 0.09 (. This is achie) 75.55 702.62 B
0.28 0.09 (v) 138.63 702.62 B
0.28 0.09 (ed by using ANDF tok) 144.07 702.62 B
0.28 0.09 (ens to pro) 247.18 702.62 B
0.28 0.09 (vide an abstract interf) 291.9 702.62 B
0.28 0.09 (ace between the compiled code) 390.42 702.62 B
(and the g) 63.65 689.62 T
(arbage collector) 103.92 689.62 T
(. The features that this interf) 173.87 689.62 T
(ace comprises are described in [Mann93a].) 298.4 689.62 T
0.28 0.19 (The g) 63.65 664.62 B
0.28 0.19 (arbage collector and the allocator are both pro) 90.15 664.62 B
0.28 0.19 (vided by the Dylan runtime system, which can be) 303.11 664.62 B
-0.23 (implemented in a platform-speci\336c manner for ef) 63.65 651.62 P
-0.23 (\336cienc) 278.88 651.62 P
-0.23 (y) 308.04 651.62 P
-0.23 (. The details of ho) 312.83 651.62 P
-0.23 (w the allocator and the collector) 391.37 651.62 P
0.28 0.17 (interf) 63.65 638.62 B
0.28 0.17 (ace with each other are localised within the runtime system, and the Dylan producer need not be) 88.37 638.62 B
(a) 63.65 625.62 T
(w) 68.37 625.62 T
(are of the design.) 76.2 625.62 T
0.28 0.15 (Support for incremental and/or generational collection is pro) 63.65 600.62 B
0.28 0.15 (vided via a tok) 341.29 600.62 B
0.28 0.15 (en abstraction for read and) 409.34 600.62 B
0.28 0.01 (write barriers. The tok) 63.65 587.62 B
0.28 0.01 (ens for this are used to implement the readers and writers of slots in Dylan objects.) 162.86 587.62 B
0.28 0.03 (In practice, it is anticipated that an) 63.65 574.62 B
0.28 0.03 (y read and write barriers will be implemented in hardw) 218.12 574.62 B
0.28 0.03 (are, rather than) 464.37 574.62 B
0.28 0.09 (softw) 63.65 561.62 B
0.28 0.09 (are, because that is potentially much more ef) 88.43 561.62 B
0.28 0.09 (f) 290.85 561.62 B
0.28 0.09 (icient. Man) 294 561.62 B
0.28 0.09 (y modern platforms pro) 345.2 561.62 B
0.28 0.09 (vide access to the) 452.01 561.62 B
0.28 0.01 (virtual memory page protection scheme, which may be used for this purpose. Harlequin\325) 63.65 548.62 B
0.28 0.01 (s Dylan has only) 457.03 548.62 B
0.28 0.06 (been tested with hardw) 63.65 535.62 B
0.28 0.06 (are read and write barriers \321 b) 167.34 535.62 B
0.28 0.06 (ut the support is there for softw) 307.97 535.62 B
0.28 0.06 (are barriers as and) 449.48 535.62 B
(when required.) 63.65 522.62 T
0.28 0.14 (The Dylan heap may be traced accurately by the g) 63.65 497.62 B
0.28 0.14 (arbage collector) 293.53 497.62 B
0.28 0.14 (, because each heap-allocated Dylan) 366.12 497.62 B
-0.14 (object refers to a wrapper object which contains tracing information for the g) 63.65 484.62 P
-0.14 (arbage collector) 400.97 484.62 P
-0.14 (. Ho) 470.77 484.62 P
-0.14 (we) 489.3 484.62 P
-0.14 (v) 501.85 484.62 P
-0.14 (er) 507.18 484.62 P
-0.14 (, no) 515.29 484.62 P
0.28 0.24 (support is currently pro) 63.65 471.62 B
0.28 0.24 (vided for accurately tracing the stack \050although techniques were discussed in) 172.97 471.62 B
([Mann93a]\051.) 63.65 458.62 T
0.28 0.11 (It is currently anticipated that a conserv) 63.65 433.62 B
0.28 0.11 (ati) 243.6 433.62 B
0.28 0.11 (v) 254.64 433.62 B
0.28 0.11 (e stack scan will al) 260.08 433.62 B
0.28 0.11 (w) 346.29 433.62 B
0.28 0.11 (ays be used, as this of) 354.23 433.62 B
0.28 0.11 (fers man) 453.69 433.62 B
0.28 0.11 (y adv) 492.83 433.62 B
0.28 0.11 (an-) 517.49 433.62 B
0.28 0.08 (tages, particularly when Dylan code is used with foreign code. The conserv) 63.65 420.62 B
0.28 0.08 (ati) 403.63 420.62 B
0.28 0.08 (v) 414.59 420.62 B
0.28 0.08 (e stack scan places some) 420 420.62 B
0.21 (limitations on the usage of optimisations in) 63.65 407.62 P
0.21 (v) 254.54 407.62 P
0.21 (olving deri) 259.82 407.62 P
0.21 (v) 307.73 407.62 P
0.21 (ed pointers which may be performed by the com-) 313.06 407.62 P
0.28 0.1 (piler) 63.65 394.62 B
0.28 0.1 (. These limitations are discussed in [BW88]. The Dylan producer is a) 83.7 394.62 B
0.28 0.1 (w) 397.93 394.62 B
0.28 0.1 (are of these limitations, and) 405.86 394.62 B
0.28 0.13 (al) 63.65 381.62 B
0.28 0.13 (w) 71.74 381.62 B
0.28 0.13 (ays ensures that for each deri) 79.7 381.62 B
0.28 0.13 (v) 212.68 381.62 B
0.28 0.13 (ed pointer) 218.15 381.62 B
0.28 0.13 (, there is a v) 263.58 381.62 B
0.28 0.13 (ariable in scope which contains a base pointer) 319.68 381.62 B
0.28 0.13 (.) 528.9 381.62 B
0.28 0.03 (Since the installer is also a part of the compiler) 63.65 368.62 B
0.28 0.03 (, there is a requirement that the installer maintains certain) 274.2 368.62 B
0.22 (in) 63.65 355.62 P
0.22 (v) 71.77 355.62 P
0.22 (ariants too. In practice a v) 76.99 355.62 P
0.22 (ery aggressi) 192.18 355.62 P
0.22 (v) 244.98 355.62 P
0.22 (ely optimising installer w) 250.31 355.62 P
0.22 (ould be required to break these in) 363.01 355.62 P
0.22 (v) 511.15 355.62 P
0.22 (ari-) 516.38 355.62 P
0.28 0.02 (ants, and it is belie) 63.65 342.62 B
0.28 0.02 (v) 147.1 342.62 B
0.28 0.02 (ed that no current installer will cause problems. It w) 152.45 342.62 B
0.28 0.02 (ould be desirable for installers to) 385.06 342.62 B
0.28 0.06 (of) 63.65 329.62 B
0.28 0.06 (fer switches to guarantee safe beha) 72.65 329.62 B
0.28 0.06 (viour for conserv) 229.43 329.62 B
0.28 0.06 (ati) 306.42 329.62 B
0.28 0.06 (v) 317.32 329.62 B
0.28 0.06 (e g) 322.71 329.62 B
0.28 0.06 (arbage collection \050not just for the benef) 336.23 329.62 B
0.28 0.06 (it of) 513.12 329.62 B
0.28 0.05 (Dylan, because man) 63.65 316.62 B
0.28 0.05 (y C and C++ applications use conserv) 153.9 316.62 B
0.28 0.05 (ati) 324.24 316.62 B
0.28 0.05 (v) 335.13 316.62 B
0.28 0.05 (e g) 340.52 316.62 B
0.28 0.05 (arbage collection\051. This desire has been) 354.03 316.62 B
(informally discussed with technical representati) 63.65 303.62 T
(v) 273.56 303.62 T
(es of DRA and Etnoteam.) 278.9 303.62 T
0.25 (The combination of conserv) 63.65 278.62 P
0.25 (ati) 187.86 278.62 P
0.25 (v) 198.59 278.62 P
0.25 (e stack scan b) 203.92 278.62 P
0.25 (ut total tracing information for the heap mak) 265.25 278.62 P
0.25 (es it possible to) 462.74 278.62 P
0.26 (implement a) 63.65 265.62 P
1 F
0.26 (mostly copying collector) 121.62 265.62 P
2 F
0.26 (, which is e) 229.86 265.62 P
0.26 (xpected to be a typical algorithm for an) 280.59 265.62 P
0.26 (y gi) 455.48 265.62 P
0.26 (v) 472.28 265.62 P
0.26 (en platform.) 477.62 265.62 P
0.28 0.09 (Harlequin are in the process of implementing such a collector) 63.65 252.62 B
0.28 0.09 (, b) 342.39 252.62 B
0.28 0.09 (ut in the meantime, all testing of Dylan) 353.73 252.62 B
(with ANDF has been with Boehm\325) 63.65 239.62 T
(s fully conserv) 216.72 239.62 T
(ati) 281.22 239.62 T
(v) 291.94 239.62 T
(e collector) 297.28 239.62 T
(.) 342.8 239.62 T
3 12 Q
(3.5) 63.65 201.95 T
(Name Mangling) 90.65 201.95 T
2 11 Q
-0.21 (In Dylan, unlik) 63.65 180.62 P
-0.21 (e C, identi\336er names are case insensiti) 130.03 180.62 P
-0.21 (v) 296.83 180.62 P
-0.21 (e. Dylan also permits additional characters to appear) 302.17 180.62 P
-0.27 (in names. As a further complication, Dylan pro) 63.65 167.62 P
-0.27 (vides multiple namespaces, and the namespaces are control-) 269.01 167.62 P
(led within a tw) 63.65 154.62 T
(o-tier hierarch) 129.23 154.62 T
(y of modules and libraries.) 191.79 154.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 16
%%Page: "11" 17
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(11) 520.53 84.9 T
2 11 Q
0.28 0 (In order to mak) 63.65 737.62 B
0.28 0 (e it possible to link Dylan code with tools designed to support more traditional languages,) 132.52 737.62 B
0.28 0.05 (the Dylan producer transforms the names which appear in Dylan programs to C compatible names, via a) 63.65 724.62 B
(process called) 63.65 711.62 T
1 F
(mangling) 128.4 711.62 T
2 F
(.) 169.96 711.62 T
(The library) 63.65 686.62 T
(, module and identi\336er names are each processed, according to the follo) 112.11 686.62 T
(wing rules:) 427.41 686.62 T
3 9 Q
(1.) 99.65 667.62 T
2 11 Q
(All uppercase characters are con) 113.4 667.62 T
(v) 255.89 667.62 T
(erted to lo) 261.23 667.62 T
(wercase.) 305.56 667.62 T
3 9 Q
(2.) 99.65 648.62 T
2 11 Q
(An) 113.4 648.62 T
(y character which appears on the left-hand side of T) 126.68 648.62 T
(able) 354.59 648.62 T
(4 on page) 375.66 648.62 T
(11 is mapped to the ne) 421.18 648.62 T
(w) 520.2 648.62 T
(character sequence accordingly) 113.4 636.62 T
(.) 250.74 636.62 T
0.28 0.06 (Finally) 63.65 334.62 B
0.28 0.06 (, the fully mangled name is created by concatenating the processed library) 94.5 334.62 B
0.28 0.06 (, module, and identif) 427.19 334.62 B
0.28 0.06 (ier) 519.93 334.62 B
(names respecti) 63.65 321.62 T
(v) 128.44 321.62 T
(ely) 133.77 321.62 T
(, separated by) 146.5 321.62 T
0 F
(X) 210.04 321.62 T
2 F
(.) 217.98 321.62 T
0.28 0.16 (F) 63.65 296.62 B
0.28 0.16 (or e) 69.76 296.62 B
0.28 0.16 (xample, the Dylan identif) 87.3 296.62 B
0.28 0.16 (ier) 203.9 296.62 B
0 F
0.28 0.16 (add-new!) 219.16 296.62 B
2 F
0.28 0.16 ( in module) 264.43 296.62 B
0 F
0.28 0.16 (inter) 316.8 296.62 B
0.28 0.16 (nal) 340.03 296.62 B
2 F
0.28 0.16 ( of library) 355.18 296.62 B
0 F
0.28 0.16 (dylan) 404.64 296.62 B
2 F
0.28 0.16 ( w) 431.72 296.62 B
0.28 0.16 (ould be mangled as) 442.89 296.62 B
0 F
(dylanXinter) 63.65 283.62 T
(nalXadd_new_E_) 120.32 283.62 T
2 F
(.) 203.45 283.62 T
3 15 Q
(4.) 63.65 241.95 T
(The Dylan Pr) 90.65 241.95 T
(oducer Representation) 182.04 241.95 T
3 12 Q
(4.1) 63.65 202.95 T
(Intr) 90.65 202.95 T
(oduction) 109.74 202.95 T
2 11 Q
-0.16 (T) 63.65 181.62 P
-0.16 (raditionally) 69.98 181.62 P
-0.16 (, compilers use one or tw) 119.99 181.62 P
-0.16 (o intermediate representations for code. The \336rst of these is usually a) 229.7 181.62 P
0.28 0.06 (parse tree which is a representation of the deri) 63.65 168.62 B
0.28 0.06 (v) 271.28 168.62 B
0.28 0.06 (ation of the source program, structured according to pro-) 276.57 168.62 B
-0.26 (ductions in the grammar of the language in which it is written. This tree carries both syntactic and semantic) 63.65 155.62 P
-0.23 (information, although it is the latter which is important for code generation. Code can be generated directly) 63.65 142.62 P
0.14 (from the parse tree by a v) 63.65 129.62 P
0.14 (ariety of techniques, or an intermediate form such as 3-address code can be gen-) 176.65 129.62 P
(erated before \336nally emitting the e) 63.65 116.62 T
(x) 215.32 116.62 T
(ecutable code.) 220.65 116.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 223.99 587.62 T
(able 4.) 229.83 587.62 T
(Mangler Mapping T) 264.65 587.62 T
(able) 352.98 587.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(Old) 231.65 562.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(New) 261.65 562.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Comment) 300.65 562.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(-) 231.65 542.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_) 261.65 542.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(dash) 300.65 542.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(!) 231.65 528.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_E_) 261.65 528.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(e) 300.65 528.62 T
(xclamation) 305.37 528.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
($) 231.65 514.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_D_) 261.65 514.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(dollar) 300.65 514.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(*) 231.65 500.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_T_) 261.65 500.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(times) 300.65 500.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(/) 231.65 486.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_S_) 261.65 486.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(slash) 300.65 486.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<) 231.65 472.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_L_) 261.65 472.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(less) 300.65 472.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(>) 231.65 458.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_G_) 261.65 458.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(greater) 300.65 458.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(?) 231.65 444.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_Q_) 261.65 444.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(question mark) 300.65 444.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(+) 231.65 430.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_PL_) 261.65 430.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(plus) 300.65 430.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(&) 231.65 416.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_AP_) 261.65 416.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(ampersand) 300.65 416.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(^) 231.65 402.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_CR_) 261.65 402.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(caret) 300.65 402.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(_) 231.65 388.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_UB_) 261.65 388.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(underbar) 300.65 388.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(~) 231.65 374.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(_SG_) 261.65 374.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(squiggle) 300.65 374.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(_SP_) 261.65 360.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(space) 300.65 360.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
255.65 580.95 255.65 355.95 2 L
V
0.25 H
0 Z
N
294.65 580.95 294.65 355.95 2 L
V
N
225.65 551.95 369.65 551.95 2 L
V
0.5 H
N
225.65 537.95 369.65 537.95 2 L
V
0.25 H
N
225.65 523.95 369.65 523.95 2 L
V
N
225.65 509.95 369.65 509.95 2 L
V
N
225.65 495.95 369.65 495.95 2 L
V
N
225.65 481.95 369.65 481.95 2 L
V
N
225.65 467.95 369.65 467.95 2 L
V
N
225.65 453.95 369.65 453.95 2 L
V
N
225.65 439.95 369.65 439.95 2 L
V
N
225.65 425.95 369.65 425.95 2 L
V
N
225.65 411.95 369.65 411.95 2 L
V
N
225.65 397.95 369.65 397.95 2 L
V
N
225.65 383.95 369.65 383.95 2 L
V
N
225.65 369.95 369.65 369.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 17
%%Page: "12" 18
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(12) 63.65 84.9 T
2 11 Q
0.28 0.05 (Each representation is amenable to dif) 63.65 737.62 B
0.28 0.05 (ferent kinds of analyses and optimisations. Higher) 234.76 737.62 B
0.28 0.05 (-le) 459.31 737.62 B
0.28 0.05 (v) 470.78 737.62 B
0.28 0.05 (el structured) 476.16 737.62 B
-0.23 (representations being good for) 63.65 724.62 P
1 F
-0.23 (global) 199.6 724.62 P
2 F
-0.23 ( optimisations in) 227.72 724.62 P
-0.23 (v) 300.17 724.62 P
-0.23 (olving mutation and / or mo) 305.45 724.62 P
-0.23 (v) 427.3 724.62 P
-0.23 (ement of code. Lo) 432.64 724.62 P
-0.23 (wer) 511.72 724.62 P
-0.23 (-) 527.98 724.62 P
-0.01 (le) 63.65 711.62 P
-0.01 (v) 71.32 711.62 P
-0.01 (el or linear representations are good for local or) 76.65 711.62 P
1 F
-0.01 (peephole) 288.87 711.62 P
2 F
-0.01 ( optimisations such as \324mo) 328.58 711.62 P
-0.01 (v) 445.71 711.62 P
-0.01 (e\325, \324chain\325 or dead) 451.05 711.62 P
(code elimination. ANDF itself f) 63.65 698.62 T
(alls into the latter cate) 203.78 698.62 T
(gory) 300.76 698.62 T
(.) 320.21 698.62 T
-0.26 (Harlequin\325) 63.65 673.62 P
-0.26 (s Dylan producer uses a single \324medium-le) 110.69 673.62 P
-0.26 (v) 297.07 673.62 P
-0.26 (el\325 intermediate representation which to some e) 302.4 673.62 P
-0.26 (xtent) 509.65 673.62 P
0.28 0.09 (allo) 63.65 660.62 B
0.28 0.09 (ws both global and local optimisations. This tak) 80.25 660.62 B
0.28 0.09 (es the form of a directed ac) 297.48 660.62 B
0.28 0.09 (yclic graph \050D) 421.36 660.62 B
0.28 0.09 (A) 486.34 660.62 B
0.28 0.09 (G\051 com-) 493.94 660.62 B
0.28 0.03 (posed of se) 63.65 647.62 B
0.28 0.03 (v) 113.69 647.62 B
0.28 0.03 (eral layers, in which lo) 119.05 647.62 B
0.28 0.03 (wer layers describe indi) 220.99 647.62 B
0.28 0.03 (vidual operations, and higher layers group the) 326.92 647.62 B
0.28 0.1 (lo) 63.65 634.62 B
0.28 0.1 (wer layers into structural units. This representation carries more semantic information, b) 72.12 634.62 B
0.28 0.1 (ut there is no) 472.44 634.62 B
0.28 0.04 (direct correspondence between its structure and the syntactic structure of the original source. A mapping) 63.65 621.62 B
(between each node of the graph and the source that generated it is maintained, ho) 63.65 608.62 T
(we) 421.09 608.62 T
(v) 433.64 608.62 T
(er) 438.98 608.62 T
(.) 446.92 608.62 T
0.17 (Much of the grammatical structure of Dylan is b) 63.65 583.62 P
0.17 (uilt with) 277.44 583.62 P
1 F
0.17 (macr) 317.52 583.62 P
0.17 (os) 339.63 583.62 P
2 F
0.17 (. A macro is an e) 349.41 583.62 P
0.17 (xtension to the core lan-) 424.64 583.62 P
0.28 0.05 (guage that can be def) 63.65 570.62 B
0.28 0.05 (ined by the user) 158.55 570.62 B
0.28 0.05 (, by the implementation, or as part of the Dylan language specif) 229.62 570.62 B
0.28 0.05 (ica-) 515.07 570.62 B
-0 (tion. A macro de\336nes the meaning of one construct in terms of another construct. The compiler substitutes) 63.65 557.62 P
-0.18 (the ne) 63.65 544.62 P
-0.18 (w construct for the original. The purpose of macros is to allo) 89.77 544.62 P
-0.18 (w programmers to e) 354.5 544.62 P
-0.18 (xtend the Dylan lan-) 442.07 544.62 P
0.11 (guage, for e) 63.65 531.62 P
0.11 (xample by creating ne) 115.92 531.62 P
0.11 (w control structures or ne) 213.42 531.62 P
0.11 (w de\336nitions. Unlik) 325.99 531.62 P
0.11 (e C, Dylan does not intend) 413.79 531.62 P
0.28 0.08 (macros to be used to optimise code by in-lining. Other parts of the language, such as sealing and) 63.65 518.62 B
0 F
0.28 0.08 (def) 503.15 518.62 B
0.28 0.08 (ine) 517.44 518.62 B
(constant) 63.65 505.62 T
2 F
(, address that need.) 103.37 505.62 T
(Compilation consists of a sequence of conceptual phases:) 63.65 480.62 T
4 F
(\245) 99.65 461.62 T
2 F
(P) 113.4 461.62 T
(arsing a stream of characters into tok) 119.35 461.62 T
(ens, and parsing a stream of tok) 281.76 461.62 T
(ens into a program) 421.26 461.62 T
4 F
(\245) 99.65 445.62 T
2 F
(Macro e) 113.4 445.62 T
(xpansion, which translates the program to a core language) 149.58 445.62 T
4 F
(\245) 99.65 429.62 T
2 F
(Con) 113.4 429.62 T
(v) 131.3 429.62 T
(erting, which recognises special and b) 136.63 429.62 T
(uilt-in de\336nitions and b) 303.82 429.62 T
(uilds a compile-time model) 406.58 429.62 T
(of the static structure of the program) 113.4 416.62 T
4 F
(\245) 99.65 400.62 T
2 F
(Optimisation, which re) 113.4 400.62 T
(writes the program for impro) 214.26 400.62 T
(v) 341.79 400.62 T
(ed performance) 347.13 400.62 T
4 F
(\245) 99.65 384.62 T
2 F
(Code generation, which translates the program to ANDF) 113.4 384.62 T
4 F
(\245) 99.65 368.62 T
2 F
(Installation, which translates ANDF to e) 113.4 368.62 T
(x) 291.05 368.62 T
(ecutable form) 296.39 368.62 T
3 12 Q
(4.2) 63.65 330.95 T
(P) 90.65 330.95 T
(ar) 98.29 330.95 T
(sing and Macr) 109.45 330.95 T
(o Expansion) 189.9 330.95 T
2 11 Q
0.28 0.06 (An important feature of Dylan is a v) 63.65 309.62 B
0.28 0.06 (ery po) 227.51 309.62 B
0.28 0.06 (werful \324macro\325 system which adds great f) 255.7 309.62 B
0.28 0.06 (le) 442.61 309.62 B
0.28 0.06 (xibility to the lan-) 450.51 309.62 B
-0.26 (guage. It allo) 63.65 296.62 P
-0.26 (ws ne) 120.6 296.62 P
-0.26 (w language constructs to be de\336ned, e.g. a ne) 145.43 296.62 P
-0.26 (w \324for\325 construct, which will ha) 342.59 296.62 P
-0.26 (v) 480.39 296.62 P
-0.26 (e the same) 485.73 296.62 P
(status as pre-e) 63.65 283.62 T
(xisting constructs.) 125.8 283.62 T
0.28 0.01 (In dealing with these the parsing and macro e) 63.65 258.62 B
0.28 0.01 (xpansion phases of compilation are interlea) 266.05 258.62 B
0.28 0.01 (v) 458.68 258.62 B
0.28 0.01 (ed, not sequen-) 464.03 258.62 B
-0.12 (tial. The parsing phase of the compiler parses a macro call just enough to \336nd its end. This process of pars-) 63.65 245.62 P
(ing a macro call also parses an) 63.65 232.62 T
(y macro calls nested inside it.   The result is a macro call fragment.) 197.89 232.62 T
0.23 (Macro e) 63.65 207.62 P
0.23 (xpansion replaces a macro call with another construct, which can itself be a macro call or contain) 100.05 207.62 P
0.04 (macro calls.   This e) 63.65 194.62 P
0.04 (xpansion process repeats until there are no macro calls remaining in the program, thus) 152.29 194.62 P
0.28 0.01 (macros ha) 63.65 181.62 B
0.28 0.01 (v) 108.67 181.62 B
0.28 0.01 (e no space or speed cost at run time. Of course, e) 114.02 181.62 B
0.28 0.01 (xpanding macros af) 332.62 181.62 B
0.28 0.01 (fects the speed and space) 419.79 181.62 B
(cost of the compiler) 63.65 168.62 T
(.) 150.72 168.62 T
-0.23 (A macro de\336nition describes both the syntax of a macro call and the process for creating a ne) 63.65 143.62 P
-0.23 (w construct to) 469.78 143.62 P
-0.12 (replace the macro call. T) 63.65 130.62 P
-0.12 (ypically the ne) 171.34 130.62 P
-0.12 (w construct contains portions of the old one, which can be re) 235.6 130.62 P
-0.12 (g) 501.77 130.62 P
-0.12 (arded) 507.22 130.62 P
-0.18 (as ar) 63.65 117.62 P
-0.18 (guments to the macro. A macro de\336nition consists of a sequence of re) 83.73 117.62 P
-0.18 (write rules. The left-hand side of) 388.35 117.62 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 18
%%Page: "13" 19
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(13) 520.53 84.9 T
2 11 Q
0.28 0.08 (each rule is a pattern that matches a macro call. The right-hand side is a template for the e) 63.65 737.62 B
0.28 0.08 (xpansion of a) 470.87 737.62 B
0.28 0 (matching call. P) 63.65 724.62 B
0.28 0 (attern v) 135.23 724.62 B
0.28 0 (ariables appearing in the left-hand side act as names for macro ar) 168.53 724.62 B
0.28 0 (guments. P) 457.59 724.62 B
0.28 0 (attern) 506.6 724.62 B
0.28 0.05 (v) 63.65 711.62 B
0.28 0.05 (ariables appearing in the right-hand side substitute ar) 68.92 711.62 B
0.28 0.05 (guments into the e) 306.54 711.62 B
0.28 0.05 (xpansion. Macro ar) 389.08 711.62 B
0.28 0.05 (guments can) 475.57 711.62 B
0.28 0 (be constrained to match specif) 63.65 698.62 B
0.28 0 (ied elements of the Dylan grammar) 198.07 698.62 B
0.28 0 (. Auxiliary rule sets enhance the re) 354.46 698.62 B
0.28 0 (write) 509.03 698.62 B
(rule notation with named sub-rules.) 63.65 685.62 T
0.28 0.12 (The input to, and output from, macro e) 63.65 660.62 B
0.28 0.12 (xpansion is a fragment, which is a sequence of elementary frag-) 240.79 660.62 B
0.28 0.17 (ments. The \324core\325 result of the inter) 63.65 647.62 B
0.28 0.17 (-lea) 227.57 647.62 B
0.28 0.17 (v) 244.53 647.62 B
0.28 0.17 (ed parsing and macro e) 250.04 647.62 B
0.28 0.17 (xpansion is passed to the compiler for) 356.79 647.62 B
(processing in the subsequent stages.) 63.65 634.62 T
3 12 Q
(4.3) 63.65 596.95 T
(Con) 90.65 596.95 T
(ver) 113.5 596.95 T
(ting) 131.75 596.95 T
2 11 Q
-0.07 (This stage tak) 63.65 575.62 P
-0.07 (es the \324core\325 language from the parsing and macro e) 124.5 575.62 P
-0.07 (xpansion phase and re-generates it as the) 352.47 575.62 P
-0.21 (intermediate representation that the compiler uses. In this process input syntax is matched to the intermedi-) 63.65 562.62 P
-0.21 (ate representation. This representation is kno) 63.65 549.62 P
-0.21 (wn as the) 259.67 549.62 P
1 F
-0.21 (Implicit Continuation Repr) 303.33 549.62 P
-0.21 (esentation) 421.68 549.62 P
2 F
-0.21 ( or ICR. Dylan) 466.9 549.62 P
-0.25 (has a rich set of language forms, b) 63.65 536.62 P
-0.25 (ut these can be reduced to a f) 212.57 536.62 P
-0.25 (airly small set of core forms in the ICR such) 338.69 536.62 P
0.28 0.04 (as:) 63.65 523.62 B
0 F
0.28 0.04 (method) 79.06 523.62 B
2 F
0.28 0.04 (,) 114.75 523.62 B
0 F
0.28 0.04 (let) 120.61 523.62 B
2 F
0.28 0.04 (,) 132.34 523.62 B
0 F
0.28 0.04 (begin) 138.2 523.62 B
2 F
0.28 0.04 (,) 164.08 523.62 B
0 F
0.28 0.04 (if) 169.93 523.62 B
2 F
0.28 0.04 (. This con) 176.74 523.62 B
0.28 0.04 (v) 220.96 523.62 B
0.28 0.04 (ersion from source into ICR thro) 226.33 523.62 B
0.28 0.04 (ws a) 372.66 523.62 B
0.28 0.04 (w) 392.79 523.62 B
0.28 0.04 (ay lar) 400.66 523.62 B
0.28 0.04 (ge amounts of syntactic) 425.73 523.62 B
0.28 0.01 (information although we still do the equi) 63.65 510.62 B
0.28 0.01 (v) 244.95 510.62 B
0.28 0.01 (alent of \324beta transformation\325 on the ICR rather than on syntax.) 250.18 510.62 B
0.28 0.06 (The initial con) 63.65 497.62 B
0.28 0.06 (v) 128.84 497.62 B
0.28 0.06 (ersion from source to ICR tak) 134.24 497.62 B
0.28 0.06 (es care of an) 268.35 497.62 B
0.28 0.06 (y name conf) 325.09 497.62 B
0.28 0.06 (lict problems by assigning unique) 380.08 497.62 B
0.28 0 (names appropriately) 63.65 484.62 B
0.28 0 (. The full Dylan method is implemented with a simple f) 152.75 484.62 B
0.28 0 (ix) 399.74 484.62 B
0.28 0 (ed-ar) 408.14 484.62 B
0.28 0 (gument lambda, which) 430.54 484.62 B
(greatly simpli\336es the later compiler phases.) 63.65 471.62 T
0.28 0.28 (The ICR representation is a f) 63.65 446.62 B
0.28 0.28 (lo) 199.86 446.62 B
0.28 0.28 (w-graph which directly supports f) 208.7 446.62 B
0.28 0.28 (lo) 367.44 446.62 B
0.28 0.28 (w analysis. It carries information) 376.27 446.62 B
-0.03 (describing both control and data \337o) 63.65 433.62 P
-0.03 (w) 219.35 433.62 P
-0.03 (. In relation to control \337o) 226.58 433.62 P
-0.03 (w) 336.76 433.62 P
-0.03 (, the progress of the program from point to) 343.99 433.62 P
0.28 0.02 (point, \050e.g. from \324if) 63.65 420.62 B
0.28 0.02 (\325 to \324then\325 or \324else\325\051 is represented as arcs in the graph, while actual computations are) 150.47 420.62 B
0.1 (represented as nodes. The number of dif) 63.65 407.62 P
0.1 (ferent types of nodes is k) 240.86 407.62 P
0.1 (ept to a minimum, with ef) 351.55 407.62 P
0.1 (fort being con-) 466.07 407.62 P
(centrated on producing high-quality optimisations for that small set.) 63.65 394.62 T
0.28 0.01 (Data f) 63.65 369.62 B
0.28 0.01 (lo) 90.58 369.62 B
0.28 0.01 (w to dif) 98.89 369.62 B
0.28 0.01 (ferent storage locations are also represented on the arcs. The inte) 133.5 369.62 B
0.28 0.01 (grated representations of) 422.02 369.62 B
0.15 (both control and data \337o) 63.65 356.62 P
0.15 (w are kno) 171.5 356.62 P
0.15 (wn as) 214.89 356.62 P
1 F
0.15 (continuations) 243.29 356.62 P
2 F
0.15 ( \050see T) 303.18 356.62 P
0.15 (able) 332.53 356.62 P
0.15 (5 on page) 353.6 356.62 P
0.15 (14\051. F) 399.41 356.62 P
0.15 (or each ICR node, these) 425.67 356.62 P
0.28 0.11 (are resolv) 63.65 343.62 B
0.28 0.11 (ed into a set of instructions related where necessary to specif) 107.92 343.62 B
0.28 0.11 (ic data. F) 383.94 343.62 B
0.28 0.11 (or e) 426.05 343.62 B
0.28 0.11 (xample, an \324assign-) 443.39 343.62 B
-0.18 (ment\325 node w) 63.65 330.62 P
-0.18 (ould be described in terms of a re) 123.66 330.62 P
-0.18 (gister transfer where the source w) 269.16 330.62 P
-0.18 (ould be the incoming con-) 416.89 330.62 P
0.28 0.12 (tinuation, and the destination w) 63.65 317.62 B
0.28 0.12 (ould be the outgoing continuation. There are se) 206.9 317.62 B
0.28 0.12 (v) 421.94 317.62 B
0.28 0.12 (en basic node types, as) 427.4 317.62 B
0.28 0.05 (follo) 63.65 304.62 B
0.28 0.05 (ws: a \324leaf) 84.42 304.62 B
0.28 0.05 (\325 reference) 131.99 304.62 B
0 F
0.28 0.05 (<r) 183.26 304.62 B
0.28 0.05 (efer) 194.32 304.62 B
0.28 0.05 (ence>) 212.66 304.62 B
2 F
0.28 0.05 (; assignment to v) 239.96 304.62 B
0.28 0.05 (ariables) 316.3 304.62 B
0 F
0.28 0.05 (<assign>) 354.02 304.62 B
2 F
0.28 0.05 (; conditional e) 395.73 304.62 B
0.28 0.05 (x) 459.86 304.62 B
0.28 0.05 (ecution) 465.25 304.62 B
0 F
0.28 0.05 (<if>) 501.1 304.62 B
2 F
0.28 0.05 (; a) 520.57 304.62 B
0.28 0.05 (function call) 63.65 291.62 B
0 F
0.28 0.05 (<combination>) 122.93 291.62 B
2 F
0.28 0.05 (; function return) 194.78 291.62 B
0 F
0.28 0.05 (<r) 270.72 291.62 B
0.28 0.05 (etur) 281.77 291.62 B
0.28 0.05 (n>) 301.35 291.62 B
2 F
0.28 0.05 (; start of dynamic e) 313.83 291.62 B
0.28 0.05 (xtent) 400.68 291.62 B
0 F
0.28 0.05 (<entry>) 426 291.62 B
2 F
0.28 0.05 (; non-local e) 463.92 291.62 B
0.28 0.05 (xit) 519.93 291.62 B
0 F
(<exit>) 63.65 278.62 T
2 F
(.) 93.29 278.62 T
0.11 (Other elements of the ICR are lea) 63.65 253.62 P
0.11 (v) 211.96 253.62 P
0.11 (es, blocks, and components.) 217.29 253.62 P
1 F
0.11 (Leaves) 343.93 253.62 P
2 F
0.11 ( represent the computational actors,) 374.48 253.62 P
0.28 0.03 (\050i.e. v) 63.65 240.62 B
0.28 0.03 (ariables, functions, and literals\051 in a Dylan program, and are classif) 89.18 240.62 B
0.28 0.03 (ied into three main types:) 388.5 240.62 B
0 F
0.28 0.03 (<con-) 505.14 240.62 B
0.28 0.01 (stant-leaf>) 63.65 227.62 B
2 F
0.28 0.01 (,) 114.03 227.62 B
0 F
0.28 0.01 (<v) 119.83 227.62 B
0.28 0.01 (ariable-leaf>) 131.51 227.62 B
2 F
0.28 0.01 (, and) 191.7 227.62 B
0 F
0.28 0.01 (<function-leaf>) 216.45 227.62 B
2 F
0.28 0.01 (. A) 289.04 227.62 B
1 F
0.28 0.01 (bloc) 305.83 227.62 B
0.28 0.01 (k) 324.59 227.62 B
2 F
0.28 0.01 ( is a contiguous set of nodes, or a basic block) 329.49 227.62 B
-0.01 (in the control sense within which there are no basic forks or joins of computational \337o) 63.65 214.62 P
-0.01 (w) 442.3 214.62 P
-0.01 (. A) 449.53 214.62 P
1 F
-0.01 (component) 465.69 214.62 P
2 F
-0.01 ( is a) 513.96 214.62 P
0.28 0.04 (connected piece of the f) 63.65 201.62 B
0.28 0.04 (lo) 170.04 201.62 B
0.28 0.04 (w graph. Most of the passes in the compiler operate on components rather than) 178.4 201.62 B
(the entire \337o) 63.65 188.62 T
(w graph.) 118.98 188.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 19
%%Page: "14" 20
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(14) 63.65 84.9 T
3 12 Q
(4.4) 63.65 390.95 T
(Optimisation) 90.65 390.95 T
3 10 Q
(4.4.1) 63.65 356.29 T
(Intr) 90.89 356.29 T
(oduction) 106.8 356.29 T
2 11 Q
-0.15 (Languages which are \324close to the machine\325 ha) 63.65 335.62 P
-0.15 (v) 269.19 335.62 P
-0.15 (e generally concentrated on lo) 274.52 335.62 P
-0.15 (wer le) 406.23 335.62 P
-0.15 (v) 432.98 335.62 P
-0.15 (el or \324back-end\325 opti-) 438.32 335.62 P
0.28 0.04 (misations such as minimising jumps or eliminating unnecessary machine instructions. Dylan still applies) 63.65 322.62 B
(these optimisations, b) 63.65 309.62 T
(ut goes through a signi\336cant simpli\336cation step beforehand.) 159.07 309.62 T
0.28 0.12 (Analysis is used, for e) 63.65 284.62 B
0.28 0.12 (xample, to determine when full function calls can be eliminated, and jumps used) 164.75 284.62 B
0.28 0.06 (instead. Dylan does not ha) 63.65 271.62 B
0.28 0.06 (v) 182.57 271.62 B
0.28 0.06 (e a \324GO) 187.97 271.62 B
0.28 0.06 (T) 223.34 271.62 B
0.28 0.06 (O\325, b) 229.92 271.62 B
0.28 0.06 (ut only has methods and function calls. A simple loop such as) 252.9 271.62 B
-0.23 (\324for\325 loop inside a function is represented as a local function which is called recursi) 63.65 258.62 P
-0.23 (v) 426.69 258.62 P
-0.23 (ely) 432.02 258.62 P
-0.23 (. In order to achie) 444.75 258.62 P
-0.23 (v) 521.43 258.62 P
-0.23 (e) 526.76 258.62 P
0.28 0.03 (good performance it is thus important for Dylan to recognise such cases where the function is not passed) 63.65 245.62 B
0.28 0.13 (else) 63.65 232.62 B
0.28 0.13 (where, and is only used as a jump. The compiler must a\051 a) 80.99 232.62 B
0.28 0.13 (v) 347.4 232.62 B
0.28 0.13 (oid allocating the method object and b\051) 352.81 232.62 B
0.17 (compile the code in-line in the enclosing function, and c\051 instead of making the full function call, jump as) 63.65 219.62 P
(necessary) 63.65 206.62 T
(.) 105.69 206.62 T
(Other optimisations include:) 63.65 181.62 T
4 F
(\245) 99.65 162.62 T
2 F
(dead code elimination) 113.4 162.62 T
4 F
(\245) 99.65 146.62 T
2 F
(constant folding) 113.4 146.62 T
4 F
(\245) 99.65 130.62 T
2 F
(partial e) 113.4 130.62 T
(v) 148.86 130.62 T
(aluation based on constant folding and in-lining) 154.09 130.62 T
4 F
(\245) 99.65 114.62 T
2 F
(v) 113.4 114.62 T
(alues) 118.62 114.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 232.55 712.62 T
(able 5.) 238.39 712.62 T
(Elements in the ICR) 273.22 712.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(ICR Element) 69.65 687.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(T) 177.65 687.62 T
(ypes) 184.17 687.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Description) 285.65 687.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Node) 69.65 667.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<r) 177.65 667.62 T
(efer) 188.6 667.62 T
(ence>) 206.72 667.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<assign>) 177.65 654.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<if>) 177.65 641.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<combination>) 177.65 628.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<r) 177.65 615.62 T
(etur) 188.6 615.62 T
(n>) 207.99 615.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<entry>) 177.65 602.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<exit>) 177.65 589.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Nodes represent the program\325) 285.65 667.62 T
(s actual computation.) 416.09 667.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The) 285.65 654.62 T
(y are joined by arcs in the \337o) 302.59 654.62 T
(w graph.) 430.32 654.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Continuation) 69.65 575.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.06 (A continuation represents a place in the code, or) 285.65 575.62 P
-0.06 (, alter-) 497 575.62 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(nati) 285.65 562.62 T
(v) 301.87 562.62 T
(ely) 307.21 562.62 T
(, the destination of an e) 319.93 562.62 T
(xpression result and a) 422.42 562.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.13 (transfer of control. It is an inte) 285.65 549.62 P
-0.13 (grated representation of) 418.82 549.62 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(both control and data \337o) 285.65 536.62 T
(w) 392.92 536.62 T
(.) 400.15 536.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Leaf) 69.65 522.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<constant-leaf>) 177.65 522.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<v) 177.65 509.62 T
(ariable-leaf>) 189.31 509.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(<function-leaf>) 177.65 496.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Lea) 285.65 522.62 T
(v) 301.92 522.62 T
(es represent the computational actors \050v) 307.25 522.62 T
(ariables,) 482.02 522.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(functions, and literals\051 in a Dylan program.) 285.65 509.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Block) 69.65 482.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A block is a contiguous set of nodes, or a basic block) 285.65 482.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(in the control sense.) 285.65 469.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Component) 69.65 455.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A component is a connected piece of the \337o) 285.65 455.62 T
(w graph,) 478.45 455.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.54 (computed as the equi) 285.65 442.62 P
-0.54 (v) 376.95 442.62 P
-0.54 (alence class of functions\325 le) 382.17 442.62 P
-0.54 (xical) 502.05 442.62 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(en) 285.65 429.62 T
(vironments.) 295.59 429.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
171.65 705.95 171.65 424.95 2 L
V
0.25 H
0 Z
N
279.65 705.95 279.65 424.95 2 L
V
N
63.65 676.95 531.65 676.95 2 L
V
0.5 H
N
63.65 584.95 531.65 584.95 2 L
V
0.25 H
N
63.65 531.95 531.65 531.95 2 L
V
N
63.65 491.95 531.65 491.95 2 L
V
N
63.65 464.95 531.65 464.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 20
%%Page: "15" 21
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(15) 520.53 84.9 T
4 11 Q
(\245) 99.65 737.62 T
2 F
(block) 113.4 737.62 T
4 F
(\245) 99.65 721.62 T
2 F
(apply) 113.4 721.62 T
0.28 0.17 (These optimisations \050described in more detail belo) 63.65 696.62 B
0.28 0.17 (w\051 are \324opportunistic\325 in the sense that the) 295.72 696.62 B
0.28 0.17 (y happen) 490.2 696.62 B
0.28 0.13 (automatically until no further opportunities for optimisation are a) 63.65 683.62 B
0.28 0.13 (v) 361.52 683.62 B
0.28 0.13 (ailable. The application of one tech-) 366.88 683.62 B
0.28 0.19 (nique may re) 63.65 670.62 B
0.28 0.19 (v) 123.65 670.62 B
0.28 0.19 (eal conditions f) 129.18 670.62 B
0.28 0.19 (a) 200.51 670.62 B
0.28 0.19 (v) 205.36 670.62 B
0.28 0.19 (ouring the applications of another) 210.83 670.62 B
0.28 0.19 (. Conceptually) 366.32 670.62 B
0.28 0.19 (, these techniques are) 432.72 670.62 B
0.06 (based on manipulations of the \337o) 63.65 657.62 P
0.06 (w-graph. The essential point is that while Dylan is a po) 210.02 657.62 P
0.06 (werful, high-le) 453.21 657.62 P
0.06 (v) 518.37 657.62 P
0.06 (el) 523.71 657.62 P
0.28 0.09 (language, this generality needs to be stripped a) 63.65 644.62 B
0.28 0.09 (w) 275.4 644.62 B
0.28 0.09 (ay from the e) 283.32 644.62 B
0.28 0.09 (x) 343.43 644.62 B
0.28 0.09 (ecutable code where it is not used or not) 348.85 644.62 B
0.28 0.09 (necessary) 63.65 631.62 B
0.28 0.09 (, in order to g) 106.5 631.62 B
0.28 0.09 (ain maximum ef) 168.48 631.62 B
0.28 0.09 (f) 242.13 631.62 B
0.28 0.09 (icienc) 245.28 631.62 B
0.28 0.09 (y) 271.92 631.62 B
0.28 0.09 (. As much processing as possible is pushed into compile) 276.8 631.62 B
0.28 0.29 (time, rather than run time. This includes type checking, k) 63.65 618.62 B
0.28 0.29 (e) 334.82 618.62 B
0.28 0.29 (yw) 339.84 618.62 B
0.28 0.29 (ord processing, and method selection.) 353.76 618.62 B
0.28 0.02 (Another w) 63.65 605.62 B
0.28 0.02 (ay to e) 110.76 605.62 B
0.28 0.02 (xpress this idea is to say that Dylan is a dynamic language which can be used statically) 140.64 605.62 B
0.28 0.02 (.) 528.9 605.62 B
(Where it is used in a static manner) 63.65 592.62 T
(, the compiler should be able to optimise as appropriate.) 215.04 592.62 T
0.18 (A po) 63.65 567.62 P
0.18 (werful technique in this conte) 85.25 567.62 P
0.18 (xt is representation analysis. Dylan objects are tagged with information) 216.56 567.62 P
0.28 0.02 (about what type the) 63.65 554.62 B
0.28 0.02 (y ha) 151.08 554.62 B
0.28 0.02 (v) 169.83 554.62 B
0.28 0.02 (e. This tak) 175.18 554.62 B
0.28 0.02 (es up e) 221.94 554.62 B
0.28 0.02 (xtra space and in certain circumstances can mean that memory) 252.98 554.62 B
-0.08 (has to be allocated in order to mak) 63.65 541.62 P
-0.08 (e an object that can identify itself. An e) 214.81 541.62 P
-0.08 (xample is a double \337oat. Dylan\325) 387.22 541.62 P
-0.08 (s) 527.37 541.62 P
-0.03 (calling con) 63.65 528.62 P
-0.03 (v) 111.76 528.62 P
-0.03 (ention requires that an) 117.09 528.62 P
-0.03 (ything can be passed an) 214.92 528.62 P
-0.03 (ywhere, b) 319.12 528.62 P
-0.03 (ut double \337oats gi) 362.25 528.62 P
-0.03 (v) 441.05 528.62 P
-0.03 (e a problem as the) 446.38 528.62 P
-0.03 (y) 526.15 528.62 P
0.28 0.14 (do not f) 63.65 515.62 B
0.28 0.14 (it into a pointer space. If no analysis w) 98.91 515.62 B
0.28 0.14 (as done, and a ne) 276.77 515.62 B
0.28 0.14 (w allocation w) 355.37 515.62 B
0.28 0.14 (as made on the heap for) 422.49 515.62 B
(e) 63.65 502.62 T
(v) 68.26 502.62 T
(ery operation in) 73.59 502.62 T
(v) 142.8 502.62 T
(olving a \337oating point, then problems w) 148.08 502.62 T
(ould quickly arise.) 324.28 502.62 T
3 10 Q
(4.4.2) 63.65 468.29 T
(Optimisation Examples) 90.89 468.29 T
2 11 Q
0.28 0.06 (One of the techniques mentioned abo) 63.65 447.62 B
0.28 0.06 (v) 231.12 447.62 B
0.28 0.06 (e w) 236.52 447.62 B
0.28 0.06 (as) 252.45 447.62 B
1 F
0.28 0.06 (constant folding) 264.83 447.62 B
2 F
0.28 0.06 (. This refers to the use of a kno) 337.32 447.62 B
0.28 0.06 (wn function) 477.89 447.62 B
0.28 0.09 (with constants, where the function can actually be e) 63.65 434.62 B
0.28 0.09 (x) 297.82 434.62 B
0.28 0.09 (ecuted at compile time. The resulting v) 303.24 434.62 B
0.28 0.09 (alue is then) 480.03 434.62 B
(\324folded in\325 in place of the function call.) 63.65 421.62 T
0.17 (Constant folding is used at compile time in conjunction with in-lining and compile-time method dispatch-) 63.65 396.62 P
0.23 (ing to gi) 63.65 383.62 P
0.23 (v) 100.52 383.62 P
0.23 (e a form of partial e) 105.85 383.62 P
0.23 (v) 193.8 383.62 P
0.23 (aluation. This essentially in) 199.03 383.62 P
0.23 (v) 320.29 383.62 P
0.23 (olv) 325.57 383.62 P
0.23 (es doing as much of the e) 339.46 383.62 P
0.23 (x) 452.52 383.62 P
0.23 (ecution as possi-) 457.85 383.62 P
0.22 (ble at compile-time. Where, for e) 63.65 370.62 P
0.22 (xample, a function in) 210.93 370.62 P
0.22 (v) 304.65 370.62 P
0.22 (olving recursion, such as calculating a f) 309.93 370.62 P
0.22 (actorial, is) 485.6 370.62 P
0.28 0.05 (gi) 63.65 357.62 B
0.28 0.05 (v) 72.02 357.62 B
0.28 0.05 (en a kno) 77.4 357.62 B
0.28 0.05 (wn literal, the computation is actually carried out at compile time. This includes the check to) 115.32 357.62 B
(see if the ar) 63.65 344.62 T
(gument is less than 1, and the disposal of the \324else\325 part where it is not.) 114.46 344.62 T
0.28 0.05 (Some special optimisers e) 63.65 319.62 B
0.28 0.05 (xist for specif) 180.18 319.62 B
0.28 0.05 (ic features of the language, such as \324multiple v) 241.4 319.62 B
0.28 0.05 (alues\325. Where, for) 450.8 319.62 B
0.06 (e) 63.65 306.62 P
0.06 (xample, a multiple-v) 68.37 306.62 P
0.06 (alue bind is carried out using) 159.56 306.62 P
0 F
0.06 (let) 290.05 306.62 P
2 F
0.06 (, we wish to optimise for the case where the binding) 301.65 306.62 P
0.28 0.07 (in) 63.65 293.62 B
0.28 0.07 (v) 71.91 293.62 B
0.28 0.07 (olv) 77.26 293.62 B
0.28 0.07 (es a call to) 91.38 293.62 B
0 F
0.28 0.07 (v) 142.91 293.62 B
0.28 0.07 (alues) 148.38 293.62 B
2 F
0.28 0.07 ( as the form that we are binding from. This optimisation allo) 172.58 293.62 B
0.28 0.07 (ws us to do assign-) 445.59 293.62 B
0.28 0.02 (ment directly to the v) 63.65 280.62 B
0.28 0.02 (ariables from the ar) 159.07 280.62 B
0.28 0.02 (guments. This is also important in other conte) 245.97 280.62 B
0.28 0.02 (xts, such as where) 450.41 280.62 B
0.28 0.1 (the forw) 63.65 267.62 B
0.28 0.1 (ard-iteration protocol is used. This protocol actually uses a call to) 101.6 267.62 B
0 F
0.28 0.1 (v) 402.73 267.62 B
0.28 0.1 (alues) 408.23 267.62 B
2 F
0.28 0.1 (, so that when it is in-) 432.58 267.62 B
0.12 (lined, the optimisation applying to) 63.65 254.62 P
0 F
0.12 (v) 218.27 254.62 P
0.12 (alues) 223.66 254.62 P
2 F
0.12 (can be triggered. This allo) 250.37 254.62 P
0.12 (ws the much less e) 365.75 254.62 P
0.12 (xpensi) 448.56 254.62 P
0.12 (v) 477.01 254.62 P
0.12 (e operation) 482.34 254.62 P
(of assignment to be used.) 63.65 241.62 T
0.28 0.11 (Another optimisation applies to le) 63.65 216.62 B
0.28 0.11 (xically scoped e) 217.97 216.62 B
0.28 0.11 (xits, i.e. a break from a loop, which may be achie) 290.95 216.62 B
0.28 0.11 (v) 515.71 216.62 B
0.28 0.11 (ed) 521.16 216.62 B
(using) 63.65 203.62 T
0 F
(block) 90.24 203.62 T
2 F
(. The compiler notices these cases and optimises them into \324jumps\325.) 115.91 203.62 T
0.11 (In the case of) 63.65 178.62 P
0 F
0.11 (apply) 125.79 178.62 P
2 F
0.11 (, used with a kno) 151.37 178.62 P
0.11 (wn function and kno) 226.4 178.62 P
0.11 (wn ar) 317.2 178.62 P
0.11 (guments, the compiler will in-line the code) 341.85 178.62 P
(as a straightforw) 63.65 165.62 T
(ard function call. This may gi) 136.85 165.62 T
(v) 266.73 165.62 T
(e opportunities for other optimisations to be applied.) 272.07 165.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 21
%%Page: "16" 22
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(16) 63.65 84.9 T
3 12 Q
(4.5) 63.65 736.95 T
(Code Generation: The \324Emit\325 Pr) 90.65 736.95 T
(otocols) 267.78 736.95 T
2 11 Q
-0.11 (F) 63.65 715.62 P
-0.11 (or a gi) 69.6 715.62 P
-0.11 (v) 97.2 715.62 P
-0.11 (en back-end, the emit protocols are de\336ned as methods on a set of generic functions, all named by) 102.54 715.62 P
(the pre\336x) 63.65 702.62 T
0 F
(emit) 108.25 702.62 T
2 F
(.) 129.02 702.62 T
(Signatures:) 63.65 677.62 T
0 F
(emit) 63.65 648.62 T
2 F
([Generic Function]) 447.64 648.62 T
1 F
(Signatur) 81.65 623.62 T
(e) 119.14 623.62 T
0 F
(\050str) 99.65 604.62 T
(eam, back-end, object\051) 115.94 604.62 T
1 F
(Description) 81.65 579.62 T
2 F
(This w) 99.65 557.62 T
(alks the gi) 129.79 557.62 T
(v) 174.73 557.62 T
(en object emitting ANDF for the containing ICR.) 180.07 557.62 T
0 F
(emit) 63.65 528.62 T
2 F
([Method]) 490.1 528.62 T
1 F
(Signatur) 81.65 503.62 T
(e) 119.14 503.62 T
0 F
(\050str) 99.65 484.62 T
(eam , back-end, component :: <component>\051) 115.94 484.62 T
1 F
(Description) 81.65 459.62 T
2 F
(This emits all the lambdas in the gi) 99.65 437.62 T
(v) 253.68 437.62 T
(en component.) 259.02 437.62 T
0 F
(emit) 63.65 408.62 T
2 F
([Method]) 490.1 408.62 T
1 F
(Signatur) 81.65 383.62 T
(e) 119.14 383.62 T
0 F
(\050str) 99.65 364.62 T
(eam , back-end, lambda :: <lambda-leaf\051) 115.94 364.62 T
1 F
(Description) 81.65 339.62 T
2 F
(This emits a lambda-prolog, all the blocks, and then a lambda-epilog.) 99.65 317.62 T
0 F
(emit@offset) 63.65 288.62 T
2 F
([Generic Function]) 447.64 288.62 T
1 F
(Signatur) 81.65 263.62 T
(e) 119.14 263.62 T
0 F
(\050str) 99.65 244.62 T
(eam, back-end, object, offset\051) 115.94 244.62 T
1 F
(Description) 81.65 219.62 T
2 F
0.28 0.34 (This emits the gi) 99.65 197.62 B
0.28 0.34 (v) 179.54 197.62 B
0.28 0.34 (en object starting at the gi) 185.21 197.62 B
0.28 0.34 (v) 309.66 197.62 B
0.28 0.34 (en of) 315.33 197.62 B
0.28 0.34 (fset. There are) 339.31 197.62 B
0 F
0.28 0.34 (emit@offset) 411.46 197.62 B
2 F
0.28 0.34 ( methods for) 471.8 197.62 B
0 F
(<block>) 99.65 184.62 T
2 F
( and all) 137.86 184.62 T
0 F
(<node>) 173 184.62 T
2 F
(s.) 208.15 184.62 T
0 F
(emit-name) 63.65 155.62 T
2 F
([Generic Function]) 447.64 155.62 T
1 F
(Signatur) 81.65 130.62 T
(e) 119.14 130.62 T
0 F
(\050str) 99.65 111.62 T
(eam, back-end, object\051) 115.94 111.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 22
%%Page: "17" 23
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(17) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.28 0.19 (This emits a reference to the gi) 99.65 715.62 B
0.28 0.19 (v) 243.29 715.62 B
0.28 0.19 (en object. There are) 248.81 715.62 B
0 F
0.28 0.19 (emit-name) 343.96 715.62 B
2 F
0.28 0.19 ( methods for) 395.75 715.62 B
0 F
0.28 0.19 (<continuation>) 457.37 715.62 B
2 F
(objects and) 99.65 702.62 T
0 F
(<leaf>) 152.2 702.62 T
2 F
( objects. It automatically handles closure v) 181.84 702.62 T
(ariable references.) 369.46 702.62 T
-0.19 (These functions and methods tak) 63.65 677.62 P
-0.19 (e a lambda leaf node from the ICR and turn it into a function de\336nition. In) 207.59 677.62 P
0.28 0.01 (the emitter body calls are made to the generic function) 63.65 664.62 B
0 F
0.28 0.01 (emit@offset) 309.62 664.62 B
2 F
0.28 0.01 ( which specialises on such constructs) 366.4 664.62 B
-0.1 (as) 63.65 651.62 P
0 F
-0.1 (<if>) 75.46 651.62 P
2 F
-0.1 ( for conditional e) 94.72 651.62 P
-0.1 (x) 169.71 651.62 P
-0.1 (ecution, or) 175.04 651.62 P
0 F
-0.1 (<assign>) 224.64 651.62 P
2 F
-0.1 ( to bind a v) 265.91 651.62 P
-0.1 (alue to a local v) 314.72 651.62 P
-0.1 (ariable. Other types of nodes may) 383.69 651.62 P
0.09 (be specialised on) 63.65 638.62 P
0 F
0.09 (<r) 141.82 638.62 P
0.09 (efer) 152.77 638.62 P
0.09 (ence>) 170.89 638.62 P
2 F
0.09 (, which is reference to a leaf in a compiler representing the v) 197.93 638.62 P
0.09 (alue of a v) 465.38 638.62 P
0.09 (aria-) 511.5 638.62 P
0.28 0.03 (ble, or) 63.65 625.62 B
0 F
0.28 0.03 (<exit>) 95.28 625.62 B
2 F
0.28 0.03 ( which supports unwind-protect and non-local e) 125.1 625.62 B
0.28 0.03 (xits.) 338.09 625.62 B
0 F
0.28 0.03 (<combination>) 359.93 625.62 B
2 F
0.28 0.03 (s are calls to functions) 431.52 625.62 B
(which return v) 63.65 612.62 T
(alues.) 127.53 612.62 T
0 F
(<primiti) 155.63 612.62 T
(v) 194.79 612.62 T
(e-combination>) 200.18 612.62 T
2 F
(s are calls to system primiti) 273.67 612.62 T
(v) 394.09 612.62 T
(es.) 399.42 612.62 T
3 10 Q
(4.5.1) 63.65 578.29 T
(emit@offset on a <lambda-leaf>) 90.89 578.29 T
2 11 Q
0.28 0.06 (This typically calls se) 63.65 557.62 B
0.28 0.06 (v) 161.14 557.62 B
0.28 0.06 (eral functions.) 166.53 557.62 B
0 F
0.28 0.06 (emit-lambda-head) 233.68 557.62 B
2 F
0.28 0.06 ( will output the f) 320.75 557.62 B
0.28 0.06 (irst part of the function def) 395.61 557.62 B
0.28 0.06 (ini-) 516.25 557.62 B
0.28 0.65 (tion, i.e. the return type, the name, and an) 63.65 544.62 B
0.28 0.65 (y parameter information that is a) 277.36 544.62 B
0.28 0.65 (v) 443.92 544.62 B
0.28 0.65 (ailable. W) 449.8 544.62 B
0.28 0.65 (e emit) 500.92 544.62 B
0 F
0.28 0.02 (mak) 63.65 531.62 B
0.28 0.02 (eid_tagdef) 84.39 531.62 B
2 F
0.28 0.02 (which creates a tagged def) 136.57 531.62 B
0.28 0.02 (inition in ANDF) 254.38 531.62 B
0.28 0.02 (. The name of the tag is the name of the func-) 327.15 531.62 B
-0.05 (tion that we're creating. The de\336nition of the tag is a) 63.65 518.62 P
0 F
-0.05 (mak) 296.06 518.62 P
-0.05 (e_pr) 316.73 518.62 P
-0.05 (oc) 337.92 518.62 P
2 F
-0.05 ( to introduce the function de\336nition itself.) 348.3 518.62 P
0.28 0.01 (The f) 63.65 505.62 B
0.28 0.01 (irst ar) 86.87 505.62 B
0.28 0.01 (gument to the) 112.35 505.62 B
0 F
0.28 0.01 (mak) 176.52 505.62 B
0.28 0.01 (e_pr) 197.21 505.62 B
0.28 0.01 (oc) 218.43 505.62 B
2 F
0.28 0.01 ( is the return type, and then we iterate across the parameters that the) 228.82 505.62 B
0.28 0.16 (function tak) 63.65 492.62 B
0.28 0.16 (es, emitting them based on the type information contained in the back end. T) 118.6 492.62 B
0.28 0.16 (o close) 471.13 492.62 B
0 F
0.28 0.16 (emit-) 506.57 492.62 B
(lambda-head) 63.65 479.62 T
2 F
( we output the start of a \324sequence\325 which tells ANDF to e) 125.38 479.62 T
(x) 381.83 479.62 T
(ecute the follo) 387.17 479.62 T
(wing blocks.) 449.83 479.62 T
3 10 Q
(4.5.2) 63.65 445.29 T
(emit-lambda-bod) 90.89 445.29 T
(y-pr) 171.3 445.29 T
(olog) 189.99 445.29 T
2 11 Q
0.28 0.18 (The ne) 63.65 424.62 B
0.28 0.18 (xt call is to) 95.07 424.62 B
0 F
0.28 0.18 (emit-lambda-body-pr) 150 424.62 B
0.28 0.18 (olog) 254.63 424.62 B
2 F
0.28 0.18 ( which outputs local v) 274.9 424.62 B
0.28 0.18 (ariable def) 376.8 424.62 B
0.28 0.18 (initions which are used) 425.16 424.62 B
0.06 (within the scope of the function. These represent the bindings in the Dylan code, along with an) 63.65 411.62 P
0.06 (y local v) 481.71 411.62 P
0.06 (ar-) 519.44 411.62 P
0.15 (iables that the compiler needs to implement that code. There are tw) 63.65 398.62 P
0.15 (o special cases: if the \324function\325 object) 360.9 398.62 P
-0.06 (is required out of the current en) 63.65 385.62 P
-0.06 (vironment then we de\336ne a v) 201.54 385.62 P
-0.06 (ariable called) 328.98 385.62 P
0 F
-0.06 (en) 390.57 385.62 P
-0.06 (vir) 401.12 385.62 P
-0.06 (onment) 414.37 385.62 P
2 F
-0.06 (, and use the tok) 449.81 385.62 P
-0.06 (en) 521.26 385.62 P
5 10 Q
0.28 0.02 (SLO) 63.65 372.62 B
0.28 0.02 (T_READ) 83.33 372.62 B
2 11 Q
0.28 0.02 ( to access the function element of the current en) 122.92 372.62 B
0.28 0.02 (vironment; if a call to) 336.57 372.62 B
0 F
0.28 0.02 (next-method) 436.58 372.62 B
2 F
0.28 0.02 ( is to be) 496.11 372.62 B
0.28 0.05 (supported, we need to create a v) 63.65 359.62 B
0.28 0.05 (alue to hold the) 207.9 359.62 B
0 F
0.28 0.05 (next-method) 280.66 359.62 B
2 F
0.28 0.05 ( function object. All the local v) 340.43 359.62 B
0.28 0.05 (ariables are) 480.48 359.62 B
0.28 0.07 (created with the ANDF \324v) 63.65 346.62 B
0.28 0.07 (ariable\325 construct.   The lambda leaf itself which is passed into) 181.04 346.62 B
0 F
0.28 0.07 (emit-lambda-) 467.32 346.62 B
0.28 0.17 (body-pr) 63.65 333.62 B
0.28 0.17 (olog) 102.52 333.62 B
2 F
0.28 0.17 ( has an information slot which contains the local v) 122.74 333.62 B
0.28 0.17 (ariables which are associated with this) 354.98 333.62 B
0.2 (lambda. W) 63.65 320.62 P
0.2 (e iterate across these, and if necessary generate local v) 111.24 320.62 P
0.2 (ariables which are tagged Dylan objects.) 352.24 320.62 P
(T) 63.65 307.62 T
(yping information is a) 69.49 307.62 T
(v) 166.74 307.62 T
(ailable in the ICR associated with each of the local v) 171.96 307.62 T
(ariables.) 403.26 307.62 T
-0.04 (It is possible that there are also local stack v) 63.65 282.62 P
-0.04 (ector v) 257.08 282.62 P
-0.04 (ariables. These are a little more complicated to emit. T) 287 282.62 P
-0.04 (o) 526.15 282.62 P
0.28 0.01 (def) 63.65 269.62 B
0.28 0.01 (ine the initial v) 77.12 269.62 B
0.28 0.01 (alue for such a v) 144.18 269.62 B
0.28 0.01 (ector) 218 269.62 B
0.28 0.01 (, we use) 239.61 269.62 B
0 F
0.28 0.01 (mak) 279.02 269.62 B
0.28 0.01 (e_nof) 299.73 269.62 B
2 F
0.28 0.01 ( to create elements containing the class header) 325.45 269.62 B
0.14 (\050for a SO) 63.65 256.62 P
0.14 (V\051, and the v) 104.31 256.62 P
0.14 (ector size, and) 162 256.62 P
0 F
0.14 (in_copies) 228.4 256.62 P
2 F
0.14 ( to reserv) 271.79 256.62 P
0.14 (e space for) 312.84 256.62 P
0 F
0.14 (size) 363.65 256.62 P
2 F
0.14 ( data elements. These tw) 380.75 256.62 P
0.14 (o compo-) 489.65 256.62 P
(nent parts are wrapped with) 63.65 243.62 T
0 F
(concat_nof) 188.59 243.62 T
2 F
( to tie them together) 239.91 243.62 T
(.) 327.91 243.62 T
0.28 0.04 (If there is an) 63.65 218.62 B
0.28 0.04 (y non-local-e) 120.19 218.62 B
0.28 0.04 (xit potential with this function we create an \324unwind-protect frame\325 or a \324bind-) 179.19 218.62 B
(e) 63.65 205.62 T
(xit\325 frame to control it.) 68.37 205.62 T
3 10 Q
(4.5.3) 63.65 171.29 T
(emit-lambda-bod) 90.89 171.29 T
(y) 171.3 171.29 T
2 11 Q
0.13 (This outputs the part of the lambda which actually creates ef) 63.65 150.62 P
0.13 (fects. The lambda leaf is described as a series) 330.5 150.62 P
0.28 0.01 (of) 63.65 137.62 B
0 F
0.28 0.01 (<block>) 75.88 137.62 B
2 F
0.28 0.01 (s. \050A) 114.2 137.62 B
0 F
0.28 0.01 (<block>) 138.97 137.62 B
2 F
0.28 0.01 ( is section of code which is entered at the top, and e) 177.29 137.62 B
0.28 0.01 (xited at the bottom, without) 408.22 137.62 B
0.19 (an) 63.65 124.62 P
0.19 (y e) 73.87 124.62 P
0.19 (xits in-between\051. A) 87.03 124.62 P
0 F
0.19 (<block>) 174.97 124.62 P
2 F
0.19 ( is modelled as being contained by a 'sequence construction' and this set) 213.18 124.62 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 23
%%Page: "18" 24
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(18) 63.65 84.9 T
2 11 Q
0.28 0.02 (of sequences is contained within a 'labelled' declaration, which introduces a label name per) 63.65 737.62 B
0 F
0.28 0.02 (<block>) 471.6 737.62 B
2 F
0.28 0.02 (, and) 509.92 737.62 B
(allo) 63.65 724.62 T
(ws transfer of control at the end of each block with a GO) 79.87 724.62 T
(T) 329.92 724.62 T
(O to the appropriately named label.) 336.45 724.62 T
3 10 Q
(4.5.4) 63.65 690.29 T
(emit-lambda-bod) 90.89 690.29 T
(y-epilog) 171.3 690.29 T
2 11 Q
0.28 0.07 (This performs the necessary cleanups for the \324emit\325 functions. It also outputs a tok) 63.65 669.62 B
0.28 0.07 (en called) 435.22 669.62 B
5 10 Q
0.28 0.07 (ENDPR) 478.61 669.62 B
0.28 0.07 (OC) 513.76 669.62 B
2 11 Q
0.28 0.07 (,) 528.9 669.62 B
(which could contain an) 63.65 656.62 T
(y necessary cleanup for the end of a method call.) 165.83 656.62 T
3 10 Q
(4.5.5) 63.65 622.29 T
(emit@offset f) 90.89 622.29 T
(or the ANDF Bac) 154.33 622.29 T
(k End) 233.58 622.29 T
2 11 Q
0.28 0.02 (There are se) 63.65 601.62 B
0.28 0.02 (v) 117.92 601.62 B
0.28 0.02 (eral def) 123.28 601.62 B
0.28 0.02 (initions of this specialised on dif) 156.4 601.62 B
0.28 0.02 (ferent \324node\325 types. One e) 301.54 601.62 B
0.28 0.02 (xample is that specialised) 417.56 601.62 B
0.04 (on the) 63.65 588.62 P
0 F
0.04 (<r) 93.66 588.62 P
0.04 (etur) 104.62 588.62 P
0.04 (n>) 124 588.62 P
2 F
0.04 ( node type, which is used to return a v) 136.39 588.62 P
0.04 (alue from a method. It calls) 303.86 588.62 P
0 F
0.04 (emit-begin-r) 427.8 588.62 P
0.04 (etur) 486.26 588.62 P
0.04 (n) 505.64 588.62 P
2 F
0.04 ( \050the) 511.76 588.62 P
0.12 (generic function which will be specialised on a speci\336c back end\051, to emit the appropriate code to return a) 63.65 575.62 P
0.28 0.07 (v) 63.65 562.62 B
0.28 0.07 (alue. It then emits the name of the return v) 68.94 562.62 B
0.28 0.07 (alue, the v) 261.23 562.62 B
0.28 0.07 (alue itself, and calls) 307.8 562.62 B
0 F
0.28 0.07 (emit-end-r) 400.66 562.62 B
0.28 0.07 (etur) 451.26 562.62 B
0.28 0.07 (n) 470.93 562.62 B
2 F
0.28 0.07 ( to close the) 477.12 562.62 B
0.28 0.15 (return statement. F) 63.65 549.62 B
0.28 0.15 (or the ANDF back end, this means that we emit) 149.62 549.62 B
0 F
0.28 0.15 (r) 371.47 549.62 B
0.28 0.15 (etur) 376.31 549.62 B
0.28 0.15 (n) 396.28 549.62 B
2 F
0.28 0.15 (, the v) 402.54 549.62 B
0.28 0.15 (alue and the matching) 431.04 549.62 B
(close parenthesis.) 63.65 536.62 T
0.28 0.04 (The emitter) 63.65 511.62 B
0.28 0.04 (-of) 115.14 511.62 B
0.28 0.04 (fset for an) 127.81 511.62 B
0 F
0.28 0.04 (<if>) 176.44 511.62 B
2 F
0.28 0.04 ( node generates a branch based on a condition. There are three possibilities) 195.85 511.62 B
0.14 (here. W) 63.65 498.62 P
0.14 (e could branch if a v) 97.72 498.62 P
0.14 (alue is \324true, \324f) 188.24 498.62 P
0.14 (alse\325, or either \324true\325 or \324f) 253.3 498.62 P
0.14 (alse\325. This mak) 366.27 498.62 P
0.14 (es use of some ANDF) 433.95 498.62 P
0.28 0.33 (tok) 63.65 485.62 B
0.28 0.33 (ens called) 78.57 485.62 B
5 10 Q
0.28 0.33 (GO) 129.15 485.62 B
0.28 0.33 (T) 144.96 485.62 B
0.28 0.33 (O_IF_TR) 150.99 485.62 B
0.28 0.33 (UE) 194 485.62 B
2 11 Q
0.28 0.33 (,) 208.54 485.62 B
5 10 Q
0.28 0.33 (GO) 214.97 485.62 B
0.28 0.33 (T) 230.78 485.62 B
0.28 0.33 (O_IF_F) 236.82 485.62 B
0.28 0.33 (ALSE) 271.88 485.62 B
2 11 Q
0.28 0.33 (, and) 298.75 485.62 B
5 10 Q
0.28 0.33 (GO) 325.39 485.62 B
0.28 0.33 (T) 341.2 485.62 B
0.28 0.33 (O_IF_TR) 347.24 485.62 B
0.28 0.33 (UE_F) 390.24 485.62 B
0.28 0.33 (ALSE) 416.31 485.62 B
2 11 Q
0.28 0.33 (. The tok) 443.19 485.62 B
0.28 0.33 (en library) 485.98 485.62 B
0.28 0.12 (def) 63.65 472.62 B
0.28 0.12 (ines the appropriate beha) 77.44 472.62 B
0.28 0.12 (viour of these tok) 191.21 472.62 B
0.28 0.12 (ens. The) 271.3 472.62 B
0.28 0.12 (y are gi) 309.61 472.62 B
0.28 0.12 (v) 343.8 472.62 B
0.28 0.12 (en the result of a test as the condition to) 349.25 472.62 B
-0.02 (branch on, and a destination label \050see abo) 63.65 459.62 P
-0.02 (v) 250.32 459.62 P
-0.02 (e\051. The de\336nition of a) 255.65 459.62 P
0 F
-0.02 (<block>) 353.94 459.62 P
2 F
-0.02 ( means that such a branch is the) 392.15 459.62 P
(last action of a gi) 63.65 446.62 T
(v) 139.14 446.62 T
(en) 144.48 446.62 T
0 F
(<block>) 157.61 446.62 T
2 F
(.) 195.82 446.62 T
0.12 (Emitter) 63.65 421.62 P
0.12 (-of) 96.43 421.62 P
0.12 (fset for a combination is the method used output function calls. \050A) 108.98 421.62 P
0 F
0.12 (<combination>) 405.22 421.62 P
2 F
0.12 ( represents a) 476.43 421.62 P
0.28 0.07 (function or generic function call\051. There are tw) 63.65 408.62 B
0.28 0.07 (o main cases here. This of) 275.4 408.62 B
0.28 0.07 (fset will either call) 393.23 408.62 B
0 F
0.28 0.07 (emit-local-) 480.84 408.62 B
0.28 0.09 (call@offset) 63.65 395.62 B
2 F
0.28 0.09 ( if the compiler has been able to determine which function will be called a compile-time, or) 116.99 395.62 B
0.28 0.17 (else call) 63.65 382.62 B
0 F
0.28 0.17 (emit-r) 104.36 382.62 B
0.28 0.17 (egular) 134.49 382.62 B
0.28 0.17 (-call-offset) 165.03 382.62 B
2 F
0.28 0.17 (, if it has insuf) 216.52 382.62 B
0.28 0.17 (f) 283.44 382.62 B
0.28 0.17 (icient information for this. The body of the) 286.67 382.62 B
0 F
0.28 0.17 (local-call) 487.98 382.62 B
2 F
0.05 (method is based on) 63.65 369.62 P
0 F
0.05 (apply_pr) 151.24 369.62 P
0.05 (oc) 193.84 369.62 P
2 F
0.05 ( and outputs the ANDF for the call. If the results of the call are being used) 204.22 369.62 P
0.28 0.09 (else) 63.65 356.62 B
0.28 0.09 (where, the results of the call are assigned to the appropriate destination. The) 80.83 356.62 B
0 F
0.28 0.09 (r) 429.02 356.62 B
0.28 0.09 (egular) 433.8 356.62 B
0.28 0.09 (-call) 463.86 356.62 B
2 F
0.28 0.09 ( method is) 484.47 356.62 B
-0.09 (similar) 63.65 343.62 P
-0.09 (, e) 93.77 343.62 P
-0.09 (xcept that it relates to the use of generic functions. This means that we need to inspect the slots of) 103.89 343.62 P
0.28 0.04 (the generic function to determine the f) 63.65 330.62 B
0.28 0.04 (irst parameter for the call to) 234.75 330.62 B
0 F
0.28 0.04 (apply_pr) 362.77 330.62 B
0.28 0.04 (oc) 405.66 330.62 B
2 F
0.28 0.04 (. This is achie) 416.11 330.62 B
0.28 0.04 (v) 478.32 330.62 B
0.28 0.04 (ed through) 483.69 330.62 B
0.28 0.16 (the use of the) 63.65 317.62 B
5 10 Q
0.28 0.16 (SLO) 128.79 317.62 B
0.28 0.16 (T_READ) 148.87 317.62 B
2 11 Q
0.28 0.16 ( tok) 189.25 317.62 B
0.28 0.16 (en. The ne) 206.84 317.62 B
0.28 0.16 (xt parameter is the number of ar) 254.9 317.62 B
0.28 0.16 (guments being passed to the) 402.46 317.62 B
(generic function, with the third being the ar) 63.65 304.62 T
(guments themselv) 254.7 304.62 T
(es.) 334.28 304.62 T
3 15 Q
(5.) 63.65 262.95 T
(T) 90.65 262.95 T
(okens and the ICR) 98.61 262.95 T
2 11 Q
0.28 0.02 (A range of tok) 63.65 240.62 B
0.28 0.02 (ens are used with the Dylan Producer) 128.46 240.62 B
0.28 0.02 (. Some of these support Dylan itself, while others are) 294.5 240.62 B
0.28 0.34 (imported from the C API that comes with ANDF) 63.65 227.62 B
0.28 0.34 (. This chapter gi) 295.59 227.62 B
0.28 0.34 (v) 373.4 227.62 B
0.28 0.34 (es an o) 379.07 227.62 B
0.28 0.34 (v) 412.38 227.62 B
0.28 0.34 (ervie) 418.05 227.62 B
0.28 0.34 (w of Dylan tok) 441.46 227.62 B
0.28 0.34 (ens,) 513.22 227.62 B
(describes their use in relation to the ICR, and lists the signature for each tok) 63.65 214.62 T
(en used.) 397.46 214.62 T
3 12 Q
(5.1) 63.65 176.95 T
(Over) 90.65 176.95 T
(vie) 118.12 176.95 T
(w of Dylan T) 134.62 176.95 T
(okens) 204.34 176.95 T
2 11 Q
(T) 63.65 155.62 T
(ok) 69.49 155.62 T
(ens are a) 80.38 155.62 T
(v) 118.64 155.62 T
(ailable for each of the follo) 123.86 155.62 T
(wing cate) 243.02 155.62 T
(gories:) 285.32 155.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 24
%%Page: "19" 25
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(19) 520.53 84.9 T
(5.1.1) 63.65 738.29 T
(Coer) 90.89 738.29 T
(cions) 113.47 738.29 T
2 11 Q
0.28 0.02 (These perform a function equi) 63.65 717.62 B
0.28 0.02 (v) 198.18 717.62 B
0.28 0.02 (alent to type casting in C. This allo) 203.42 717.62 B
0.28 0.02 (ws such types as pointers to v) 359.72 717.62 B
0.28 0.02 (oid to be) 492.45 717.62 B
(\324cast\325 to other types such as inte) 63.65 704.62 T
(gers and \337oats.) 204.62 704.62 T
3 10 Q
(5.1.2) 63.65 670.29 T
(Constants) 90.89 670.29 T
2 11 Q
-0.2 (There are some constant de\336nitions used to simplify w) 63.65 649.62 P
-0.2 (ork in the compiler) 302.73 649.62 P
-0.2 (. An e) 385.55 649.62 P
-0.2 (xample w) 411.57 649.62 P
-0.2 (ould be where we) 454.34 649.62 P
0.21 (wish to output '8' as a ra) 63.65 636.62 P
0.21 (w inte) 170.76 636.62 P
0.21 (ger v) 198 636.62 P
0.21 (alue, rather than as a tagged Dylan v) 220.23 636.62 P
0.21 (alue. In this instance the compiler) 382.11 636.62 P
-0.06 (w) 63.65 623.62 P
-0.06 (ould emit the tok) 71.48 623.62 P
-0.06 (en) 146.05 623.62 P
5 10 Q
-0.06 (_8) 159.13 623.62 P
2 11 Q
-0.06 (, one of a handful of tok) 170.25 623.62 P
-0.06 (ens de\336ned as a short-form representation of common lo) 275.79 623.62 P
-0.06 (w) 523.71 623.62 P
(v) 63.65 610.62 T
(alued inte) 68.87 610.62 T
(gers, which a) 111.78 610.62 T
(v) 169.91 610.62 T
(oids cluttering the output with numerous constructs using) 175.19 610.62 T
0 F
(mak) 430.63 610.62 T
(e_int) 451.3 610.62 T
2 F
(.) 474.52 610.62 T
3 10 Q
(5.1.3) 63.65 576.29 T
(Primitive Operations) 90.89 576.29 T
2 11 Q
0.28 0.06 (These include conditionals, tests for equality) 63.65 555.62 B
0.28 0.06 (, less-than, greater) 263.93 555.62 B
0.28 0.06 (-than, arithmetic operations, shifting, and) 346.14 555.62 B
(logical operations. These are de\336ned for inte) 63.65 542.62 T
(gers and \337oats.) 259.91 542.62 T
3 10 Q
(5.1.4) 63.65 508.29 T
(String Routines) 90.89 508.29 T
2 11 Q
(These support the declaration of string literals.) 63.65 487.62 T
3 10 Q
(5.1.5) 63.65 453.29 T
(Runtime Structures) 90.89 453.29 T
2 11 Q
0.28 0.02 (There are structure def) 63.65 432.62 B
0.28 0.02 (initions for generic function objects, for non-local e) 164.26 432.62 B
0.28 0.02 (xit frames, and unwind-protect) 394.53 432.62 B
(frames. These support the de\336nition and slot access for the rele) 63.65 419.62 T
(v) 341.07 419.62 T
(ant objects.) 346.29 419.62 T
3 10 Q
(5.1.6) 63.65 385.29 T
(Thread Primitives) 90.89 385.29 T
2 11 Q
(These call the C implementations for the Dylan thread library) 63.65 364.62 T
(.) 333.92 364.62 T
3 10 Q
(5.1.7) 63.65 330.29 T
(Frequentl) 90.89 330.29 T
(y Used Operations) 136.3 330.29 T
2 11 Q
-0.26 (These co) 63.65 309.62 P
-0.26 (v) 102.62 309.62 P
-0.26 (er a range of actions and common abbre) 107.96 309.62 P
-0.26 (viations, such as using) 282.08 309.62 P
5 10 Q
-0.27 (O) 382.77 309.62 P
-0.27 (T) 390.15 309.62 P
2 11 Q
-0.26 ( for) 396.26 309.62 P
0 F
-0.26 (obtain_tag) 414.06 309.62 P
2 F
-0.26 (, taking the ra) 464.18 309.62 P
-0.26 (w) 523.71 309.62 P
0.28 0.01 (v) 63.65 296.62 B
0.28 0.01 (alue of a Dylan inte) 68.88 296.62 B
0.28 0.01 (ger) 156.74 296.62 B
0.28 0.01 (, or tagging a ra) 170.37 296.62 B
0.28 0.01 (w v) 240.8 296.62 B
0.28 0.01 (alue into a Dylan inte) 257.01 296.62 B
0.28 0.01 (ger) 352.84 296.62 B
0.28 0.01 (. Other tok) 366.31 296.62 B
0.28 0.01 (ens manipulate characters;) 414.2 296.62 B
0.2 (access the v) 63.65 283.62 P
0.2 (alue of v) 116.31 283.62 P
0.2 (ariables; assign v) 154.92 283.62 P
0.2 (alues to v) 230.82 283.62 P
0.2 (ariables; read and write to v) 273.11 283.62 P
0.2 (ectors; de\336ne the) 396.44 283.62 P
5 10 Q
0.2 (GO) 474.94 283.62 P
0.2 (T) 490.1 283.62 P
0.2 (O_) 495.81 283.62 P
2 11 Q
0.2 ( con-) 509.15 283.62 P
(ditional operations.) 63.65 270.62 T
3 10 Q
(5.1.8) 63.65 236.29 T
(Shape De\336nitions) 90.89 236.29 T
2 11 Q
0.11 (These de\336ne such types as) 63.65 215.62 P
5 10 Q
0.11 (pz) 183.63 215.62 P
2 11 Q
0.11 (, which is Dylan's equi) 194.19 215.62 P
0.11 (v) 294.4 215.62 P
0.11 (alent of a pointer to) 299.62 215.62 P
0 F
0.11 (v) 389.05 215.62 P
0.11 (oid) 394.45 215.62 P
2 F
0.11 (, along with a range of inte-) 409.12 215.62 P
(ger types that are used by the compiler) 63.65 202.62 T
(.) 233.2 202.62 T
3 12 Q
(5.2) 63.65 164.95 T
(T) 90.65 164.95 T
(oken Use in Relation to the ICR) 97.02 164.95 T
2 11 Q
0.28 0.01 (T) 63.65 143.62 B
0.28 0.01 (ok) 69.5 143.62 B
0.28 0.01 (ens do not map directly onto the ICR. The) 80.4 143.62 B
0.28 0.01 (y are generated by the 'emit' code, and typically are used to) 268.21 143.62 B
0.28 0 (abstract-a) 63.65 130.62 B
0.28 0 (w) 106.27 130.62 B
0.28 0 (ay from the details of the ANDF in order to mak) 114.11 130.62 B
0.28 0 (e the generated code more readable and com-) 330.14 130.62 B
0.28 0.04 (pact. Much generated TDF is gi) 63.65 117.62 B
0.28 0.04 (v) 205.98 117.62 B
0.28 0.04 (en in the form of tok) 211.35 117.62 B
0.28 0.04 (ens, with little 'bare' TDF left. T) 304.27 117.62 B
0.28 0.04 (ok) 448.02 117.62 B
0.28 0.04 (ens may refer to) 459 117.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 25
%%Page: "20" 26
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(20) 63.65 84.9 T
2 11 Q
-0.03 (other tok) 63.65 737.62 P
-0.03 (ens. The use of tok) 102.92 737.62 P
-0.03 (ens can also mak) 186.1 737.62 P
-0.03 (e the construction of the compiler simpler) 260.75 737.62 P
-0.03 (, as the de\336nition of) 444.07 737.62 P
(the tok) 63.65 724.62 T
(en can be changed without the need to change or re-compile the compiler) 93.79 724.62 T
(.) 415.77 724.62 T
3 10 Q
(5.2.1) 63.65 690.29 T
(ICR Node <entr) 90.89 690.29 T
(y>) 163.5 690.29 T
2 11 Q
0.28 0.03 (This node indicates the start of an 'unwind-protect' or 'bind-e) 63.65 669.62 B
0.28 0.03 (xit' section. This is emitted as a sequence of) 335.1 669.62 B
0.28 0.08 (tok) 63.65 656.62 B
0.28 0.08 (ens. When and unwind-protect section is entered, a set of information has to be stored in an unwind-) 77.83 656.62 B
0.28 0.02 (protect frame. This requires multiple) 63.65 643.62 B
5 10 Q
0.28 0.02 (SLO) 230.27 643.62 B
0.28 0.02 (T_WRITE) 249.96 643.62 B
2 11 Q
0.28 0.02 (s. A call is also made to the ANSI C) 294.01 643.62 B
0 F
0.28 0.02 (setjmp) 459.86 643.62 B
2 F
0.28 0.02 ( function) 491.77 643.62 B
0.04 (which stores the current state of the program. One of the parameters to) 63.65 630.62 P
0 F
0.04 (setjmp) 377.55 630.62 P
2 F
0.04 ( is itself a tok) 409.32 630.62 P
0.04 (en which does) 468.64 630.62 P
(a) 63.65 617.62 T
5 10 Q
(SLO) 71.28 617.62 T
(T_READ) 90.89 617.62 T
2 11 Q
( to determine where) 130.34 617.62 T
0 F
(setjmp) 220.76 617.62 T
2 F
( should store its current state.) 252.53 617.62 T
3 10 Q
(5.2.2) 63.65 583.29 T
(ICR Node <e) 90.89 583.29 T
(xit>) 149.92 583.29 T
2 11 Q
0.28 0.02 (This node represents the condition where unwind-protect or bind-e) 63.65 562.62 B
0.28 0.02 (xit performs a non-local e) 361 562.62 B
0.28 0.02 (xit. It gener-) 476.15 562.62 B
-0.14 (ates a call to a \336x) 63.65 549.62 P
-0.14 (ed function which is a Dylan non-local-e) 139.49 549.62 P
-0.14 (xit handler along with the appropriate 'nlx' infor-) 318.14 549.62 P
(mation and an) 63.65 536.62 T
(y ar) 125.81 536.62 T
(guments that the function is passed.) 142.41 536.62 T
3 10 Q
(5.2.3) 63.65 502.29 T
(ICR Node <if>) 90.89 502.29 T
2 11 Q
0.18 (This node mak) 63.65 481.62 P
0.18 (es use of tok) 129.28 481.62 P
0.18 (ens called) 185 481.62 P
5 10 Q
0.18 (GO) 231.79 481.62 P
0.18 (T) 246.95 481.62 P
0.18 (O_IF_TR) 252.66 481.62 P
0.18 (UE) 293.38 481.62 P
2 11 Q
0.18 (,) 307.27 481.62 P
5 10 Q
0.18 (GO) 312.95 481.62 P
0.18 (T) 328.11 481.62 P
0.18 (O_IF_F) 333.82 481.62 P
0.18 (ALSE) 366.92 481.62 P
2 11 Q
0.18 (, and) 392.49 481.62 P
5 10 Q
0.18 (GO) 416.98 481.62 P
0.18 (T) 432.14 481.62 P
0.18 (O_IF_TR) 437.85 481.62 P
0.18 (UE_F) 478.57 481.62 P
0.18 (ALSE) 503.33 481.62 P
2 11 Q
0.18 (.) 528.9 481.62 P
0.28 0.12 (These represent branches for 'true, 'f) 63.65 468.62 B
0.28 0.12 (alse', or either 'true' or 'f) 229.36 468.62 B
0.28 0.12 (alse'. There are also 'primiti) 339.88 468.62 B
0.28 0.12 (v) 466 468.62 B
0.28 0.12 (e' v) 471.46 468.62 B
0.28 0.12 (ersions of) 487.18 468.62 B
(these tok) 63.65 455.62 T
(ens which are in) 102.95 455.62 T
(v) 174.3 455.62 T
(ok) 179.58 455.62 T
(ed when the code is manipulating real, rather than 'Dylan' v) 190.47 455.62 T
(alues.) 451.68 455.62 T
3 10 Q
(5.2.4) 63.65 421.29 T
(ICR Node <ref) 90.89 421.29 T
(erence>) 157.19 421.29 T
2 11 Q
0.2 (The node refers to a lambda v) 63.65 400.62 P
0.2 (ariable leaf, or a global v) 195.95 400.62 P
0.2 (ariable leaf. The node can ha) 306.66 400.62 P
0.2 (v) 434.53 400.62 P
0.2 (e a) 439.86 400.62 P
0 F
0.2 (<continuations>) 455.54 400.62 P
2 F
-0.14 (object, which indicates that is should potentially ha) 63.65 387.62 P
-0.14 (v) 287.96 387.62 P
-0.14 (e its v) 293.3 387.62 P
-0.14 (alue assigned to another v) 319.03 387.62 P
-0.14 (ariable. This could use) 432.46 387.62 P
(such tok) 63.65 374.62 T
(ens as) 100.51 374.62 T
5 10 Q
(ASSIGN) 129.84 374.62 T
2 11 Q
(,) 167.62 374.62 T
5 10 Q
(WRITE_A) 173.12 374.62 T
(T) 216.38 374.62 T
(OMIC) 222.09 374.62 T
2 11 Q
(, or) 248.2 374.62 T
5 10 Q
(WRITE_THREAD) 265.61 374.62 T
2 11 Q
(.) 344.5 374.62 T
3 10 Q
(5.2.5) 63.65 340.29 T
(ICR Node <return>) 90.89 340.29 T
2 11 Q
0.28 0.03 (This calls the TDF construct 'return' and a v) 63.65 319.62 B
0.28 0.03 (alue. The v) 259.5 319.62 B
0.28 0.03 (alue itself could well use a tok) 309.24 319.62 B
0.28 0.03 (en such as) 445.42 319.62 B
5 10 Q
0.28 0.03 (R) 494.48 319.62 B
0.28 0.03 (V) 501.23 319.62 B
0.28 0.03 (AL) 507.13 319.62 B
2 11 Q
0.28 0.03 ( or) 519.41 319.62 B
5 10 Q
0.28 0.06 (L) 63.65 306.62 B
0.28 0.06 (V) 68.16 306.62 B
0.28 0.06 (AL) 74.09 306.62 B
2 11 Q
0.28 0.06 ( to obtain the correct representation of the entity to be returned. The precise tok) 86.43 306.62 B
0.28 0.06 (en used depends on) 444.02 306.62 B
(the type of the information to be returned.) 63.65 293.62 T
3 10 Q
(5.2.6) 63.65 259.29 T
(ICR Node <combination>) 90.89 259.29 T
2 11 Q
(A) 63.65 238.62 T
0 F
(<combination>) 74.34 238.62 T
2 F
( represents a function or generic function call. There are tw) 145.55 238.62 T
(o main cases here:) 406 238.62 T
4 F
(\245) 99.65 219.62 T
2 F
(Where the compiler has been able to determine which function will be called at compile time) 113.4 219.62 T
4 F
(\245) 99.65 203.62 T
2 F
(Where the call represents a call to generic dispatch via a generic function) 113.4 203.62 T
0.28 0.01 (In the f) 63.65 178.62 B
0.28 0.01 (irst case, where the function is kno) 95.46 178.62 B
0.28 0.01 (wn, an) 250.32 178.62 B
0 F
0.28 0.01 (apply_pr) 283.03 178.62 B
0.28 0.01 (oc) 325.72 178.62 B
2 F
0.28 0.01 ( is emitted to the appropriate method. In the) 336.13 178.62 B
(second,) 63.65 165.62 T
0 F
(apply_pr) 99.69 165.62 T
(oc) 142.29 165.62 T
2 F
( is called on the appropriate entry-point of the generic function object.) 152.67 165.62 T
0.15 (It is not usually possible to use a single tok) 63.65 140.62 P
0.15 (en to represent the entirety of one of these calls, as tok) 254.07 140.62 P
0.15 (ens can-) 495.15 140.62 P
0.17 (not tak) 63.65 127.62 P
0.17 (e a v) 93.96 127.62 P
0.17 (ariable number of parameters, whereas) 114.81 127.62 P
0 F
0.17 (apply_pr) 289.17 127.62 P
0.17 (oc) 331.77 127.62 P
2 F
0.17 ( may well do so. An e) 342.15 127.62 P
0.17 (xample of the tok) 439.27 127.62 P
0.17 (ens) 516.98 127.62 P
0.28 0.12 (in) 63.65 114.62 B
0.28 0.12 (v) 72.01 114.62 B
0.28 0.12 (olv) 77.42 114.62 B
0.28 0.12 (ed here is that which supports a slot read in the generic dispatch to e) 91.69 114.62 B
0.28 0.12 (xtract the appropriate entry-) 404.23 114.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 26
%%Page: "21" 27
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(21) 520.53 84.9 T
2 11 Q
0.12 (point from the generic function object. Others w) 63.65 737.62 P
0.12 (ould be used to access the ar) 276.98 737.62 P
0.12 (guments to be passed in v) 402.72 737.62 P
0.12 (ari-) 516.38 737.62 P
0.28 0.11 (ous w) 63.65 724.62 B
0.28 0.11 (ays, as when and array element has to be read. T) 90.32 724.62 B
0.28 0.11 (ok) 310.58 724.62 B
0.28 0.11 (ens are also often used here as a shorthand for) 321.69 724.62 B
(inte) 63.65 711.62 T
(ger constants, as the number of ar) 79.98 711.62 T
(guments being passed has to be speci\336ed.) 227.94 711.62 T
3 10 Q
(5.2.7) 63.65 677.29 T
(ICR Node <funn) 90.89 677.29 T
(y-function-combination>) 165.97 677.29 T
2 11 Q
0.26 (A \324funn) 63.65 656.62 P
0.26 (y function\325 is a special function kno) 98.26 656.62 P
0.26 (wn by the compiler that has a special emitting procedure \050and) 257.79 656.62 P
0.28 0.02 (thus does not necessarily obe) 63.65 643.62 B
0.28 0.02 (y normal calling con) 193.56 643.62 B
0.28 0.02 (v) 285.14 643.62 B
0.28 0.02 (entions\051. A) 290.5 643.62 B
0 F
0.28 0.02 (<funny-function-combination>) 342.96 643.62 B
2 F
0.28 0.02 ( is a node) 488.76 643.62 B
(representing a call to a funn) 63.65 630.62 T
(y function.) 185.98 630.62 T
(Examples:) 63.65 605.62 T
(The follo) 63.65 580.62 T
(wing call creates a ra) 104.01 580.62 T
(w v) 196.69 580.62 T
(alue:) 212.61 580.62 T
0 F
(% immediate\0501\051;) 99.65 561.62 T
2 F
(The follo) 63.65 536.62 T
(wing call in) 104.01 536.62 T
(v) 155.51 536.62 T
(ok) 160.79 536.62 T
(es a method, also specifying the ne) 171.68 536.62 T
(xt-methods:) 325.18 536.62 T
0 F
(%method-call\050function, next-methods, a1, \311, an\051;) 99.65 517.62 T
3 10 Q
(5.2.8) 63.65 483.29 T
(ICR Node <m) 90.89 483.29 T
(ultiple-v) 153.2 483.29 T
(alue-combination>) 191.34 483.29 T
2 11 Q
0.14 (This represents a special call to a function of n parameters with the multiple v) 63.65 462.62 P
0.14 (alues returned from e) 407.46 462.62 P
0.14 (v) 501.38 462.62 P
0.14 (aluat-) 506.6 462.62 P
0.28 0.01 (ing its single ar) 63.65 449.62 B
0.28 0.01 (gument. this call is then optimised do) 131.9 449.62 B
0.28 0.01 (wn to assignments if its ar) 298.2 449.62 B
0.28 0.01 (gument is a call to) 414.73 449.62 B
0 F
0.28 0.01 (v) 499.64 449.62 B
0.28 0.01 (alues) 505.03 449.62 B
2 F
0.28 0.01 (,) 528.9 449.62 B
(or is emitting by fetching the ar) 63.65 436.62 T
(guments from the multiple v) 202.16 436.62 T
(alues b) 327.16 436.62 T
(uf) 357.8 436.62 T
(fer) 366.69 436.62 T
(.) 378.29 436.62 T
(Example:) 63.65 411.62 T
0 F
(begin) 99.65 392.62 T
(let \050a, b\051 = truncate\0501.5\051;) 121.25 379.62 T
(a - b) 121.25 366.62 T
(end) 99.65 353.62 T
2 F
(gi) 63.65 328.62 T
(v) 71.93 328.62 T
(es:) 77.27 328.62 T
0 F
(multiple-v) 99.65 309.62 T
(alue-combination\050method \050a, b\051 a - b end, truncate\0501.5\051\051) 147.82 309.62 T
3 10 Q
(5.2.9) 63.65 275.29 T
(ICR Node <primitive-combination-leaf>) 90.89 275.29 T
2 11 Q
0.15 (This implements) 63.65 254.62 P
1 F
0.15 (primitives) 140.35 254.62 P
2 F
0.15 ( in the compiler) 184.35 254.62 P
0.15 (. These look lik) 253.55 254.62 P
0.15 (e re) 322.34 254.62 P
0.15 (gular function calls b) 338.5 254.62 P
0.15 (ut are treated specially) 431.92 254.62 P
0.28 0.04 (by the back end. A primiti) 63.65 241.62 B
0.28 0.04 (v) 181.28 241.62 B
0.28 0.04 (e has an associated emitter) 186.66 241.62 B
0.28 0.04 (-function which is called to handle it, and emit the) 305.92 241.62 B
0.28 0.08 (correct output. T) 63.65 228.62 B
0.28 0.08 (ypically primiti) 138.29 228.62 B
0.28 0.08 (v) 207.71 228.62 B
0.28 0.08 (es are used to generate calls to the runtime system or to special ANDF) 213.12 228.62 B
0.28 0.12 (tok) 63.65 215.62 B
0.28 0.12 (ens rather than calls to generic functions, so the) 77.97 215.62 B
0.28 0.12 (y will generate calls that do not ha) 295.48 215.62 B
0.28 0.12 (v) 452.89 215.62 B
0.28 0.12 (e the supporting) 458.35 215.62 B
0.18 (structures associated with a call to a generic function. T) 63.65 202.62 P
0.18 (ok) 309.37 202.62 P
0.18 (ens which might be used are) 320.26 202.62 P
5 10 Q
0.18 (O) 449.02 202.62 P
0.18 (T) 456.4 202.62 P
2 11 Q
0.18 ( on the name of) 462.51 202.62 P
(the primiti) 63.65 189.62 T
(v) 109.52 189.62 T
(e itself, or one of a series of) 114.85 189.62 T
5 10 Q
(R) 239.79 189.62 T
(V) 246.51 189.62 T
(AL) 252.38 189.62 T
2 11 Q
(s or) 264.61 189.62 T
5 10 Q
(L) 283.55 189.62 T
(V) 288.01 189.62 T
(AL) 293.88 189.62 T
2 11 Q
(s on the ar) 306.11 189.62 T
(guments being passed.) 351.43 189.62 T
3 12 Q
(5.3) 63.65 151.95 T
(Primitives and T) 90.65 151.95 T
(oken Mappings) 182.39 151.95 T
2 11 Q
-0.21 (This section details the primiti) 63.65 130.62 P
-0.21 (v) 196.38 130.62 P
-0.21 (es used. Unless otherwise speci\336ed, these map to calls into the runtime sys-) 201.72 130.62 P
(tem, which are described in chapter 6.) 63.65 117.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 27
%%Page: "22" 28
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(22) 63.65 84.9 T
(5.3.1) 63.65 738.29 T
(General T) 90.89 738.29 T
(okens) 136.22 738.29 T
5 F
(pz) 63.65 711.29 T
2 11 Q
([T) 497.21 710.62 T
(ok) 506.71 710.62 T
(en]) 517.6 710.62 T
1 F
(Signatur) 81.65 685.62 T
(e) 119.14 685.62 T
6 F
(\256) 189.59 667.29 T
5 10 Q
(SHAPE) 207.65 667.29 T
1 11 Q
(Description) 81.65 642.62 T
2 F
0.28 0.11 (Returns the same shape as a) 99.65 620.62 B
5 10 Q
0.28 0.11 (~ptr_v) 230.22 620.62 B
0.28 0.11 (oid) 258.7 620.62 B
2 11 Q
0.28 0.11 ( from the ANSI API. This is the generic type used e) 272.37 620.62 B
0.28 0.11 (xten-) 508.71 620.62 B
(si) 99.65 607.62 T
(v) 106.71 607.62 T
(ely throughout the compiler) 112.04 607.62 T
(.) 233.96 607.62 T
5 10 Q
(OT_TAG) 63.65 580.29 T
2 11 Q
([T) 497.21 579.62 T
(ok) 506.71 579.62 T
(en]) 517.6 579.62 T
1 F
(Signatur) 81.65 554.62 T
(e) 119.14 554.62 T
(x) 181.71 535.62 T
2 F
(:) 186.59 535.62 T
5 10 Q
(EXP) 207.65 535.62 T
6 11 Q
(\256) 189.59 520.29 T
5 10 Q
(EXP) 207.65 520.29 T
1 11 Q
(x) 230.44 520.29 T
(Description) 81.65 495.62 T
2 F
(Con) 99.65 473.62 T
(v) 117.54 473.62 T
(enience shorthand for) 122.88 473.62 T
0 F
(obtain_tag) 220.93 473.62 T
2 F
(.) 271.05 473.62 T
3 10 Q
(5.3.2) 63.65 439.29 T
(General Primitives) 90.89 439.29 T
0 11 Q
(primitive-make-box) 63.65 410.62 T
2 F
([Primiti) 483.81 410.62 T
(v) 517.77 410.62 T
(e]) 523.1 410.62 T
1 F
(Signatur) 81.65 385.62 T
(e) 119.14 385.62 T
0 F
(\050object :: <object>\051 => <object>) 99.65 366.62 T
(primitive-allocate) 63.65 337.62 T
2 F
([Primiti) 483.81 337.62 T
(v) 517.77 337.62 T
(e]) 523.1 337.62 T
1 F
(Signatur) 81.65 312.62 T
(e) 119.14 312.62 T
0 F
(\050size :: <raw-small-integer>\051 => <object>\051) 99.65 293.62 T
(primitive-byte-allocate) 63.65 264.62 T
2 F
([Primiti) 483.81 264.62 T
(v) 517.77 264.62 T
(e]) 523.1 264.62 T
1 F
(Signatur) 81.65 239.62 T
(e) 119.14 239.62 T
0 F
(\050w) 99.65 220.62 T
(ord-size :: <raw-small-integer>, byte-size :: <raw-small-integer>\051 => <object>\051) 111.14 220.62 T
(primitive-make-environment) 63.65 191.62 T
2 F
([Primiti) 483.81 191.62 T
(v) 517.77 191.62 T
(e]) 523.1 191.62 T
1 F
(Signatur) 81.65 166.62 T
(e) 119.14 166.62 T
0 F
(\050size :: <raw-small-integer>\051 => <object>) 99.65 147.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 28
%%Page: "23" 29
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(23) 520.53 84.9 T
0 11 Q
(primitive-copy-vector) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050v) 99.65 693.62 T
(ector :: <object>\051 => <object>) 108.7 693.62 T
(primitive-make-string) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050v) 99.65 620.62 T
(ector :: <raw-c-char*>\051 => <raw-c-char*>) 108.7 620.62 T
(primitive-function-code) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050function :: <object>\051 => <object>) 99.65 547.62 T
(primitive-function-environment) 63.65 518.62 T
2 F
([Primiti) 483.81 518.62 T
(v) 517.77 518.62 T
(e]) 523.1 518.62 T
1 F
(Signatur) 81.65 493.62 T
(e) 119.14 493.62 T
0 F
(\050function :: <object>\051 => <object>) 99.65 474.62 T
3 10 Q
(5.3.3) 63.65 440.29 T
(Lo) 90.89 440.29 T
(w-Le) 102.96 440.29 T
(vel Appl) 125.59 440.29 T
(y Primitives) 164.34 440.29 T
0 11 Q
(primitive-xep-apply) 63.65 411.62 T
2 F
([Primiti) 483.81 411.62 T
(v) 517.77 411.62 T
(e]) 523.1 411.62 T
1 F
(Signatur) 81.65 386.62 T
(e) 119.14 386.62 T
0 F
(\050function :: <object>, b) 99.65 367.62 T
(uffer) 207.9 367.62 T
(-size :: <raw-small-integer>, b) 230.7 367.62 T
(uffer :: <object>\051 => :: <object>) 371.93 367.62 T
(primitive-iep-apply) 63.65 338.62 T
2 F
([Primiti) 483.81 338.62 T
(v) 517.77 338.62 T
(e]) 523.1 338.62 T
1 F
(Signatur) 81.65 313.62 T
(e) 119.14 313.62 T
0 F
(\050function :: <object>, b) 99.65 294.62 T
(uffer) 207.9 294.62 T
(-size :: <raw-small-integer>, b) 230.7 294.62 T
(uffer :: <object>\051 => <object>\051) 371.93 294.62 T
(primitive-true?) 63.65 265.62 T
2 F
([Primiti) 483.81 265.62 T
(v) 517.77 265.62 T
(e]) 523.1 265.62 T
1 F
(Signatur) 81.65 240.62 T
(e) 119.14 240.62 T
0 F
(\050v) 99.65 221.62 T
(alue :: <raw-small-integer>\051 => <object>) 108.7 221.62 T
1 F
(Description) 81.65 196.62 T
2 F
0.05 (This primiti) 99.65 174.62 P
0.05 (v) 151.69 174.62 P
0.05 (e returns Dylan true if) 157.02 174.62 P
1 F
0.05 (value) 257.18 174.62 P
2 F
0.05 ( is non-zero, and f) 281.01 174.62 P
0.05 (alse if) 360.84 174.62 P
1 F
0.05 (value) 390.27 174.62 P
2 F
0.05 ( is zero. The tok) 414.1 174.62 P
0.05 (en) 485.38 174.62 P
5 10 Q
0.05 (~i_to_tf) 498.57 174.62 P
2 11 Q
(is emitted to achie) 99.65 161.62 T
(v) 179.73 161.62 T
(e this.) 185.06 161.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 29
%%Page: "24" 30
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(24) 63.65 84.9 T
5 F
(~i_to_tf) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(i) 183.53 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
6 11 Q
(\256) 189.59 678.29 T
5 10 Q
(T) 207.65 678.29 T
(A) 212.56 678.29 T
(G pz) 218.93 678.29 T
1 11 Q
(Description) 81.65 653.62 T
2 F
(Performs 'if) 99.65 631.62 T
1 F
(i) 154.18 631.62 T
2 F
( then) 157.23 631.62 T
0 F
(#t) 181.68 631.62 T
2 F
( else) 190.84 631.62 T
0 F
(#f) 213.44 631.62 T
2 F
('.) 222.61 631.62 T
0 F
(primitive-false?) 63.65 602.62 T
2 F
([Primiti) 483.81 602.62 T
(v) 517.77 602.62 T
(e]) 523.1 602.62 T
1 F
(Signatur) 81.65 577.62 T
(e) 119.14 577.62 T
0 F
(\050v) 99.65 558.62 T
(alue :: <raw-small-integer>\051 => <object>) 108.7 558.62 T
1 F
(Description) 81.65 533.62 T
2 F
0.28 0 (This is the complement of) 99.65 511.62 B
0 F
0.28 0 (primiti) 218.71 511.62 B
0.28 0 (v) 251.61 511.62 B
0.28 0 (e-true?) 257 511.62 B
2 F
0.28 0 (, returning) 290.61 511.62 B
0 F
0.28 0 (#t) 339.76 511.62 B
2 F
0.28 0 ( if the v) 348.92 511.62 B
0.28 0 (alue is 0,) 383.4 511.62 B
0 F
0.28 0 (#f) 426.41 511.62 B
2 F
0.28 0 ( otherwise. The tok) 435.58 511.62 B
0.28 0 (en) 521.26 511.62 B
5 10 Q
(~i_to_ft) 99.65 498.62 T
2 11 Q
( is used for this.) 132.73 498.62 T
5 10 Q
(~i_to_ft) 63.65 471.29 T
2 11 Q
([T) 497.21 470.62 T
(ok) 506.71 470.62 T
(en]) 517.6 470.62 T
1 F
(Signatur) 81.65 445.62 T
(e) 119.14 445.62 T
(i) 183.53 426.62 T
2 F
(:) 186.59 426.62 T
5 10 Q
(EXP pz) 207.65 426.62 T
6 11 Q
(\256) 189.59 411.29 T
5 10 Q
(T) 207.65 411.29 T
(A) 212.56 411.29 T
(G pz) 218.93 411.29 T
1 11 Q
(Description) 81.65 386.62 T
2 F
(Performs 'if) 99.65 364.62 T
1 F
(i) 154.18 364.62 T
2 F
( then) 157.23 364.62 T
0 F
(#f) 181.68 364.62 T
2 F
( else) 190.84 364.62 T
0 F
(#t) 213.44 364.62 T
2 F
('.) 222.61 364.62 T
0 F
(primitive-equals?) 63.65 335.62 T
2 F
([Primiti) 483.81 335.62 T
(v) 517.77 335.62 T
(e]) 523.1 335.62 T
1 F
(Signatur) 81.65 310.62 T
(e) 119.14 310.62 T
0 F
(\050x :: <object>, y :: <object>\051 => <raw-c-int>) 99.65 291.62 T
2 F
(This is an operator; it maps to the tok) 99.65 269.62 T
(en) 263.92 269.62 T
5 10 Q
(EQ) 277.06 269.62 T
(U) 291.41 269.62 T
(ALS) 298.23 269.62 T
2 11 Q
(.) 317.13 269.62 T
5 10 Q
(EQUALS) 63.65 242.29 T
2 11 Q
([T) 497.21 241.62 T
(ok) 506.71 241.62 T
(en]) 517.6 241.62 T
1 F
(Signatur) 81.65 216.62 T
(e) 119.14 216.62 T
(x) 181.71 197.62 T
2 F
(:) 186.59 197.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 197.62 T
1 11 Q
(y) 181.71 184.62 T
2 F
(:) 186.59 184.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 184.62 T
6 11 Q
(\256) 189.59 169.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 169.29 T
1 11 Q
(Description) 81.65 144.62 T
2 F
(If) 99.65 122.62 T
1 F
(x) 109.72 122.62 T
2 F
( ==) 114.61 122.62 T
1 F
(y) 132.52 122.62 T
2 F
( then 1 else 0.) 137.4 122.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 30
%%Page: "25" 31
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(25) 520.53 84.9 T
0 11 Q
(primitive-continue-unwind) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050\051 => <object>) 99.65 693.62 T
(primitive-nlx) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050bind-exit-frame :: <raw-c-v) 99.65 620.62 T
(oid*>, ar) 232.26 620.62 T
(gs :: <raw-c-v) 274.48 620.62 T
(oid*>\051 => <raw-c-v) 339.28 620.62 T
(oid>) 429.63 620.62 T
(primitive-inlined-nlx) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050bind-exit-frame :: <raw-c-v) 99.65 547.62 T
(oid*>, \336rst-ar) 232.26 547.62 T
(gument :: <raw-c-v) 297.09 547.62 T
(oid*>\051 => <raw-c-v) 387.55 547.62 T
(oid>) 477.89 547.62 T
(rimitive-variable-lookup) 63.65 518.62 T
2 F
([Primiti) 483.81 518.62 T
(v) 517.77 518.62 T
(e]) 523.1 518.62 T
1 F
(Signatur) 81.65 493.62 T
(e) 119.14 493.62 T
0 F
(\050v) 99.65 474.62 T
(ariable-pointer :: <raw-c-v) 108.7 474.62 T
(oid*>\051 => <raw-c-v) 234.61 474.62 T
(oid*>) 324.95 474.62 T
(primitive-variable-lookup-setter) 63.65 445.62 T
2 F
([Primiti) 483.81 445.62 T
(v) 517.77 445.62 T
(e]) 523.1 445.62 T
1 F
(Signatur) 81.65 420.62 T
(e) 119.14 420.62 T
0 F
(\050v) 99.65 401.62 T
(alue :: <raw-c-v) 108.7 401.62 T
(oid*>, v) 183.28 401.62 T
(ariable-pointer :: <raw-c-v) 220.62 401.62 T
(oid*>\051 => <raw-c-v) 346.52 401.62 T
(oid*>) 436.86 401.62 T
3 10 Q
(5.3.4) 63.65 367.29 T
(Integ) 90.89 367.29 T
(er Primitives) 114.88 367.29 T
0 11 Q
(primitive-int?) 63.65 338.62 T
2 F
([Primiti) 483.81 338.62 T
(v) 517.77 338.62 T
(e]) 523.1 338.62 T
1 F
(Signatur) 81.65 313.62 T
(e) 119.14 313.62 T
0 F
(\050x :: <object>\051 => <raw-small-integer>) 99.65 294.62 T
2 F
0.28 0.21 (There are se) 63.65 269.62 B
0.28 0.21 (v) 120.18 269.62 B
0.28 0.21 (eral sets of primiti) 125.73 269.62 B
0.28 0.21 (v) 210.82 269.62 B
0.28 0.21 (e operators def) 216.36 269.62 B
0.28 0.21 (ined on inte) 284.81 269.62 B
0.28 0.21 (gers, which all mak) 339.65 269.62 B
0.28 0.21 (e use of the follo) 430.49 269.62 B
0.28 0.21 (wing) 509.02 269.62 B
(tok) 63.65 256.62 T
(ens:) 77.6 256.62 T
5 10 Q
(INT_EQ) 63.65 229.29 T
2 11 Q
([T) 497.21 228.62 T
(ok) 506.71 228.62 T
(en]) 517.6 228.62 T
1 F
(Signatur) 81.65 203.62 T
(e) 119.14 203.62 T
(x) 181.71 184.62 T
2 F
(:) 186.59 184.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 184.62 T
1 11 Q
(y) 181.71 171.62 T
2 F
(:) 186.59 171.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 171.62 T
6 11 Q
(\256) 189.59 156.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 156.29 T
1 11 Q
(Description) 81.65 131.62 T
2 F
(If) 99.65 109.62 T
1 F
(x) 109.72 109.62 T
2 F
( ==) 114.61 109.62 T
1 F
(y) 132.52 109.62 T
2 F
( then 1 else 0.) 137.4 109.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 31
%%Page: "26" 32
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(26) 63.65 84.9 T
5 F
(INT_NEQ) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
2 F
(If) 99.65 618.62 T
1 F
(x) 109.72 618.62 T
2 F
( !=) 114.61 618.62 T
1 F
(y) 129.98 618.62 T
2 F
( then 1 else 0.) 134.86 618.62 T
5 10 Q
(INT_LT) 63.65 591.29 T
2 11 Q
([T) 497.21 590.62 T
(ok) 506.71 590.62 T
(en]) 517.6 590.62 T
1 F
(Signatur) 81.65 565.62 T
(e) 119.14 565.62 T
(x) 181.71 546.62 T
2 F
(:) 186.59 546.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 546.62 T
1 11 Q
(y) 181.71 533.62 T
2 F
(:) 186.59 533.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 533.62 T
6 11 Q
(\256) 189.59 518.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 518.29 T
1 11 Q
(Description) 81.65 493.62 T
2 F
(If) 99.65 471.62 T
1 F
(x) 109.72 471.62 T
2 F
( <) 114.61 471.62 T
1 F
(y) 126.31 471.62 T
2 F
( then 1 else 0.) 131.2 471.62 T
5 10 Q
(INT_LE) 63.65 444.29 T
2 11 Q
([T) 497.21 443.62 T
(ok) 506.71 443.62 T
(en]) 517.6 443.62 T
1 F
(Signatur) 81.65 418.62 T
(e) 119.14 418.62 T
(x) 181.71 399.62 T
2 F
(:) 186.59 399.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 399.62 T
1 11 Q
(y) 181.71 386.62 T
2 F
(:) 186.59 386.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 386.62 T
6 11 Q
(\256) 189.59 371.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 371.29 T
1 11 Q
(Description) 81.65 346.62 T
2 F
(If) 99.65 324.62 T
1 F
(x) 109.72 324.62 T
2 F
( <=) 114.61 324.62 T
1 F
(y) 132.52 324.62 T
2 F
( then 1 else 0.) 137.4 324.62 T
5 10 Q
(INT_GT) 63.65 297.29 T
2 11 Q
([T) 497.21 296.62 T
(ok) 506.71 296.62 T
(en]) 517.6 296.62 T
1 F
(Signatur) 81.65 271.62 T
(e) 119.14 271.62 T
(x) 181.71 252.62 T
2 F
(:) 186.59 252.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 252.62 T
1 11 Q
(y) 181.71 239.62 T
2 F
(:) 186.59 239.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 239.62 T
6 11 Q
(\256) 189.59 224.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 224.29 T
1 11 Q
(Description) 81.65 199.62 T
2 F
(If) 99.65 177.62 T
1 F
(x) 109.72 177.62 T
2 F
( >) 114.61 177.62 T
1 F
(y) 126.31 177.62 T
2 F
( then 1 else 0.) 131.2 177.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 32
%%Page: "27" 33
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(27) 520.53 84.9 T
5 F
(INT_GE) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
2 F
(If) 99.65 618.62 T
1 F
(x) 109.72 618.62 T
2 F
( >=) 114.61 618.62 T
1 F
(y) 132.52 618.62 T
2 F
( then 1 else 0.) 137.4 618.62 T
5 10 Q
(INT_NEG) 63.65 591.29 T
2 11 Q
([T) 497.21 590.62 T
(ok) 506.71 590.62 T
(en]) 517.6 590.62 T
1 F
(Signatur) 81.65 565.62 T
(e) 119.14 565.62 T
(x) 181.71 546.62 T
2 F
(:) 186.59 546.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 546.62 T
6 11 Q
(\256) 189.59 531.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 531.29 T
1 11 Q
(Description) 81.65 506.62 T
2 F
(Ne) 99.65 484.62 T
(g) 112.31 484.62 T
(ate) 117.75 484.62 T
1 F
(x) 133.33 484.62 T
2 F
(.) 138.21 484.62 T
5 10 Q
(INT_ADD) 63.65 457.29 T
2 11 Q
([T) 497.21 456.62 T
(ok) 506.71 456.62 T
(en]) 517.6 456.62 T
1 F
(Signatur) 81.65 431.62 T
(e) 119.14 431.62 T
(x) 181.71 412.62 T
2 F
(:) 186.59 412.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 412.62 T
1 11 Q
(y) 181.71 399.62 T
2 F
(:) 186.59 399.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 399.62 T
6 11 Q
(\256) 189.59 384.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 384.29 T
1 11 Q
(Description) 81.65 359.62 T
2 F
(Sum) 99.65 337.62 T
1 F
(x) 122.57 337.62 T
2 F
( and) 127.46 337.62 T
1 F
(y) 148.84 337.62 T
2 F
(.) 153.01 337.62 T
5 10 Q
(INT_SUB) 63.65 310.29 T
2 11 Q
([T) 497.21 309.62 T
(ok) 506.71 309.62 T
(en]) 517.6 309.62 T
1 F
(Signatur) 81.65 284.62 T
(e) 119.14 284.62 T
(x) 181.71 265.62 T
2 F
(:) 186.59 265.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 265.62 T
1 11 Q
(y) 181.71 252.62 T
2 F
(:) 186.59 252.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 252.62 T
6 11 Q
(\256) 189.59 237.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 237.29 T
1 11 Q
(Description) 81.65 212.62 T
2 F
(Perform) 99.65 190.62 T
1 F
(x) 138.45 190.62 T
2 F
( \320) 143.33 190.62 T
1 F
(y) 154.33 190.62 T
2 F
(.) 158.5 190.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 33
%%Page: "28" 34
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(28) 63.65 84.9 T
5 F
(INT_MULT) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
(x) 99.65 618.62 T
2 F
( *) 104.53 618.62 T
1 F
(y) 115.53 618.62 T
5 10 Q
(INT_DIV) 63.65 591.29 T
2 11 Q
([T) 497.21 590.62 T
(ok) 506.71 590.62 T
(en]) 517.6 590.62 T
1 F
(Signatur) 81.65 565.62 T
(e) 119.14 565.62 T
(x) 181.71 546.62 T
2 F
(:) 186.59 546.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 546.62 T
1 11 Q
(y) 181.71 533.62 T
2 F
(:) 186.59 533.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 533.62 T
6 11 Q
(\256) 189.59 518.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 518.29 T
1 11 Q
(Description) 81.65 493.62 T
(x) 99.65 471.62 T
2 F
( /) 104.53 471.62 T
1 F
(y) 113.09 471.62 T
2 F
(.) 117.26 471.62 T
5 10 Q
(INT_MOD) 63.65 444.29 T
2 11 Q
([T) 497.21 443.62 T
(ok) 506.71 443.62 T
(en]) 517.6 443.62 T
1 F
(Signatur) 81.65 418.62 T
(e) 119.14 418.62 T
(x) 181.71 399.62 T
2 F
(:) 186.59 399.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 399.62 T
1 11 Q
(y) 181.71 386.62 T
2 F
(:) 186.59 386.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 386.62 T
6 11 Q
(\256) 189.59 371.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 371.29 T
1 11 Q
(Description) 81.65 346.62 T
(x) 99.65 324.62 T
2 F
( %) 104.53 324.62 T
1 F
(y) 119.19 324.62 T
2 F
(.) 123.36 324.62 T
5 10 Q
(INT_LSHIFT) 63.65 297.29 T
2 11 Q
([T) 497.21 296.62 T
(ok) 506.71 296.62 T
(en]) 517.6 296.62 T
1 F
(Signatur) 81.65 271.62 T
(e) 119.14 271.62 T
(x) 181.71 252.62 T
2 F
(:) 186.59 252.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 252.62 T
1 11 Q
(y) 181.71 239.62 T
2 F
(:) 186.59 239.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 239.62 T
6 11 Q
(\256) 189.59 224.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 224.29 T
1 11 Q
(Description) 81.65 199.62 T
(x) 99.65 177.62 T
2 F
( <<) 104.53 177.62 T
1 F
(y) 122.44 177.62 T
2 F
(.) 126.61 177.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 34
%%Page: "29" 35
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(29) 520.53 84.9 T
5 F
(INT_RSHIFT) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
(x) 99.65 618.62 T
2 F
( >>) 104.53 618.62 T
1 F
(y) 122.44 618.62 T
2 F
(.) 126.61 618.62 T
5 10 Q
(INT_NOT) 63.65 591.29 T
2 11 Q
([T) 497.21 590.62 T
(ok) 506.71 590.62 T
(en]) 517.6 590.62 T
1 F
(Signatur) 81.65 565.62 T
(e) 119.14 565.62 T
(x) 181.71 546.62 T
2 F
(:) 186.59 546.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 546.62 T
6 11 Q
(\256) 189.59 531.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 531.29 T
1 11 Q
(Description) 81.65 506.62 T
2 F
(Bitwise not\050) 99.65 484.62 T
1 F
(x) 153.74 484.62 T
2 F
(\051.) 158.62 484.62 T
5 10 Q
(INT_AND) 63.65 457.29 T
2 11 Q
([T) 497.21 456.62 T
(ok) 506.71 456.62 T
(en]) 517.6 456.62 T
1 F
(Signatur) 81.65 431.62 T
(e) 119.14 431.62 T
(x) 181.71 412.62 T
2 F
(:) 186.59 412.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 412.62 T
1 11 Q
(y) 181.71 399.62 T
2 F
(:) 186.59 399.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 399.62 T
6 11 Q
(\256) 189.59 384.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 384.29 T
1 11 Q
(Description) 81.65 359.62 T
2 F
(Bitwise) 99.65 337.62 T
1 F
(x) 136.01 337.62 T
2 F
( AND) 140.9 337.62 T
1 F
(y) 170.22 337.62 T
2 F
(.) 174.39 337.62 T
5 10 Q
(INT_OR) 63.65 310.29 T
2 11 Q
([T) 497.21 309.62 T
(ok) 506.71 309.62 T
(en]) 517.6 309.62 T
1 F
(Signatur) 81.65 284.62 T
(e) 119.14 284.62 T
(x) 181.71 265.62 T
2 F
(:) 186.59 265.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 265.62 T
1 11 Q
(y) 181.71 252.62 T
2 F
(:) 186.59 252.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 252.62 T
6 11 Q
(\256) 189.59 237.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 237.29 T
1 11 Q
(Description) 81.65 212.62 T
2 F
(Bitwise) 99.65 190.62 T
1 F
(x) 136.01 190.62 T
2 F
( or) 140.9 190.62 T
1 F
(y) 155.56 190.62 T
2 F
(.) 159.73 190.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 35
%%Page: "30" 36
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(30) 63.65 84.9 T
5 F
(INT_XOR) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP INTEGER\050iv\051) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
2 F
(Bitwise) 99.65 618.62 T
1 F
(x) 136.01 618.62 T
2 F
( e) 140.9 618.62 T
(xclusi) 148.37 618.62 T
(v) 174.37 618.62 T
(e-or) 179.71 618.62 T
1 F
(y) 200.17 618.62 T
2 F
(.) 204.34 618.62 T
0 F
(primitive-address-equals?) 63.65 589.62 T
2 F
([Primiti) 483.81 589.62 T
(v) 517.77 589.62 T
(e]) 523.1 589.62 T
1 F
(Signatur) 81.65 564.62 T
(e) 119.14 564.62 T
0 F
(\050x :: <raw-addr) 99.65 545.62 T
(ess>, y :: <raw-addr) 172.31 545.62 T
(ess>\051 => <raw-addr) 266.53 545.62 T
(ess>) 358.62 545.62 T
(primitive-address-add) 63.65 516.62 T
2 F
([Primiti) 483.81 516.62 T
(v) 517.77 516.62 T
(e]) 523.1 516.62 T
1 F
(Signatur) 81.65 491.62 T
(e) 119.14 491.62 T
0 F
(\050x :: <raw-addr) 99.65 472.62 T
(ess>, y :: <raw-addr) 172.31 472.62 T
(ess>\051 => <raw-addr) 266.53 472.62 T
(ess>) 358.62 472.62 T
(primitive-address-subtract) 63.65 443.62 T
2 F
([Primiti) 483.81 443.62 T
(v) 517.77 443.62 T
(e]) 523.1 443.62 T
1 F
(Signatur) 81.65 418.62 T
(e) 119.14 418.62 T
0 F
(\050x :: <raw-addr) 99.65 399.62 T
(ess>, y :: <raw-addr) 172.31 399.62 T
(ess>\051 => <raw-addr) 266.53 399.62 T
(ess>) 358.62 399.62 T
(primitive-address-multiply) 63.65 370.62 T
2 F
([Primiti) 483.81 370.62 T
(v) 517.77 370.62 T
(e]) 523.1 370.62 T
1 F
(Signatur) 81.65 345.62 T
(e) 119.14 345.62 T
0 F
(\050x :: <raw-addr) 99.65 326.62 T
(ess>, y :: <raw-addr) 172.31 326.62 T
(ess>\051 => <raw-addr) 266.53 326.62 T
(ess>) 358.62 326.62 T
(primitive-address-left-shift) 63.65 297.62 T
2 F
([Primiti) 483.81 297.62 T
(v) 517.77 297.62 T
(e]) 523.1 297.62 T
1 F
(Signatur) 81.65 272.62 T
(e) 119.14 272.62 T
0 F
(\050x :: <raw-addr) 99.65 253.62 T
(ess>, y :: <raw-addr) 172.31 253.62 T
(ess>\051 => <raw-addr) 266.53 253.62 T
(ess>) 358.62 253.62 T
(primitive-address-right-shift) 63.65 224.62 T
2 F
([Primiti) 483.81 224.62 T
(v) 517.77 224.62 T
(e]) 523.1 224.62 T
1 F
(Signatur) 81.65 199.62 T
(e) 119.14 199.62 T
0 F
(\050x :: <raw-addr) 99.65 180.62 T
(ess>, y :: <raw-addr) 172.31 180.62 T
(ess>\051 => <raw-addr) 266.53 180.62 T
(ess>) 358.62 180.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 36
%%Page: "31" 37
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(31) 520.53 84.9 T
0 11 Q
(primitive-address-not) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050x :: <raw-addr) 99.65 693.62 T
(ess>\051 => <raw-addr) 172.31 693.62 T
(ess>) 264.41 693.62 T
(primitive-address-and) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050x :: <raw-addr) 99.65 620.62 T
(ess>, y :: <raw-addr) 172.31 620.62 T
(ess>\051 => <raw-addr) 266.53 620.62 T
(ess>) 358.62 620.62 T
(primitive-address-or) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050x :: <raw-addr) 99.65 547.62 T
(ess>, y :: <raw-addr) 172.31 547.62 T
(ess>\051 => <raw-addr) 266.53 547.62 T
(ess>) 358.62 547.62 T
2 F
(The follo) 63.65 522.62 T
(wing primiti) 104.01 522.62 T
(v) 158.43 522.62 T
(es map to the tok) 163.77 522.62 T
(ens listed abo) 238.82 522.62 T
(v) 298.54 522.62 T
(e:) 303.88 522.62 T
0 F
(primitive-small-integer-equals?) 63.65 493.62 T
2 F
([Primiti) 483.81 493.62 T
(v) 517.77 493.62 T
(e]) 523.1 493.62 T
1 F
(Signatur) 81.65 468.62 T
(e) 119.14 468.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 449.62 T
(primitive-small-integer-not-equals?) 63.65 420.62 T
2 F
([Primiti) 483.81 420.62 T
(v) 517.77 420.62 T
(e]) 523.1 420.62 T
1 F
(Signatur) 81.65 395.62 T
(e) 119.14 395.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 376.62 T
(primitive-small-integer-less-than?) 63.65 347.62 T
2 F
([Primiti) 483.81 347.62 T
(v) 517.77 347.62 T
(e]) 523.1 347.62 T
1 F
(Signatur) 81.65 322.62 T
(e) 119.14 322.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 303.62 T
(primitive-small-integer-greater-than?) 63.65 274.62 T
2 F
([Primiti) 483.81 274.62 T
(v) 517.77 274.62 T
(e]) 523.1 274.62 T
1 F
(Signatur) 81.65 249.62 T
(e) 119.14 249.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 230.62 T
(primitive-small-integer-greater-than-or-equal?) 63.65 201.62 T
2 F
([Primiti) 483.81 201.62 T
(v) 517.77 201.62 T
(e]) 523.1 201.62 T
1 F
(Signatur) 81.65 176.62 T
(e) 119.14 176.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 157.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 37
%%Page: "32" 38
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(32) 63.65 84.9 T
0 11 Q
(primitive-small-integer-negate) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050x :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 693.62 T
(primitive-small-integer-add) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 620.62 T
(primitive-small-integer-subtract) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 547.62 T
(primitive-small-integer-multiply) 63.65 518.62 T
2 F
([Primiti) 483.81 518.62 T
(v) 517.77 518.62 T
(e]) 523.1 518.62 T
1 F
(Signatur) 81.65 493.62 T
(e) 119.14 493.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 474.62 T
(primitive-small-integer-divide) 63.65 445.62 T
2 F
([Primiti) 483.81 445.62 T
(v) 517.77 445.62 T
(e]) 523.1 445.62 T
1 F
(Signatur) 81.65 420.62 T
(e) 119.14 420.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 401.62 T
(primitive-small-integer-modulo) 63.65 372.62 T
2 F
([Primiti) 483.81 372.62 T
(v) 517.77 372.62 T
(e]) 523.1 372.62 T
1 F
(Signatur) 81.65 347.62 T
(e) 119.14 347.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 328.62 T
(primitive-small-integer-left-shift) 63.65 299.62 T
2 F
([Primiti) 483.81 299.62 T
(v) 517.77 299.62 T
(e]) 523.1 299.62 T
1 F
(Signatur) 81.65 274.62 T
(e) 119.14 274.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 255.62 T
(primitive-small-integer-right-shift) 63.65 226.62 T
2 F
([Primiti) 483.81 226.62 T
(v) 517.77 226.62 T
(e]) 523.1 226.62 T
1 F
(Signatur) 81.65 201.62 T
(e) 119.14 201.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 182.62 T
(primitive-small-integer-not) 63.65 153.62 T
2 F
([Primiti) 483.81 153.62 T
(v) 517.77 153.62 T
(e]) 523.1 153.62 T
1 F
(Signatur) 81.65 128.62 T
(e) 119.14 128.62 T
0 F
(\050x :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 109.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 38
%%Page: "33" 39
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(33) 520.53 84.9 T
0 11 Q
(primitive-small-integer-and) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 693.62 T
(primitive-small-integer-or) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 620.62 T
(primitive-small-integer-xor) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050x :: <raw-small-integer>, y :: <raw-small-integer>\051 => <raw-small-integer>) 99.65 547.62 T
2 F
0.28 0.14 (In addition to the small-inte) 63.65 522.62 B
0.28 0.14 (ger operators abo) 190.78 522.62 B
0.28 0.14 (v) 269.86 522.62 B
0.28 0.14 (e, there are also def) 275.33 522.62 B
0.28 0.14 (initions for three other inte) 364.53 522.62 B
0.28 0.14 (ger types,) 487.37 522.62 B
0.28 0.2 (def) 63.65 509.62 B
0.28 0.2 (ined in the same manner) 77.71 509.62 B
0.28 0.2 (. T) 190.46 509.62 B
0.28 0.2 (able) 202.69 509.62 B
0.28 0.2 (6 on page) 224.79 509.62 B
0.28 0.2 (33 summarises the relationship between these types and) 272.91 509.62 B
(Dylan primiti) 63.65 496.62 T
(v) 122.96 496.62 T
(es.) 128.29 496.62 T
3 10 Q
(5.3.5) 63.65 300.29 T
(Float Primitives) 90.89 300.29 T
0 11 Q
(primitive-decoded-bits-as-single-float) 63.65 271.62 T
2 F
([Primiti) 482.19 271.62 T
(v) 516.15 271.62 T
(e}) 521.48 271.62 T
1 F
(Signatur) 81.65 246.62 T
(e) 119.14 246.62 T
0 F
(\050sign :: <raw-small-integer>, exponent :: <raw-small-integer>,) 99.65 227.62 T
(signi\336cand :: <raw-small-integer>\051 => <raw-single-\337oat>\051) 99.65 214.62 T
(primitive-bits-as-single-float) 63.65 185.62 T
2 F
([Primiti) 483.81 185.62 T
(v) 517.77 185.62 T
(e]) 523.1 185.62 T
1 F
(Signatur) 81.65 160.62 T
(e) 119.14 160.62 T
0 F
(\050x :: <raw-small-integer>\051 => <raw-single-\337oat>) 99.65 141.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(T) 199.54 446.62 T
(able 6.) 205.38 446.62 T
(Inte) 240.21 446.62 T
(ger T) 257.15 446.62 T
(ypes and Dylan Primiti) 279.78 446.62 T
(v) 381.26 446.62 T
(es) 386.59 446.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(General V) 69.65 397.62 T
(ariety of Integer) 117.21 397.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Class of Primiti) 213.65 409.62 T
(v) 286.86 409.62 T
(e P) 292.25 409.62 T
(arameters and) 306.5 409.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Retur) 213.65 397.62 T
(n V) 240.97 397.62 T
(alues) 256.77 397.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(V) 393.65 421.62 T
(alue of) 400.58 421.62 T
1 F
(type) 434.8 421.62 T
0 F
( in Primiti) 453.12 421.62 T
(v) 501.29 421.62 T
(e) 506.68 421.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Name primiti) 393.65 409.62 T
(v) 456.78 409.62 T
(e-) 462.17 409.62 T
1 F
(type) 470.71 409.62 T
0 F
(-) 489.04 409.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 F
(oper) 393.65 397.62 T
(ator) 413.65 397.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Small Inte) 69.65 377.62 T
(ger) 115.01 377.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<raw-small-integer>) 213.65 377.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(small-integer) 393.65 377.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Big Inte) 69.65 363.62 T
(ger) 105.23 363.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<raw-big-integer>) 213.65 363.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(big-integer) 393.65 363.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Machine Inte) 69.65 349.62 T
(ger) 127.83 349.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<raw-machine-integer>) 213.65 349.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(machine-integer) 393.65 349.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 F
(Unsigned Machine Inte) 69.65 335.62 T
(ger) 172.74 335.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 F
(<raw-unsigned-machine-integer>) 213.65 335.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(unsigned-machine-integer) 393.65 335.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207.65 439.95 207.65 330.95 2 L
V
0.25 H
0 Z
N
387.65 439.95 387.65 330.95 2 L
V
N
63.65 386.95 531.65 386.95 2 L
V
0.5 H
N
63.65 372.95 531.65 372.95 2 L
V
0.25 H
N
63.65 358.95 531.65 358.95 2 L
V
N
63.65 344.95 531.65 344.95 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 39
%%Page: "34" 40
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(34) 63.65 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
0.19 (Uses a custom emitter to map to a call to a function called) 99.65 715.62 P
0 F
0.19 (integer_to_single_\337oat) 360.28 715.62 P
2 F
0.19 ( in the runtime) 466.61 715.62 P
(system.) 99.65 702.62 T
0 F
(primitive-single-float-as-bits) 63.65 673.62 T
2 F
([Primiti) 483.81 673.62 T
(v) 517.77 673.62 T
(e]) 523.1 673.62 T
1 F
(Signatur) 81.65 648.62 T
(e) 119.14 648.62 T
0 F
(\050x :: <raw-single-\337oat>\051 => <raw-small-integer>) 99.65 629.62 T
1 F
(Description) 81.65 604.62 T
2 F
0.19 (Uses a custom emitter to map to a call to a function called) 99.65 582.62 P
0 F
0.19 (single_\337oat_to_integer) 360.28 582.62 P
2 F
0.19 ( in the runtime) 466.61 582.62 P
(system.) 99.65 569.62 T
0 F
(primitive-single-float-equals?) 63.65 540.62 T
2 F
([Primiti) 483.81 540.62 T
(v) 517.77 540.62 T
(e]) 523.1 540.62 T
1 F
(Signatur) 81.65 515.62 T
(e) 119.14 515.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-c-int>) 99.65 496.62 T
(primitive-single-float-not-equals?) 63.65 467.62 T
2 F
([Primiti) 483.81 467.62 T
(v) 517.77 467.62 T
(e]) 523.1 467.62 T
1 F
(Signatur) 81.65 442.62 T
(e) 119.14 442.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-c-int>) 99.65 423.62 T
(primitive-single-float-less-than?) 63.65 394.62 T
2 F
([Primiti) 483.81 394.62 T
(v) 517.77 394.62 T
(e]) 523.1 394.62 T
1 F
(Signatur) 81.65 369.62 T
(e) 119.14 369.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-c-int>) 99.65 350.62 T
(primitive-single-float-less-than-or-equal?) 63.65 321.62 T
2 F
([Primiti) 483.81 321.62 T
(v) 517.77 321.62 T
(e]) 523.1 321.62 T
1 F
(Signatur) 81.65 296.62 T
(e) 119.14 296.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-c-int>) 99.65 277.62 T
(primitive-single-float-greater-than?) 63.65 248.62 T
2 F
([Primiti) 483.81 248.62 T
(v) 517.77 248.62 T
(e]) 523.1 248.62 T
1 F
(Signatur) 81.65 223.62 T
(e) 119.14 223.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-c-int>) 99.65 204.62 T
(primitive-single-float-greater-than-or-equal?) 63.65 175.62 T
2 F
([Primiti) 483.81 175.62 T
(v) 517.77 175.62 T
(e]) 523.1 175.62 T
1 F
(Signatur) 81.65 150.62 T
(e) 119.14 150.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-c-int>) 99.65 131.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 40
%%Page: "35" 41
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(35) 520.53 84.9 T
2 11 Q
(The single-\337oat predicate primiti) 63.65 737.62 T
(v) 208.5 737.62 T
(es abo) 213.83 737.62 T
(v) 241.46 737.62 T
(e map onto the follo) 246.8 737.62 T
(wing tok) 335.13 737.62 T
(ens:) 373.83 737.62 T
5 10 Q
(FLOAT_EQ) 63.65 710.29 T
2 11 Q
([T) 497.21 709.62 T
(ok) 506.71 709.62 T
(en]) 517.6 709.62 T
1 F
(Signatur) 81.65 684.62 T
(e) 119.14 684.62 T
(x) 181.71 665.62 T
2 F
(:) 186.59 665.62 T
5 10 Q
(EXP FLO) 207.65 665.62 T
(A) 249.69 665.62 T
(TING\050fv\051) 255.16 665.62 T
1 11 Q
(y) 181.71 652.62 T
2 F
(:) 186.59 652.62 T
5 10 Q
(EXP FLO) 207.65 652.62 T
(A) 249.69 652.62 T
(TING\050fv\051) 255.16 652.62 T
6 11 Q
(\256) 189.59 637.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 637.29 T
1 11 Q
(Description) 81.65 612.62 T
2 F
(If) 99.65 590.62 T
1 F
(x) 109.72 590.62 T
2 F
( ==) 114.61 590.62 T
1 F
(y) 132.52 590.62 T
2 F
( then 1 else 0.) 137.4 590.62 T
5 10 Q
(FLOAT_NEQ) 63.65 563.29 T
2 11 Q
([T) 497.21 562.62 T
(ok) 506.71 562.62 T
(en]) 517.6 562.62 T
1 F
(Signatur) 81.65 537.62 T
(e) 119.14 537.62 T
(x) 181.71 518.62 T
2 F
(:) 186.59 518.62 T
5 10 Q
(EXP FLO) 207.65 518.62 T
(A) 249.69 518.62 T
(TING\050fv\051) 255.16 518.62 T
1 11 Q
(y) 181.71 505.62 T
2 F
(:) 186.59 505.62 T
5 10 Q
(EXP FLO) 207.65 505.62 T
(A) 249.69 505.62 T
(TING\050fv\051) 255.16 505.62 T
6 11 Q
(\256) 189.59 490.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 490.29 T
1 11 Q
(Description) 81.65 465.62 T
2 F
(If) 99.65 443.62 T
1 F
(x) 109.72 443.62 T
2 F
( !=) 114.61 443.62 T
1 F
(y) 129.98 443.62 T
2 F
( then 1 else 0.) 134.86 443.62 T
5 10 Q
(FLOAT_LT) 63.65 416.29 T
2 11 Q
([T) 497.21 415.62 T
(ok) 506.71 415.62 T
(en]) 517.6 415.62 T
1 F
(Signatur) 81.65 390.62 T
(e) 119.14 390.62 T
(x) 181.71 371.62 T
2 F
(:) 186.59 371.62 T
5 10 Q
(EXP FLO) 207.65 371.62 T
(A) 249.69 371.62 T
(TING\050fv\051) 255.16 371.62 T
1 11 Q
(y) 181.71 358.62 T
2 F
(:) 186.59 358.62 T
5 10 Q
(EXP FLO) 207.65 358.62 T
(A) 249.69 358.62 T
(TING\050fv\051) 255.16 358.62 T
6 11 Q
(\256) 189.59 343.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 343.29 T
1 11 Q
(Description) 81.65 318.62 T
2 F
(If) 99.65 296.62 T
1 F
(x) 109.72 296.62 T
2 F
( <) 114.61 296.62 T
1 F
(y) 126.31 296.62 T
2 F
( then 1 else 0.) 131.2 296.62 T
5 10 Q
(FLOAT_LE) 63.65 269.29 T
2 11 Q
([T) 497.21 268.62 T
(ok) 506.71 268.62 T
(en]) 517.6 268.62 T
1 F
(Signatur) 81.65 243.62 T
(e) 119.14 243.62 T
(x) 181.71 224.62 T
2 F
(:) 186.59 224.62 T
5 10 Q
(EXP FLO) 207.65 224.62 T
(A) 249.69 224.62 T
(TING\050fv\051) 255.16 224.62 T
1 11 Q
(y) 181.71 211.62 T
2 F
(:) 186.59 211.62 T
5 10 Q
(EXP FLO) 207.65 211.62 T
(A) 249.69 211.62 T
(TING\050fv\051) 255.16 211.62 T
6 11 Q
(\256) 189.59 196.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 196.29 T
1 11 Q
(Description) 81.65 171.62 T
2 F
(If) 99.65 149.62 T
1 F
(x) 109.72 149.62 T
2 F
( <=) 114.61 149.62 T
1 F
(y) 132.52 149.62 T
2 F
( then 1 else 0.) 137.4 149.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 41
%%Page: "36" 42
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(36) 63.65 84.9 T
5 F
(FLOAT_GT) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP FLO) 207.65 693.62 T
(A) 249.69 693.62 T
(TING\050fv\051) 255.16 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP FLO) 207.65 680.62 T
(A) 249.69 680.62 T
(TING\050fv\051) 255.16 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
2 F
(If) 99.65 618.62 T
1 F
(x) 109.72 618.62 T
2 F
( >) 114.61 618.62 T
1 F
(y) 126.31 618.62 T
2 F
( then 1 else 0.) 131.2 618.62 T
5 10 Q
(FLOAT_GE) 63.65 591.29 T
2 11 Q
([T) 497.21 590.62 T
(ok) 506.71 590.62 T
(en]) 517.6 590.62 T
1 F
(Signatur) 81.65 565.62 T
(e) 119.14 565.62 T
(x) 181.71 546.62 T
2 F
(:) 186.59 546.62 T
5 10 Q
(EXP FLO) 207.65 546.62 T
(A) 249.69 546.62 T
(TING\050fv\051) 255.16 546.62 T
1 11 Q
(y) 181.71 533.62 T
2 F
(:) 186.59 533.62 T
5 10 Q
(EXP FLO) 207.65 533.62 T
(A) 249.69 533.62 T
(TING\050fv\051) 255.16 533.62 T
6 11 Q
(\256) 189.59 518.29 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 518.29 T
1 11 Q
(Description) 81.65 493.62 T
2 F
(If) 99.65 471.62 T
1 F
(x) 109.72 471.62 T
2 F
( >=) 114.61 471.62 T
1 F
(y) 132.52 471.62 T
2 F
( then 1 else 0.) 137.4 471.62 T
0 F
(primitive-single-float-negate) 63.65 442.62 T
2 F
([Primiti) 483.81 442.62 T
(v) 517.77 442.62 T
(e]) 523.1 442.62 T
1 F
(Signatur) 81.65 417.62 T
(e) 119.14 417.62 T
0 F
(\050x :: <raw-single-\337oat>\051 => <raw-single-\337oat>) 99.65 398.62 T
(primitive-single-float-add) 63.65 369.62 T
2 F
([Primiti) 483.81 369.62 T
(v) 517.77 369.62 T
(e]) 523.1 369.62 T
1 F
(Signatur) 81.65 344.62 T
(e) 119.14 344.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-single-\337oat>) 99.65 325.62 T
(primitive-single-float-subtract) 63.65 296.62 T
2 F
([Primiti) 483.81 296.62 T
(v) 517.77 296.62 T
(e]) 523.1 296.62 T
1 F
(Signatur) 81.65 271.62 T
(e) 119.14 271.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-single-\337oat>) 99.65 252.62 T
(primitive-single-float-multiply) 63.65 223.62 T
2 F
([Primiti) 483.81 223.62 T
(v) 517.77 223.62 T
(e]) 523.1 223.62 T
1 F
(Signatur) 81.65 198.62 T
(e) 119.14 198.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-single-\337oat>) 99.65 179.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 42
%%Page: "37" 43
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(37) 520.53 84.9 T
0 11 Q
(primitive-single-float-divide) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050x :: <raw-single-\337oat>, y :: <raw-single-\337oat>\051 => <raw-single-\337oat>) 99.65 693.62 T
(primitive-single-float-unary-divide) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050x :: <raw-single-\337oat>>\051 => <raw-single-\337oat>) 99.65 620.62 T
2 F
(The single-\337oat operators abo) 63.65 595.62 T
(v) 195.15 595.62 T
(e correspond to the follo) 200.49 595.62 T
(wing tok) 307.75 595.62 T
(ens:) 346.45 595.62 T
5 10 Q
(FLOAT_NEG) 63.65 568.29 T
2 11 Q
([T) 497.21 567.62 T
(ok) 506.71 567.62 T
(en]) 517.6 567.62 T
1 F
(Signatur) 81.65 542.62 T
(e) 119.14 542.62 T
(x) 181.71 523.62 T
2 F
(:) 186.59 523.62 T
5 10 Q
(EXP FLO) 207.65 523.62 T
(A) 249.69 523.62 T
(TING\050f\051) 255.16 523.62 T
6 11 Q
(\256) 189.59 508.29 T
5 10 Q
(EXP FLO) 207.65 508.29 T
(A) 249.69 508.29 T
(TING\050f\051) 255.16 508.29 T
1 11 Q
(Description) 81.65 483.62 T
2 F
(-) 99.65 461.62 T
1 F
(x) 103.31 461.62 T
2 F
(.) 108.19 461.62 T
5 10 Q
(FLOAT_ADD) 63.65 434.29 T
2 11 Q
([T) 497.21 433.62 T
(ok) 506.71 433.62 T
(en]) 517.6 433.62 T
1 F
(Signatur) 81.65 408.62 T
(e) 119.14 408.62 T
(x) 181.71 389.62 T
2 F
(:) 186.59 389.62 T
5 10 Q
(EXP FLO) 207.65 389.62 T
(A) 249.69 389.62 T
(TING\050f\051) 255.16 389.62 T
1 11 Q
(y) 181.71 376.62 T
2 F
(:) 186.59 376.62 T
5 10 Q
(EXP FLO) 207.65 376.62 T
(A) 249.69 376.62 T
(TING\050f\051) 255.16 376.62 T
6 11 Q
(\256) 189.59 361.29 T
5 10 Q
(EXP FLO) 207.65 361.29 T
(A) 249.69 361.29 T
(TING\050f\051) 255.16 361.29 T
1 11 Q
(Description) 81.65 336.62 T
(x) 99.65 314.62 T
2 F
( +) 104.53 314.62 T
1 F
(y) 116.24 314.62 T
2 F
(.) 120.4 314.62 T
5 10 Q
(FLOAT_SUB) 63.65 287.29 T
2 11 Q
([T) 497.21 286.62 T
(ok) 506.71 286.62 T
(en]) 517.6 286.62 T
1 F
(Signatur) 81.65 261.62 T
(e) 119.14 261.62 T
(x) 181.71 242.62 T
2 F
(:) 186.59 242.62 T
5 10 Q
(EXP FLO) 207.65 242.62 T
(A) 249.69 242.62 T
(TING\050f\051) 255.16 242.62 T
1 11 Q
(y) 181.71 229.62 T
2 F
(:) 186.59 229.62 T
5 10 Q
(EXP FLO) 207.65 229.62 T
(A) 249.69 229.62 T
(TING\050f\051) 255.16 229.62 T
6 11 Q
(\256) 189.59 214.29 T
5 10 Q
(EXP FLO) 207.65 214.29 T
(A) 249.69 214.29 T
(TING\050f\051) 255.16 214.29 T
1 11 Q
(Description) 81.65 189.62 T
(x) 99.65 167.62 T
2 F
( \320) 104.53 167.62 T
1 F
(y) 115.53 167.62 T
2 F
(.) 119.7 167.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 43
%%Page: "38" 44
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(38) 63.65 84.9 T
5 F
(FLOAT_MULT) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(x) 181.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP FLO) 207.65 693.62 T
(A) 249.69 693.62 T
(TING\050f\051) 255.16 693.62 T
1 11 Q
(y) 181.71 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP FLO) 207.65 680.62 T
(A) 249.69 680.62 T
(TING\050f\051) 255.16 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP FLO) 207.65 665.29 T
(A) 249.69 665.29 T
(TING\050f\051) 255.16 665.29 T
1 11 Q
(Description) 81.65 640.62 T
2 F
(x *) 99.65 618.62 T
1 F
(y) 116.15 618.62 T
2 F
(.) 120.32 618.62 T
5 10 Q
(FLOAT_DIV) 63.65 591.29 T
2 11 Q
([T) 497.21 590.62 T
(ok) 506.71 590.62 T
(en]) 517.6 590.62 T
1 F
(Signatur) 81.65 565.62 T
(e) 119.14 565.62 T
(x) 181.71 546.62 T
2 F
(:) 186.59 546.62 T
5 10 Q
(EXP FLO) 207.65 546.62 T
(A) 249.69 546.62 T
(TING\050f\051) 255.16 546.62 T
1 11 Q
(y) 181.71 533.62 T
2 F
(:) 186.59 533.62 T
5 10 Q
(EXP FLO) 207.65 533.62 T
(A) 249.69 533.62 T
(TING\050f\051) 255.16 533.62 T
6 11 Q
(\256) 189.59 518.29 T
5 10 Q
(EXP FLO) 207.65 518.29 T
(A) 249.69 518.29 T
(TING\050f\051) 255.16 518.29 T
1 11 Q
(Description) 81.65 493.62 T
(x) 99.65 471.62 T
2 F
( /) 104.53 471.62 T
1 F
(y) 113.09 471.62 T
2 F
(.) 117.26 471.62 T
5 10 Q
(FLOAT_RECIPROCAL) 63.65 444.29 T
2 11 Q
([T) 497.21 443.62 T
(ok) 506.71 443.62 T
(en]) 517.6 443.62 T
1 F
(Signatur) 81.65 418.62 T
(e) 119.14 418.62 T
(x) 181.71 399.62 T
2 F
(:) 186.59 399.62 T
5 10 Q
(EXP FLO) 207.65 399.62 T
(A) 249.69 399.62 T
(TING\050f\051) 255.16 399.62 T
6 11 Q
(\256) 189.59 384.29 T
5 10 Q
(EXP FLO) 207.65 384.29 T
(A) 249.69 384.29 T
(TING\050f\051) 255.16 384.29 T
1 11 Q
(Description) 81.65 359.62 T
2 F
(1 /) 99.65 337.62 T
1 F
(x) 113.71 337.62 T
2 F
(.) 118.59 337.62 T
3 10 Q
(5.3.6) 63.65 303.29 T
(Accessor Primitives) 90.89 303.29 T
0 11 Q
(primitive-element) 63.65 274.62 T
2 F
([Primiti) 483.81 274.62 T
(v) 517.77 274.62 T
(e]) 523.1 274.62 T
1 F
(Signatur) 81.65 249.62 T
(e) 119.14 249.62 T
0 F
(\050array :: <object>, index :: <raw-small-integer>\051 => <object>) 99.65 230.62 T
1 F
(Description) 81.65 205.62 T
2 F
0.28 0.05 (This is used for de-referencing slots in the middle of Dylan objects, and thus potentially in) 99.65 183.62 B
0.28 0.05 (v) 506.1 183.62 B
0.28 0.05 (ok) 511.43 183.62 B
0.28 0.05 (es) 522.43 183.62 B
0.12 (read-barrier code. It tak) 99.65 170.62 P
0.12 (es tw) 203.74 170.62 P
0.12 (o parameters: a Dylan object, and an inde) 226.67 170.62 P
0.12 (x which is the \324w) 410.03 170.62 P
0.12 (ord\325 inde) 486.17 170.62 P
0.12 (x) 526.15 170.62 P
(into the object. It returns the Dylan v) 99.65 157.62 T
(alue found in that corresponding slot.) 261.91 157.62 T
(Uses a custom emitter and the tok) 99.65 135.62 T
(en) 248.63 135.62 T
5 10 Q
(READ_VECT) 261.77 135.62 T
(OR_ELEMENT) 321.38 135.62 T
2 11 Q
(.) 388.35 135.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "38" 44
%%Page: "39" 45
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(39) 520.53 84.9 T
5 F
(READ_VECTOR_ELEMENT) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(vector) 159.1 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(EXP pz) 207.65 693.62 T
1 11 Q
(element) 152.38 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP pz) 207.65 665.29 T
1 11 Q
(Description) 81.65 640.62 T
2 F
(Return the contents of) 99.65 618.62 T
1 F
(vector) 199.86 618.62 T
2 F
([) 227.35 618.62 T
1 F
(element) 231.01 618.62 T
2 F
(].) 265.22 618.62 T
0 F
(primitive-element-setter) 63.65 589.62 T
2 F
([Primiti) 483.81 589.62 T
(v) 517.77 589.62 T
(e]) 523.1 589.62 T
1 F
(Signatur) 81.65 564.62 T
(e) 119.14 564.62 T
0 F
(\050new-v) 99.65 545.62 T
(alue :: <object>, array :: <object>, index :: <raw-small-integer>\051 => <object>) 131.31 545.62 T
1 F
(Description) 81.65 520.62 T
2 F
0.28 0.01 (This is the assignment operator corresponding to) 99.65 498.62 B
0 F
0.28 0.01 (primiti) 319.29 498.62 B
0.28 0.01 (v) 352.25 498.62 B
0.28 0.01 (e-element) 357.65 498.62 B
2 F
0.28 0.01 (, which is used to change the) 402.93 498.62 B
0.28 0.05 (v) 99.65 485.62 B
0.28 0.05 (alue of a Dylan slot. This tak) 104.92 485.62 B
0.28 0.05 (es an e) 235.41 485.62 B
0.28 0.05 (xtra initial parameter which is the ne) 266.09 485.62 B
0.28 0.05 (w v) 430.72 485.62 B
0.28 0.05 (alue to put into the) 447.07 485.62 B
(object. The ne) 99.65 472.62 T
(w v) 162 472.62 T
(alue is stored in the appropriate object at the gi) 177.91 472.62 T
(v) 383.86 472.62 T
(en inde) 389.19 472.62 T
(x.) 421.1 472.62 T
(Uses a custom emitter and the tok) 99.65 450.62 T
(en) 248.63 450.62 T
5 10 Q
(WRITE_VECT) 261.77 450.62 T
(OR_ELEMENT) 325.82 450.62 T
2 11 Q
(.) 392.79 450.62 T
5 10 Q
(WRITE_VECTOR_ELEMENT) 63.65 423.29 T
2 11 Q
([T) 497.21 422.62 T
(ok) 506.71 422.62 T
(en]) 517.6 422.62 T
1 F
(Signatur) 81.65 397.62 T
(e) 119.14 397.62 T
(vector) 159.1 378.62 T
2 F
(:) 186.59 378.62 T
5 10 Q
(EXP pz) 207.65 378.62 T
1 11 Q
(element) 152.38 365.62 T
2 F
(:) 186.59 365.62 T
5 10 Q
(EXP INTEGER\050~signed_long\051) 207.65 365.62 T
1 11 Q
(value) 162.76 352.62 T
2 F
(:) 186.59 352.62 T
5 10 Q
(EXP pz) 207.65 352.62 T
6 11 Q
(\256) 189.59 337.29 T
5 10 Q
(EXP pz) 207.65 337.29 T
1 11 Q
(Description) 81.65 312.62 T
(vector) 99.65 290.62 T
2 F
([) 127.14 290.62 T
1 F
(element) 130.8 290.62 T
2 F
(] :=) 165.01 290.62 T
1 F
(value) 183.43 290.62 T
2 F
(.) 207.26 290.62 T
0 F
(primitive-byte-element) 63.65 261.62 T
2 F
([Primiti) 483.81 261.62 T
(v) 517.77 261.62 T
(e]) 523.1 261.62 T
1 F
(Signatur) 81.65 236.62 T
(e) 119.14 236.62 T
0 F
(\050array <object>, base-index :: <raw-small-integer>, byte-offset :: <raw-small-integer>\051) 99.65 217.62 T
(=> <raw-c-char>) 99.65 204.62 T
1 F
(Description) 81.65 179.62 T
2 F
0.02 (This is similar to) 99.65 157.62 P
0 F
0.02 (primiti) 176.74 157.62 P
0.02 (v) 209.63 157.62 P
0.02 (e-element) 215.02 157.62 P
2 F
0.02 (, b) 260.22 157.62 P
0.02 (ut deals with byte v) 271.02 157.62 P
0.02 (ectors. It tak) 357.11 157.62 P
0.02 (es a ne) 411.72 157.62 P
0.02 (w v) 441.42 157.62 P
0.02 (alue and a Dylan) 457.36 157.62 P
-0.07 (object, along with a base of) 99.65 144.62 P
-0.07 (fset and a byte of) 219.99 144.62 P
-0.07 (fset. The base of) 295.18 144.62 P
-0.07 (fset, e) 367.39 144.62 P
-0.07 (xpressed in w) 393.42 144.62 P
-0.07 (ords, and the byte) 453.65 144.62 P
(of) 99.65 131.62 T
(fset, e) 108.54 131.62 T
(xpressed in bytes, are added, and the byte found at that location is returned.) 134.64 131.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 45
%%Page: "40" 46
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(40) 63.65 84.9 T
0 11 Q
(primitive-byte-element-setter) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050new-v) 99.65 693.62 T
(alue :: <raw-c-char>\051 array :: <object>, base-index :: <raw-small-integer>,) 131.31 693.62 T
(byte-offset :: <raw-small-integer>\051 => <raw-c-char>) 99.65 680.62 T
1 F
(Description) 81.65 655.62 T
2 F
(This is the corresponding setter for) 99.65 636.62 T
0 F
(primiti) 256.07 636.62 T
(v) 288.96 636.62 T
(e-byte-element) 294.35 636.62 T
2 F
(.) 363.37 636.62 T
0 F
(primitive-fill!) 63.65 607.62 T
2 F
([Primiti) 483.81 607.62 T
(v) 517.77 607.62 T
(e]) 523.1 607.62 T
1 F
(Signatur) 81.65 582.62 T
(e) 119.14 582.62 T
0 F
(\050array :: <object>, size :: <raw-small-integer>, v) 99.65 563.62 T
(alue :: <object>\051 => <object>) 326.21 563.62 T
(primitive-replace!) 63.65 534.62 T
2 F
([Primiti) 483.81 534.62 T
(v) 517.77 534.62 T
(e]) 523.1 534.62 T
1 F
(Signatur) 81.65 509.62 T
(e) 119.14 509.62 T
0 F
(\050new-array :: <object>, array :: <object>, size :: <raw-small-integer>\051 => <object>) 99.65 490.62 T
(primitive-replace-bytes!) 63.65 461.62 T
2 F
([Primiti) 483.81 461.62 T
(v) 517.77 461.62 T
(e]) 523.1 461.62 T
1 F
(Signatur) 81.65 436.62 T
(e) 119.14 436.62 T
0 F
(\050dst :: <raw-c-v) 99.65 417.62 T
(oid*>, sr) 172.39 417.62 T
(c :: <raw-c-v) 213.3 417.62 T
(oid*>, size :: <raw-c-int>\051 => <raw-c-v) 273.21 417.62 T
(oid>) 454.89 417.62 T
1 F
(Description) 81.65 392.62 T
2 F
(Maps to the tok) 99.65 370.62 T
(en) 168.29 370.62 T
5 10 Q
(ansi.str) 181.42 370.62 T
(ing.memcp) 213.8 370.62 T
(y) 262.4 370.62 T
2 11 Q
( in the ANSI API.) 267.4 370.62 T
0.28 0.16 (The follo) 63.65 345.62 B
0.28 0.16 (wing primiti) 105.75 345.62 B
0.28 0.16 (v) 162.41 345.62 B
0.28 0.16 (es, named) 167.9 345.62 B
0 F
0.28 0.16 (primiti) 216.82 345.62 B
0.28 0.16 (v) 250.85 345.62 B
0.28 0.16 (e-) 256.41 345.62 B
1 F
0.28 0.16 (type) 265.28 345.62 B
0 F
0.28 0.16 (-at) 284.26 345.62 B
2 F
0.28 0.16 ( and) 297.57 345.62 B
0 F
0.28 0.16 (primiti) 320.32 345.62 B
0.28 0.16 (v) 354.35 345.62 B
0.28 0.16 (e-) 359.9 345.62 B
1 F
0.28 0.16 (type) 368.78 345.62 B
0 F
0.28 0.16 (-at-setter) 387.75 345.62 B
2 F
0.28 0.16 ( load or store, respec-) 432.13 345.62 B
-0.04 (ti) 63.65 332.62 P
-0.04 (v) 69.49 332.62 P
-0.04 (ely) 74.82 332.62 P
-0.04 (, a v) 87.55 332.62 P
-0.04 (alue of the designated) 105.84 332.62 P
1 F
-0.04 (type) 204.68 332.62 P
2 F
-0.04 ( at the speci\336ed address. All of these use one of a pair of custom emit-) 223.01 332.62 P
(ters.) 63.65 319.62 T
0 F
(primitive-untyped-at) 63.65 290.62 T
2 F
([Primiti) 483.81 290.62 T
(v) 517.77 290.62 T
(e]) 523.1 290.62 T
1 F
(Signatur) 81.65 265.62 T
(e) 119.14 265.62 T
0 F
(\050addr) 99.65 246.62 T
(ess :: <raw-pointer>\051 => <raw-untyped>) 125.73 246.62 T
(primitive-untyped-at-setter) 63.65 217.62 T
2 F
([Primiti) 483.81 217.62 T
(v) 517.77 217.62 T
(e]) 523.1 217.62 T
1 F
(Signatur) 81.65 192.62 T
(e) 119.14 192.62 T
0 F
(\050new-v) 99.65 173.62 T
(alue :: <raw-untyped>, addr) 131.31 173.62 T
(ess :: <raw-pointer>\051 => <raw-untyped>) 264.65 173.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 46
%%Page: "41" 47
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(41) 520.53 84.9 T
0 11 Q
(primitive-pointer-at) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050addr) 99.65 693.62 T
(ess :: <raw-pointer>\051 => <raw-pointer>) 125.73 693.62 T
(primitive-pointer-at-setter) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050new-v) 99.65 620.62 T
(alue :: <raw-pointer>, addr) 131.31 620.62 T
(ess :: <raw-pointer>\051 => <raw-pointer>) 260.36 620.62 T
(primitive-byte-character-at) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050addr) 99.65 547.62 T
(ess :: <raw-pointer>\051 => <raw-byte-character>) 125.73 547.62 T
(primitive-byte-character-at-setter) 63.65 518.62 T
2 F
([Primiti) 483.81 518.62 T
(v) 517.77 518.62 T
(e]) 523.1 518.62 T
1 F
(Signatur) 81.65 493.62 T
(e) 119.14 493.62 T
0 F
(\050new-v) 99.65 474.62 T
(alue :: <raw-byte-character>, addr) 131.31 474.62 T
(ess :: <raw-pointer>\051 => <raw-byte-character>) 295.16 474.62 T
(primitive-small-integer-at) 63.65 445.62 T
2 F
([Primiti) 483.81 445.62 T
(v) 517.77 445.62 T
(e]) 523.1 445.62 T
1 F
(Signatur) 81.65 420.62 T
(e) 119.14 420.62 T
0 F
(\050addr) 99.65 401.62 T
(ess :: <raw-pointer>\051 => <raw-small-integer>) 125.73 401.62 T
(primitive-small-integer-at-setter) 63.65 372.62 T
2 F
([Primiti) 483.81 372.62 T
(v) 517.77 372.62 T
(e]) 523.1 372.62 T
1 F
(Signatur) 81.65 347.62 T
(e) 119.14 347.62 T
0 F
(\050new-v) 99.65 328.62 T
(alue :: <raw-small-integer>, addr) 131.31 328.62 T
(ess :: <raw-pointer>\051 => <raw-small-integer>) 287.85 328.62 T
(primitive-big-integer-at) 63.65 299.62 T
2 F
([Primiti) 483.81 299.62 T
(v) 517.77 299.62 T
(e]) 523.1 299.62 T
1 F
(Signatur) 81.65 274.62 T
(e) 119.14 274.62 T
0 F
(\050addr) 99.65 255.62 T
(ess :: <raw-pointer>\051 => <raw-big-integer>) 125.73 255.62 T
(primitive-big-integer-at-setter) 63.65 226.62 T
2 F
([Primiti) 483.81 226.62 T
(v) 517.77 226.62 T
(e]) 523.1 226.62 T
1 F
(Signatur) 81.65 201.62 T
(e) 119.14 201.62 T
0 F
(\050new-v) 99.65 182.62 T
(alue :: <raw-big-integer>, addr) 131.31 182.62 T
(ess :: <raw-pointer>\051 => <raw-big-integer>) 277.46 182.62 T
(primitive-machine-integer-at) 63.65 153.62 T
2 F
([Primiti) 483.81 153.62 T
(v) 517.77 153.62 T
(e]) 523.1 153.62 T
1 F
(Signatur) 81.65 128.62 T
(e) 119.14 128.62 T
0 F
(\050addr) 99.65 109.62 T
(ess :: <raw-pointer>\051 => <raw-machine-integer>) 125.73 109.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 47
%%Page: "42" 48
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(42) 63.65 84.9 T
0 11 Q
(primitive-machine-integer-at-setter) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050new-v) 99.65 693.62 T
(alue :: <raw-machine-integer>, addr) 131.31 693.62 T
(ess :: <raw-pointer>\051 => <raw-machine-integer>) 302.51 693.62 T
(primitive-unsigned-machine-integer-at) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050addr) 99.65 620.62 T
(ess :: <raw-pointer>\051 => <raw-unsigned-machine-integer>) 125.73 620.62 T
(primitive-unsigned-machine-integer-at-setter) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050new-v) 99.65 547.62 T
(alue :: <raw-unsigned-machine-integer>, addr) 131.31 547.62 T
(ess :: <raw-pointer>\051) 348.36 547.62 T
(=> <raw-unsigned-machine-integer>) 99.65 534.62 T
(primitive-single-float-at) 63.65 505.62 T
2 F
([Primiti) 483.81 505.62 T
(v) 517.77 505.62 T
(e]) 523.1 505.62 T
1 F
(Signatur) 81.65 480.62 T
(e) 119.14 480.62 T
0 F
(\050addr) 99.65 461.62 T
(ess :: <raw-pointer>\051 => <raw-single-\337oat>) 125.73 461.62 T
(primitive-single-float-at-setter) 63.65 432.62 T
2 F
([Primiti) 483.81 432.62 T
(v) 517.77 432.62 T
(e]) 523.1 432.62 T
1 F
(Signatur) 81.65 407.62 T
(e) 119.14 407.62 T
0 F
(\050new-v) 99.65 388.62 T
(alue :: <raw-single-\337oat>, addr) 131.31 388.62 T
(ess :: <raw-pointer>\051 => <raw-single-\337oat>) 277.47 388.62 T
(primitive-double-float-at) 63.65 359.62 T
2 F
([Primiti) 483.81 359.62 T
(v) 517.77 359.62 T
(e]) 523.1 359.62 T
1 F
(Signatur) 81.65 334.62 T
(e) 119.14 334.62 T
0 F
(\050addr) 99.65 315.62 T
(ess :: <raw-pointer>\051 => <raw-double-\337oat>) 125.73 315.62 T
(primitive-double-float-at-setter) 63.65 286.62 T
2 F
([Primiti) 483.81 286.62 T
(v) 517.77 286.62 T
(e]) 523.1 286.62 T
1 F
(Signatur) 81.65 261.62 T
(e) 119.14 261.62 T
0 F
(\050new-v) 99.65 242.62 T
(alue :: <raw-double-\337oat>, addr) 131.31 242.62 T
(ess :: <raw-pointer>\051 => <raw-double-\337oat>) 282.37 242.62 T
(primitive-extended-float-at) 63.65 213.62 T
2 F
([Primiti) 483.81 213.62 T
(v) 517.77 213.62 T
(e]) 523.1 213.62 T
1 F
(Signatur) 81.65 188.62 T
(e) 119.14 188.62 T
0 F
(\050addr) 99.65 169.62 T
(ess :: <raw-pointer>\051 => <raw-extended-\337oat>) 125.73 169.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 48
%%Page: "43" 49
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(43) 520.53 84.9 T
0 11 Q
(primitive-extended-float-at-setter) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050new-v) 99.65 693.62 T
(alue :: <raw-extended-\337oat>, addr) 131.31 693.62 T
(ess :: <raw-pointer>\051 => <raw-extended-\337oat>) 292.74 693.62 T
(primitive-signed-8-bit-integer-at) 63.65 664.62 T
2 F
([Primiti) 483.81 664.62 T
(v) 517.77 664.62 T
(e]) 523.1 664.62 T
1 F
(Signatur) 81.65 639.62 T
(e) 119.14 639.62 T
0 F
(\050addr) 99.65 620.62 T
(ess :: <raw-pointer>\051 => <raw-signed-8-bit-integer>) 125.73 620.62 T
(primitive-signed-8-bit-integer-at-setter) 63.65 591.62 T
2 F
([Primiti) 483.81 591.62 T
(v) 517.77 591.62 T
(e]) 523.1 591.62 T
1 F
(Signatur) 81.65 566.62 T
(e) 119.14 566.62 T
0 F
(\050new-v) 99.65 547.62 T
(alue :: <raw-signed-8-bit-integer>, addr) 131.31 547.62 T
(ess :: <raw-pointer>\051) 318.4 547.62 T
(=> <raw-signed-8-bit-integer>) 99.65 534.62 T
(primitive-unsigned-8-bit-integer-at) 63.65 505.62 T
2 F
([Primiti) 483.81 505.62 T
(v) 517.77 505.62 T
(e]) 523.1 505.62 T
1 F
(Signatur) 81.65 480.62 T
(e) 119.14 480.62 T
0 F
(\050addr) 99.65 461.62 T
(ess :: <raw-pointer>\051 => <raw-unsigned-8-bit-integer>) 125.73 461.62 T
(primitive-unsigned-8-bit-integer-at-setter) 63.65 432.62 T
2 F
([Primiti) 483.81 432.62 T
(v) 517.77 432.62 T
(e]) 523.1 432.62 T
1 F
(Signatur) 81.65 407.62 T
(e) 119.14 407.62 T
0 F
(\050new-v) 99.65 388.62 T
(alue :: <raw-unsigned-8-bit-integer>, addr) 131.31 388.62 T
(ess :: <raw-pointer>\051) 330.64 388.62 T
(=> <raw-unsigned-8-bit-integer>) 99.65 375.62 T
(primitive-signed-16-bit-integer-at) 63.65 346.62 T
2 F
([Primiti) 483.81 346.62 T
(v) 517.77 346.62 T
(e]) 523.1 346.62 T
1 F
(Signatur) 81.65 321.62 T
(e) 119.14 321.62 T
0 F
(\050addr) 99.65 302.62 T
(ess :: <raw-pointer>\051 => <raw-signed-16-bit-integer>) 125.73 302.62 T
(primitive-signed-16-bit-integer-at-setter) 63.65 273.62 T
2 F
([Primiti) 483.81 273.62 T
(v) 517.77 273.62 T
(e]) 523.1 273.62 T
1 F
(Signatur) 81.65 248.62 T
(e) 119.14 248.62 T
0 F
(\050new-v) 99.65 229.62 T
(alue :: <raw-signed-16-bit-integer>, addr) 131.31 229.62 T
(ess :: <raw-pointer>\051) 323.9 229.62 T
(=> <raw-signed-16-bit-integer>) 99.65 216.62 T
(primitive-unsigned-16-bit-integer-at) 63.65 187.62 T
2 F
([Primiti) 483.81 187.62 T
(v) 517.77 187.62 T
(e]) 523.1 187.62 T
1 F
(Signatur) 81.65 162.62 T
(e) 119.14 162.62 T
0 F
(\050addr) 99.65 143.62 T
(ess :: <raw-pointer>\051 => <raw-unsigned-16-bit-integer>) 125.73 143.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 49
%%Page: "44" 50
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(44) 63.65 84.9 T
0 11 Q
(primitive-unsigned-16-bit-integer-at-setter) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050new-v) 99.65 693.62 T
(alue :: <raw-unsigned-16-bit-integer>, addr) 131.31 693.62 T
(ess :: <raw-pointer>\051) 336.14 693.62 T
(=> <raw-unsigned-16-bit-integer>) 99.65 680.62 T
(primitive-signed-32-bit-integer-at) 63.65 651.62 T
2 F
([Primiti) 483.81 651.62 T
(v) 517.77 651.62 T
(e]) 523.1 651.62 T
1 F
(Signatur) 81.65 626.62 T
(e) 119.14 626.62 T
0 F
(\050addr) 99.65 607.62 T
(ess :: <raw-pointer>\051 => <raw-signed-32-bit-integer>) 125.73 607.62 T
(primitive-signed-32-bit-integer-at-setter) 63.65 578.62 T
2 F
([Primiti) 483.81 578.62 T
(v) 517.77 578.62 T
(e]) 523.1 578.62 T
1 F
(Signatur) 81.65 553.62 T
(e) 119.14 553.62 T
0 F
(\050new-v) 99.65 534.62 T
(alue :: <raw-signed-32-bit-integer>, addr) 131.31 534.62 T
(ess :: <raw-pointer>\051) 323.9 534.62 T
(=> <raw-signed-32-bit-integer>) 99.65 521.62 T
(primitive-unsigned-32-bit-integer-at) 63.65 492.62 T
2 F
([Primiti) 483.81 492.62 T
(v) 517.77 492.62 T
(e]) 523.1 492.62 T
1 F
(Signatur) 81.65 467.62 T
(e) 119.14 467.62 T
0 F
(\050addr) 99.65 448.62 T
(ess :: <raw-pointer>\051 => <raw-unsigned-32-bit-integer>) 125.73 448.62 T
(primitive-unsigned-32-bit-integer-at-setter) 63.65 419.62 T
2 F
([Primiti) 483.81 419.62 T
(v) 517.77 419.62 T
(e]) 523.1 419.62 T
1 F
(Signatur) 81.65 394.62 T
(e) 119.14 394.62 T
0 F
(\050new-v) 99.65 375.62 T
(alue :: <raw-unsigned-32-bit-integer>, addr) 131.31 375.62 T
(ess :: <raw-pointer>\051) 336.14 375.62 T
(=> <raw-unsigned-32-bit-integer>) 99.65 362.62 T
(primitive-signed-64-bit-integer-at) 63.65 333.62 T
2 F
([Primiti) 483.81 333.62 T
(v) 517.77 333.62 T
(e]) 523.1 333.62 T
1 F
(Signatur) 81.65 308.62 T
(e) 119.14 308.62 T
0 F
(\050addr) 99.65 289.62 T
(ess :: <raw-pointer>\051 => <raw-signed-64-bit-integer>) 125.73 289.62 T
(primitive-signed-64-bit-integer-at-setter) 63.65 260.62 T
2 F
([Primiti) 483.81 260.62 T
(v) 517.77 260.62 T
(e]) 523.1 260.62 T
1 F
(Signatur) 81.65 235.62 T
(e) 119.14 235.62 T
0 F
(\050new-v) 99.65 216.62 T
(alue :: <raw-signed-64-bit-integer>, addr) 131.31 216.62 T
(ess :: <raw-pointer>\051) 323.9 216.62 T
(=> <raw-signed-64-bit-integer>) 99.65 203.62 T
(primitive-unsigned-64-bit-integer-at) 63.65 174.62 T
2 F
([Primiti) 483.81 174.62 T
(v) 517.77 174.62 T
(e]) 523.1 174.62 T
1 F
(Signatur) 81.65 149.62 T
(e) 119.14 149.62 T
0 F
(\050addr) 99.65 130.62 T
(ess :: <raw-pointer>\051 => <raw-unsigned-64-bit-integer>) 125.73 130.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 50
%%Page: "45" 51
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(45) 520.53 84.9 T
0 11 Q
(primitive-unsigned-64-bit-integer-at-setter) 63.65 737.62 T
2 F
([Primiti) 483.81 737.62 T
(v) 517.77 737.62 T
(e]) 523.1 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
0 F
(\050new-v) 99.65 693.62 T
(alue :: <raw-unsigned-64-bit-integer>, addr) 131.31 693.62 T
(ess :: <raw-pointer>\051) 336.14 693.62 T
(=> <raw-unsigned-64-bit-integer>) 99.65 680.62 T
(primitive-ieee-single-float-at) 63.65 651.62 T
2 F
([Primiti) 483.81 651.62 T
(v) 517.77 651.62 T
(e]) 523.1 651.62 T
1 F
(Signatur) 81.65 626.62 T
(e) 119.14 626.62 T
0 F
(\050addr) 99.65 607.62 T
(ess :: <raw-pointer>\051 => <raw-ieee-single-\337oat>) 125.73 607.62 T
(primitive-ieee-single-float-at-setter) 63.65 578.62 T
2 F
([Primiti) 483.81 578.62 T
(v) 517.77 578.62 T
(e]) 523.1 578.62 T
1 F
(Signatur) 81.65 553.62 T
(e) 119.14 553.62 T
0 F
(\050new-v) 99.65 534.62 T
(alue :: <raw-ieee-single-\337oat>, addr) 131.31 534.62 T
(ess :: <raw-pointer>\051 => <raw-ieee-single-\337oat>) 298.85 534.62 T
(primitive-ieee-double-float-at) 63.65 505.62 T
2 F
([Primiti) 483.81 505.62 T
(v) 517.77 505.62 T
(e]) 523.1 505.62 T
1 F
(Signatur) 81.65 480.62 T
(e) 119.14 480.62 T
0 F
(\050addr) 99.65 461.62 T
(ess :: <raw-pointer>\051 => <raw-ieee-double-\337oat>) 125.73 461.62 T
(primitive-ieee-double-float-at-setter) 63.65 432.62 T
2 F
([Primiti) 483.81 432.62 T
(v) 517.77 432.62 T
(e]) 523.1 432.62 T
1 F
(Signatur) 81.65 407.62 T
(e) 119.14 407.62 T
0 F
(\050new-v) 99.65 388.62 T
(alue :: <raw-ieee-double-\337oat>, addr) 131.31 388.62 T
(ess :: <raw-pointer>\051) 303.74 388.62 T
(=> <raw-ieee-double-\337oat>) 99.65 375.62 T
(primitive-ieee-extended-float-at) 63.65 346.62 T
2 F
([Primiti) 483.81 346.62 T
(v) 517.77 346.62 T
(e]) 523.1 346.62 T
1 F
(Signatur) 81.65 321.62 T
(e) 119.14 321.62 T
0 F
(\050addr) 99.65 302.62 T
(ess :: <raw-pointer>\051 => <raw-ieee-extended-\337oat>) 125.73 302.62 T
(primitive-ieee-extended-float-at-setter) 63.65 273.62 T
2 F
([Primiti) 483.81 273.62 T
(v) 517.77 273.62 T
(e]) 523.1 273.62 T
1 F
(Signatur) 81.65 248.62 T
(e) 119.14 248.62 T
0 F
(\050new-v) 99.65 229.62 T
(alue :: <raw-ieee-extended-\337oat>, addr) 131.31 229.62 T
(ess :: <raw-pointer>\051) 314.11 229.62 T
(=> <raw-ieee-extended-\337oat>) 99.65 216.62 T
3 10 Q
(5.3.7) 63.65 182.29 T
(Other T) 90.89 182.29 T
(okens Pr) 125.65 182.29 T
(oduced When Emitting Nodes) 167.69 182.29 T
2 11 Q
0.28 0.03 (There are tw) 63.65 161.62 B
0.28 0.03 (o structure def) 120.07 161.62 B
0.28 0.03 (initions used to hold data on bind-e) 184.06 161.62 B
0.28 0.03 (xit frames and unwind-protect frames, and) 341.97 161.62 B
0.28 0.09 (the emit code for the) 63.65 148.62 B
0 F
0.28 0.09 (<entry>) 160.91 148.62 B
2 F
0.28 0.09 ( node type mak) 199.16 148.62 B
0.28 0.09 (es uses of a couple of tok) 268.73 148.62 B
0.28 0.09 (ens to parameterise access to the) 383.95 148.62 B
(slots of these structures.) 63.65 135.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 51
%%Page: "46" 52
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(46) 63.65 84.9 T
5 F
(SLOT_READ) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(r) 161.94 693.62 T
(esult) 165.81 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(SHAPE) 207.65 693.62 T
1 11 Q
(al_struct) 147.47 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(AL_T) 207.65 680.62 T
(A) 230.35 680.62 T
(G) 236.72 680.62 T
1 11 Q
(struct_base) 135.87 667.62 T
2 F
(:) 186.59 667.62 T
5 10 Q
(EXP pz) 207.65 667.62 T
1 11 Q
-2.75 (\336eld) 167.65 654.62 P
2 F
-2.75 (:) 186.59 654.62 P
5 10 Q
(EXP OFFSET\050f\051) 207.65 654.62 T
6 11 Q
(\256) 189.59 639.29 T
5 10 Q
(EXP) 207.65 639.29 T
1 11 Q
(r) 230.44 639.29 T
(esult) 234.31 639.29 T
(Description) 81.65 614.62 T
2 F
(Reads a slot from a structure.) 99.65 592.62 T
5 10 Q
(SLOT_WRITE) 63.65 565.29 T
2 11 Q
([T) 497.21 564.62 T
(ok) 506.71 564.62 T
(en]) 517.6 564.62 T
1 F
(Signatur) 81.65 539.62 T
(e) 119.14 539.62 T
(al_struct) 147.47 520.62 T
2 F
(:) 186.59 520.62 T
5 10 Q
(AL_T) 207.65 520.62 T
(A) 230.35 520.62 T
(G) 236.72 520.62 T
1 11 Q
(struct_base) 135.87 507.62 T
2 F
(:) 186.59 507.62 T
5 10 Q
(EXP pz) 207.65 507.62 T
1 11 Q
-2.75 (\336eld) 167.65 494.62 P
2 F
-2.75 (:) 186.59 494.62 P
5 10 Q
(EXP OFFSET\050f\051) 207.65 494.62 T
6 11 Q
(\256) 189.59 479.29 T
5 10 Q
(EXP POINTER\050ALIGNMENT\051) 207.65 479.29 T
1 11 Q
(Description) 81.65 454.62 T
2 F
0.28 0.14 (Deli) 99.65 432.62 B
0.28 0.14 (v) 118.89 432.62 B
0.28 0.14 (ers a slot of a structure in a form that can be assigned to. That is,) 124.36 432.62 B
5 10 Q
0.28 0.14 (SLO) 425.31 432.62 B
0.28 0.14 (T_WRITE) 445.35 432.62 B
2 11 Q
0.28 0.14 ( does not) 490.23 432.62 B
(assign to the structure, b) 99.65 419.62 T
(ut returns a form suitable for use as the \336rst ar) 206.67 419.62 T
(gument to \050) 409.32 419.62 T
0 F
(assign) 460.04 419.62 T
2 F
(...\051.) 488.77 419.62 T
(The) 63.65 394.62 T
0 F
(<if>) 83.5 394.62 T
2 F
(node potentially uses one of the follo) 105.51 394.62 T
(wing tok) 268.39 394.62 T
(ens:) 307.09 394.62 T
5 10 Q
(GOTO_IF_TRUE) 63.65 367.29 T
2 11 Q
([T) 497.21 366.62 T
(ok) 506.71 366.62 T
(en]) 517.6 366.62 T
1 F
(Signatur) 81.65 341.62 T
(e) 119.14 341.62 T
(test) 171.31 322.62 T
2 F
(:) 186.59 322.62 T
5 10 Q
(EXP pz) 207.65 322.62 T
1 11 Q
(truelab) 154.81 309.62 T
2 F
(:) 186.59 309.62 T
5 10 Q
(LABEL) 207.65 309.62 T
6 11 Q
(\256) 189.59 294.29 T
5 10 Q
(EXP T) 207.65 294.29 T
(OP) 236.15 294.29 T
1 11 Q
(Description) 81.65 269.62 T
2 F
(If) 99.65 247.62 T
1 F
(test) 109.72 247.62 T
2 F
( !=) 125 247.62 T
0 F
(#f) 140.37 247.62 T
2 F
( then goto) 149.53 247.62 T
1 F
(truelab) 196.28 247.62 T
2 F
(.) 227.62 247.62 T
5 10 Q
(GOTO_IF_FALSE) 63.65 220.29 T
2 11 Q
([T) 497.21 219.62 T
(ok) 506.71 219.62 T
(en]) 517.6 219.62 T
1 F
(Signatur) 81.65 194.62 T
(e) 119.14 194.62 T
(test) 171.31 175.62 T
2 F
(:) 186.59 175.62 T
5 10 Q
(EXP pz) 207.65 175.62 T
1 11 Q
(falselab) 151.75 162.62 T
2 F
(:) 186.59 162.62 T
5 10 Q
(LABEL) 207.65 162.62 T
6 11 Q
(\256) 189.59 147.29 T
5 10 Q
(EXP T) 207.65 147.29 T
(OP) 236.15 147.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 52
%%Page: "47" 53
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(47) 520.53 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
(If) 99.65 715.62 T
1 F
(test) 109.72 715.62 T
2 F
( ==) 125 715.62 T
0 F
(#f) 142.91 715.62 T
2 F
( then goto) 152.07 715.62 T
1 F
(falselab) 198.82 715.62 T
2 F
(.) 233.22 715.62 T
5 10 Q
(GOTO_IF_TRUE_FALSE) 63.65 688.29 T
2 11 Q
([T) 497.21 687.62 T
(ok) 506.71 687.62 T
(en]) 517.6 687.62 T
1 F
(Signatur) 81.65 662.62 T
(e) 119.14 662.62 T
(test) 171.31 643.62 T
2 F
(:) 186.59 643.62 T
5 10 Q
(EXP pz) 207.65 643.62 T
1 11 Q
(truelab) 154.81 630.62 T
2 F
(:) 186.59 630.62 T
5 10 Q
(LABEL) 207.65 630.62 T
1 11 Q
(falselab) 151.75 617.62 T
2 F
(:) 186.59 617.62 T
5 10 Q
(LABEL) 207.65 617.62 T
6 11 Q
(\256) 189.59 602.29 T
5 10 Q
(EXP BO) 207.65 602.29 T
(TT) 244.49 602.29 T
(OM) 256.31 602.29 T
1 11 Q
(Description) 81.65 577.62 T
2 F
(If) 99.65 555.62 T
1 F
(test) 109.72 555.62 T
2 F
( !=) 125 555.62 T
0 F
(#f) 140.37 555.62 T
2 F
( then goto) 149.53 555.62 T
1 F
(truelab) 196.28 555.62 T
2 F
( else goto) 228.06 555.62 T
1 F
(falselab) 272.98 555.62 T
2 F
(.) 307.37 555.62 T
5 10 Q
(PRIM_GOTO_IF_TRUE) 63.65 528.29 T
2 11 Q
([T) 497.21 527.62 T
(ok) 506.71 527.62 T
(en]) 517.6 527.62 T
1 F
(Signatur) 81.65 502.62 T
(e) 119.14 502.62 T
(test) 171.31 483.62 T
2 F
(:) 186.59 483.62 T
5 10 Q
(EXP pz) 207.65 483.62 T
1 11 Q
(truelab) 154.81 470.62 T
2 F
(:) 186.59 470.62 T
5 10 Q
(LABEL) 207.65 470.62 T
6 11 Q
(\256) 189.59 455.29 T
5 10 Q
(EXP T) 207.65 455.29 T
(OP) 236.15 455.29 T
1 11 Q
(Description) 81.65 430.62 T
2 F
(If) 99.65 408.62 T
1 F
(test) 109.72 408.62 T
2 F
( != 0 then goto) 125 408.62 T
1 F
(truelab) 192.62 408.62 T
2 F
(.) 223.96 408.62 T
5 10 Q
(PRIM_GOTO_IF_FALSE) 63.65 381.29 T
2 11 Q
([T) 497.21 380.62 T
(ok) 506.71 380.62 T
(en]) 517.6 380.62 T
1 F
(Signatur) 81.65 355.62 T
(e) 119.14 355.62 T
(test) 171.31 336.62 T
2 F
(:) 186.59 336.62 T
5 10 Q
(EXP pz) 207.65 336.62 T
1 11 Q
(falselab) 151.75 323.62 T
2 F
(:) 186.59 323.62 T
5 10 Q
(LABEL) 207.65 323.62 T
6 11 Q
(\256) 189.59 308.29 T
5 10 Q
(EXP T) 207.65 308.29 T
(OP) 236.15 308.29 T
1 11 Q
(Description) 81.65 283.62 T
2 F
(If) 99.65 261.62 T
1 F
(test) 109.72 261.62 T
2 F
( == 0 then goto) 125 261.62 T
1 F
(falselab) 195.16 261.62 T
2 F
(.) 229.56 261.62 T
5 10 Q
(PRIM_GOTO_IF_TRUE_FALSE) 63.65 234.29 T
2 11 Q
([T) 497.21 233.62 T
(ok) 506.71 233.62 T
(en]) 517.6 233.62 T
1 F
(Signatur) 81.65 208.62 T
(e) 119.14 208.62 T
(test) 171.31 189.62 T
2 F
(:) 186.59 189.62 T
5 10 Q
(EXP pz) 207.65 189.62 T
1 11 Q
(truelab) 154.81 176.62 T
2 F
(:) 186.59 176.62 T
5 10 Q
(LABEL) 207.65 176.62 T
1 11 Q
(falselab) 151.75 163.62 T
2 F
(:) 186.59 163.62 T
5 10 Q
(LABEL) 207.65 163.62 T
6 11 Q
(\256) 189.59 148.29 T
5 10 Q
(EXP BO) 207.65 148.29 T
(TT) 244.49 148.29 T
(OM) 256.31 148.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 53
%%Page: "48" 54
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(48) 63.65 84.9 T
1 11 Q
(Description) 81.65 737.62 T
2 F
(If) 99.65 715.62 T
1 F
(test) 109.72 715.62 T
2 F
( != 0 then goto) 125 715.62 T
1 F
(truelab) 192.62 715.62 T
2 F
( else goto) 224.4 715.62 T
1 F
(falselab) 269.31 715.62 T
2 F
(.) 303.71 715.62 T
3 10 Q
(5.3.8) 63.65 681.29 T
(Literal Dumping) 90.89 681.29 T
2 11 Q
(Dylan inte) 63.65 660.62 T
(gers are dumped using the follo) 109.62 660.62 T
(wing tok) 248.35 660.62 T
(en:) 287.05 660.62 T
5 10 Q
(INTEGER) 63.65 633.29 T
2 11 Q
([T) 497.21 632.62 T
(ok) 506.71 632.62 T
(en]) 517.6 632.62 T
1 F
(Signatur) 81.65 607.62 T
(e) 119.14 607.62 T
(value) 162.76 588.62 T
2 F
(:) 186.59 588.62 T
5 10 Q
(SIGNED_NA) 207.65 588.62 T
(T) 264.24 588.62 T
6 11 Q
(\256) 189.59 573.29 T
5 10 Q
(EXP pv) 207.65 573.29 T
1 11 Q
(Description) 81.65 548.62 T
2 F
(T) 99.65 526.62 T
(ak) 105.49 526.62 T
(es a natural number and puts it in the tagged Dylan representation.) 115.76 526.62 T
(Characters use an equi) 63.65 501.62 T
(v) 162.65 501.62 T
(alent tok) 167.87 501.62 T
(en:) 205.96 501.62 T
5 10 Q
(CHAR) 63.65 474.29 T
2 11 Q
([T) 497.21 473.62 T
(ok) 506.71 473.62 T
(en]) 517.6 473.62 T
1 F
(Signatur) 81.65 448.62 T
(e) 119.14 448.62 T
(value) 162.76 429.62 T
2 F
(:) 186.59 429.62 T
5 10 Q
(SIGNED_NA) 207.65 429.62 T
(T) 264.24 429.62 T
6 11 Q
(\256) 189.59 414.29 T
5 10 Q
(EXP pv) 207.65 414.29 T
1 11 Q
(Description) 81.65 389.62 T
2 F
(T) 99.65 367.62 T
(ak) 105.49 367.62 T
(e an ASCII v) 115.76 367.62 T
(alue for a character and con) 173.23 367.62 T
(v) 294.64 367.62 T
(ert to the tagged representation.) 299.98 367.62 T
-0.16 (Strings also mak) 63.65 342.62 P
-0.16 (e use of a special set of tok) 136.56 342.62 P
-0.16 (ens to inline the string data. The) 254.19 342.62 P
-0.16 (y are named) 394.55 342.62 P
5 10 Q
-0.16 (STRING_) 450.59 342.62 P
1 11 Q
-0.16 (n) 493.93 342.62 P
2 F
-0.16 (, where) 499.43 342.62 P
1 F
0.17 (n) 63.65 329.62 P
2 F
0.17 ( is an inte) 69.15 329.62 P
0.17 (ger from 0 through 4.) 111.95 329.62 P
5 10 Q
0.17 (STRING_) 209.93 329.62 P
1 11 Q
0.17 (n) 253.27 329.62 P
2 F
0.17 ( tak) 258.77 329.62 P
0.17 (es) 275.02 329.62 P
1 F
0.17 (n) 287.09 329.62 P
2 F
0.17 ( ASCII v) 292.59 329.62 P
0.17 (alues and packages them up into the space of) 332.37 329.62 P
0.28 0.54 (a single inte) 63.65 316.62 B
0.28 0.54 (ger to form a contiguous string representation that can be used inline, since TDF's) 124.15 316.62 B
0 F
(mak) 63.65 303.62 T
(e_string) 84.32 303.62 T
2 F
( produces an out-of-line string.) 122.2 303.62 T
5 10 Q
(STRING_0) 63.65 276.29 T
2 11 Q
([T) 497.21 275.62 T
(ok) 506.71 275.62 T
(en]) 517.6 275.62 T
1 F
(Signatur) 81.65 250.62 T
(e) 119.14 250.62 T
6 F
(\256) 189.59 232.29 T
5 10 Q
(EXP pv) 207.65 232.29 T
(STRING_1) 63.65 205.29 T
2 11 Q
([T) 497.21 204.62 T
(ok) 506.71 204.62 T
(en]) 517.6 204.62 T
1 F
(Signatur) 81.65 179.62 T
(e) 119.14 179.62 T
(one) 170.71 160.62 T
2 F
(:) 186.59 160.62 T
5 10 Q
(SIGNED_NA) 207.65 160.62 T
(T) 264.24 160.62 T
6 11 Q
(\256) 189.59 145.29 T
5 10 Q
(EXP pv) 207.65 145.29 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 54
%%Page: "49" 55
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(49) 520.53 84.9 T
5 F
(STRING_2) 63.65 738.29 T
2 11 Q
([T) 497.21 737.62 T
(ok) 506.71 737.62 T
(en]) 517.6 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e) 119.14 712.62 T
(one) 170.71 693.62 T
2 F
(:) 186.59 693.62 T
5 10 Q
(SIGNED_NA) 207.65 693.62 T
(T) 264.24 693.62 T
1 11 Q
(two) 170.7 680.62 T
2 F
(:) 186.59 680.62 T
5 10 Q
(SIGNED_NA) 207.65 680.62 T
(T) 264.24 680.62 T
6 11 Q
(\256) 189.59 665.29 T
5 10 Q
(EXP pv) 207.65 665.29 T
(STRING_3) 63.65 638.29 T
2 11 Q
([T) 497.21 637.62 T
(ok) 506.71 637.62 T
(en]) 517.6 637.62 T
1 F
(Signatur) 81.65 612.62 T
(e) 119.14 612.62 T
(one) 170.71 593.62 T
2 F
(:) 186.59 593.62 T
5 10 Q
(SIGNED_NA) 207.65 593.62 T
(T) 264.24 593.62 T
1 11 Q
(two) 170.7 580.62 T
2 F
(:) 186.59 580.62 T
5 10 Q
(SIGNED_NA) 207.65 580.62 T
(T) 264.24 580.62 T
1 11 Q
(thr) 164.39 567.62 T
(ee) 176.82 567.62 T
2 F
(:) 186.59 567.62 T
5 10 Q
(SIGNED_NA) 207.65 567.62 T
(T) 264.24 567.62 T
6 11 Q
(\256) 189.59 552.29 T
5 10 Q
(EXP pv) 207.65 552.29 T
(STRING_4) 63.65 525.29 T
2 11 Q
([T) 497.21 524.62 T
(ok) 506.71 524.62 T
(en]) 517.6 524.62 T
1 F
(Signatur) 81.65 499.62 T
(e) 119.14 499.62 T
(one) 170.71 480.62 T
2 F
(:) 186.59 480.62 T
5 10 Q
(SIGNED_NA) 207.65 480.62 T
(T) 264.24 480.62 T
1 11 Q
(two) 170.7 467.62 T
2 F
(:) 186.59 467.62 T
5 10 Q
(SIGNED_NA) 207.65 467.62 T
(T) 264.24 467.62 T
1 11 Q
(thr) 164.39 454.62 T
(ee) 176.82 454.62 T
2 F
(:) 186.59 454.62 T
5 10 Q
(SIGNED_NA) 207.65 454.62 T
(T) 264.24 454.62 T
1 11 Q
(four) 168.25 441.62 T
2 F
(:) 186.59 441.62 T
5 10 Q
(SIGNED_NA) 207.65 441.62 T
(T) 264.24 441.62 T
6 11 Q
(\256) 189.59 426.29 T
5 10 Q
(EXP pv) 207.65 426.29 T
3 15 Q
(6.) 63.65 384.95 T
(The Dylan Runtime) 90.65 384.95 T
3 12 Q
(6.1) 63.65 345.95 T
(ANDF T) 90.65 345.95 T
(oken Expansions) 133.68 345.95 T
2 11 Q
0.27 (The output of the Dylan producer is read by the installer for a speci\336c platform which has access to a full) 63.65 324.62 P
0.28 0.22 (set of tok) 63.65 311.62 B
0.28 0.22 (en def) 107.22 311.62 B
0.28 0.22 (initions. Where) 135.39 311.62 B
0.28 0.22 (v) 206.5 311.62 B
0.28 0.22 (er a reference to a tok) 212.05 311.62 B
0.28 0.22 (en appears in the producer's output, the tok) 313.95 311.62 B
0.28 0.22 (en's) 514.35 311.62 B
0.04 (e) 63.65 298.62 P
0.04 (xpansion is inserted by the installer) 68.37 298.62 P
0.04 (, and runnable code is output. This allo) 223.63 298.62 P
0.04 (ws the correct tok) 395.02 298.62 P
0.04 (en library for) 473.54 298.62 P
(a speci\336ed platform to be used.) 63.65 285.62 T
3 10 Q
(6.1.1) 63.65 251.29 T
(Example Expansion 1: INTEGER) 90.89 251.29 T
2 11 Q
-0.09 (In addition to outputting inte) 63.65 230.62 P
-0.09 (gers in a 'ra) 189.65 230.62 P
-0.09 (w' format, the compiler also outputs them in the tagged Dylan rep-) 239.77 230.62 P
0.28 0.6 (resentation. ANDF achie) 63.65 217.62 B
0.28 0.6 (v) 187.46 217.62 B
0.28 0.6 (es this using the tok) 193.4 217.62 B
0.28 0.6 (en) 294.45 217.62 B
5 10 Q
0.28 0.6 (INTEGER) 309.67 217.62 B
2 11 Q
0.28 0.6 (. This utilises another tok) 358.34 217.62 B
0.28 0.6 (en called) 487.14 217.62 B
5 10 Q
0.28 0.2 (T) 63.65 204.62 B
0.28 0.2 (A) 68.76 204.62 B
0.28 0.2 (G_INTEGER) 75.34 204.62 B
2 11 Q
0.28 0.2 (, which performs the actual tagging. This in) 134.96 204.62 B
0.28 0.2 (v) 337.59 204.62 B
0.28 0.2 (olv) 343.08 204.62 B
0.28 0.2 (es shifting the number left tw) 357.58 204.62 B
0.28 0.2 (o places) 494.2 204.62 B
0.28 0.01 (\050using) 63.65 191.62 B
0 F
0.28 0.01 (shift_left) 94.22 191.62 B
2 F
0.28 0.01 (\051, with 0 1 being inserted as the tag on the tw) 135.84 191.62 B
0.28 0.01 (o least signif) 337.06 191.62 B
0.28 0.01 (icant bits \050using) 393.32 191.62 B
0 F
0.28 0.01 (or) 467.3 191.62 B
2 F
0.28 0.01 (\051.) 477.7 191.62 B
5 10 Q
0.28 0.01 (INTEGER) 487.15 191.62 B
2 11 Q
0.1 (then tak) 63.65 178.62 P
0.1 (es the result of) 98.77 178.62 P
5 10 Q
0.1 (T) 166.36 178.62 P
0.1 (A) 171.27 178.62 P
0.1 (G_INTEGER) 177.64 178.62 P
2 11 Q
0.1 ( and coerces it back to the generic shape) 235.43 178.62 P
5 10 Q
0.1 (pz) 416.2 178.62 P
2 11 Q
0.1 ( that is used e) 426.77 178.62 P
0.1 (xtensi) 486.87 178.62 P
0.1 (v) 512.87 178.62 P
0.1 (ely) 518.21 178.62 P
(throughout the compiler) 63.65 165.62 T
(.) 169.37 165.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "49" 55
%%Page: "50" 56
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(50) 63.65 84.9 T
(6.1.2) 63.65 738.29 T
(Example Expansion 2: CHARA) 90.89 738.29 T
(CTER) 235.52 738.29 T
2 11 Q
0.2 (Dylan characters also ha) 63.65 717.62 P
0.2 (v) 171.85 717.62 P
0.2 (e a tagged representation, with 1 0 as the least signi\336cant bits. The 'ra) 177.18 717.62 P
0.2 (w' v) 484.94 717.62 P
0.2 (alue is) 503.04 717.62 P
-0.2 (ag) 63.65 704.62 P
-0.2 (ain shifted left tw) 73.98 704.62 P
-0.2 (o places, with 1 0 being inserted as the tag on the tw) 150.55 704.62 P
-0.2 (o least signi\336cant bits. The shifting) 378.05 704.62 P
(and tagging is done for ANDF by the) 63.65 691.62 T
5 10 Q
(CHAR) 230.46 691.62 T
2 11 Q
( tok) 258.79 691.62 T
(en.) 275.49 691.62 T
3 10 Q
(6.1.3) 63.65 657.29 T
(Example Expansion 3: GO) 90.89 657.29 T
(T) 214.98 657.29 T
(O_IF_TR) 220.69 657.29 T
(UE) 261.61 657.29 T
2 11 Q
-0.07 (This tok) 63.65 636.62 P
-0.07 (en is one of the constituents of conditional e) 99.84 636.62 P
-0.07 (x) 293.46 636.62 P
-0.07 (ecution. The tok) 298.79 636.62 P
-0.07 (en tak) 370.35 636.62 P
-0.07 (es the v) 396.75 636.62 P
-0.07 (alues to test, and a des-) 429.94 636.62 P
(tination to jump to if the test yields true.) 63.65 623.62 T
-0.16 (The de\336nition uses the ANDF) 63.65 598.62 P
0 F
-0.16 (pointer_test) 198.2 598.62 P
2 F
-0.16 ( which tak) 254.41 598.62 P
-0.16 (es tw) 299.81 598.62 P
-0.16 (o e) 322.45 598.62 P
-0.16 (xpressions to compare using a test. If the test) 335.26 598.62 P
0.28 0 (succeeds it yields \324top\325 and carries on. If the test f) 63.65 585.62 B
0.28 0 (ails, it jumps to a 'label', \050the tar) 285.35 585.62 B
0.28 0 (get of a GO) 427.64 585.62 B
0.28 0 (T) 479.65 585.62 B
0.28 0 (O\051. In this) 486.18 585.62 B
-0.1 (tok) 63.65 572.62 P
-0.1 (en, the test to be used is hard-coded as the 'equal' test, and the Dylan v) 77.6 572.62 P
-0.1 (alue that we are checking is com-) 385 572.62 P
(pared with the Dylan 'f) 63.65 559.62 T
(alse' v) 164.5 559.62 T
(alue.) 191.56 559.62 T
-0.03 (Thus if 'v) 63.65 534.62 P
-0.03 (alue equal f) 105.01 534.62 P
-0.03 (alse') 156.15 534.62 P
5 10 Q
-0.03 (GO) 177.95 534.62 P
-0.03 (T) 193.11 534.62 P
-0.03 (O_IF_TR) 198.82 534.62 P
-0.03 (UE) 239.54 534.62 P
2 11 Q
-0.03 ( does not w) 253.43 534.62 P
-0.03 (ant to GO) 303.64 534.62 P
-0.03 (T) 346.52 534.62 P
-0.03 (O an) 353.04 534.62 P
-0.03 (ywhere, and so yields \324top\325 and car-) 373.92 534.62 P
0.28 0.1 (ries on. If the test f) 63.65 521.62 B
0.28 0.1 (ails, i.e., is not Dylan f) 150.26 521.62 B
0.28 0.1 (alse and so is a 'true' v) 254.1 521.62 B
0.28 0.1 (alue \050in Dylan, an) 356.1 521.62 B
0.28 0.1 (ything other than the) 437.42 521.62 B
(canonical f) 63.65 508.62 T
(alse v) 112.1 508.62 T
(alue is considered to be true\051,) 137.18 508.62 T
5 10 Q
(GO) 269.46 508.62 T
(T) 284.62 508.62 T
(O_IF_TR) 290.33 508.62 T
(UE) 331.05 508.62 T
2 11 Q
( will jump to the tar) 344.94 508.62 T
(get label speci\336ed.) 431.83 508.62 T
3 10 Q
(6.1.4) 63.65 474.29 T
(Example Expansion 4: GO) 90.89 474.29 T
(T) 214.98 474.29 T
(O_IF_F) 220.69 474.29 T
(ALSE) 253.79 474.29 T
2 11 Q
0.28 0.25 (This tok) 63.65 453.62 B
0.28 0.25 (en is written in e) 102.2 453.62 B
0.28 0.25 (xactly the same w) 181.01 453.62 B
0.28 0.25 (ay as) 265.14 453.62 B
5 10 Q
0.28 0.25 (GO) 292.25 453.62 B
0.28 0.25 (T) 307.92 453.62 B
0.28 0.25 (O_IF_TR) 313.88 453.62 B
0.28 0.25 (UE) 356.37 453.62 B
2 11 Q
0.28 0.25 (, e) 370.76 453.62 B
0.28 0.25 (xcept that it uses the 'not_equal') 382.02 453.62 B
(instead of the 'equal' test.) 63.65 440.62 T
3 10 Q
(6.1.5) 63.65 406.29 T
(Example Expansion 5: SLO) 90.89 406.29 T
(T_READ) 219.98 406.29 T
(, SLO) 259.68 406.29 T
(T_WRITE, and STR) 285.4 406.29 T
(UCT_A) 375.21 406.29 T
(CCESS) 408.14 406.29 T
2 11 Q
0.28 0.04 (This illustrates the tok) 63.65 385.62 B
0.28 0.04 (ens used in accessing structures. These are used frequently in function calls where) 163.47 385.62 B
0.28 0.68 (the e) 63.65 372.62 B
0.28 0.68 (xternal or internal entry point slot of the function object is referenced. A 'utility' tok) 88.21 372.62 B
0.28 0.68 (en) 520.59 372.62 B
5 10 Q
0.28 0.06 (STR) 63.65 359.62 B
0.28 0.06 (UCT_A) 83.42 359.62 B
0.28 0.06 (CCESS) 116.19 359.62 B
2 11 Q
0.28 0.06 ( simplif) 150.92 359.62 B
0.28 0.06 (ies the core of this e) 184.98 359.62 B
0.28 0.06 (x) 275.73 359.62 B
0.28 0.06 (ercise and forms the basic primiti) 281.13 359.62 B
0.28 0.06 (v) 431.12 359.62 B
0.28 0.06 (e for accessing struc-) 436.52 359.62 B
0.28 0.2 (tures. It tak) 63.65 346.62 B
0.28 0.2 (es three ar) 116.51 346.62 B
0.28 0.2 (guments: an alignment tag describing the alignment of the structure that we are) 164.29 346.62 B
0.28 0.02 (accessing; a pointer to the start of the structure; an of) 63.65 333.62 B
0.28 0.02 (fset describing the f) 300.42 333.62 B
0.28 0.02 (ield that we are trying to access.) 388.04 333.62 B
-0.04 (The tok) 63.65 320.62 P
-0.04 (en thus tak) 97.41 320.62 P
-0.04 (es the pointer to the base structure which is probably modelled as a pointer to v) 144.87 320.62 P
-0.04 (oid. This) 492.58 320.62 P
0.28 0.01 (is then cast to gi) 63.65 307.62 B
0.28 0.01 (v) 136.14 307.62 B
0.28 0.01 (e it the shape of the structure we are accessing. \050This in) 141.48 307.62 B
0.28 0.01 (v) 388.37 307.62 B
0.28 0.01 (olv) 393.66 307.62 B
0.28 0.01 (es a call to the ANSI C API) 407.58 307.62 B
0.12 (function) 63.65 294.62 P
0 F
0.12 (~ptr_to_ptr) 103.18 294.62 P
2 F
0.12 ( to turn the v) 158.39 294.62 P
0.12 (oid into the alignment tag of the structure that we wish to access\051. Once) 214.85 294.62 P
-0.25 (in the correct representation, the pointer is then passed to) 63.65 281.62 P
0 F
-0.25 (add_to_pointer) 315.01 281.62 P
2 F
-0.25 ( which is a standard ANDF func-) 387.13 281.62 P
(tion which can add the \336eld of) 63.65 268.62 T
(fset to the base address of the structure.) 197.19 268.62 T
5 10 Q
0.28 0.42 (STR) 63.65 243.62 B
0.28 0.42 (UCT_A) 84.51 243.62 B
0.28 0.42 (CCESS) 119.11 243.62 B
2 11 Q
0.28 0.42 ( is used by the tok) 155.67 243.62 B
0.28 0.42 (en library in the def) 244.71 243.62 B
0.28 0.42 (inition of tw) 340.84 243.62 B
0.28 0.42 (o tok) 401.16 243.62 B
0.28 0.42 (ens:) 425.75 243.62 B
5 10 Q
0.28 0.42 (SLO) 448.61 243.62 B
0.28 0.42 (T_READ) 469.49 243.62 B
2 11 Q
0.28 0.42 ( and) 511.47 243.62 B
5 10 Q
(SLO) 63.65 230.62 T
(T_WRITE) 83.26 230.62 T
2 11 Q
(. These are generated as required by the compiler) 127.15 230.62 T
(.) 343.11 230.62 T
-0.28 (If we are reading a slot, then) 63.65 205.62 P
5 10 Q
-0.28 (SLO) 190.02 205.62 P
-0.28 (T_READ) 209.63 205.62 P
2 11 Q
-0.28 ( tak) 249.08 205.62 P
-0.28 (es the shape of the result in addition to the same three param-) 264.88 205.62 P
0.28 0.04 (eters as) 63.65 192.62 B
5 10 Q
0.28 0.04 (STR) 99.98 192.62 B
0.28 0.04 (UCT_A) 119.69 192.62 B
0.28 0.04 (CCESS) 152.37 192.62 B
2 11 Q
0.28 0.04 (. It calls) 187.01 192.62 B
5 10 Q
0.28 0.04 (STR) 226.14 192.62 B
0.28 0.04 (UCT_A) 245.86 192.62 B
0.28 0.04 (CCESS) 278.53 192.62 B
2 11 Q
0.28 0.04 (, and then calls) 313.17 192.62 B
5 10 Q
0.28 0.04 (CONTENTS) 383.67 192.62 B
2 11 Q
0.28 0.04 ( on the result of this,) 438.98 192.62 B
0.28 0.01 (telling) 63.65 179.62 B
5 10 Q
0.28 0.01 (CONTENTS) 94.88 179.62 B
2 11 Q
0.28 0.01 ( the shape of the e) 149.97 179.62 B
0.28 0.01 (xpected result. F) 231.12 179.62 B
0.28 0.01 (or a slot write, we do not need to call) 304.72 179.62 B
5 10 Q
0.28 0.01 (CONTENTS) 473.81 179.62 B
2 11 Q
0.28 0.01 (.) 528.9 179.62 B
5 10 Q
0.18 (SLO) 63.65 166.62 P
0.18 (T_WRITE) 83.26 166.62 P
2 11 Q
0.17 ( does not actually write the slot itself, b) 127.15 166.62 P
0.17 (ut produces a v) 301.56 166.62 P
0.17 (alue which can be the \336rst parameter) 368.71 166.62 P
0.18 (of a call to) 63.65 153.62 P
0 F
0.18 (assign) 113.84 153.62 P
2 F
0.18 (. \050It is possible to assign to slots as well as to an) 142.57 153.62 P
0.18 (y other v) 355.05 153.62 P
0.18 (ariable, gi) 394.23 153.62 P
0.18 (v) 438.12 153.62 P
0.18 (en the generation of) 443.45 153.62 P
(suitable tok) 63.65 140.62 T
(ens\051.) 114.57 140.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "50" 56
%%Page: "51" 57
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(51) 520.53 84.9 T
3 12 Q
(6.2) 63.65 736.95 T
(Dylan C Runtime Ref) 90.65 736.95 T
(erence) 209.21 736.95 T
3 10 Q
(6.2.1) 63.65 702.29 T
(The Runtime Primitives) 90.89 702.29 T
0 11 Q
(primitive_allocate) 63.65 673.62 T
2 F
([Function]) 485.21 673.62 T
1 F
(Signatur) 81.65 648.62 T
(e:) 119.14 648.62 T
0 F
(Z primiti) 99.65 629.62 T
(v) 142.62 629.62 T
(e_allocate\050int size\051) 148.01 629.62 T
1 F
(Implementation:) 81.65 604.62 T
2 F
-0.16 (This is the interf) 99.65 582.62 P
-0.16 (ace to the memory allocator which might be dependent on the g) 171.47 582.62 P
-0.16 (arbage collector) 449.8 582.62 P
-0.16 (. It) 519.59 582.62 P
-0.21 (tak) 99.65 569.62 P
-0.21 (es a size in bytes as a parameter) 112.98 569.62 P
-0.21 (, and returns some freshly allocated memory which the run-time) 251.27 569.62 P
(system kno) 99.65 556.62 T
(ws ho) 149.18 556.62 T
(w to memory-manage.) 174.88 556.62 T
0 F
(primitive_byte_allocate) 63.65 527.62 T
2 F
([Function]) 485.21 527.62 T
1 F
(Signatur) 81.65 502.62 T
(e:) 119.14 502.62 T
0 F
(Z primiti) 99.65 483.62 T
(v) 142.62 483.62 T
(e_byte_allocate\050int w) 148.01 483.62 T
(ord-size, int byte-size\051) 247.19 483.62 T
1 F
(Implementation:) 81.65 458.62 T
2 F
0.04 (This is b) 99.65 436.62 P
0.04 (uilt on the same mechanism as) 137.41 436.62 P
0 F
0.04 (primiti) 275.15 436.62 P
0.04 (v) 308.04 436.62 P
0.04 (e_allocate) 313.43 436.62 P
2 F
0.04 (, b) 359.86 436.62 P
0.04 (ut it is speci\336cally designed for allo-) 370.68 436.62 P
-0.17 (cating objects which ha) 99.65 423.62 P
-0.17 (v) 202.49 423.62 P
-0.17 (e Dylan slots, b) 207.83 423.62 P
-0.17 (ut also ha) 275.55 423.62 P
-0.17 (v) 317.17 423.62 P
-0.17 (e a repeated slot of byte-sized elements, such as) 322.5 423.62 P
0.28 0.04 (a byte string, or a byte v) 99.65 410.62 B
0.28 0.04 (ector) 208.66 410.62 B
0.28 0.04 (. It tak) 230.22 410.62 B
0.28 0.04 (es tw) 259.35 410.62 B
0.28 0.04 (o parameters, a size in \324w) 282.6 410.62 B
0.28 0.04 (ords\325 for the object slots \050e.g.,) 397.18 410.62 B
0.25 (one for \324class\325 and a second for \324size\325\051, follo) 99.65 397.62 P
0.25 (wed by the number of bytes for the v) 296.53 397.62 P
0.25 (ector) 460.86 397.62 P
0.25 (. The v) 482.25 397.62 P
0.25 (alue) 513.32 397.62 P
(returned from the primiti) 99.65 384.62 T
(v) 209.05 384.62 T
(e is the freshly allocated memory making up the string.) 214.39 384.62 T
0 F
(primitive_fill_E_) 63.65 355.62 T
2 F
([Function]) 485.21 355.62 T
1 F
(Signatur) 81.65 330.62 T
(e:) 119.14 330.62 T
0 F
(Z primiti) 99.65 311.62 T
(v) 142.62 311.62 T
(e_\336ll_E_ \050Z storage[], int size, Z v) 148.01 311.62 T
(alue\051) 306.17 311.62 T
1 F
(Implementation:) 81.65 286.62 T
2 F
0.24 (\050The odd name is a result of name mangling from) 99.65 264.62 P
0 F
0.24 (primiti) 323.2 264.62 P
0.24 (v) 356.09 264.62 P
0.24 (e-\336ll!) 361.48 264.62 P
2 F
0.24 (\051. This tak) 385.92 264.62 P
0.24 (es a Dylan object \050or a) 431.19 264.62 P
-0.08 (pointer to the middle of one\051, a size, and a v) 99.65 251.62 P
-0.08 (alue. It inserts the v) 292.25 251.62 P
-0.08 (alue into as man) 378.11 251.62 P
-0.08 (y slots as are spec-) 449.49 251.62 P
(i\336ed by) 99.65 238.62 T
1 F
(size) 135.71 238.62 T
2 F
(.) 152.21 238.62 T
0 F
(primitive_replace_E_) 63.65 209.62 T
2 F
([Function]) 485.21 209.62 T
1 F
(Signatur) 81.65 184.62 T
(e:) 119.14 184.62 T
0 F
(Z primiti) 99.65 165.62 T
(v) 142.62 165.62 T
(e_r) 148.01 165.62 T
(eplace_E_ \050Z dst[],  Z sr) 163.09 165.62 T
(c[],  int size\051) 275.93 165.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "51" 57
%%Page: "52" 58
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(52) 63.65 84.9 T
1 11 Q
(Implementation:) 81.65 737.62 T
2 F
-0.05 (\050See) 99.65 715.62 P
0 F
-0.05 (primiti) 121.9 715.62 P
-0.05 (v) 154.79 715.62 P
-0.05 (e_\336ll_E_) 160.18 715.62 P
2 F
-0.05 ( re. name\051. This copies from the source v) 201.13 715.62 P
-0.05 (ector into the destination v) 380.82 715.62 P
-0.05 (ector as) 497.79 715.62 P
(man) 99.65 702.62 T
(y v) 118.43 702.62 T
(alues as are speci\336ed in the) 131.9 702.62 T
1 F
(size) 254.7 702.62 T
2 F
( parameter) 271.2 702.62 T
(.) 317.33 702.62 T
0 F
(primitive_replace_vector_E_) 63.65 673.62 T
2 F
([Function]) 485.21 673.62 T
1 F
(Signatur) 81.65 648.62 T
(e:) 119.14 648.62 T
0 F
(Z primiti) 99.65 629.62 T
(v) 142.62 629.62 T
(e_r) 148.01 629.62 T
(eplace_v) 163.09 629.62 T
(ector_E_ \050SO) 203.3 629.62 T
(V* dest, SO) 265.99 629.62 T
(V* sour) 320.75 629.62 T
(ce\051) 357.52 629.62 T
1 F
(Implementation:) 81.65 604.62 T
2 F
0.26 (This is related to) 99.65 582.62 P
0 F
0.26 (primiti) 177.08 582.62 P
0.26 (v) 209.97 582.62 P
0.26 (e_r) 215.36 582.62 P
0.26 (eplace_E_) 230.43 582.62 P
2 F
0.26 (, e) 278.09 582.62 P
0.26 (xcept that the tw) 288.57 582.62 P
0.26 (o ar) 362.26 582.62 P
0.26 (guments are guaranteed to be sim-) 379.12 582.62 P
0.28 0.07 (ple object v) 99.65 569.62 B
0.28 0.07 (ectors, and the) 152.19 569.62 B
0.28 0.07 (y are self-sizing. It tak) 217.46 569.62 B
0.28 0.07 (es tw) 318.86 569.62 B
0.28 0.07 (o parameters, \324dest\325, and \324source\325, and the) 342.28 569.62 B
(data from \324source\325 is copied into \324dest\325. \324Dest\325 is returned.) 99.65 556.62 T
0 F
(primitive_allocate_vector) 63.65 527.62 T
2 F
([Function]) 485.21 527.62 T
1 F
(Signatur) 81.65 502.62 T
(e:) 119.14 502.62 T
0 F
(Z primiti) 99.65 483.62 T
(v) 142.62 483.62 T
(e_allocate_v) 148.01 483.62 T
(ector \050int size\051) 205.34 483.62 T
1 F
(Implementation:) 81.65 458.62 T
2 F
0.28 0.1 (This is related to) 99.65 436.62 B
0 F
0.28 0.1 (primiti) 179.02 436.62 B
0.28 0.1 (v) 212.61 436.62 B
0.28 0.1 (e_allocate) 218.1 436.62 B
2 F
0.28 0.1 (, e) 265.52 436.62 B
0.28 0.1 (xcept that it tak) 276.32 436.62 B
0.28 0.1 (es a \324size\325 ar) 346.86 436.62 B
0.28 0.1 (gument, which is the size of) 404.15 436.62 B
-0.14 (repeated slots in a simple object v) 99.65 423.62 P
-0.14 (ector \050SO) 247.75 423.62 P
-0.14 (V\051. An object which is big enough to hold the speci\336ed) 289.52 423.62 P
0.28 0.04 (indices is allocated, and appropriately initialised, so that the \324class\325 f) 99.65 410.62 B
0.28 0.04 (ield sho) 405.66 410.62 B
0.28 0.04 (ws that it is an SO) 440.47 410.62 B
0.28 0.04 (V) 522.34 410.62 B
0.28 0.04 (,) 528.9 410.62 B
(and the \324size\325 \336eld sho) 99.65 397.62 T
(ws ho) 198.97 397.62 T
(w big it is.) 224.66 397.62 T
0 F
(primitive_copy_vector) 63.65 368.62 T
2 F
([Function]) 485.21 368.62 T
1 F
(Signatur) 81.65 343.62 T
(e:) 119.14 343.62 T
0 F
(Z primiti) 99.65 324.62 T
(v) 142.62 324.62 T
(e_copy_v) 148.01 324.62 T
(ector\050Z v) 191.29 324.62 T
(ector\051) 234.24 324.62 T
1 F
(Implementation:) 81.65 299.62 T
2 F
0.15 (This tak) 99.65 277.62 P
0.15 (es a SO) 135.43 277.62 P
0.15 (V as a parameter) 168.78 277.62 P
0.15 (, and allocates a fresh SO) 243 277.62 P
0.15 (V of the same size. It copies all the data) 354.98 277.62 P
(that w) 99.65 264.62 T
(as supplied from the old one to the ne) 126.73 264.62 T
(w one, and returns the ne) 292.05 264.62 T
(w one.) 402.36 264.62 T
0 F
(primitive_initialize_vector_from_buffer) 63.65 235.62 T
2 F
([Function]) 485.21 235.62 T
1 F
(Signatur) 81.65 210.62 T
(e:) 119.14 210.62 T
0 F
(Z primiti) 99.65 191.62 T
(v) 142.62 191.62 T
(e_initialize_v) 148.01 191.62 T
(ector_fr) 209.63 191.62 T
(om_b) 247.29 191.62 T
(uffer \050SO) 273.35 191.62 T
(V * v) 317.1 191.62 T
(ector) 341.43 191.62 T
(,   int   size,   Z* b) 364.23 191.62 T
(uffer\051) 445.91 191.62 T
1 F
(Implementation:) 81.65 166.62 T
2 F
-0.02 (This primiti) 99.65 144.62 P
-0.02 (v) 151.62 144.62 P
-0.02 (e tak) 156.95 144.62 P
-0.02 (es a pre-e) 177.9 144.62 P
-0.02 (xisting v) 219.84 144.62 P
-0.02 (ector) 257.86 144.62 P
-0.02 (, and copies data into it from a b) 279.41 144.62 P
-0.02 (uf) 421.11 144.62 P
-0.02 (fer so as to initialise an) 430 144.62 P
0.18 (SO) 99.65 131.62 P
0.18 (V) 113.16 131.62 P
0.18 (. The primiti) 119.68 131.62 P
0.18 (v) 175.07 131.62 P
0.18 (e tak) 180.4 131.62 P
0.18 (es a SO) 201.55 131.62 P
0.18 (V to be updated, a \324size\325 parameter \050the speci\336ed size of the SO) 234.96 131.62 P
0.18 (V\051,) 517.29 131.62 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "52" 58
%%Page: "53" 59
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(53) 520.53 84.9 T
2 11 Q
0.28 0.1 (and a pointer to a b) 99.65 737.62 B
0.28 0.1 (uf) 187.43 737.62 B
0.28 0.1 (fer which will supply the necessary data. The class and size v) 196.52 737.62 B
0.28 0.1 (alues for the) 475.52 737.62 B
(ne) 99.65 724.62 T
(w SO) 109.76 724.62 T
(V are set, and the data written to the rest of the SO) 133.96 724.62 T
(V) 356.11 724.62 T
(. The SO) 362.64 724.62 T
(V is returned.) 401.5 724.62 T
0 F
(primitive_make_string) 63.65 695.62 T
2 F
([Function]) 485.21 695.62 T
1 F
(Signatur) 81.65 670.62 T
(e:) 119.14 670.62 T
0 F
(Z primiti) 99.65 651.62 T
(v) 142.62 651.62 T
(e_mak) 148.01 651.62 T
(e_string\050char *  string\051) 179.07 651.62 T
1 F
(Implementation:) 81.65 626.62 T
2 F
0.28 0 (This tak) 99.65 604.62 B
0.28 0 (es as a parameter a \324C\325 string with is zero-terminated, and returns a Dylan string with the) 135.59 604.62 B
(same data inside it.) 99.65 591.62 T
0 F
(primitive_continue_unwind) 63.65 562.62 T
2 F
([Function]) 485.21 562.62 T
1 F
(Signatur) 81.65 537.62 T
(e:) 119.14 537.62 T
0 F
(Z primiti) 99.65 518.62 T
(v) 142.62 518.62 T
(e_continue_unwind \050\051) 148.01 518.62 T
1 F
(Implementation:) 81.65 493.62 T
2 F
0.28 0.01 (This is used as the last thing to be done at the end of an unwind-protect cleanup. It is responsible) 99.65 471.62 B
(for determining wh) 99.65 458.62 T
(y the cleanup is being called, and thus taking appropriate action afterw) 184.52 458.62 T
(ards.) 495.41 458.62 T
(It handles 2 basic cases:) 99.65 436.62 T
4 F
(\245) 99.65 417.62 T
2 F
(a non-local e) 113.4 417.62 T
(xit) 170.05 417.62 T
4 F
(\245) 99.65 401.62 T
2 F
(a normal unwind-protect) 113.4 401.62 T
0.11 (In the \336rst case we wish to transfer control back to some other location, b) 99.65 379.62 P
0.11 (ut there is a cleanup that) 423.87 379.62 P
0.28 0.02 (needs to be done f) 99.65 366.62 B
0.28 0.02 (irst. In this case there will be an unwind-protect frame on the stack which con-) 180.57 366.62 B
0.14 (tains a mark) 99.65 353.62 P
0.14 (er to identify the tar) 153.6 353.62 P
0.14 (get of the non-local e) 241.35 353.62 P
0.14 (xit. Control can thus be transferred, possibly) 335.24 353.62 P
(in) 99.65 340.62 T
(v) 107.77 340.62 T
(oking another unwind-protect on the w) 113.05 340.62 T
(ay) 284.33 340.62 T
(.) 294 340.62 T
0.28 0.08 (Alternati) 99.65 318.62 B
0.28 0.08 (v) 139.19 318.62 B
0.28 0.08 (ely) 144.61 318.62 B
0.28 0.08 (, no transfer of control may be required, and unwind-protect can proceed normally) 157.57 318.62 B
0.28 0.08 (.) 528.9 318.62 B
0.28 0.03 (As a result of e) 99.65 305.62 B
0.28 0.03 (v) 167.54 305.62 B
0.28 0.03 (aluating our protected forms, the multiple v) 172.79 305.62 B
0.28 0.03 (alues of these forms are stored in the) 367.03 305.62 B
0.28 0.33 (unwind-protect frame. These v) 99.65 292.62 B
0.28 0.33 (alues are put back in the multiple v) 245.41 292.62 B
0.28 0.33 (alues area, and control is) 413.23 292.62 B
(returned.) 99.65 279.62 T
0 F
(primitive_nlx) 63.65 250.62 T
2 F
([Function]) 485.21 250.62 T
1 F
(Signatur) 81.65 225.62 T
(e:) 119.14 225.62 T
0 F
(Z primiti) 99.65 206.62 T
(v) 142.62 206.62 T
(e_nlx \050Bind_exit_frame*  tar) 148.01 206.62 T
(get, SO) 283.25 206.62 T
(V*  ar) 316.92 206.62 T
(guments\051) 346.14 206.62 T
1 F
(Implementation:) 81.65 181.62 T
2 F
0.03 (This tak) 99.65 159.62 P
0.03 (es tw) 135.31 159.62 P
0.03 (o parameters: a bind-e) 158.14 159.62 P
0.03 (xit frame which is put on the stack whene) 256.11 159.62 P
0.03 (v) 439.35 159.62 P
0.03 (er a bind-e) 444.68 159.62 P
0.03 (xit frame) 491.6 159.62 P
-0.05 (is bound, and an SO) 99.65 146.62 P
-0.05 (V of the multiple v) 187.82 146.62 P
-0.05 (alues that we wish to return to that bind-e) 271.08 146.62 P
-0.05 (xit point. W) 453.23 146.62 P
-0.05 (e then) 505.12 146.62 P
-0.24 (step to the bind-e) 99.65 133.62 P
-0.24 (xit frame tar) 174.85 133.62 P
-0.24 (get, while checking to see if there are an) 228.55 133.62 P
-0.24 (y interv) 403.97 133.62 P
-0.24 (ening unwind-protect) 437.48 133.62 P
0.28 0.02 (frames. If there are, we put the mark) 99.65 120.62 B
0.28 0.02 (er for our ultimate destination into the unwind-protect frame) 262.52 120.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "53" 59
%%Page: "54" 60
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(54) 63.65 84.9 T
2 11 Q
-0.13 (that has been detected on the stack between us and our destination. The multiple v) 99.65 737.62 P
-0.13 (alues we wish to) 459.01 737.62 P
0.2 (return are put into the unwind-protect frame. The rele) 99.65 724.62 P
0.2 (v) 336.49 724.62 P
0.2 (ant cleanup code is in) 341.72 724.62 P
0.2 (v) 437.39 724.62 P
0.2 (ok) 442.67 724.62 P
0.2 (ed, and at the end) 453.56 724.62 P
-0.2 (of this a primiti) 99.65 711.62 P
-0.2 (v) 166.93 711.62 P
-0.2 (e_continue_unwind should be called. This should detect that there is further to go,) 172.26 711.62 P
(and insert the multiple v) 99.65 698.62 T
(alues into an) 206.32 698.62 T
(y interv) 261.76 698.62 T
(ening frames.) 295.5 698.62 T
0 F
(primitive_inlined_nlx) 63.65 669.62 T
2 F
([Function]) 485.21 669.62 T
1 F
(Signatur) 81.65 644.62 T
(e:) 119.14 644.62 T
0 F
(Z primiti) 99.65 625.62 T
(v) 142.62 625.62 T
(e_inlined_nlx \050Bind_exit_frame*  tar) 148.01 625.62 T
(get, Z   \336rst_ar) 321.15 625.62 T
(gument\051) 391.01 625.62 T
1 F
(Implementation:) 81.65 600.62 T
2 F
0.28 0.13 (This is similar to) 99.65 578.62 B
0 F
0.28 0.13 (primiti) 180.21 578.62 B
0.28 0.13 (v) 214 578.62 B
0.28 0.13 (e_nlx) 219.52 578.62 B
2 F
0.28 0.13 (, e) 245.22 578.62 B
0.28 0.13 (xcept that it is used when the compiler has been able to g) 256.1 578.62 B
0.28 0.13 (ain) 517.95 578.62 B
0.11 (more information about the circumstances in which the non-local-e) 99.65 565.62 P
0.11 (xit call is happening. In partic-) 396.07 565.62 P
-0.22 (ular it is used when it is possible to in-line the call, so that the multiple v) 99.65 552.62 P
-0.22 (alues that are being passed) 415.21 552.62 P
0.28 0.04 (are kno) 99.65 539.62 B
0.28 0.04 (wn to be in the multiple v) 132.62 539.62 B
0.28 0.04 (alues area, rather than ha) 248.14 539.62 B
0.28 0.04 (ving been created as an SO) 359.75 539.62 B
0.28 0.04 (V) 481.1 539.62 B
0.28 0.04 (. An SO) 487.66 539.62 B
0.28 0.04 (V) 523.71 539.62 B
(has to be b) 99.65 526.62 T
(uilt up from these ar) 146.78 526.62 T
(guments.) 235.79 526.62 T
0 F
(primitive_make_box) 63.65 497.62 T
2 F
([Function]) 485.21 497.62 T
1 F
(Signatur) 81.65 472.62 T
(e:) 119.14 472.62 T
0 F
(Z* primiti) 99.65 453.62 T
(v) 148.12 453.62 T
(e_mak) 153.51 453.62 T
(e_box\050Z  object\051) 184.57 453.62 T
1 F
(Implementation:) 81.65 428.62 T
2 F
0.28 0.08 (A box is a v) 99.65 406.62 B
0.28 0.08 (alue-cell that is used for closed-o) 154.54 406.62 B
0.28 0.08 (v) 304.09 406.62 B
0.28 0.08 (er v) 309.5 406.62 B
0.28 0.08 (ariables which are subject to assignment. The) 326.6 406.62 B
-0.24 (function tak) 99.65 393.62 P
-0.24 (es a Dylan object, and returns a v) 152.16 393.62 P
-0.24 (alue-cell box which contains the object. The compiler) 296.85 393.62 P
(deals with the e) 99.65 380.62 T
(xtra le) 168.22 380.62 T
(v) 195.74 380.62 T
(el of indirection needed to get the v) 201.08 380.62 T
(alue out of the box.) 356.92 380.62 T
0 F
(primitive_make_environment) 63.65 351.62 T
2 F
([Function]) 485.21 351.62 T
1 F
(Signatur) 81.65 326.62 T
(e:) 119.14 326.62 T
0 F
(Z* primiti) 99.65 307.62 T
(v) 148.12 307.62 T
(e_mak) 153.51 307.62 T
(e_en) 184.57 307.62 T
(vir) 205.51 307.62 T
(onment\050int size, \311\051) 218.76 307.62 T
1 F
(Implementation:) 81.65 282.62 T
2 F
0.28 0.02 (This is the function which mak) 99.65 260.62 B
0.28 0.02 (es the v) 238.1 260.62 B
0.28 0.02 (ector which is used in a closure. The ar) 272.25 260.62 B
0.28 0.02 (guments to this are) 447.05 260.62 B
0 (either box) 99.65 247.62 P
0 (es, or normal Dylan objects. This tak) 143.79 247.62 P
0 (es an ar) 306.24 247.62 P
0 (gument of \324size\325 for the initial ar) 339.64 247.62 P
0 (guments to) 483.06 247.62 P
-0.02 (be closed o) 99.65 234.62 P
-0.02 (v) 148.93 234.62 P
-0.02 (er) 154.26 234.62 P
-0.02 (, plus the ar) 162.37 234.62 P
-0.02 (guments themselv) 213.43 234.62 P
-0.02 (es. \324Size\325 ar) 293 234.62 P
-0.02 (guments are b) 344.98 234.62 P
-0.02 (uilt up into an SO) 406.43 234.62 P
-0.02 (V which is) 484.03 234.62 P
(used as an en) 99.65 221.62 T
(vironment.) 157.55 221.62 T
0 F
(primitive_basic_iep_apply) 63.65 192.62 T
2 F
([Function]) 485.21 192.62 T
1 F
(Signatur) 81.65 167.62 T
(e:) 119.14 167.62 T
0 F
(Z primiti) 99.65 148.62 T
(v) 142.62 148.62 T
(e_basic_iep_apply \050FN*  f) 148.01 148.62 T
(, int  ar) 269.16 148.62 T
(gument_count, Z  a[]\051) 303.27 148.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "54" 60
%%Page: "55" 61
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(55) 520.53 84.9 T
1 11 Q
(Implementation:) 81.65 737.62 T
2 F
0.14 (This is used to call internal entry points. It tak) 99.65 715.62 P
0.14 (es three parameters: a Dylan function object \050where) 303.08 715.62 P
-0.24 (the iep is stored in a slot\051, an ar) 99.65 702.62 P
-0.24 (gument count of the number of ar) 235.32 702.62 P
-0.24 (guments that we are passing to the) 381.55 702.62 P
-0.25 (iep, and a v) 99.65 689.62 P
-0.25 (ector of all of these ar) 149.43 689.62 P
-0.25 (guments. This is a \324basic\325 IEP apply because is does no more than) 244.17 689.62 P
0.28 0.07 (check the ar) 99.65 676.62 B
0.28 0.07 (gument count, and call the IEP with the appropriate number of Dylan parameters. It) 154.02 676.62 B
0.04 (does not bother to set an) 99.65 663.62 P
0.04 (y implementation parameters. Implementation parameters which could be) 206.92 663.62 P
0.07 (set in by other primiti) 99.65 650.62 P
0.07 (v) 194.98 650.62 P
0.07 (es are \324function\325, and a \324mlist\325 \050the list of ne) 200.32 650.62 P
0.07 (xt-methods\051 . Not all IEPs care) 395.05 650.62 P
2.65 1.38 (about the \324function\325 or \324mlist\325 parameters, b) 99.65 637.62 B
2.65 1.38 (ut when the compiler calls) 370.58 637.62 B
0.28 0.04 (\324primiti) 99.65 624.62 B
0.28 0.04 (v) 133.31 624.62 B
0.28 0.04 (e_basic_iep_apply\325, it has to mak) 138.69 624.62 B
0.28 0.04 (e sure that an) 288.58 624.62 B
0.28 0.04 (y necessary \324function\325 or \324mlist\325 parame-) 348.16 624.62 B
(ters ha) 99.65 611.62 T
(v) 128.45 611.62 T
(e been set up.) 133.78 611.62 T
0 F
(primitive_iep_apply) 63.65 582.62 T
2 F
([Function]) 485.21 582.62 T
1 F
(Signatur) 81.65 557.62 T
(e:) 119.14 557.62 T
0 F
(Z primiti) 99.65 538.62 T
(v) 142.62 538.62 T
(e_iep_apply \050FN*  f) 148.01 538.62 T
(, int  ar) 239.82 538.62 T
(gument_count, Z  a[]\051) 273.93 538.62 T
1 F
(Implementation:) 81.65 513.62 T
2 F
0.07 (This is closely related to) 99.65 491.62 P
0 F
0.07 (primiti) 210.31 491.62 P
0.07 (v) 243.2 491.62 P
0.07 (e_basic_iep_apply) 248.59 491.62 P
2 F
0.07 (. It tak) 333.44 491.62 P
0.07 (es the same number of parameters, b) 361.89 491.62 P
0.07 (ut) 523.09 491.62 P
0.28 0.05 (it sets the e) 99.65 478.62 B
0.28 0.05 (xplicit, implementation-dependent function parameter which is usually set to the f) 150.18 478.62 B
0.28 0.05 (irst) 517.43 478.62 B
0.28 0.15 (ar) 99.65 465.62 B
0.28 0.15 (gument, and also sets the \324mlist\325 ar) 108.29 465.62 B
0.28 0.15 (gument to \324f) 268.78 465.62 B
0.28 0.15 (alse\325. This is the normal case when a method) 325.39 465.62 B
(object is being called directly) 99.65 452.62 T
(, rather than as part of a generic function.) 228.47 452.62 T
0 F
(primitive_xep_apply) 63.65 423.62 T
2 F
([Function]) 485.21 423.62 T
1 F
(Signatur) 81.65 398.62 T
(e:) 119.14 398.62 T
0 F
(Z primiti) 99.65 379.62 T
(v) 142.62 379.62 T
(e_xep_apply \050FN*  f) 148.01 379.62 T
(, int ar) 242.26 379.62 T
(gument_count, Z  a[]\051) 273.62 379.62 T
1 F
(Implementation:) 81.65 354.62 T
2 F
0.28 0.03 (This is a more usual usage of apply) 99.65 332.62 B
0.28 0.03 (, i.e., the standard Dylan calling con) 257.53 332.62 B
0.28 0.03 (v) 418.86 332.62 B
0.28 0.03 (ention being in) 424.23 332.62 B
0.28 0.03 (v) 490.84 332.62 B
0.28 0.03 (ok) 496.15 332.62 B
0.28 0.03 (ed by) 507.11 332.62 B
0 F
0.28 0.05 (apply) 99.65 319.62 B
2 F
0.28 0.05 (. It tak) 125.46 319.62 B
0.28 0.05 (es three parameters: the Dylan function to be called, the number of ar) 154.7 319.62 B
0.28 0.05 (guments being) 466.33 319.62 B
0.28 0.13 (passed, and a v) 99.65 306.62 B
0.28 0.13 (ector containing all those ar) 168.84 306.62 B
0.28 0.13 (guments. This primiti) 295.69 306.62 B
0.28 0.13 (v) 393.72 306.62 B
0.28 0.13 (e relates to the e) 399.18 306.62 B
0.28 0.13 (xternal entry) 473.92 306.62 B
0.01 (point for the function, and guarantees full type checking and ar) 99.65 293.62 P
0.01 (gument count checking. This prim-) 376.68 293.62 P
0.08 (iti) 99.65 280.62 P
0.08 (v) 108.55 280.62 P
0.08 (e does all that is necessary to conform with the x) 113.88 280.62 P
0.08 (ep calling con) 329.02 280.62 P
0.08 (v) 390.46 280.62 P
0.08 (ention of Dylan: i.e., it sets the) 395.79 280.62 P
(\324function\325 parameter) 99.65 267.62 T
(, it sets the ar) 189.93 267.62 T
(gument count, and then calls the XEP for the function.) 248.08 267.62 T
0 F
(xep_ 0  \311 xep_9) 63.65 238.62 T
2 F
([Function]) 485.21 238.62 T
1 F
(Signatur) 81.65 213.62 T
(e:) 119.14 213.62 T
0 F
(Z xep_0 \050FN* function, int ar) 99.65 194.62 T
(gument_count\051) 237.04 194.62 T
1 F
(Implementation:) 81.65 169.62 T
2 F
0.28 0.1 (These are the XEP entry-point handlers for those Dylan functions which do not accept optional) 99.65 147.62 B
-0.25 (parameters. Each Dylan function has an e) 99.65 134.62 P
-0.25 (xternal \050safe\051 entry point with full checking. After check-) 280.98 134.62 P
(ing, this calls the internal entry point, which is the most ef) 99.65 121.62 T
(\336cient a) 355.11 121.62 T
(v) 390.03 121.62 T
(ailable.) 395.25 121.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "55" 61
%%Page: "56" 62
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(56) 63.65 84.9 T
2 11 Q
0.28 0.11 (The compiler itself only e) 99.65 737.62 B
0.28 0.11 (v) 216.9 737.62 B
0.28 0.11 (er generates code for the internal entry point. An) 222.34 737.62 B
0.28 0.11 (y v) 443.85 737.62 B
0.28 0.11 (alue put into the) 457.92 737.62 B
-0.19 (e) 99.65 724.62 P
-0.19 (xternal entry point \336eld of an object is a shared v) 104.37 724.62 P
-0.19 (alue pro) 317.92 724.62 P
-0.19 (vided by the runtime system. If the func-) 353.31 724.62 P
0.22 (tion tak) 99.65 711.62 P
0.22 (es no parameters, the v) 133.07 711.62 P
0.22 (alue will be \324x) 234.81 711.62 P
0.22 (ep0\325; if it tak) 298.55 711.62 P
0.22 (es a single required parameter it will be) 356.25 711.62 P
0.28 0.14 (\324x) 99.65 698.62 B
0.28 0.14 (ep1\325, and so on. There are v) 108.93 698.62 B
0.28 0.14 (alues a) 237.05 698.62 B
0.28 0.14 (v) 268.34 698.62 B
0.28 0.14 (ailable for \324x) 273.7 698.62 B
0.28 0.14 (ep0\325 to \324x) 332.88 698.62 B
0.28 0.14 (ep9\325. F) 377.45 698.62 B
0.28 0.14 (or more than nine required) 409.71 698.62 B
(parameters, the ne) 99.65 685.62 T
(xt function \050belo) 179.82 685.62 T
(w\051 is used.) 252.87 685.62 T
0 F
(xep) 63.65 656.62 T
2 F
([Function]) 485.21 656.62 T
1 F
(Signatur) 81.65 631.62 T
(e:) 119.14 631.62 T
0 F
(xep \050FN* function, int ar) 99.65 612.62 T
(gument_count, \311\051) 215.95 612.62 T
1 F
(Implementation:) 81.65 587.62 T
2 F
0.28 0.06 (If the function tak) 99.65 565.62 B
0.28 0.06 (es more than nine required parameters, then the function will simply be called) 180.63 565.62 B
0 F
-0.16 (xep) 99.65 552.62 P
2 F
-0.16 (, the general function which will w) 116.15 552.62 P
-0.16 (ork in all such cases. The ar) 268.76 552.62 P
-0.16 (guments are passed as \324v) 390.11 552.62 P
-0.16 (arar) 498.56 552.62 P
-0.16 (gs\325.) 515.46 552.62 P
0.28 0.06 (This function will check the number of ar) 99.65 539.62 B
0.28 0.06 (guments, raising an error if it is wrong. It then sets the) 286.73 539.62 B
-0.05 (calling con) 99.65 526.62 P
-0.05 (v) 147.73 526.62 P
-0.05 (ention for calling the internal entry point. This basically means that the function re) 153.07 526.62 P
-0.05 (gis-) 515.15 526.62 P
(ter is appropriately set, and the implementation \324mlist\325 parameter is set to) 99.65 513.62 T
0 F
(#f) 425.03 513.62 T
2 F
(.) 434.19 513.62 T
0 F
(optional_xep) 63.65 484.62 T
2 F
([Function]) 485.21 484.62 T
1 F
(Signatur) 81.65 459.62 T
(e:) 119.14 459.62 T
0 F
(Z optional_xep \050FN* function, int ar) 99.65 440.62 T
(gument_count, \311\051) 270.05 440.62 T
1 F
(Implementation:) 81.65 415.62 T
2 F
0.28 0.06 (This function is used as the XEP code for an) 99.65 393.62 B
0.28 0.06 (y Dylan function which has optional parameters. In) 300.56 393.62 B
0.28 0.04 (this case, the e) 99.65 380.62 B
0.28 0.04 (xternal entry point con) 165.06 380.62 B
0.28 0.04 (v) 266.21 380.62 B
0.28 0.04 (entions do not require the caller to ha) 271.58 380.62 B
0.28 0.04 (v) 438.8 380.62 B
0.28 0.04 (e an) 444.18 380.62 B
0.28 0.04 (y kno) 462.45 380.62 B
0.28 0.04 (wledge of) 487.39 380.62 B
0.28 0.19 (where the optionals start. The XEP code is thus responsible for separating the code into those) 99.65 367.62 B
0.05 (which are required parameters, to be passed via the normal machine con) 99.65 354.62 P
0.05 (v) 417.41 354.62 P
0.05 (entions, and those which) 422.74 354.62 P
0.11 (are optionals. to be passed as a Dylan SO) 99.65 341.62 P
0.11 (V) 281.76 341.62 P
0.11 (. If the function object tak) 288.28 341.62 P
0.11 (es k) 402.98 341.62 P
0.11 (e) 420.39 341.62 P
0.11 (yw) 425.11 341.62 P
0.11 (ords, all the informa-) 438.44 341.62 P
0.28 0.18 (tion about which k) 99.65 328.62 B
0.28 0.18 (e) 185.74 328.62 B
0.28 0.18 (yw) 190.63 328.62 B
0.28 0.18 (ords are accepted is stored in the function itself. The v) 204.32 328.62 B
0.28 0.18 (ector of optional) 455.56 328.62 B
-0.09 (parameters is scanned by the XEP code to see if an) 99.65 315.62 P
-0.09 (y appropriate ones ha) 322.85 315.62 P
-0.09 (v) 416.76 315.62 P
-0.09 (e been supplied. If one is) 422.1 315.62 P
0.28 0.11 (found, then the associated v) 99.65 302.62 B
0.28 0.11 (alue is tak) 226.18 302.62 B
0.28 0.11 (en and used as an implicit parameter to the internal entry) 272.48 302.62 B
0.28 0.01 (point. If a v) 99.65 289.62 B
0.28 0.01 (alue is not supplied, then a suitable def) 151.72 289.62 B
0.28 0.01 (ault parameter which is stored inside the func-) 325.27 289.62 B
(tion object is passed instead.) 99.65 276.62 T
0 F
(gf_xep_0 \311 gf_xep_9) 63.65 247.62 T
2 F
([Function]) 485.21 247.62 T
1 F
(Signatur) 81.65 222.62 T
(e:) 119.14 222.62 T
0 F
(Z gf_xep_0\050FN* function, int ar) 99.65 203.62 T
(gument_count\051) 248.95 203.62 T
1 F
(Implementation:) 81.65 178.62 T
2 F
0.28 0.13 (These primiti) 99.65 156.62 B
0.28 0.13 (v) 160.25 156.62 B
0.28 0.13 (es are similar to) 165.71 156.62 B
0 F
0.28 0.13 (xep_0) 241.78 156.62 B
2 F
0.28 0.13 ( through) 269.91 156.62 B
0 F
0.28 0.13 (xep_9) 311.31 156.62 B
2 F
0.28 0.13 (, b) 339.44 156.62 B
0.28 0.13 (ut deal with the entry points for generic) 350.87 156.62 B
0.28 0.02 (functions. Generic functions do not require the \324mlist\325 parameter to be set, so a special optimised) 99.65 143.62 B
0.28 0.01 (entry point is pro) 99.65 130.62 B
0.28 0.01 (vided. These v) 176.05 130.62 B
0.28 0.01 (ersions are for 0 - 9 required parameters. These functions call the) 241.1 130.62 B
(internal entry point.) 99.65 117.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "56" 62
%%Page: "57" 63
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(57) 520.53 84.9 T
0 11 Q
(gf_xep) 63.65 737.62 T
2 F
([Function]) 485.21 737.62 T
1 F
(Signatur) 81.65 712.62 T
(e:) 119.14 712.62 T
0 F
(Z gf_xep \050FN* function, int ar) 99.65 693.62 T
(gument_count, \311\051) 240.7 693.62 T
1 F
(Implementation:) 81.65 668.62 T
2 F
-0.19 (This primiti) 99.65 646.62 P
-0.19 (v) 151.45 646.62 P
-0.19 (e is similar to) 156.78 646.62 P
0 F
-0.19 (xep) 218.36 646.62 P
2 F
-0.19 (, b) 234.86 646.62 P
-0.19 (ut deals with the entry points for generic functions. Generic func-) 245.45 646.62 P
0.24 (tions do not require the \324mlist\325 parameter to be set, so a special optimised entry point is pro) 99.65 633.62 P
0.24 (vided.) 504.45 633.62 P
0.07 (This is the general v) 99.65 620.62 P
0.07 (ersion for functions which do not tak) 188.98 620.62 P
0.07 (e optional ar) 351.84 620.62 P
0.07 (guments. This function calls) 406.77 620.62 P
(the internal entry point.) 99.65 607.62 T
0 F
(gf_optional_xep) 63.65 578.62 T
2 F
([Function]) 485.21 578.62 T
1 F
(Signatur) 81.65 553.62 T
(e:) 119.14 553.62 T
0 F
(Z gf_optional_xep \050FN* function, int ar) 99.65 534.62 T
(gument_count, \311\051) 284.71 534.62 T
1 F
(Implementation:) 81.65 509.62 T
2 F
0.22 (This is used for all generic functions which tak) 99.65 487.62 P
0.22 (e optional ar) 307.86 487.62 P
0.22 (guments. This function calls the inter-) 363.1 487.62 P
(nal entry point.) 99.65 474.62 T
3 15 Q
(7.) 63.65 432.95 T
(Dylan Features Mapped to ANDF) 90.65 432.95 T
2 11 Q
0.28 0.1 (This chapter tak) 63.65 410.62 B
0.28 0.1 (es a range of Dylan features and sho) 136.6 410.62 B
0.28 0.1 (ws by e) 301.7 410.62 B
0.28 0.1 (xample ho) 336.41 410.62 B
0.28 0.1 (w these are mapped onto ANDF) 383.47 410.62 B
0.28 0.1 (.) 528.9 410.62 B
0.17 (The features detailed here ha) 63.65 397.62 P
0.17 (v) 191.17 397.62 P
0.17 (e been chosen as representing the core features of the language, and as such) 196.5 397.62 P
(are the foundation upon which the higher) 63.65 384.62 T
(-le) 244.9 384.62 T
(v) 256.23 384.62 T
(el features of the language were b) 261.56 384.62 T
(uilt.) 409.79 384.62 T
0.01 (All of the e) 63.65 359.62 P
0.01 (xamples are de\336ned in a module) 113.3 359.62 P
0 F
0.01 (dylan-test) 258.76 359.62 P
2 F
0.01 ( of library) 305.2 359.62 P
0 F
0.01 (test) 351.96 359.62 P
2 F
0.01 (, and the ANDF output is name man-) 368.45 359.62 P
(gled accordingly) 63.65 346.62 T
(.) 136.56 346.62 T
3 12 Q
(7.1) 63.65 308.95 T
(The Sample of Dylan Features) 90.65 308.95 T
4 11 Q
(\245) 99.65 287.62 T
2 F
(de\336ning v) 113.4 287.62 T
(ariables) 157.43 287.62 T
4 F
(\245) 99.65 271.62 T
2 F
(de\336ning functions) 113.4 271.62 T
4 F
(\245) 99.65 255.62 T
2 F
(de\336ning methods of GFs) 113.4 255.62 T
4 F
(\245) 99.65 239.62 T
2 F
(e) 113.4 239.62 T
(v) 118.01 239.62 T
(aluating v) 123.23 239.62 T
(ariables) 166.65 239.62 T
4 F
(\245) 99.65 223.62 T
2 F
(calling functions) 113.4 223.62 T
4 F
(\245) 99.65 207.62 T
2 F
(calling GFs) 113.4 207.62 T
4 F
(\245) 99.65 191.62 T
2 F
(if) 113.4 191.62 T
4 F
(\245) 99.65 175.62 T
2 F
(multiple-v) 113.4 175.62 T
(alue generation) 158.96 175.62 T
4 F
(\245) 99.65 159.62 T
2 F
(multiple-v) 113.4 159.62 T
(alue binding) 158.96 159.62 T
4 F
(\245) 99.65 143.62 T
2 F
(bind-e) 113.4 143.62 T
(xit) 141.34 143.62 T
4 F
(\245) 99.65 127.62 T
2 F
(unwind-protect) 113.4 127.62 T
4 F
(\245) 99.65 111.62 T
2 F
(closures) 113.4 111.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "57" 63
%%Page: "58" 64
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(58) 63.65 84.9 T
3 12 Q
(7.2) 63.65 736.95 T
(The Dylan Features Mapped to ANDF) 90.65 736.95 T
3 10 Q
(7.2.1) 63.65 702.29 T
(De\336ning V) 90.89 702.29 T
(ariab) 139.74 702.29 T
(les) 163.54 702.29 T
2 11 Q
(First, consider the a simple case of v) 63.65 681.62 T
(ariable de\336nition:) 224.07 681.62 T
0 F
(de\336ne v) 99.65 662.62 T
(ariable *simple* = 1;) 135.9 662.62 T
2 F
-0.26 (This generates the follo) 63.65 637.62 P
-0.26 (wing ANDF) 166.15 637.62 P
-0.26 (, to declare and de\336ne the v) 219.71 637.62 P
-0.26 (ariable. Use is made of the tok) 339.14 637.62 P
-0.26 (en) 471.58 637.62 P
5 10 Q
-0.26 (INTEGER) 484.45 637.62 P
2 11 Q
-0.26 (,) 528.9 637.62 P
(to pro) 63.65 624.62 T
(vide the tagged Dylan inte) 89.45 624.62 T
(ger representation of 1.) 205.38 624.62 T
0 F
(\050mak) 99.65 605.62 T
(e_v) 123.98 605.62 T
(ar_tagdec dylan_testXtestX_T_simple_T_ - pz \051) 139.75 605.62 T
(\050mak) 99.65 592.62 T
(e_v) 123.98 592.62 T
(ar_tagdef dylan_testXtestX_T_simple_T_ \050INTEGER 1\051\051) 139.75 592.62 T
2 F
0.22 (A more comple) 63.65 567.62 P
0.22 (x case in) 132.36 567.62 P
0.22 (v) 170.86 567.62 P
0.22 (olv) 176.14 567.62 P
0.22 (es the v) 190.03 567.62 P
0.22 (ariable's initial v) 223.81 567.62 P
0.22 (alue being the result of a dynamic function call, such) 296.84 567.62 P
(as the follo) 63.65 554.62 T
(wing to de\336ne a single element list.) 112.26 554.62 T
0 F
(de\336ne v) 99.65 535.62 T
(ariable *dynamic* = mak) 135.9 535.62 T
(e\050<list>, size: 1\051;) 255.43 535.62 T
2 F
0.28 0.13 (Each compiled dylan library has a top le) 63.65 510.62 B
0.28 0.13 (v) 247.99 510.62 B
0.28 0.13 (el form function which performs an) 253.45 510.62 B
0.28 0.13 (y initialisation the library) 415.79 510.62 B
0.28 0.03 (requires before an) 63.65 497.62 B
0.28 0.03 (y of it's f) 143.88 497.62 B
0.28 0.03 (acilities are utilised. The top le) 183.82 497.62 B
0.28 0.03 (v) 321.41 497.62 B
0.28 0.03 (el form function performs initialisation of an) 326.77 497.62 B
0.28 0.03 (y) 526.15 497.62 B
0.28 0.01 (v) 63.65 484.62 B
0.28 0.01 (ariables whose initial v) 68.88 484.62 B
0.28 0.01 (alues are dynamically assigned. So for the abo) 171.43 484.62 B
0.28 0.01 (v) 377.76 484.62 B
0.28 0.01 (e e) 383.11 484.62 B
0.28 0.01 (xample, the follo) 395.77 484.62 B
0.28 0.01 (wing declara-) 471.08 484.62 B
(tion and de\336nition are generated at the top le) 63.65 471.62 T
(v) 260.12 471.62 T
(el:) 265.45 471.62 T
0 F
(\050mak) 99.65 452.62 T
(e_v) 123.98 452.62 T
(ar_tagdec dylan_testXtestX_T_dynamic_T_ - pz \051) 139.75 452.62 T
(\050mak) 99.65 439.62 T
(e_v) 123.98 439.62 T
(ar_tagdef dylan_testXtestX_T_dynamic_T_ \050O) 139.75 439.62 T
(T dylanXinter) 359.91 439.62 T
(nalX_P_unbound\051\051) 426.67 439.62 T
2 F
(And then the top le) 63.65 414.62 T
(v) 147.7 414.62 T
(el form initialisation function will contain the follo) 153.03 414.62 T
(wing:) 376.73 414.62 T
0 F
(\050ASSIGN) 99.65 395.62 T
(  \050O) 99.65 382.62 T
(T dylan_testXtestX_T_dynamic_T_\051) 116.93 382.62 T
(  \050apply_pr) 99.65 369.62 T
(oc pz \050O) 151.4 369.62 T
(T dylanXinter) 190.07 369.62 T
(nalXmak) 256.83 369.62 T
(e_9_IEP\051) 300.11 369.62 T
(                 \050L) 99.65 356.62 T
(V) 156.39 356.62 T
(AL dylanXinter) 162.84 356.62 T
(nalX_L_list_G_\051) 237.54 356.62 T
(                 \050INTEGER 1\051) 99.65 343.62 T
(                 \050L) 99.65 330.62 T
(V) 156.39 330.62 T
(AL dylanXinter) 162.84 330.62 T
(nalX_P_false\051) 237.54 330.62 T
(                 \050L) 99.65 317.62 T
(V) 156.39 317.62 T
(AL LIT_1\051 \051\051) 162.84 317.62 T
2 F
0.28 0.09 (This is assigning the result of the call to) 63.65 292.62 B
0 F
0.28 0.09 (*dynamic*) 248.33 292.62 B
2 F
0.28 0.09 (. The function being called is the) 300.5 292.62 B
0 F
0.28 0.09 (mak) 452.92 292.62 B
0.28 0.09 (e) 473.87 292.62 B
2 F
0.28 0.09 ( method for) 478.85 292.62 B
0 F
-0.07 (<list>) 63.65 279.62 P
2 F
-0.07 (. The compiler selected the appropriate method and arranged to call it via its IEP) 90.25 279.62 P
-0.07 (. The \336rst parameter) 442.67 279.62 P
-0.27 (is the class we wish to mak) 63.65 266.62 P
-0.27 (e an instance of, the second is the size of the list, the third speci\336es a v) 181.71 266.62 P
-0.27 (alue to \336ll) 487.57 266.62 P
0.28 0.18 (the elements with \050in this case f) 63.65 253.62 B
0.28 0.18 (alse, the def) 210.55 253.62 B
0.28 0.18 (ault, means don't f) 266.21 253.62 B
0.28 0.18 (ill\051, and the f) 350.72 253.62 B
0.28 0.18 (inal parameter is the) 410.52 253.62 B
0 F
0.28 0.18 (#r) 507.9 253.62 B
0.28 0.18 (est) 518.46 253.62 B
2 F
0.28 0 (parameters list. T) 63.65 240.62 B
0.28 0 (o see what this represents here, we need to see the def) 140.06 240.62 B
0.28 0 (inition of the statically b) 379.71 240.62 B
0.28 0 (uilt literal) 488.25 240.62 B
0 F
(LIT_1) 63.65 227.62 T
2 F
(:) 93.6 227.62 T
0 F
(\050local mak) 99.65 208.62 T
(e_v) 148.73 208.62 T
(ar_tagdec LIT_1 - \050nof 2 pz\051 \051) 164.5 208.62 T
(\050local mak) 99.65 195.62 T
(e_v) 148.73 195.62 T
(ar_tagdef LIT_1) 164.5 195.62 T
(  \050mak) 99.65 182.62 T
(e_nof) 129.48 182.62 T
(    \050L) 99.65 169.62 T
(V) 120.64 169.62 T
(AL dylanXinter) 127.09 169.62 T
(nalX_L_simple_object_v) 201.79 169.62 T
(ector_G__wrapper\051) 318.4 169.62 T
(    \050INTEGER 0\051  | \051 \051) 99.65 156.62 T
2 F
(This represents a zero element list, as there are no) 63.65 131.62 T
0 F
(#r) 285.73 131.62 T
(est) 295.91 131.62 T
2 F
( parameters passed in this case.) 308.74 131.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "58" 64
%%Page: "59" 65
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(59) 520.53 84.9 T
(7.2.2) 63.65 738.29 T
(De\336ning Functions) 90.89 738.29 T
2 11 Q
(This de\336nes a single method not associated with an) 63.65 717.62 T
(y generic function.) 289.58 717.62 T
0 F
(de\336ne constant constant-function) 99.65 698.62 T
(  = method \050a\051) 99.65 685.62 T
(      a) 99.65 672.62 T
(    end;) 99.65 659.62 T
2 F
0.11 (The function is implemented by the follo) 63.65 634.62 P
0.11 (wing proc, which simply sets the global v) 244.32 634.62 P
0.11 (ariable representing the) 428.17 634.62 P
0.28 0.07 (number of v) 63.65 621.62 B
0.28 0.07 (alues returned to 1 \050using the) 118.49 621.62 B
0 F
0.28 0.07 (_1) 253.15 621.62 B
2 F
0.28 0.07 ( shorthand for a ra) 264.29 621.62 B
0.28 0.07 (w inte) 347.24 621.62 B
0.28 0.07 (ger\051 and then returns its only ar) 374.98 621.62 B
0.28 0.07 (gu-) 516.91 621.62 B
(ment.) 63.65 608.62 T
0 F
(\050mak) 99.65 589.62 T
(e_id_tagdef dylan_testXtestXconstant_function_IEP) 123.98 589.62 T
(  \050mak) 99.65 576.62 T
(e_pr) 129.48 576.62 T
(oc pz) 150.67 576.62 T
(    pz - a) 99.65 563.62 T
(  | -) 99.65 550.62 T
(  \050sequence) 99.65 537.62 T
(  \050labelled block_intr) 99.65 524.62 T
(o | \050goto block_intr) 196.93 524.62 T
(o\051) 285.62 524.62 T
(  \050sequence \050mak) 99.65 511.62 T
(e_null_ptr \050alignment top\051\051 # block_intr) 178.06 511.62 T
(o:) 365.47 511.62 T
(    \050ASSIGN \050O) 99.65 498.62 T
(T _P_number_v) 169.79 498.62 T
(alues\051 _1\051) 245.77 498.62 T
(    \050r) 99.65 485.62 T
(etur) 119 485.62 T
(n \050R) 138.38 485.62 T
(V) 158.24 485.62 T
(AL a\051 \051) 164.7 485.62 T
(  \051\051) 99.65 472.62 T
(ENDPR) 99.65 459.62 T
(OC\051\051\051) 137.2 459.62 T
2 F
(This is the statically b) 63.65 434.62 T
(uilt literal function object that represents the function:) 159.99 434.62 T
0 F
(\050mak) 99.65 415.62 T
(e_v) 123.98 415.62 T
(ar_tagdec dylan_testXtestXconstant_function - \050nof 8 pz\051 \051) 139.75 415.62 T
(\050mak) 99.65 402.62 T
(e_v) 123.98 402.62 T
(ar_tagdef dylan_testXtestXconstant_function) 139.75 402.62 T
(  \050mak) 99.65 389.62 T
(e_nof) 129.48 389.62 T
(    \050L) 99.65 376.62 T
(V) 120.64 376.62 T
(AL dylanXinter) 127.09 376.62 T
(nalX_L_method_G__wrapper\051) 201.79 376.62 T
(    \050INTEGER 1\051) 99.65 363.62 T
(    \050FV) 99.65 350.62 T
(AL xep_1\051) 127.49 350.62 T
(    \050FV) 99.65 337.62 T
(AL dylan_testXtestXconstant_function_IEP\051) 127.49 337.62 T
(    \050L) 99.65 324.62 T
(V) 120.64 324.62 T
(AL dylanXinter) 127.09 324.62 T
(nalX_P_false\051) 201.79 324.62 T
(    \050L) 99.65 311.62 T
(V) 120.64 311.62 T
(AL LIT_7\051) 127.09 311.62 T
(    \050FV) 99.65 298.62 T
(AL dylan_testXtestXconstant_function_IEP\051 | \051 \051) 127.49 298.62 T
2 F
-0.24 (These slots represent the class of object \050a method in this case\051, some function properties, the XEP) 63.65 273.62 P
-0.24 (, the IEP) 492.41 273.62 P
-0.24 (,) 528.9 273.62 P
(the en) 63.65 260.62 T
(vironment, method specialisers and the MEP) 89.78 260.62 T
(.) 285.94 260.62 T
0.28 0.09 (The specialisers are represented by) 63.65 235.62 B
0 F
0.28 0.09 (LIT_7) 224.9 235.62 B
2 F
0.28 0.09 (, a single element v) 255.29 235.62 B
0.28 0.09 (ector indicating that the method e) 343.23 235.62 B
0.28 0.09 (xpects a) 495.02 235.62 B
(parameter of class) 63.65 222.62 T
0 F
(<object>) 146.42 222.62 T
2 F
(.) 187.67 222.62 T
0 F
(\050local mak) 99.65 203.62 T
(e_v) 148.73 203.62 T
(ar_tagdec LIT_7 - \050nof 3 pz\051 \051) 164.5 203.62 T
(\050local mak) 99.65 190.62 T
(e_v) 148.73 190.62 T
(ar_tagdef LIT_7) 164.5 190.62 T
(  \050mak) 99.65 177.62 T
(e_nof) 129.48 177.62 T
(    \050L) 99.65 164.62 T
(V) 120.64 164.62 T
(AL dylanXinter) 127.09 164.62 T
(nalX_L_simple_object_v) 201.79 164.62 T
(ector_G__wrapper\051) 318.4 164.62 T
(    \050INTEGER 1\051) 99.65 151.62 T
(    \050L) 99.65 138.62 T
(V) 120.64 138.62 T
(AL dylanXinter) 127.09 138.62 T
(nalX_L_object_G_\051 | \051 \051) 201.79 138.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "59" 65
%%Page: "60" 66
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(60) 63.65 84.9 T
(7.2.3) 63.65 738.29 T
(De\336ning Methods of Generic Functions) 90.89 738.29 T
2 11 Q
0.15 (In Dylan, calling) 63.65 717.62 P
0 F
0.15 (de\336ne method) 141.08 717.62 P
2 F
0.15 ( will automatically create the corresponding GF if it doesn't e) 207.53 717.62 P
0.15 (xist already) 478.45 717.62 P
0.15 (.) 528.9 717.62 P
0.28 0.09 (The tw) 63.65 704.62 B
0.28 0.09 (o statements belo) 95.21 704.62 B
0.28 0.09 (w will generate the) 173.41 704.62 B
0 F
0.28 0.09 (add-1) 263.08 704.62 B
2 F
0.28 0.09 ( generic function, which tak) 290.43 704.62 B
0.28 0.09 (es a single ar) 417.06 704.62 B
0.28 0.09 (gument, and) 476.08 704.62 B
(tw) 63.65 691.62 T
(o methods de\336ned for that GF) 74.54 691.62 T
(, one specialised on) 205.96 691.62 T
0 F
(<integer>) 294.86 691.62 T
2 F
(, the other on) 340.39 691.62 T
0 F
(<byte-string>) 401.18 691.62 T
2 F
(.) 465.05 691.62 T
0 F
(de\336ne method add-1 \050a :: <integer>\051 => \050r) 99.65 672.62 T
(es :: <integer>\051) 295.92 672.62 T
(    a + 1;) 99.65 659.62 T
(end method;) 99.65 646.62 T
(de\336ne method add-1 \050a :: <byte-string>\051 => \050r) 99.65 620.62 T
(es :: <byte-string>\051) 314.26 620.62 T
(  concatenate\050a, "1"\051;) 99.65 607.62 T
(end method;) 99.65 594.62 T
2 F
(From this, we get the GF object, 2 method objects and the 2 method bodies.) 63.65 569.62 T
0.28 0.23 (The GF object contains slots for such things as the XEP and IEP of the function. Slot number 7 here) 63.65 544.62 B
0.28 0.04 (\050) 63.65 531.62 B
0 F
0.28 0.04 (LIT_13) 67.35 531.62 B
2 F
0.28 0.04 (\051 is a pointer to a list of methods def) 103.02 531.62 B
0.28 0.04 (ined on the generic function. The code belo) 265.5 531.62 B
0.28 0.04 (w sho) 459.96 531.62 B
0.28 0.04 (ws the list) 486.11 531.62 B
0.28 0.98 (implemented as a sequence of ') 63.65 518.62 B
0 F
0.28 0.98 (<pair>) 231.12 518.62 B
2 F
0.28 0.98 (s', which point to) 269.09 518.62 B
0 F
0.28 0.98 (dylan_testXtestXadd_1_1) 366.88 518.62 B
2 F
0.28 0.98 ( and) 509.8 518.62 B
0 F
(dylan_testXtestXadd_1_0) 63.65 505.62 T
2 F
(, the method objects.) 184.03 505.62 T
0 F
(\050mak) 99.65 486.62 T
(e_v) 123.98 486.62 T
(ar_tagdef dylan_testXtestXadd_1) 139.75 486.62 T
(  \050mak) 99.65 473.62 T
(e_nof) 129.48 473.62 T
(    \050L) 99.65 460.62 T
(V) 120.64 460.62 T
(AL dylanXinter) 127.09 460.62 T
(nalX_L_generic_function_G__wrapper\051) 201.79 460.62 T
(    \050INTEGER 1\051) 99.65 447.62 T
(    \050L) 99.65 434.62 T
(V) 120.64 434.62 T
(AL gf_xep_1\051) 127.09 434.62 T
(    \050L) 99.65 421.62 T
(V) 120.64 421.62 T
(AL dylanXinter) 127.09 421.62 T
(nalXdiscriminator_1_IEP\051) 201.79 421.62 T
(    \050L) 99.65 408.62 T
(V) 120.64 408.62 T
(AL dylanXinter) 127.09 408.62 T
(nalX_P_false\051) 201.79 408.62 T
(    \050L) 99.65 395.62 T
(V) 120.64 395.62 T
(AL dylanXinter) 127.09 395.62 T
(nalX_P_false\051) 201.79 395.62 T
(    \050L) 99.65 382.62 T
(V) 120.64 382.62 T
(AL LIT_13\051) 127.09 382.62 T
(    \050L) 99.65 369.62 T
(V) 120.64 369.62 T
(AL dylanXinter) 127.09 369.62 T
(nalX_P_false\051 | \051 \051) 201.79 369.62 T
(\050local mak) 99.65 356.62 T
(e_v) 148.73 356.62 T
(ar_tagdef LIT_13) 164.5 356.62 T
(  \050mak) 99.65 343.62 T
(e_nof) 129.48 343.62 T
(    \050L) 99.65 330.62 T
(V) 120.64 330.62 T
(AL dylanXinter) 127.09 330.62 T
(nalX_L_pair_G__wrapper\051) 201.79 330.62 T
(    \050L) 99.65 317.62 T
(V) 120.64 317.62 T
(AL dylan_testXtestXadd_1_1\051) 127.09 317.62 T
(    \050L) 99.65 304.62 T
(V) 120.64 304.62 T
(AL LIT_14\051 | \051 \051) 127.09 304.62 T
(\050local mak) 99.65 291.62 T
(e_v) 148.73 291.62 T
(ar_tagdef LIT_14) 164.5 291.62 T
(  \050mak) 99.65 278.62 T
(e_nof) 129.48 278.62 T
(    \050L) 99.65 265.62 T
(V) 120.64 265.62 T
(AL dylanXinter) 127.09 265.62 T
(nalX_L_pair_G__wrapper\051) 201.79 265.62 T
(    \050L) 99.65 252.62 T
(V) 120.64 252.62 T
(AL dylan_testXtestXadd_1_0\051) 127.09 252.62 T
(    \050L) 99.65 239.62 T
(V) 120.64 239.62 T
(AL dylanXinter) 127.09 239.62 T
(nalX_P_empty_list\051 | \051 \051) 201.79 239.62 T
2 F
0.26 (The ANDF to b) 63.65 214.62 P
0.26 (uild the \324) 133.56 214.62 P
0 F
0.26 (dylan_testXtestXadd_1_1) 173.79 214.62 P
2 F
0.26 (\325 and \324) 294.18 214.62 P
0 F
0.26 (dylan_testXtestXadd_1_0) 323.4 214.62 P
2 F
0.26 (\325 methods is similar) 443.79 214.62 P
(to that for \324) 63.65 201.62 T
0 F
(dylan_testXtestXconstant_function) 113.44 201.62 T
2 F
(\325 and so is not further documented here.) 278.43 201.62 T
-0.15 (The method body of the) 63.65 176.62 P
0 F
-0.15 (add_1) 171.37 176.62 P
2 F
-0.15 ( method specialised on) 200.1 176.62 P
0 F
-0.15 (<integer>) 302.78 176.62 P
2 F
-0.15 ( includes a call to the generic function) 348.31 176.62 P
0 F
-0.15 (PL) 517.59 176.62 P
2 F
-0.17 (\050i.e.,) 63.65 163.62 P
0 F
-0.17 (+) 86.08 163.62 P
2 F
-0.17 (\051. The return v) 92.35 163.62 P
-0.17 (alue,) 155.08 163.62 P
0 F
-0.17 (RET_0) 178.74 163.62 P
2 F
-0.17 (, is assigned the result of calling the generic function. The function being) 212.35 163.62 P
0.08 (called is the result of the \050) 63.65 150.62 P
5 10 Q
0.08 (SLO) 178.4 150.62 P
0.08 (T_READ) 198.01 150.62 P
2 11 Q
0.08 (... tok) 237.46 150.62 P
0.08 (en. In this case it will e) 262.49 150.62 P
0.08 (xpand into an access on the XEP \336eld) 364.56 150.62 P
-0.09 (of the GF object for) 63.65 137.62 P
0 F
-0.09 (+) 153.29 137.62 P
2 F
-0.09 (. The XEP call tak) 159.56 137.62 P
-0.09 (es the GF object itself and the number of parameters being passed,) 240.03 137.62 P
(in addition to the ar) 63.65 124.62 T
(guments themselv) 149.61 124.62 T
(es.) 229.2 124.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "60" 66
%%Page: "61" 67
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(61) 520.53 84.9 T
0 11 Q
(\050mak) 99.65 737.62 T
(e_id_tagdef dylan_testXtestXadd_1_0_IEP) 123.98 737.62 T
(  \050mak) 99.65 724.62 T
(e_pr) 129.48 724.62 T
(oc pz) 150.67 724.62 T
(    pz - a) 99.65 711.62 T
(  | -) 99.65 698.62 T
(  \050sequence) 99.65 685.62 T
(  \050v) 99.65 672.62 T
(ariable - RET_0 \050O) 114.2 672.62 T
(T dylanXinter) 204.51 672.62 T
(nalX_P_unbound\051) 271.27 672.62 T
(   labelled block_intr) 99.65 659.62 T
(o | \050goto block_intr) 196.02 659.62 T
(o\051) 284.71 659.62 T
(   \050sequence \050mak) 99.65 646.62 T
(e_null_ptr \050alignment top\051\051 # block_intr) 180.81 646.62 T
(o:) 368.22 646.62 T
(     \050ASSIGN) 99.65 633.62 T
(      \050O) 99.65 620.62 T
(T RET_0\051) 127.93 620.62 T
(      \050apply_pr) 99.65 607.62 T
(oc pz \050SLO) 162.4 607.62 T
(T_READ pr) 214.52 607.62 T
(oc AL_FN \050O) 272.07 607.62 T
(T dylanXinter) 335.18 607.62 T
(nalX_PL_\051 FN.xep\051) 401.94 607.62 T
(        \050O) 99.65 594.62 T
(T dylanXinter) 133.43 594.62 T
(nalX_PL_\051) 200.19 594.62 T
(        _2) 99.65 581.62 T
(        \050R) 99.65 568.62 T
(V) 132.65 568.62 T
(AL a\051) 139.1 568.62 T
(        \050INTEGER 1\051 \051\051) 99.65 555.62 T
(    \050r) 99.65 542.62 T
(etur) 119 542.62 T
(n \050R) 138.38 542.62 T
(V) 158.24 542.62 T
(AL RET_0\051\051) 164.7 542.62 T
(  \051\051) 99.65 529.62 T
(\051ENDPR) 99.65 516.62 T
(OC\051\051\051) 140.87 516.62 T
3 10 Q
(7.2.4) 63.65 482.29 T
(Ev) 90.89 482.29 T
(aluating V) 102.92 482.29 T
(ariab) 150.11 482.29 T
(les and Calling Functions) 173.91 482.29 T
0 11 Q
(f) 99.65 461.62 T
(ormat-out\050"The v) 103.04 461.62 T
(alue of *simple* is %s\134n", *simple*\051;) 186.93 461.62 T
2 F
0.2 (This e) 63.65 436.62 P
0.2 (v) 90.76 436.62 P
0.2 (aluates to a call to the IEP of the function.) 95.99 436.62 P
0 F
0.2 (LIT_2) 285.84 436.62 P
2 F
0.2 ( is a dylan) 315.8 436.62 P
0 F
0.2 (<byte-string>) 364.24 436.62 P
2 F
0.2 ( object representing the) 428.11 436.62 P
(te) 63.65 423.62 T
(xt,) 71.43 423.62 T
0 F
(B) 85.48 423.62 T
(UF_0) 92.71 423.62 T
2 F
( is a) 118.37 423.62 T
0 F
(<simple-object-v) 138.84 423.62 T
(ector>) 217.1 423.62 T
2 F
( containing the e) 247.18 423.62 T
(xtra ar) 320.04 423.62 T
(guments \321 just) 348.24 423.62 T
0 F
(*simple*) 420.66 423.62 T
2 F
( in this case.) 462.22 423.62 T
0 F
(\050apply_pr) 99.65 404.62 T
(oc pz \050O) 145.9 404.62 T
(T simple_str) 184.57 404.62 T
(eamsXsimple_str) 243.34 404.62 T
(eamsXf) 323.8 404.62 T
(ormat_out_0_IEP\051) 358.95 404.62 T
(               \050L) 99.65 391.62 T
(V) 150.89 391.62 T
(AL LIT_2\051) 157.34 391.62 T
(               \050L) 99.65 378.62 T
(V) 150.89 378.62 T
(AL B) 157.34 378.62 T
(UF_0\051 \051) 182.6 378.62 T
3 10 Q
(7.2.5) 63.65 344.29 T
(Calling Generic Functions) 90.89 344.29 T
0 11 Q
(add-1\050"98765432"\051;) 99.65 323.62 T
2 F
0.27 (The compiler is able to optimise out the generic dispatch in this case, so the call looks v) 63.65 298.62 P
0.27 (ery much lik) 454.27 298.62 P
0.27 (e the) 510.3 298.62 P
(abo) 63.65 285.62 T
(v) 79.37 285.62 T
(e.) 84.7 285.62 T
0 F
(LIT_3) 95.09 285.62 T
2 F
( is the string) 125.04 285.62 T
0 F
("98765432") 181.88 285.62 T
2 F
( and) 238.09 285.62 T
0 F
(B) 259.47 285.62 T
(UF_1) 266.7 285.62 T
2 F
( is a single element SO) 292.36 285.62 T
(V holding the string) 392.94 285.62 T
0 F
("1") 484 285.62 T
2 F
(.) 501.71 285.62 T
0 F
(\050apply_pr) 99.65 266.62 T
(oc pz \050O) 145.9 266.62 T
(T dylanXinter) 184.57 266.62 T
(nalXconcatenate_0_IEP\051) 251.33 266.62 T
(               \050L) 99.65 253.62 T
(V) 150.89 253.62 T
(AL LIT_3\051) 157.34 253.62 T
(               \050L) 99.65 240.62 T
(V) 150.89 240.62 T
(AL B) 157.34 240.62 T
(UF_1\051 \051) 182.6 240.62 T
3 10 Q
(7.2.6) 63.65 206.29 T
(if) 90.89 206.29 T
0 11 Q
(de\336ne method if-test \050a\051) 99.65 185.62 T
(  if \050a\051) 99.65 172.62 T
(    do-something\050\051) 99.65 159.62 T
(  else) 99.65 146.62 T
(    do-something-else\050\051) 99.65 133.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "61" 67
%%Page: "62" 68
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(62) 63.65 84.9 T
0 11 Q
(  end) 99.65 737.62 T
(end method;) 99.65 724.62 T
2 F
-0.22 (The functionality of) 63.65 699.62 P
0 F
-0.22 (if) 153.74 699.62 P
2 F
-0.22 ( in the ANDF belo) 160.46 699.62 P
-0.22 (w is handled by the) 241.21 699.62 P
5 10 Q
-0.22 (GO) 328.43 699.62 P
-0.22 (T) 343.59 699.62 P
-0.22 (O_IF_TR) 349.3 699.62 P
-0.22 (UE) 390.02 699.62 P
2 11 Q
-0.22 ( tok) 403.91 699.62 P
-0.22 (en, which branches to the) 420.4 699.62 P
0 F
0.28 0.17 (do_something) 63.65 686.62 B
2 F
0.28 0.17 ( call if) 131.03 686.62 B
0 F
0.28 0.17 (a) 164.2 686.62 B
2 F
0.28 0.17 ( is true. Otherwise control continues within) 169.87 686.62 B
0 F
0.28 0.17 (block_intr) 372.34 686.62 B
0.28 0.17 (o) 422.7 686.62 B
2 F
0.28 0.17 (, and mak) 428.36 686.62 B
0.28 0.17 (es the call to) 473.37 686.62 B
0 F
(do_something_else) 63.65 673.62 T
2 F
(.) 151.65 673.62 T
0 F
(\050mak) 99.65 654.62 T
(e_id_tagdef dylan_testXtestXif_test_0_IEP) 123.98 654.62 T
(  \050mak) 99.65 641.62 T
(e_pr) 129.48 641.62 T
(oc pz) 150.67 641.62 T
(    pz - a) 99.65 628.62 T
(  | -) 99.65 615.62 T
(  \050sequence) 99.65 602.62 T
(  \050v) 99.65 589.62 T
(ariable - RET_0 \050O) 114.2 589.62 T
(T dylanXinter) 204.51 589.62 T
(nalX_P_unbound\051) 271.27 589.62 T
(  \050labelled block_intr) 99.65 576.62 T
(o LBL_0 LBL_1 | \050goto block_intr) 196.93 576.62 T
(o\051) 357.15 576.62 T
(    \050sequence \050mak) 99.65 563.62 T
(e_null_ptr \050alignment top\051\051 # block_intr) 183.56 563.62 T
(o:) 370.97 563.62 T
(      \050GO) 99.65 550.62 T
(T) 136.49 550.62 T
(O_IF_TR) 143.63 550.62 T
(UE \050R) 189.13 550.62 T
(V) 218.16 550.62 T
(AL a\051  LBL_1\051) 224.62 550.62 T
(      \050ASSIGN \050O) 99.65 537.62 T
(T RET_0\051) 175.29 537.62 T
(        \050apply_pr) 99.65 524.62 T
(oc pz) 167.9 524.62 T
(          \050SLO) 99.65 511.62 T
(T_READ pr) 152.38 511.62 T
(oc AL_FN \050O) 209.93 511.62 T
(T dylan_testXtestXdo_something_else\051 FN.xep\051) 273.04 511.62 T
(          \050O) 99.65 498.62 T
(T dylan_testXtestXdo_something_else\051) 138.93 498.62 T
(          _0\051\051) 99.65 485.62 T
(      \050goto LBL_0\051\051) 99.65 472.62 T
(    \050sequence \050mak) 99.65 459.62 T
(e_null_ptr \050alignment top\051\051 # LBL_0:) 183.56 459.62 T
(      \050r) 99.65 446.62 T
(etur) 124.5 446.62 T
(n \050R) 143.88 446.62 T
(V) 163.74 446.62 T
(AL RET_0\051\051) 170.2 446.62 T
(      \050goto LBL_1\051\051) 99.65 433.62 T
(    \050sequence \050mak) 99.65 420.62 T
(e_null_ptr \050alignment top\051\051 # LBL_1:) 183.56 420.62 T
(      \050ASSIGN \050O) 99.65 407.62 T
(T RET_0\051) 175.29 407.62 T
(        \050apply_pr) 99.65 394.62 T
(oc pz) 167.9 394.62 T
(          \050SLO) 99.65 381.62 T
(T_READ pr) 152.38 381.62 T
(oc AL_FN \050O) 209.93 381.62 T
(T dylan_testXtestXdo_something\051 FN.xep\051) 273.04 381.62 T
(          \050O) 99.65 368.62 T
(T dylan_testXtestXdo_something\051) 138.93 368.62 T
(           _0\051\051) 99.65 355.62 T
(      \050goto LBL_0\051) 99.65 342.62 T
(    \051\051) 99.65 329.62 T
(  \051ENDPR) 99.65 316.62 T
(OC\051\051\051) 146.37 316.62 T
3 10 Q
(7.2.7) 63.65 282.29 T
(Multiple-V) 90.89 282.29 T
(alue Generation) 138.07 282.29 T
2 11 Q
(T) 63.65 261.62 T
(o specify multiple return v) 69.49 261.62 T
(alues, a Dylan method calls) 185.92 261.62 T
0 F
(v) 309.96 261.62 T
(alues) 315.35 261.62 T
2 F
(. Thus, a method body ending with:) 339.19 261.62 T
0 F
(v) 99.65 242.62 T
(alues\0501, 2, 3\051;) 105.04 242.62 T
2 F
(is returning 3 inte) 63.65 217.62 T
(gers. This doesn't compile into an) 141.4 217.62 T
(ything particularly special:) 289.26 217.62 T
0 F
(\050apply_pr) 99.65 198.62 T
(oc pz) 145.9 198.62 T
(  \050SLO) 99.65 185.62 T
(T_READ pr) 130.38 185.62 T
(oc AL_FN \050O) 187.93 185.62 T
(T dylanXinter) 251.04 185.62 T
(nalXv) 317.8 185.62 T
(alues\051 FN.xep\051) 345.81 185.62 T
(   \050O) 99.65 172.62 T
(T dylanXinter) 119.68 172.62 T
(nalXv) 186.44 172.62 T
(alues\051) 214.44 172.62 T
(   _3) 99.65 159.62 T
(   \050INTEGER 1\051) 99.65 146.62 T
(   \050INTEGER 2\051) 99.65 133.62 T
(   \050INTEGER 3\051\051) 99.65 120.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "62" 68
%%Page: "63" 69
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(63) 520.53 84.9 T
2 11 Q
0.28 0.01 (Which is a call to the e) 63.65 737.62 B
0.28 0.01 (xternal entry point of the v) 166.24 737.62 B
0.28 0.01 (alues GF) 285.3 737.62 B
0.28 0.01 (, passed three parameters, which are the Dylan) 324.21 737.62 B
(inte) 63.65 724.62 T
(gers 1, 2 and 3.) 79.98 724.62 T
3 10 Q
(7.2.8) 63.65 690.29 T
(Multiple-V) 90.89 690.29 T
(alue Binding) 138.07 690.29 T
2 11 Q
0.15 (This form binds the results of a call to v) 63.65 669.62 P
0.15 (alues to the le) 240.39 669.62 P
0.15 (xical v) 301.47 669.62 P
0.15 (ariable results, as a sequence. The implemen-) 330.98 669.62 P
(tation chooses to represent this sequence as a simple object v) 63.65 656.62 T
(ector) 331.72 656.62 T
(.) 353.1 656.62 T
0 F
(begin) 99.65 637.62 T
(  let \050#r) 99.65 624.62 T
(est r) 133.35 624.62 T
(esults\051 = v) 153.61 624.62 T
(alues\0501, 2, 3\051;) 200.72 624.62 T
(  f) 99.65 611.62 T
(ormat-out\050"The r) 108.54 611.62 T
(esults ar) 191.73 611.62 T
(e: %S\134n", r) 230.94 611.62 T
(esults\051;) 284.82 611.62 T
(end;) 99.65 598.62 T
2 F
0.28 0.07 (W) 63.65 573.62 B
0.28 0.07 (e ha) 73.22 573.62 B
0.28 0.07 (v) 91.57 573.62 B
0.28 0.07 (e seen e) 96.98 573.62 B
0.28 0.07 (xamples of calling) 132.74 573.62 B
0 F
0.28 0.07 (f) 218.9 573.62 B
0.28 0.07 (ormat-out) 222.36 573.62 B
2 F
0.28 0.07 ( already) 270.64 573.62 B
0.28 0.07 (, so let's just look at the code in the top le) 305.88 573.62 B
0.28 0.07 (v) 493.47 573.62 B
0.28 0.07 (el form) 498.88 573.62 B
(that implements the let binding of multiple v) 63.65 560.62 T
(alues.) 259.86 560.62 T
0.28 0.34 (There are references to some temporary local v) 63.65 535.62 B
0.28 0.34 (ariables in the code belo) 288.46 535.62 B
0.28 0.34 (w) 404.77 535.62 B
0.28 0.34 (, these are def) 412.34 535.62 B
0.28 0.34 (ined by the) 478.79 535.62 B
0 F
(top_le) 63.65 522.62 T
(v) 92.2 522.62 T
(el_f) 97.59 522.62 T
(orm) 114.42 522.62 T
2 F
( \050or) 133.97 522.62 T
(, more generally) 149.11 522.62 T
(, the function that contains the let binding\051, as follo) 220.18 522.62 T
(ws:) 445.08 522.62 T
0 F
(\050v) 99.65 503.62 T
(ariable - ARG_0 \050O) 108.7 503.62 T
(T dylanXinter) 200.84 503.62 T
(nalX_P_unbound\051) 267.6 503.62 T
(\050v) 99.65 490.62 T
(ariable - o_0 \050O) 108.7 490.62 T
(T dylanXinter) 181.9 490.62 T
(nalX_P_unbound\051) 248.65 490.62 T
(\050v) 99.65 477.62 T
(ariable - r) 108.7 477.62 T
(esults_1M \050O) 155.55 477.62 T
(T dylanXinter) 217.74 477.62 T
(nalX_P_unbound\051) 284.5 477.62 T
2 F
(There are three stages in) 63.65 452.62 T
(v) 170.72 452.62 T
(olv) 176 452.62 T
(ed:) 189.9 452.62 T
0 F
(\050ASSIGN \050O) 99.65 433.62 T
(T ARG_0\051) 158.79 433.62 T
(  \050apply_pr) 99.65 420.62 T
(oc pz) 151.4 420.62 T
(     \050SLO) 99.65 407.62 T
(T_READ pr) 138.63 407.62 T
(oc AL_FN \050O) 196.18 407.62 T
(T dylanXinter) 259.29 407.62 T
(nalXv) 326.05 407.62 T
(alues\051 FN.xep\051) 354.06 407.62 T
(     \050O) 99.65 394.62 T
(T dylanXinter) 125.18 394.62 T
(nalXv) 191.94 394.62 T
(alues\051) 219.94 394.62 T
(     _3) 99.65 381.62 T
(     \050INTEGER 1\051) 99.65 368.62 T
(     \050INTEGER 2\051) 99.65 355.62 T
(     \050INTEGER 3\051\051\051) 99.65 342.62 T
2 F
(This simply mak) 63.65 317.62 T
(es the call to) 137.49 317.62 T
0 F
(v) 195.54 317.62 T
(alues) 200.93 317.62 T
2 F
(, and assigns the result to a local temporary v) 224.76 317.62 T
(ariable,) 423.07 317.62 T
0 F
(ARG_0) 458.5 317.62 T
2 F
(.) 493.95 317.62 T
0 F
(\050ASSIGN \050O) 99.65 298.62 T
(T r) 158.79 298.62 T
(esults_0M\051) 173.57 298.62 T
(  \050apply_pr) 99.65 285.62 T
(oc pz \050O) 151.4 285.62 T
(T dylanXinter) 190.07 285.62 T
(nalXprimiti) 256.83 285.62 T
(v) 312.33 285.62 T
(e_stack_v) 317.72 285.62 T
(ector_r) 363.44 285.62 T
(emaining_v) 397.44 285.62 T
(alues\051 _0\051\051) 451.73 285.62 T
0.28 0.05 (r) 63.65 260.62 B
0.28 0.05 (esults_0M) 68.39 260.62 B
2 F
0.28 0.05 ( then gets allocated as a SO) 116.51 260.62 B
0.28 0.05 (V containing the v) 240.04 260.62 B
0.28 0.05 (alues at the end of the v) 323.1 260.62 B
0.28 0.05 (alues b) 430.24 260.62 B
0.28 0.05 (uf) 461.51 260.62 B
0.28 0.05 (fer) 470.51 260.62 B
0.28 0.05 (. The ar) 482.27 260.62 B
0.28 0.05 (gu-) 516.93 260.62 B
0.08 (ment to) 63.65 247.62 P
0 F
0.08 (primiti) 99.86 247.62 P
0.08 (v) 132.75 247.62 P
0.08 (e_stack_v) 138.14 247.62 P
0.08 (ector_r) 183.85 247.62 P
0.08 (emaining_v) 217.85 247.62 P
0.08 (alues) 272.14 247.62 P
2 F
0.08 ( tells it ho) 295.98 247.62 P
0.08 (w man) 339.63 247.62 P
0.08 (y b) 369.17 247.62 P
0.08 (uf) 382.78 247.62 P
0.08 (fer elements to skip before cop-) 391.67 247.62 P
0.28 0.1 (ying the v) 63.65 234.62 B
0.28 0.1 (alues into the ne) 108.88 234.62 B
0.28 0.1 (w v) 182.86 234.62 B
0.28 0.1 (ector) 199.45 234.62 B
0.28 0.1 (. In this case, all the v) 221.31 234.62 B
0.28 0.1 (alues are being assigned to) 321.01 234.62 B
0 F
0.28 0.1 (r) 445.74 234.62 B
0.28 0.1 (esults) 450.52 234.62 B
2 F
0.28 0.1 ( so we don't) 477.37 234.62 B
0.15 (w) 63.65 221.62 P
0.15 (ant to skip an) 71.48 221.62 P
0.15 (y of them. If the Dylan statement read:) 130.73 221.62 P
0 F
0.15 (let \050r) 305.11 221.62 P
0.15 (esult #r) 327.96 221.62 P
0.15 (est r) 363.05 221.62 P
0.15 (esults\051 = v) 383.46 221.62 P
0.15 (alues\0501, 2, 3\051;) 430.85 221.62 P
2 F
0.15 ( then the) 493.47 221.62 P
(parameter w) 63.65 208.62 T
(ould be 1, so we only cop) 118.21 208.62 T
(y 2 and 3 into the) 230.84 208.62 T
0 F
(r) 310.28 208.62 T
(esults) 314.96 208.62 T
2 F
( v) 341.24 208.62 T
(ector) 349.33 208.62 T
(.) 370.71 208.62 T
3 10 Q
(7.2.9) 63.65 174.29 T
(bind-e) 90.89 174.29 T
(xit) 120.74 174.29 T
2 11 Q
0.12 (This piece of Dylan will cause the block to call) 63.65 153.62 P
0 F
0.12 (inner) 274.98 153.62 P
0.12 (-fn) 299.63 153.62 P
2 F
0.12 (, which might perform a non-local e) 313.07 153.62 P
0.12 (xit and return) 472.15 153.62 P
(a v) 63.65 140.62 T
(alue of 22.) 76.51 140.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "63" 69
%%Page: "64" 70
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(64) 63.65 84.9 T
0 11 Q
(block \050r) 99.65 737.62 T
(etur) 136.42 737.62 T
(n\051) 155.8 737.62 T
(  inner) 99.65 724.62 T
(-fn\050r) 129.8 724.62 T
(etur) 151.59 724.62 T
(n, 22\051;) 170.97 724.62 T
(end;) 99.65 711.62 T
2 F
0.28 0 (Most of the mechanics of this process are contained within the runtime library) 63.65 686.62 B
0.28 0 (, so the compiler output for) 410.43 686.62 B
(the abo) 63.65 673.62 T
(v) 95.56 673.62 T
(e is mostly calls to other routines.) 100.89 673.62 T
0.25 (The code belo) 63.65 648.62 P
0.25 (w \336rst stores the current unwind-protect state in a \336eld of) 126.19 648.62 P
0 F
0.25 (NLX_0) 384.03 648.62 P
2 F
0.25 (, which is a local v) 418.26 648.62 P
0.25 (ariable) 501.72 648.62 P
0.28 0.04 (used to hold information on the bind e) 63.65 635.62 B
0.28 0.04 (xit frame. Then a call is made to the ANSI API) 235.4 635.62 B
0 F
0.28 0.04 (setjmp) 450.63 635.62 B
2 F
0.28 0.04 ( routine, to) 482.65 635.62 B
0.28 0.1 (store the current e) 63.65 622.62 B
0.28 0.1 (x) 145.33 622.62 B
0.28 0.1 (ecution state, in another f) 150.77 622.62 B
0.28 0.1 (ield of the) 265.48 622.62 B
0 F
0.28 0.1 (NLX_0) 314.87 622.62 B
2 F
0.28 0.1 ( structure. If this returns 0, we're calling) 349.6 622.62 B
0 F
0.24 (setjmp) 63.65 609.62 P
2 F
0.24 (, so control continues into the body of the block. If control is being returned to this point via a call) 95.42 609.62 P
0.28 0.13 (to) 63.65 596.62 B
0 F
0.28 0.13 (longjmp) 75.62 596.62 B
2 F
0.28 0.13 (, we'll get a non-zero v) 115.64 596.62 B
0.28 0.13 (alue, and a branch is made to) 220.17 596.62 B
0 F
0.28 0.13 (LBL_0) 356.71 596.62 B
2 F
0.28 0.13 (. The body of the block, in this) 390.37 596.62 B
0.28 0.06 (case, is just the call to the) 63.65 583.62 B
0 F
0.28 0.06 (inner) 182.74 583.62 B
0.28 0.06 (-fn) 207.67 583.62 B
2 F
0.28 0.06 (. The f) 221.28 583.62 B
0.28 0.06 (irst parameter to) 250.64 583.62 B
0 F
0.28 0.06 (inner) 327.31 583.62 B
0.28 0.06 (-fn) 352.24 583.62 B
2 F
0.28 0.06 (, is the result of calling) 365.85 583.62 B
0 F
0.28 0.06 (%mak) 472.59 583.62 B
0.28 0.06 (e-nlx-) 504.48 583.62 B
0.28 0.04 (closur) 63.65 570.62 B
0.28 0.04 (e\050NLX_0\051) 92.41 570.62 B
2 F
0.28 0.04 ( and the other parameter is 22, the return v) 139.15 570.62 B
0.28 0.04 (alue specif) 330.04 570.62 B
0.28 0.04 (ied in the Dylan code fragment. In) 377.48 570.62 B
0.28 0.27 (essence, the nlx-closure will cop) 63.65 557.62 B
0.28 0.27 (y the return v) 216.82 557.62 B
0.28 0.27 (alues that it's gi) 280.12 557.62 B
0.28 0.27 (v) 353.82 557.62 B
0.28 0.27 (en into the) 359.42 557.62 B
0 F
0.28 0.27 (r) 412.68 557.62 B
0.28 0.27 (etur) 417.64 557.62 B
0.28 0.27 (n_v) 438.1 557.62 B
0.28 0.27 (alues) 455.91 557.62 B
2 F
0.28 0.27 ( slot of the) 481.1 557.62 B
0 F
-0.02 (NLX_0) 63.65 544.62 P
2 F
-0.02 (object, and then perform a) 100.6 544.62 P
0 F
-0.02 (longjmp) 219.03 544.62 P
2 F
-0.02 (, which will return control to the) 258.14 544.62 P
0 F
-0.02 (setjmp) 403.44 544.62 P
2 F
-0.02 ( part of the code. This) 435.21 544.62 P
0.09 (time, the branch will be tak) 63.65 531.62 P
0.09 (en, and all that remains is the call to) 184.36 531.62 P
0 F
0.09 (set-v) 346.48 531.62 P
0.09 (alues!) 368.36 531.62 P
2 F
0.09 ( to cop) 395.86 531.62 P
0.09 (y the return v) 425.87 531.62 P
0.09 (alues from) 484.82 531.62 P
(the bind e) 63.65 518.62 T
(xit frame into the) 106.87 518.62 T
0 F
(%v) 185.69 518.62 T
(alues) 202.08 518.62 T
2 F
( b) 225.92 518.62 T
(uf) 233.95 518.62 T
(fer) 242.84 518.62 T
(.) 254.44 518.62 T
0 F
(\050v) 99.65 499.62 T
(ariable - NLX_0 \050mak) 108.7 499.62 T
(e_v) 212.17 499.62 T
(alue BEF_OFFSET\051 ...) 227.94 499.62 T
(\050ASSIGN) 99.65 486.62 T
(  \050SLO) 99.65 473.62 T
(T_WRITE AL_BEF \050O) 130.38 473.62 T
(T NLX_0\051 BEF) 240.57 473.62 T
(.pr) 311.48 473.62 T
(esent_unwind_pr) 325.03 473.62 T
(otect_frame\051) 406.12 473.62 T
(  \050R) 99.65 460.62 T
(V) 116.15 460.62 T
(AL _P_curr) 122.61 460.62 T
(ent_unwind_pr) 178.93 460.62 T
(otect_frame\051\051) 250.85 460.62 T
(\050PRIM_GO) 99.65 447.62 T
(T) 154.81 447.62 T
(O_IF_TR) 161.95 447.62 T
(UE) 207.46 447.62 T
(  \050ansi.setjmp.setjmp \050add_to_ptr \050O) 99.65 434.62 T
(T NLX_0\051 BEF) 270.3 434.62 T
(.destination\051\051) 341.21 434.62 T
(  LBL_0\051) 99.65 421.62 T
(\050apply_pr) 99.65 408.62 T
(oc pz \050SLO) 145.9 408.62 T
(T_READ pr) 198.02 408.62 T
(oc AL_FN \050O) 255.57 408.62 T
(T dylan_testXtestXinner_fn\051 FN.xep\051) 318.68 408.62 T
(  \050O) 99.65 395.62 T
(T dylan_testXtestXinner_fn\051) 116.93 395.62 T
(  _2) 99.65 382.62 T
(  \050apply_pr) 99.65 369.62 T
(oc pz \050O) 151.4 369.62 T
(T dylanXinter) 190.07 369.62 T
(nalX_P_mak) 256.83 369.62 T
(e_nlx_closur) 317.83 369.62 T
(e_IEP\051) 376.91 369.62 T
(    \050L) 99.65 356.62 T
(V) 120.64 356.62 T
(AL NLX_0\051\051) 127.09 356.62 T
(    \050INTEGER 22\051\051) 99.65 343.62 T
(\050goto LBL_1\051\051) 99.65 330.62 T
(\050sequence \050mak) 99.65 317.62 T
(e_null_ptr \050alignment top\051\051 # LBL_0:) 172.56 317.62 T
(  \050apply_pr) 99.65 304.62 T
(oc pz \050O) 151.4 304.62 T
(T dylanXinter) 190.07 304.62 T
(nalXset_v) 256.83 304.62 T
(alues_E__IEP\051) 303.16 304.62 T
(    \050~to_ptr_v) 99.65 291.62 T
(oid \050alignment pz\051 \050add_to_ptr \050O) 160.25 291.62 T
(T NLX_0\051 BEF) 319.31 291.62 T
(.r) 390.21 291.62 T
(etur) 397.65 291.62 T
(n_v) 417.03 291.62 T
(alues\051\051\051) 434.04 291.62 T
(  \050goto LBL_1\051\051) 99.65 278.62 T
(    \050sequence \050mak) 99.65 265.62 T
(e_null_ptr \050alignment top\051\051 # LBL_1:) 183.56 265.62 T
3 10 Q
(7.2.10) 63.65 231.29 T
(unwind-pr) 96.45 231.29 T
(otect) 144.58 231.29 T
2 11 Q
-0.07 (Dylan guarantees that the cleanup clause in the block statement belo) 63.65 210.62 P
-0.07 (w) 363.27 210.62 P
-0.07 (, will be e) 370.5 210.62 P
-0.07 (x) 413.5 210.62 P
-0.07 (ecuted, whether the block) 418.84 210.62 P
(performs a non-local e) 63.65 197.62 T
(xit or not.) 162.76 197.62 T
0 F
(block \050r) 99.65 178.62 T
(etur) 136.42 178.62 T
(n\051) 155.8 178.62 T
(  inner) 99.65 165.62 T
(-fn\050r) 129.8 165.62 T
(etur) 151.59 165.62 T
(n, 22\051;) 170.97 165.62 T
(cleanup) 99.65 152.62 T
(  f) 99.65 139.62 T
(ormat-out\050"Cleanup happening\134n"\051;) 108.54 139.62 T
(end;) 99.65 126.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "64" 70
%%Page: "65" 71
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(65) 520.53 84.9 T
2 11 Q
-0.16 (This is v) 63.65 737.62 P
-0.16 (ery similar to the pre) 101.06 737.62 P
-0.16 (vious case, b) 191.8 737.62 P
-0.16 (ut in addition to the bind e) 247.77 737.62 P
-0.16 (xit frame for the block, there is also an) 362.77 737.62 P
0.28 0.17 (unwind-protect frame. If no nlx is performed, control w) 63.65 724.62 B
0.28 0.17 (ould transfer from then end of the body of the) 320.15 724.62 B
-0.06 (block straight to the cleanup clause \050the block represented by) 63.65 711.62 P
0 F
-0.06 (LBL_1) 334.93 711.62 P
2 F
-0.06 ( to the block represented by) 367.94 711.62 P
0 F
-0.06 (LBL_2) 492.22 711.62 P
2 F
-0.06 (\051.) 525.23 711.62 P
0.28 0.23 (When a nlx does occur) 63.65 698.62 B
0.28 0.23 (, the cleanup clause will be called by code in the runtime system, because the) 170.04 698.62 B
0.28 0.81 (unwind-protect frame has been pushed onto the list of acti) 63.65 685.62 B
0.28 0.81 (v) 368.22 685.62 B
0.28 0.81 (e bind e) 374.36 685.62 B
0.28 0.81 (xit frames. The call to) 416 685.62 B
0 F
0.12 (continue_unwind\050\051) 63.65 672.62 P
2 F
0.12 ( passes control back to the runtime system, which can then) 152.27 672.62 P
0 F
0.12 (longjmp) 414.46 672.62 P
2 F
0.12 ( to the ne) 453.58 672.62 P
0.12 (xt acti) 494.39 672.62 P
0.12 (v) 521.43 672.62 P
0.12 (e) 526.76 672.62 P
(nlx frame, which in this case will be the bind e) 63.65 659.62 T
(xit frame representing the block.) 269.1 659.62 T
0 F
(\050v) 99.65 640.62 T
(ariable - NLX_1 \050mak) 108.7 640.62 T
(e_v) 212.17 640.62 T
(alue BEF_OFFSET\051 ...) 227.94 640.62 T
(\050v) 99.65 627.62 T
(ariable - NLX_2 \050mak) 108.7 627.62 T
(e_v) 212.17 627.62 T
(alue UPF_OFFSET\051 ...) 227.94 627.62 T
(\050sequence \050mak) 99.65 614.62 T
(e_null_ptr \050alignment top\051\051 # LBL_1:) 172.56 614.62 T
(  \050ASSIGN) 99.65 601.62 T
(    \050SLO) 99.65 588.62 T
(T_WRITE AL_BEF \050O) 135.88 588.62 T
(T NLX_1\051 BEF) 246.07 588.62 T
(.pr) 316.98 588.62 T
(esent_unwind_pr) 330.53 588.62 T
(otect_frame\051) 411.62 588.62 T
(    \050R) 99.65 575.62 T
(V) 121.65 575.62 T
(AL _P_curr) 128.1 575.62 T
(ent_unwind_pr) 184.43 575.62 T
(otect_frame\051\051) 256.35 575.62 T
(  \050PRIM_GO) 99.65 562.62 T
(T) 160.31 562.62 T
(O_IF_TR) 167.45 562.62 T
(UE) 212.96 562.62 T
(    \050ansi.setjmp.setjmp \050add_to_ptr \050O) 99.65 549.62 T
(T NLX_1\051 BEF) 275.8 549.62 T
(.destination\051\051) 346.71 549.62 T
(    LBL_4\051) 99.65 536.62 T
(  \050ASSIGN) 99.65 523.62 T
(    \050SLO) 99.65 510.62 T
(T_WRITE AL_UPF \050O) 135.88 510.62 T
(T NLX_2\051 UPF) 246.06 510.62 T
(.ultimate_destination\051) 316.95 510.62 T
(    _0\051) 99.65 497.62 T
(  \050ASSIGN) 99.65 484.62 T
(    \050SLO) 99.65 471.62 T
(T_WRITE AL_UPF \050O) 135.88 471.62 T
(T NLX_2\051 UPF) 246.06 471.62 T
(.pr) 316.95 471.62 T
(e) 330.51 471.62 T
(vious_unwind_pr) 335.22 471.62 T
(otect_frame\051) 416.94 471.62 T
(    \050R) 99.65 458.62 T
(V) 121.65 458.62 T
(AL _P_curr) 128.1 458.62 T
(ent_unwind_pr) 184.43 458.62 T
(otect_frame\051\051) 256.35 458.62 T
(  \050ASSIGN) 99.65 445.62 T
(    \050O) 99.65 432.62 T
(T _P_curr) 122.43 432.62 T
(ent_unwind_pr) 170.81 432.62 T
(otect_frame\051) 242.74 432.62 T
(    \050L) 99.65 419.62 T
(V) 120.64 419.62 T
(AL NLX_2\051\051) 127.09 419.62 T
(  \050PRIM_GO) 99.65 406.62 T
(T) 160.31 406.62 T
(O_IF_TR) 167.45 406.62 T
(UE) 212.96 406.62 T
(    \050ansi.setjmp.setjmp \050SLO) 99.65 393.62 T
(T_READ jmp_b) 230.28 393.62 T
(uf_shape AL_UPF \050O) 307.37 393.62 T
(T NLX_2\051) 408.99 393.62 T
(UPF) 99.65 380.62 T
(.destination\051\051) 119.82 380.62 T
(    LBL_5\051) 99.65 367.62 T
(  \050ASSIGN) 99.65 354.62 T
(    \050O) 99.65 341.62 T
(T ARG_1\051) 122.43 341.62 T
(    \050apply_pr) 99.65 328.62 T
(oc pz \050SLO) 156.9 328.62 T
(T_READ pr) 209.02 328.62 T
(oc AL_FN \050O) 266.57 328.62 T
(T dylan_testXtestXinner_fn\051 FN.xep\051) 329.68 328.62 T
(    \050O) 99.65 315.62 T
(T dylan_testXtestXinner_fn\051) 122.43 315.62 T
(    _2) 99.65 302.62 T
(    \050apply_pr) 99.65 289.62 T
(oc pz \050O) 156.9 289.62 T
(T dylanXinter) 195.57 289.62 T
(nalX_P_mak) 262.33 289.62 T
(e_nlx_closur) 323.33 289.62 T
(e_IEP\051) 382.41 289.62 T
(      \050L) 99.65 276.62 T
(V) 126.14 276.62 T
(AL NLX_1\051\051) 132.59 276.62 T
(      \050INTEGER 22\051 \051\051) 99.65 263.62 T
(  \050goto LBL_2\051\051) 99.65 250.62 T
(\050sequence \050mak) 99.65 237.62 T
(e_null_ptr \050alignment top\051\051 # LBL_2:) 172.56 237.62 T
(  \050apply_pr) 99.65 224.62 T
(oc pz \050O) 151.4 224.62 T
(T simple_f) 190.07 224.62 T
(ormatXsimple_f) 239.6 224.62 T
(ormatXf) 315.7 224.62 T
(ormat_out_0_IEP\051) 355.74 224.62 T
(    \050L) 99.65 211.62 T
(V) 120.64 211.62 T
(AL LIT_4\051) 127.09 211.62 T
(    \050L) 99.65 198.62 T
(V) 120.64 198.62 T
(AL LIT_1\051 \051) 127.09 198.62 T
(  \050apply_pr) 99.65 185.62 T
(oc pz \050O) 151.4 185.62 T
(T dylanXinter) 190.07 185.62 T
(nalXprimiti) 256.83 185.62 T
(v) 312.33 185.62 T
(e_continue_unwind\051\051) 317.72 185.62 T
(  \050goto LBL_3\051\051) 99.65 172.62 T
(\050sequence \050mak) 99.65 159.62 T
(e_null_ptr \050alignment top\051\051 # LBL_3:) 172.56 159.62 T
2 F
(The follo) 63.65 134.62 T
(wing is top-le) 104.01 134.62 T
(v) 164.23 134.62 T
(el code follo) 169.57 134.62 T
(wing the end of the block:) 224.28 134.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "65" 71
%%Page: "66" 72
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(66) 63.65 84.9 T
0 11 Q
(\050sequence \050mak) 99.65 737.62 T
(e_null_ptr \050alignment top\051\051 # LBL_4:) 172.56 737.62 T
(  \050apply_pr) 99.65 724.62 T
(oc pz \050O) 151.4 724.62 T
(T dylanXinter) 190.07 724.62 T
(nalXset_v) 256.83 724.62 T
(alues_E__IEP\051) 303.16 724.62 T
(    \050~to_ptr_v) 99.65 711.62 T
(oid \050alignment pz\051 \050add_to_ptr \050O) 160.25 711.62 T
(T NLX_1\051 BEF) 319.31 711.62 T
(.r) 390.21 711.62 T
(etur) 397.65 711.62 T
(n_v) 417.03 711.62 T
(alues\051\051\051) 434.04 711.62 T
(  \050goto LBL_5\051\051) 99.65 698.62 T
(\050sequence \050mak) 99.65 685.62 T
(e_null_ptr \050alignment top\051\051 # LBL_5:) 172.56 685.62 T
(  \050goto LBL_2\051\051) 99.65 672.62 T
3 10 Q
(7.2.11) 63.65 638.29 T
(Closures) 96.45 638.29 T
0 11 Q
(de\336ne method mak) 99.65 617.62 T
(e-add-n \050n :: <integer>\051 => \050closur) 189.38 617.62 T
(e :: <function>\051) 350.21 617.62 T
(    method \050x :: <integer>\051 => \050r) 99.65 604.62 T
(es :: <integer>\051) 246.41 604.62 T
(        x + n;) 99.65 591.62 T
(    end method;) 99.65 578.62 T
(end method;) 99.65 565.62 T
2 F
-0.25 (Calling) 63.65 540.62 P
0 F
-0.25 (mak) 98.55 540.62 P
-0.25 (e-add-n\0502\051) 119.22 540.62 P
2 F
-0.25 ( returns a method that adds tw) 168.1 540.62 P
-0.25 (o to its ar) 299.11 540.62 P
-0.25 (gument. Let's consider the ANDF in re) 339.42 540.62 P
-0.25 (v) 508.6 540.62 P
-0.25 (erse) 513.94 540.62 P
(order) 63.65 527.62 T
(.) 86.25 527.62 T
0.28 0.08 (The proc belo) 63.65 502.62 B
0.28 0.08 (w is the implementation of the inner method abo) 126.03 502.62 B
0.28 0.08 (v) 345.6 502.62 B
0.28 0.08 (e. It calls the) 351.01 502.62 B
0 F
0.28 0.08 (+) 412.32 502.62 B
2 F
0.28 0.08 ( generic function passing) 418.67 502.62 B
0.15 (both its sole ar) 63.65 489.62 P
0.15 (gument, and the \336rst data item in its en) 128.37 489.62 P
0.15 (vironment, which will correspond to) 300.53 489.62 P
0 F
0.15 (n) 464.43 489.62 P
2 F
0.15 (. This method) 470.54 489.62 P
(is statically b) 63.65 476.62 T
(uilt as a) 121.49 476.62 T
1 F
(pr) 158.46 476.62 T
(ototype) 167.74 476.62 T
2 F
(, from which the closure will be copied when its en) 200.12 476.62 T
(vironment is kno) 424.84 476.62 T
(wn.) 499.13 476.62 T
0 F
(\050local mak) 99.65 457.62 T
(e_id_tagdef dylan_testXtestXanonymous_3_IEP_0) 148.73 457.62 T
(  \050mak) 99.65 444.62 T
(e_pr) 129.48 444.62 T
(oc pz) 150.67 444.62 T
(    pz - x) 99.65 431.62 T
(  | -) 99.65 418.62 T
(  \050sequence) 99.65 405.62 T
(  \050v) 99.65 392.62 T
(ariable - en) 114.2 392.62 T
(vir) 166.92 392.62 T
(onment \050SLO) 180.17 392.62 T
(T_READ pz AL_FN \050R) 243.59 392.62 T
(V) 353.29 392.62 T
(AL _P_function\051 FN.en) 359.74 392.62 T
(vir) 468.99 392.62 T
(onment\051) 482.24 392.62 T
(  \050v) 99.65 379.62 T
(ariable - RET_0 \050O) 114.2 379.62 T
(T dylanXinter) 204.51 379.62 T
(nalX_P_unbound\051) 271.27 379.62 T
(  \050labelled block_intr) 99.65 366.62 T
(o | \050goto block_intr) 196.93 366.62 T
(o\051) 285.62 366.62 T
(  \050sequence \050mak) 99.65 353.62 T
(e_null_ptr \050alignment top\051\051 # block_intr) 178.06 353.62 T
(o:) 365.47 353.62 T
(    \050ASSIGN) 99.65 340.62 T
(      \050O) 99.65 327.62 T
(T RET_0\051) 127.93 327.62 T
(      \050apply_pr) 99.65 314.62 T
(oc pz \050SLO) 162.4 314.62 T
(T_READ pr) 214.52 314.62 T
(oc AL_FN \050O) 272.07 314.62 T
(T dylanXinter) 335.18 314.62 T
(nalX_PL_\051 FN.xep\051) 401.94 314.62 T
(        \050O) 99.65 301.62 T
(T dylanXinter) 133.43 301.62 T
(nalX_PL_\051) 200.19 301.62 T
(        _2) 99.65 288.62 T
(        \050R) 99.65 275.62 T
(V) 132.65 275.62 T
(AL x\051) 139.1 275.62 T
(        \050READ_VECT) 99.65 262.62 T
(OR_ELEMENT \050O) 192.33 262.62 T
(T en) 283.88 262.62 T
(vir) 304.52 262.62 T
(onment\051 \050INT_ADD _0 _2\051\051\051\051) 317.77 262.62 T
(    \050r) 99.65 249.62 T
(etur) 119 249.62 T
(n \050R) 138.38 249.62 T
(V) 158.24 249.62 T
(AL RET_0\051\051) 164.7 249.62 T
(  \051\051) 99.65 236.62 T
(\051\051ENDPR) 99.65 223.62 T
(OC\051\051\051) 144.53 223.62 T
2 F
-0.18 (T) 63.65 198.62 P
-0.18 (o generate a method that is closed o) 69.49 198.62 P
-0.18 (v) 225.39 198.62 P
-0.18 (er) 230.73 198.62 P
0 F
-0.18 (n) 241.84 198.62 P
2 F
-0.18 (, we create a ne) 247.96 198.62 P
-0.18 (w method object by cop) 315.06 198.62 P
-0.18 (ying the prototype for the) 419.94 198.62 P
(closure, with its en) 63.65 185.62 T
(vironment initialised to the appropriate v) 146.31 185.62 T
(alue.) 326 185.62 T
0 F
(\050mak) 99.65 166.62 T
(e_id_tagdef dylan_testXtestXmak) 123.98 166.62 T
(e_add_n_0_IEP) 282.43 166.62 T
(  \050mak) 99.65 153.62 T
(e_pr) 129.48 153.62 T
(oc pz) 150.67 153.62 T
(    pz - n) 99.65 140.62 T
(  | -) 99.65 127.62 T
(  \050sequence) 99.65 114.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "66" 72
%%Page: "67" 73
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(67) 520.53 84.9 T
0 11 Q
(  \050labelled block_intr) 99.65 737.62 T
(o | \050goto block_intr) 196.93 737.62 T
(o\051) 285.62 737.62 T
(  \050sequence \050mak) 99.65 724.62 T
(e_null_ptr \050alignment top\051\051 # block_intr) 178.06 724.62 T
(o:) 365.47 724.62 T
(    \050ASSIGN \050O) 99.65 711.62 T
(T _P_number_v) 169.79 711.62 T
(alues\051 _1\051) 245.77 711.62 T
(    \050r) 99.65 698.62 T
(etur) 119 698.62 T
(n) 138.38 698.62 T
(      \050apply_pr) 99.65 685.62 T
(oc pz \050O) 162.4 685.62 T
(T dylanXinter) 201.07 685.62 T
(nalX_P_copy_method_using_en) 267.83 685.62 T
(vir) 417.73 685.62 T
(onment_IEP\051) 430.98 685.62 T
(        \050L) 99.65 672.62 T
(V) 131.64 672.62 T
(AL dylan_testXtestXanonymous_3_0\051) 138.09 672.62 T
(        \050apply_pr) 99.65 659.62 T
(oc pz \050O) 167.9 659.62 T
(T dylanXinter) 206.57 659.62 T
(nalXprimiti) 273.33 659.62 T
(v) 328.83 659.62 T
(e_mak) 334.22 659.62 T
(e_en) 365.28 659.62 T
(vir) 386.22 659.62 T
(onment\051) 399.46 659.62 T
(          _1) 99.65 646.62 T
(          \050R) 99.65 633.62 T
(V) 138.15 633.62 T
(AL n\051\051\051\051) 144.6 633.62 T
(    \051\051) 99.65 620.62 T
(ENDPR) 99.65 607.62 T
(OC\051\051\051) 137.2 607.62 T
3 15 Q
(8.) 63.65 565.95 T
(Conc) 90.65 565.95 T
(lusions) 127.85 565.95 T
2 11 Q
0.06 (As noted in chapter 1, this deli) 63.65 543.62 P
0.06 (v) 198.46 543.62 P
0.06 (erable and its associated softw) 203.8 543.62 P
0.06 (are demonstration represent the culmination) 337.73 543.62 P
0.28 0.02 (of Harlequin\325) 63.65 530.62 B
0.28 0.02 (s ef) 123.18 530.62 B
0.28 0.02 (forts in W) 138.85 530.62 B
0.28 0.02 (orkpackage 4 of the GLUE project. The original goal w) 183.35 530.62 B
0.28 0.02 (as to establish the ef) 431.31 530.62 B
0.28 0.02 (f) 521.84 530.62 B
0.28 0.02 (i-) 524.93 530.62 B
0.14 (cac) 63.65 517.62 P
0.14 (y of ANDF\325) 78.14 517.62 P
0.14 (s support for the compilation of adv) 131.57 517.62 P
0.14 (anced languages by de) 289.78 517.62 P
0.14 (v) 389.2 517.62 P
0.14 (eloping a Dylan producer) 394.53 517.62 P
0.14 (. This) 506.45 517.62 P
0.26 (included the de) 63.65 504.62 P
0.26 (v) 131.11 504.62 P
0.26 (elopment of the appropriate load-time and runtime support for adv) 136.45 504.62 P
0.26 (anced languages based) 430.93 504.62 P
(on ANDF hooks.) 63.65 491.62 T
0.18 (The w) 63.65 466.62 P
0.18 (ork reported here represents the fourth and \336nal stage of de) 91.51 466.62 P
0.18 (v) 353.29 466.62 P
0.18 (elopment, and so we shall ag) 358.62 466.62 P
0.18 (ain brie\337y) 486.56 466.62 P
0.13 (describe the initial three stages. In the \336rst stage Harlequin used their background in e) 63.65 453.62 P
0.13 (xisting implementa-) 443.21 453.62 P
0.28 0.13 (tions of de) 63.65 440.62 B
0.28 0.13 (v) 111.84 440.62 B
0.28 0.13 (elopment en) 117.31 440.62 B
0.28 0.13 (vironments to identify the features which require support from ANDF to allo) 172.69 440.62 B
0.28 0.13 (w) 523.7 440.62 B
0.03 (both the ef) 63.65 427.62 P
0.03 (\336cient compilation of Dylan and the ef) 110.48 427.62 P
0.03 (\336cient implementation of its runtime system. The second) 280.88 427.62 P
0.06 (stage took the results of this w) 63.65 414.62 P
0.06 (ork and be) 197.71 414.62 P
0.06 (g) 244.09 414.62 P
0.06 (an the incremental de) 249.54 414.62 P
0.06 (v) 343.83 414.62 P
0.06 (elopment of a Dylan producer) 349.16 414.62 P
0.06 (. In the \336rst) 480.75 414.62 P
0.28 0.06 (instance, a small subset of Dylan w) 63.65 401.62 B
0.28 0.06 (as implemented, leading to an initial e) 222.72 401.62 B
0.28 0.06 (v) 394.09 401.62 B
0.28 0.06 (aluation of ANDF\325) 399.37 401.62 B
0.28 0.06 (s ability to) 484.01 401.62 B
0.28 0.21 (support the rele) 63.65 388.62 B
0.28 0.21 (v) 135.65 388.62 B
0.28 0.21 (ant language features and runtime system. The third stage focused on inter) 141.08 388.62 B
0.28 0.21 (-language) 486.63 388.62 B
0.28 0.14 (w) 63.65 375.62 B
0.28 0.14 (orking. Softw) 71.61 375.62 B
0.28 0.14 (are components written in ANDF-supported languages were combined with Dylan pro-) 134.04 375.62 B
-0.2 (ducer output, with the aim of ensuring that no performance penalty w) 63.65 362.62 P
-0.2 (as imposed on the other ANDF-based) 366.78 362.62 P
(components.) 63.65 349.62 T
0.28 0.17 (This deli) 63.65 324.62 B
0.28 0.17 (v) 104 324.62 B
0.28 0.17 (erable reports the w) 109.5 324.62 B
0.28 0.17 (ork of the fourth stage, the incremental e) 200.7 324.62 B
0.28 0.17 (xtension of the implementation) 388.66 324.62 B
0.18 (to) 63.65 311.62 P
0.18 (w) 71.93 311.62 P
0.18 (ards a prototype Dylan system. The incremental approach allo) 79.76 311.62 P
0.18 (wed the impact of v) 354.31 311.62 P
0.18 (arious language fea-) 442.11 311.62 P
0.28 0 (tures on the runtime to be studied, and also allo) 63.65 298.62 B
0.28 0 (wed the controlled introduction of a range of optimisation) 274.42 298.62 B
(techniques used by Harlequin.) 63.65 285.62 T
0.12 (In completing this stage we wished to pro) 63.65 260.62 P
0.12 (vide a de) 247.96 260.62 P
0.12 (gree of algorithmic interchangeability in certain impor-) 287.74 260.62 P
0.28 0 (tant subsystems of the implementation such as the g) 63.65 247.62 B
0.28 0 (arbage collector) 294.47 247.62 B
0.28 0 (, the function calling mechanism, and) 364.9 247.62 B
0.28 0.15 (the manipulation of tagged data. The approach of abstracting these important subsystems w) 63.65 234.62 B
0.28 0.15 (as tak) 482.65 234.62 B
0.28 0.15 (en in) 509.08 234.62 B
0.23 (order to allo) 63.65 221.62 P
0.23 (w rapid e) 117.6 221.62 P
0.23 (xperimentation with dif) 158.82 221.62 P
0.23 (ferent implementations. By mo) 262.89 221.62 P
0.23 (ving as man) 400.29 221.62 P
0.23 (y of the details of) 453.74 221.62 P
-0.07 (the implementation as possible into the Dylan tok) 63.65 208.62 P
-0.07 (en library we were able to signi\336cantly shorten the \322edit-) 281.5 208.62 P
-0.24 (compile-e) 63.65 195.62 P
-0.24 (v) 107.36 195.62 P
-0.24 (aluate\323 c) 112.59 195.62 P
-0.24 (ycle for e) 150.96 195.62 P
-0.24 (xperimentation with implementation techniques. Changes to tok) 191.85 195.62 P
-0.24 (en de\336nitions) 472.3 195.62 P
0.28 0.01 (became ef) 63.65 182.62 B
0.28 0.01 (fecti) 108.66 182.62 B
0.28 0.01 (v) 127.99 182.62 B
0.28 0.01 (e as soon as the modif) 133.34 182.62 B
0.28 0.01 (ied tok) 231.86 182.62 B
0.28 0.01 (en library w) 262.37 182.62 B
0.28 0.01 (as recompiled, and the pre) 316.11 182.62 B
0.28 0.01 (viously produced test-) 433.05 182.62 B
0.28 0.03 (suite and benchmark programs had only to be re-installed with the modif) 63.65 169.62 B
0.28 0.03 (ied tok) 388.84 169.62 B
0.28 0.03 (en library before the ne) 419.48 169.62 B
0.28 0.03 (w) 523.71 169.62 B
(implementation strate) 63.65 156.62 T
(gy could be e) 159.12 156.62 T
(v) 217.8 156.62 T
(aluated.) 223.03 156.62 T
0.09 (The Dylan tok) 63.65 131.62 P
0.09 (en library has been carefully designed to support the desired combinations of runtime acti) 127.25 131.62 P
0.09 (v-) 522.48 131.62 P
0.28 0.07 (ity) 63.65 118.62 B
0.28 0.07 (, while k) 74.77 118.62 B
0.28 0.07 (eeping the e) 114.05 118.62 B
0.28 0.07 (xternally visible set of tok) 168.46 118.62 B
0.28 0.07 (ens simple. This is desirable as a simpler tok) 286.37 118.62 B
0.28 0.07 (en library) 488.26 118.62 B
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "67" 73
%%Page: "68" 74
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(68) 63.65 84.9 T
2 11 Q
0.28 0.06 (helps to k) 63.65 737.62 B
0.28 0.06 (eep the compiler back-end relati) 107.43 737.62 B
0.28 0.06 (v) 251.79 737.62 B
0.28 0.06 (ely simple: comple) 257.18 737.62 B
0.28 0.06 (xity is mo) 342.3 737.62 B
0.28 0.06 (v) 387.26 737.62 B
0.28 0.06 (ed out of the compiler and into) 392.65 737.62 B
0.28 0.04 (the tok) 63.65 724.62 B
0.28 0.04 (en library) 94.35 724.62 B
0.28 0.04 (. A manageable tok) 136.78 724.62 B
0.28 0.04 (en library also pro) 223.78 724.62 B
0.28 0.04 (vides the possibility of future e) 305.57 724.62 B
0.28 0.04 (xtensibility without) 444.71 724.62 B
0.28 0.18 (the need for e) 63.65 711.62 B
0.28 0.18 (xtensi) 126.94 711.62 B
0.28 0.18 (v) 154 711.62 B
0.28 0.18 (e modif) 159.51 711.62 B
0.28 0.18 (ication to the compiler) 194.32 711.62 B
0.28 0.18 (. In the ideal case, only the def) 297.88 711.62 B
0.28 0.18 (initions in the tok) 439.71 711.62 B
0.28 0.18 (en) 521.09 711.62 B
(library w) 63.65 698.62 T
(ould need to be changed.) 103.56 698.62 T
0.19 (Our primary conclusion is that this approach has been successful: our Dylan producer for the Solaris plat-) 63.65 673.62 P
-0.05 (form can be compiled and run to demonstrate a complete implementation of Dylan with interf) 63.65 660.62 P
-0.05 (ace to C. W) 475.87 660.62 P
-0.05 (e) 526.76 660.62 P
0.14 (ha) 63.65 647.62 P
0.14 (v) 73.81 647.62 P
0.14 (e thus sho) 79.15 647.62 P
0.14 (wn that ANDF can be used to support dynamic languages along with the use of g) 123.15 647.62 P
0.14 (arbage col-) 482.34 647.62 P
0.28 0.04 (lection techniques. The compiler and runtime structures that implement this are detailed in the preceding) 63.65 634.62 B
0.22 (chapters. The techniques used to implement g) 63.65 621.62 P
0.22 (arbage collection ha) 266.22 621.62 P
0.22 (v) 355.02 621.62 P
0.22 (e been described in an earlier deli) 360.36 621.62 P
0.22 (v) 509.22 621.62 P
0.22 (era-) 514.55 621.62 P
(ble, TR 4.2.2a, \322Initial Ev) 63.65 608.62 T
(aluation of TDF support for Garbage Collection\323 [Mann93a].) 177.64 608.62 T
0.28 0.11 (A further conclusion is that Dylan's features can be implemented with minimal additional support from) 63.65 583.62 B
0.28 0.25 (core ANDF) 63.65 570.62 B
0.28 0.25 (. Support for the more comple) 116.95 570.62 B
0.28 0.25 (x features of the language is pro) 258.11 570.62 B
0.28 0.25 (vided by tok) 409.09 570.62 B
0.28 0.25 (ens which are) 467.58 570.62 B
0.09 (e) 63.65 557.62 P
0.09 (xpanded at installation time. This has the bene\336t that the implementation details can be platform depend-) 68.37 557.62 P
-0.27 (ent, enabling the best use to be made of each platform. One dra) 63.65 544.62 P
-0.27 (wback, ho) 338.22 544.62 P
-0.27 (we) 382.89 544.62 P
-0.27 (v) 395.44 544.62 P
-0.27 (er) 400.77 544.62 P
-0.27 (, is that ANDF is not a com-) 408.88 544.62 P
-0.01 (plete portability solution for Dylan, as both a runtime system and a tok) 63.65 531.62 P
-0.01 (en library must \336rst be pro) 374.81 531.62 P
-0.01 (vided for) 491.64 531.62 P
(each ne) 63.65 518.62 T
(w platform.) 96.66 518.62 T
-0.23 (W) 63.65 493.62 P
-0.23 (ith the one e) 73.59 493.62 P
-0.23 (xception of function calls, there is no reason to belie) 126.81 493.62 P
-0.23 (v) 354.82 493.62 P
-0.23 (e that an) 360.15 493.62 P
-0.23 (y of the features of Dylan need) 396.79 493.62 P
0.12 (be implemented in a signi\336cantly less ef) 63.65 480.62 P
0.12 (\336cient manner when compiled with ANDF compared with a care-) 241.29 480.62 P
0.1 (fully crafted nati) 63.65 467.62 P
0.1 (v) 136.89 467.62 P
0.1 (e-code approach. Harlequin's Dylan implementation depends hea) 142.22 467.62 P
0.1 (vily on tail-call optimi-) 428.98 467.62 P
0.05 (sation for speed. That optimisation is no) 63.65 454.62 P
0.05 (w possible with ANDF) 240.61 454.62 P
0.05 (, via the callee parameter e) 341.64 454.62 P
0.05 (xtensions \321 b) 459.64 454.62 P
0.05 (ut) 523.09 454.62 P
(these ha) 63.65 441.62 T
(v) 99.17 441.62 T
(e not been tested with Dylan.) 104.5 441.62 T
-0.2 (W) 63.65 416.62 P
-0.2 (e had hoped to e) 73.15 416.62 P
-0.2 (xperiment with callee parameters, b) 144.26 416.62 P
-0.2 (ut we ha) 300.55 416.62 P
-0.2 (v) 337.19 416.62 P
-0.2 (e not been able to do this thoroughly due to) 342.52 416.62 P
0.26 (dif) 63.65 403.62 P
0.26 (\336culties we encountered while using the ANDF tools to inte) 75.59 403.62 P
0.26 (grate the producer components. Our de) 342.02 403.62 P
0.26 (v) 514.71 403.62 P
0.26 (el-) 520.04 403.62 P
0.28 0.26 (opers had to spend a great deal of time in in) 63.65 390.62 B
0.28 0.26 (v) 269.95 390.62 B
0.28 0.26 (estig) 275.54 390.62 B
0.28 0.26 (ating and o) 297.55 390.62 B
0.28 0.26 (v) 349.63 390.62 B
0.28 0.26 (ercoming these dif) 355.22 390.62 B
0.28 0.26 (f) 441.98 390.62 B
0.28 0.26 (iculties, due to the) 445.29 390.62 B
0.28 0.1 (restricted feedback gi) 63.65 377.62 B
0.28 0.1 (v) 160.74 377.62 B
0.28 0.1 (en by the ANDF tools that were a) 166.17 377.62 B
0.28 0.1 (v) 319.13 377.62 B
0.28 0.1 (ailable. One particular problem w) 324.45 377.62 B
0.28 0.1 (as that there) 476.79 377.62 B
0.28 0.05 (w) 63.65 364.62 B
0.28 0.05 (as no deb) 71.53 364.62 B
0.28 0.05 (ugger support for callee parameters, and also code compiled to use callee parameters w) 113.84 364.62 B
0.28 0.05 (as not) 505.16 364.62 B
0.04 (testable from code compiled with C compatible calls. Ultimately the project deadlines ensured that no fur-) 63.65 351.62 P
(ther e) 63.65 338.62 T
(xperiments could tak) 88.22 338.62 T
(e place.) 180.38 338.62 T
0.01 (At the time of writing, these same pressures ha) 63.65 313.62 P
0.01 (v) 269.75 313.62 P
0.01 (e also pre) 275.09 313.62 P
0.01 (v) 316.99 313.62 P
0.01 (ented us from formally addressing performance) 322.33 313.62 P
0.28 0.03 (issues. Ho) 63.65 300.62 B
0.28 0.03 (we) 109.21 300.62 B
0.28 0.03 (v) 121.83 300.62 B
0.28 0.03 (er) 127.2 300.62 B
0.28 0.03 (, we belie) 135.38 300.62 B
0.28 0.03 (v) 178.46 300.62 B
0.28 0.03 (e that an) 183.83 300.62 B
0.28 0.03 (y performance penalties associated with ANDF are small in compari-) 221.79 300.62 B
0.28 0.04 (son with the g) 63.65 287.62 B
0.28 0.04 (ains that we e) 126.93 287.62 B
0.28 0.04 (xpect from additional w) 188.26 287.62 B
0.28 0.04 (ork on the optimization phase of the Dylan compiler) 295.17 287.62 B
0.28 0.04 (.) 528.9 287.62 B
0.28 0.03 (W) 63.65 274.62 B
0.28 0.03 (e are optimistic that aplications written in Dylan will e) 73.18 274.62 B
0.28 0.03 (v) 316.73 274.62 B
0.28 0.03 (entually perform with comparable ef) 322.09 274.62 B
0.28 0.03 (f) 485.14 274.62 B
0.28 0.03 (icienc) 488.22 274.62 B
0.28 0.03 (y to) 514.48 274.62 B
(applications written in traditional static languages.) 63.65 261.62 T
0.28 0.03 (Pre) 63.65 236.62 B
0.28 0.03 (vious w) 78.12 236.62 B
0.28 0.03 (ork [MG95] has sho) 113.01 236.62 B
0.28 0.03 (wn that Dylan can be used with ANDF to b) 202.96 236.62 B
0.28 0.03 (uild portable softw) 397.29 236.62 B
0.28 0.03 (are compo-) 481.36 236.62 B
-0.1 (nents which are well-suited to inter) 63.65 223.62 P
-0.1 (-language w) 217.81 223.62 P
-0.1 (orking. The only restrictions which are required for this are) 271.67 223.62 P
(those considered to be normal for good component design.) 63.65 210.62 T
0.28 0.06 (W) 63.65 185.62 B
0.28 0.06 (e may thus conclude that, gi) 73.22 185.62 B
0.28 0.06 (v) 199.55 185.62 B
0.28 0.06 (en a runtime system and a tok) 204.95 185.62 B
0.28 0.06 (en library for a tar) 339.72 185.62 B
0.28 0.06 (get platform, ANDF can) 421.94 185.62 B
0.28 0.24 (support portable softw) 63.65 172.62 B
0.28 0.24 (are and component softw) 168.44 172.62 B
0.28 0.24 (are written in Dylan. This softw) 285.65 172.62 B
0.28 0.24 (are may mak) 435.25 172.62 B
0.28 0.24 (e use of) 495.18 172.62 B
0.28 0.05 (adv) 63.65 159.62 B
0.28 0.05 (anced language features such as dynamism and g) 79.4 159.62 B
0.28 0.05 (arbage collection, as demonstrated by our prototype) 299.42 159.62 B
0.28 0.08 (Dylan producer) 63.65 146.62 B
0.28 0.08 (. The incremental approach adopted has been highly successful in producing an ef) 133.21 146.62 B
0.28 0.08 (f) 503.65 146.62 B
0.28 0.08 (icient) 506.79 146.62 B
(and e) 63.65 133.62 T
(xtensible product which can form a part of Harlequin\325) 87 133.62 T
(s wider commercial de) 324.06 133.62 T
(v) 423.68 133.62 T
(elopments.) 429.01 133.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "68" 74
%%Page: "69" 75
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
3 8 Q
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(69) 520.53 84.9 T
3 15 Q
(9.) 63.65 734.95 T
(Ref) 90.65 734.95 T
(erences and Bib) 114.66 734.95 T
(liograph) 230.39 734.95 T
(y) 289.26 734.95 T
2 11 Q
([BW88]) 63.65 716.62 T
0.28 0.05 (Boehm, H-J., W) 117.65 716.62 B
0.28 0.05 (eiser) 189.85 716.62 B
0.28 0.05 (, M., \322Garbage Collection in an Uncooperati) 210.44 716.62 B
0.28 0.05 (v) 409.89 716.62 B
0.28 0.05 (e En) 415.27 716.62 B
0.28 0.05 (vironment\323, Softw) 435.17 716.62 B
0.28 0.05 (are) 518.11 716.62 B
(Practice and Experience, v) 117.65 703.62 T
(ol. 18, #9, September 1988.) 234.72 703.62 T
([Mann93a]) 63.65 683.62 T
0.28 0.16 (Mann, T) 117.65 683.62 B
0.28 0.16 (., \322Initial Ev) 156.13 683.62 B
0.28 0.16 (aluation of TDF Support for Garbage Collection\323, GLUE Deli) 213.07 683.62 B
0.28 0.16 (v) 498.46 683.62 B
0.28 0.16 (erable) 503.96 683.62 B
(4.2.2a, Harlequin Ltd., 1993.) 117.65 670.62 T
([MG95]) 63.65 650.62 T
-0.23 (Mann, T) 117.65 650.62 P
-0.23 (., Green, S., \322Report on Inter) 154.49 650.62 P
-0.23 (-Language W) 280.19 650.62 P
-0.23 (orking in ANDF\323, GLUE Deli) 339.25 650.62 P
-0.23 (v) 472.17 650.62 P
-0.23 (erable 4.2.3,) 477.51 650.62 P
(Harlequin Ltd., 1995.) 117.65 637.62 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "69" 75
%%Page: "70" 76
595.3 841.9 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 8 Q
0 X
0 0 0 1 0 0 0 K
(ESPRIT Pr) 63.65 766.62 T
(oject 6062 OMI/GLUE - D4.2.4) 103.06 766.62 T
(Pr) 433.28 766.62 T
(ototype Dylan Pr) 441.57 766.62 T
(oducer) 504.98 766.62 T
63.65 780.95 531.65 780.95 2 L
0.5 H
0 Z
N
63.65 96.95 531.65 96.95 2 L
2 Z
N
3 10 Q
(70) 63.65 84.9 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "70" 76
%%Trailer
%%BoundingBox: 0 0 595.3 841.9
%%PageOrder: Ascend
%%Pages: 76
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Helvetica-Bold
%%+ Courier-Bold
%%+ Helvetica
%%+ Symbol
%%EOF
