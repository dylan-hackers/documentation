%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 13 FMDOCUMENT
0 0 /Palatino-Italic FMFONTDEFINE
1 0 /Palatino-Bold FMFONTDEFINE
2 0 /Palatino-Roman FMFONTDEFINE
3 0 /Helvetica-Narrow-Bold FMFONTDEFINE
4 0 /Courier-Bold FMFONTDEFINE
5 0 /Helvetica-Bold FMFONTDEFINE
6 0 /Palatino-BoldItalic FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(1) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
108 620.45 504 648 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 620.45 504 648 R
7 X
0 0 0 1 0 0 0 K
V
108 641.14 270 641.14 2 L
V
3 H
2 Z
0 X
N
108 632.14 270 632.14 2 L
7 X
V
1 H
0 X
N
36 72 576 720 C
2 30 Q
0 X
0 0 0 1 0 0 0 K
(Dylan SCC Release Notes) 108 600.45 T
2 11 Q
(Revision 2. Jan 19, 1996.) 108 535.12 T
108 126 486 432 R
7 X
V
3 16 Q
0 X
(1  Intr) 108 421.33 T
(oduction) 143.49 421.33 T
2 11 Q
(These r) 108 400.67 T
(elease notes explain:) 143.24 400.67 T
(\245) 117 380.67 T
(What the Dylan SCC r) 135 380.67 T
(elease is) 243 380.67 T
(\245) 117 360.67 T
(Whether you would want to use the r) 135 360.67 T
(elease) 317.24 360.67 T
(\245) 117 340.67 T
(What featur) 135 340.67 T
(es the r) 193.04 340.67 T
(elease pr) 227.87 340.67 T
(ovides, and what it does not) 270.55 340.67 T
(\245) 117 320.67 T
(What kind of Dylan development cycle the r) 135 320.67 T
(elease supports) 350.6 320.67 T
(\245) 117 300.67 T
(Which internal documentation describes the r) 135 300.67 T
(elease) 356.96 300.67 T
(\245) 117 280.67 T
(Whom to r) 135 280.67 T
(eport newly discover) 187.36 280.67 T
(ed pr) 289.95 280.67 T
(oblems and bugs to) 315.44 280.67 T
(\245) 117 260.67 T
(Known pr) 135 260.67 T
(oblems and bugs) 184.48 260.67 T
(\245) 117 240.67 T
(How to install the r) 135 240.67 T
(elease) 229.08 240.67 T
(\245) 117 220.67 T
(How to use the r) 135 220.67 T
(elease, by means of a short example) 215.89 220.67 T
3 16 Q
(2  What is Dylan SCC?) 108 185.33 T
2 11 Q
(Dylan SCC is a small UNIX-based Dylan development envir) 108 164.67 T
(onment pr) 400.62 164.67 T
(ovid-) 451.51 164.67 T
(ing a cr) 108 150.67 T
(oss-compiler with which you can build standalone executables on) 143.75 150.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(2) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
2 11 Q
0 X
(W) 126 640.67 T
(indows. Applications ar) 136.4 640.67 T
(e developed on UNIX, compiled into C, and then) 252.88 640.67 T
(statically compiled and linked into executables on W) 126 626.67 T
(indows.) 381.86 626.67 T
3 16 Q
(3  Should I use Dylan SCC?) 126 591.33 T
2 11 Q
(Use Dylan SCC if you want to r) 126 570.67 T
(un Dylan applications on W) 278.98 570.67 T
(indows, and you) 414.92 570.67 T
(r) 126 556.67 T
(equir) 130.15 556.67 T
(e sour) 155.56 556.67 T
(ce-level debugging of lexical variables and C FFI interfaces.) 185.03 556.67 T
3 16 Q
(4  What is in Dylan SCC?) 126 521.33 T
2 11 Q
(Dylan SCC consists of:) 126 500.67 T
(\245) 135 480.67 T
(A UNIX-based Dylan emulator built on top of LispW) 153 480.67 T
(orks. It contains a) 410.36 480.67 T
(full Dylan batch compiler with a C back-end.) 153 466.67 T
(\245) 135 446.67 T
(A version of the W) 153 446.67 T
(indows SDK debugger) 243.98 446.67 T
(, W) 353.66 446.67 T
(inDBG, extended for use) 369.56 446.67 T
(with Dylan executables.) 153 432.67 T
(\245) 135 412.67 T
(A number of Dylan libraries, including) 153 412.67 T
4 9.5 Q
(dylan) 345.23 412.67 T
2 11 Q
(,) 373.73 412.67 T
4 9.5 Q
(simple-streams) 379.23 412.67 T
2 11 Q
(,) 459.02 412.67 T
4 9.5 Q
(simple-print) 153 398.67 T
2 11 Q
(,) 221.4 398.67 T
4 9.5 Q
(simple-format) 226.9 398.67 T
2 11 Q
(,) 301 398.67 T
4 9.5 Q
(harlequin-extensions) 306.5 398.67 T
2 11 Q
(,) 420.5 398.67 T
4 9.5 Q
(harlequin-) 426 398.67 T
(dylan) 153 384.67 T
2 11 Q
(, and) 181.5 384.67 T
4 9.5 Q
(c-ffi) 208.37 384.67 T
2 11 Q
(.) 236.87 384.67 T
(The UNIX-based Dylan emulator pr) 126 364.67 T
(ovides pr) 300.8 364.67 T
(ogramming tools to help you) 346.39 364.67 T
(develop your application. Once it is r) 126 350.67 T
(eady) 306.35 350.67 T
(, you can use the Dylan batch com-) 328.73 350.67 T
(piler) 126 336.67 T
(\325s C back-end to pr) 149.44 336.67 T
(oduce a C version of it, and then transfer it to W) 240.95 336.67 T
(in-) 474.15 336.67 T
(dows to be compiled and linked into a standalone executable. Y) 126 322.67 T
(ou can debug) 434.54 322.67 T
-0.49 (the executable with the W) 126 308.67 P
-0.49 (inDBG debugger) 249.67 308.67 P
-0.49 (, which has been extended in-house) 330.9 308.67 P
(to handle Dylan names and objects.) 126 294.67 T
3 16 Q
(5  What does Dylan SCC not pr) 126 259.33 T
(o) 318.22 259.33 T
(vide?) 326 259.33 T
2 11 Q
(Dylan SCC lacks:) 126 238.67 T
(\245) 135 218.67 T
(A native W) 153 218.67 T
(indows development envir) 207.63 218.67 T
(onment and compiler) 338.79 218.67 T
(.) 442.71 218.67 T
(\245) 135 198.67 T
(A means to evaluate Dylan code on a PC r) 153 198.67 T
(emote fr) 357.73 198.67 T
(om UNIX.) 398.14 198.67 T
(\245) 135 178.67 T
(Incr) 153 178.67 T
(emental compilation at the \336le or de\336nition level.) 172.14 178.67 T
(Incr) 153 160.67 T
(emental compilation is possible only at the library level: if a particu-) 172.14 160.67 T
-0.01 (lar library is changed, you only need to r) 153 146.67 P
-0.01 (ecompile that library to be able) 350.54 146.67 P
(to build the application again.) 153 132.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(6) 358.62 695.67 T
(What is the Dylan SCC development cycle?) 372.87 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(3) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
2 11 Q
0 X
(\245) 117 640.67 T
(Dependency tracking of any sort.) 135 640.67 T
3 16 Q
(6  What is the Dylan SCC de) 108 605.33 T
(velopment c) 282.08 605.33 T
(yc) 358.53 605.33 T
(le?) 372.88 605.33 T
2 11 Q
(Figur) 108 584.67 T
(e 6.1, page 3, shows the Dylan SCC development cycle. Ther) 134.21 584.67 T
(e ar) 426.43 584.67 T
(e thr) 444.09 584.67 T
(ee) 466.25 584.67 T
(development phases:) 108 570.67 T
1 F
(1.) 117 550.67 T
2 F
(Develop and test your Dylan application on UNIX in the emulator) 135 550.67 T
(.) 456.3 550.67 T
1 F
(2.) 117 530.67 T
2 F
(Still in the emulator) 135 530.67 T
(, use the built-in batch compiler to pr) 230.51 530.67 T
(oduce a C ver-) 410.34 530.67 T
(sion of the application, then on W) 135 516.67 T
(indows, build a statically linked exe-) 298.61 516.67 T
(cutable using a Make\336le generated automatically during compilation.) 135 502.67 T
(If you ar) 135 484.67 T
(e developing with the Dylan FFI library) 176.27 484.67 T
(, you unfortunately can-) 367.91 484.67 T
(not test your application under the emulator) 135 470.67 T
(.) 350.47 470.67 T
1 F
(3.) 117 450.67 T
2 F
(Run the executable on W) 135 450.67 T
(indows, and debug it if necessary with) 255.81 450.67 T
(W) 135 436.67 T
(inDBG and the Dylan extensions pr) 145.4 436.67 T
(ovided.) 317.89 436.67 T
108 127.01 486 135 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
2 11 Q
0 X
0 0 0 1 0 0 0 K
(Figur) 213.2 138.67 T
(e 6.1  Dylan SCC ar) 239.41 138.67 T
(chitectur) 332.94 138.67 T
(e) 375.53 138.67 T
108 126 486 648 C
138.31 155 455.69 413 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
149.09 329 257.09 402 R
7 X
0 0 0 1 0 0 0 K
V
0.25 H
0 Z
0 X
N
7 X
90 450 17.11 12.83 328.2 388.17 G
0 X
90 450 17.11 12.83 328.2 388.17 A
7 X
90 450 17.11 12.84 328.2 336.84 G
0 X
90 450 17.11 12.84 328.2 336.84 A
311.09 336.84 345.31 362.51 R
7 X
V
N
345.31 388.17 345.31 336.84 2 L
V
2 Z
0 X
N
311.09 388.17 311.09 336.84 2 L
7 X
V
0 X
N
323.92 332.56 332.48 369 R
7 X
V
2 11 Q
0 X
(C \336les) 0 -270 331.26 332.56 TF
323.92 332.56 332.48 369 R
167.09 329 257.09 374 R
0 Z
N
176.09 338 257.09 365 R
7 X
V
0 X
(Batch compiler) 176.09 357.67 T
(w/ C back-end) 176.09 343.67 T
162.94 229 306.94 274 R
7 X
V
0 X
N
300.31 161 345.31 188 R
7 X
V
0 X
N
309.31 170 340.81 179 R
7 X
V
0 X
(Make) 309.31 171.67 T
234.94 274 234.94 229 2 L
7 X
V
2 Z
0 X
N
171.94 238 225.94 265 R
7 X
V
0 X
(W) 171.94 257.67 T
(inDBG) 182.34 257.67 T
(debugger) 171.94 243.67 T
243.94 238 297.94 265 R
7 X
V
0 X
(Dylan) 243.94 257.67 T
(extensions) 243.94 243.67 T
244.65 188 271.65 197 R
7 X
V
0 X
(Build) 244.65 189.67 T
327.31 192.34 329.1 192.34 327.31 189.25 325.53 192.34 4 Y
0 Z
N
327.31 192.34 329.1 192.34 327.31 189.25 325.53 192.34 4 Y
V
327.31 324 327.31 192.46 2 L
7 X
V
2 Z
0 X
N
307.75 360 307.75 361.79 310.84 360 307.75 358.22 4 Y
0 Z
N
307.75 360 307.75 361.79 310.84 360 307.75 358.22 4 Y
V
257.09 360 307.63 360 2 L
7 X
V
2 Z
0 X
N
192.31 224.83 190.53 224.83 192.31 227.92 194.1 224.83 4 Y
0 Z
N
192.31 224.83 190.53 224.83 192.31 227.92 194.1 224.83 4 Y
V
192.31 209.34 194.1 209.34 192.31 206.25 190.53 209.34 4 Y
N
192.31 209.34 194.1 209.34 192.31 206.25 190.53 209.34 4 Y
V
192.31 224.7 192.31 209.47 2 L
7 X
V
0 X
N
J
67.7 283 495.94 283 2 L
7 X
V
J
67.7 283 71.58 283 2 L
2 Z
0 X
N
[7.645 6.165] 7.645 I
71.58 283 492.06 283 2 L
N
J
492.06 283 495.94 283 2 L
N
156.32 384.83 237.31 393.83 R
7 X
V
0 X
(Dylan Emulator) 156.32 386.5 T
J
387.94 265 441.94 274 R
7 X
V
1 F
0 X
(W) 387.94 266.67 T
(indows) 398.54 266.67 T
J
J
172.65 170 240.15 197 R
7 X
V
2 F
0 X
(Standalone) 172.65 189.67 T
(application) 172.65 175.67 T
163.65 161 235.65 206 R
0 Z
N
238.99 179 238.99 177.22 235.9 179 238.99 180.78 4 Y
N
238.99 179 238.99 177.22 235.9 179 238.99 180.78 4 Y
V
298.65 179 239.11 179 2 L
2 Z
N
387.94 301 441.94 310 R
7 X
V
1 F
0 X
(UNIX) 387.94 302.67 T
J
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
108 126 486 648 C
36 72 576 720 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(4) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 16 Q
0 X
(7  Har) 126 637.33 T
(d) 162.22 637.33 T
(ware and software requirements f) 170.06 637.33 T
(or Dylan SCC) 379.09 637.33 T
2 11 Q
(T) 126 616.67 T
(o use Dylan SCC, you need:) 131.73 616.67 T
(\245) 135 596.67 T
(A UNIX machine r) 153 596.67 T
(unning Solaris 2, SunOS 4, Irix 5, or OSF/1 3.0, and) 244.18 596.67 T
(the) 153 582.67 T
4 9.5 Q
(bash) 171.01 582.67 T
2 11 Q
( shell.) 193.81 582.67 T
(\245) 135 562.67 T
(An) 153 562.67 T
0 F
(x) 170.71 562.67 T
2 F
(86-based PC r) 176.21 562.67 T
(unning W) 243.31 562.67 T
(indows NT 3.51 or W) 291.61 562.67 T
(indows \32595) 394.66 562.67 T
(\245) 135 542.67 T
(A minimal W) 153 542.67 T
(indows SDK setup) 218.38 542.67 T
(\245) 135 522.67 T
(V) 153 522.67 T
(isual C++) 160.34 522.67 T
(\245) 135 502.67 T
(Samba-based NFS access to your UNIX account fr) 153 502.67 T
(om your PC.) 394.76 502.67 T
3 16 Q
(8  Whic) 126 467.33 T
(h documentation describes Dylan SCC?) 171.82 467.33 T
1 11 Q
(1.) 135 446.67 T
2 F
(This document.) 153 446.67 T
1 F
(2.) 135 426.67 T
2 F
(The following chapters of the Dylan pr) 153 426.67 T
(oject\325s) 341.56 426.67 T
0 F
(Guide to Dylan Internal) 374.35 426.67 T
(Releases) 153 412.67 T
2 F
(:) 189.67 412.67 T
(Chapter 1, \322Overview\323) 153 392.67 T
(Chapter 2, \322Building Dylan Applications\323) 153 372.67 T
(Chapter 3, \322Sour) 153 352.67 T
(ce Code Management\323) 234.32 352.67 T
(Chapter 4, \322The Emulator\323) 153 332.67 T
(Chapter 5, \322The Batch Compiler\323) 153 312.67 T
(Chapter 6, \322Debugging Dylan Applications\323) 153 292.67 T
3 16 Q
(9  Repor) 126 257.33 T
(ting pr) 178.75 257.33 T
(ob) 219.33 257.33 T
(lems, b) 235.25 257.33 T
(ugs, and wishes) 280.22 257.33 T
2 11 Q
(Pr) 153 230.67 T
(oblems) 163.79 230.67 T
(Send e-mail to) 234 230.67 T
4 9.5 Q
(dylan-group) 306.56 230.67 T
2 11 Q
(.) 369.26 230.67 T
(Bugs) 153 204.67 T
(Choose) 234 204.67 T
5 9.6 Q
(Dylan > Repor) 272.9 204.67 T
(t Dylan Bug) 337.91 204.67 T
2 11 Q
(; \336ll in and send bug) 391.24 204.67 T
(form. Include a full backtrace with) 234 190.67 T
4 9.5 Q
(bb:;) 404.52 190.67 T
2 11 Q
(.) 427.32 190.67 T
(Doc. pr) 153 164.67 T
(oblems) 188.66 164.67 T
(Send e-mail to) 234 164.67 T
4 9.5 Q
(dylan-doc) 306.56 164.67 T
2 11 Q
(.) 357.86 164.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(10) 429.69 695.67 T
(Dylan SCC Installation) 448.69 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(5) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
2 11 Q
0 X
(Doc. bugs) 135 640.67 T
(Choose) 216 640.67 T
5 9.6 Q
(Dylan > Repor) 254.9 640.67 T
(t Doc Bug) 319.91 640.67 T
2 11 Q
(; \336ll in and send bug) 365.24 640.67 T
(form.) 216 626.67 T
3 16 Q
(10  Dylan SCC Installation) 108 591.33 T
2 11 Q
(Skip to Section 10.5 on page 8 for a quick installation. Read the pr) 108 570.67 T
(eceding sec-) 425.38 570.67 T
(tions for details of how Dylan SCC installations work.) 108 556.67 T
3 13 Q
(10.1  Installation scripts) 108 523.33 T
2 11 Q
(Most of the Dylan SCC installation pr) 108 503.67 T
(ocedur) 290.4 503.67 T
(e is automated by thr) 324.06 503.67 T
(ee scripts:) 427.04 503.67 T
4 9.5 Q
(create-personal-dylan) 108 489.67 T
2 11 Q
( and) 227.7 489.67 T
4 9.5 Q
(setup-dylan.sh) 251.82 489.67 T
2 11 Q
( on UNIX, and) 331.62 489.67 T
4 9.5 Q
(setup-) 405.15 489.67 T
-0.25 (dylan.cmd) 108 475.67 P
2 11 Q
-0.12 ( on W) 159.3 475.67 P
-0.12 (indows. These scripts cr) 187.37 475.67 P
-0.12 (eate dir) 303.51 475.67 P
-0.12 (ectory tr) 339.84 475.67 P
-0.12 (ees under your home) 380.41 475.67 P
(dir) 108 461.67 T
(ectory in which to do Dylan development, and make some standar) 122.07 461.67 T
(d envi-) 445.9 461.67 T
(r) 108 447.67 T
(onment variable con\336gurations on UNIX and W) 112.15 447.67 T
(indows.) 345.91 447.67 T
(The scripts can be found on UNIX under) 108 427.67 T
4 9.5 Q
(~dylan/releases/scc/admin) 308.45 427.67 T
2 11 Q
(. They) 450.95 427.67 T
(ar) 108 413.67 T
(e fully described in Section 13 on page 14.) 117.65 413.67 T
3 13 Q
(10.2  P) 108 380.33 T
(er) 141.48 380.33 T
(sonal sour) 151.41 380.33 T
(ce area) 205.12 380.33 T
2 11 Q
(Y) 108 360.67 T
(ou need a personal sour) 114.32 360.67 T
(ce ar) 230.57 360.67 T
(ea so that you can write your own code or) 253.12 360.67 T
(shadow standar) 108 346.67 T
(d libraries \050such as) 185.74 346.67 T
4 9.5 Q
(dylan) 279.68 346.67 T
2 11 Q
(,) 308.18 346.67 T
4 9.5 Q
(simple-streams) 313.68 346.67 T
2 11 Q
(, and so on\051 with) 393.48 346.67 T
(your own versions. The) 108 332.67 T
4 9.5 Q
(create-personal-dylan) 225.61 332.67 T
2 11 Q
( script pr) 345.31 332.67 T
(epar) 388.86 332.67 T
(es an empty) 410.39 332.67 T
-0.08 (dir) 108 318.67 P
-0.08 (ectory tr) 122.07 318.67 P
-0.08 (ee in your UNIX envir) 162.68 318.67 P
-0.08 (onment for this purpose. The) 270.56 318.67 P
0 F
-0.08 (Guide to Dylan) 414.44 318.67 P
(Releases) 108 304.67 T
2 F
(, Chapter 3, \322Sour) 144.67 304.67 T
(ce Code Management\323, explains many of the con-) 231.5 304.67 T
(cepts in this section.) 108 290.67 T
4 9.5 Q
(create-personal-dylan) 108 270.67 T
2 11 Q
( sets up an empty personal ar) 227.7 270.67 T
(ea for sour) 370.47 270.67 T
(ce and com-) 422.2 270.67 T
(piled code. It cr) 108 256.67 T
(eates the following dir) 183.21 256.67 T
(ectories under the personal r) 292.04 256.67 T
(oot dir) 431.04 256.67 T
(ec-) 463.45 256.67 T
(tory passed to it on the command-line. Supposing the personal r) 108 242.67 T
(oot was) 419.87 242.67 T
4 9.5 Q
(~/) 460.31 242.67 T
(dylan/scc) 108 228.67 T
2 11 Q
(, these dir) 159.3 228.67 T
(ectories would be cr) 206.81 228.67 T
(eated under it:) 304.4 228.67 T
4 9.5 Q
(~/dylan/scc/registry/) 135 202.67 T
2 11 Q
(Personal r) 216 184.67 T
(egistry dir) 264.93 184.67 T
(ectory) 315.04 184.67 T
(. Y) 344.03 184.67 T
(ou can populate this with) 355.85 184.67 T
(r) 216 170.67 T
(egistry entries for libraries you wish to compile for) 220.15 170.67 T
(W) 216 156.67 T
(indows, but which ar) 226.4 156.67 T
(e not r) 329.58 156.67 T
(egister) 360.48 156.67 T
(ed in the Dylan) 392.74 156.67 T
(pr) 216 142.67 T
(oject\325s equivalent r) 226.76 142.67 T
(egistry under) 317.88 142.67 T
4 9.5 Q
(~dylan) 386.05 142.67 T
2 11 Q
(.) 420.25 142.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(6) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 9.5 Q
0 X
(~/dylan/scc/platforms/) 153 640.67 T
2 11 Q
(Contains a dir) 234 622.67 T
(ectory for each of the possible tar) 302.63 622.67 T
(get plat-) 463.26 622.67 T
(forms for Dylan compilation work:) 234 608.67 T
4 9.5 Q
(alpha-osf3) 406.59 608.67 T
2 11 Q
(,) 463.59 608.67 T
4 9.5 Q
(sgi-) 469.09 608.67 T
(irix5) 234 594.67 T
2 11 Q
(,) 262.5 594.67 T
4 9.5 Q
(sparc-solaris2) 268 594.67 T
2 11 Q
(,) 347.8 594.67 T
4 9.5 Q
(sparc-sunos4) 353.3 594.67 T
2 11 Q
(,) 421.7 594.67 T
4 9.5 Q
(x86-win32) 427.2 594.67 T
2 11 Q
(.) 478.5 594.67 T
(Only) 234 580.67 T
4 9.5 Q
(x86-win32) 261.11 580.67 T
2 11 Q
( is r) 312.42 580.67 T
(elevant to this r) 329.93 580.67 T
(elease. Under each) 405.21 580.67 T
-0.53 (platform dir) 234 566.67 P
-0.53 (ectory) 292.92 566.67 P
-0.53 (, ther) 321.9 566.67 P
-0.53 (e ar) 346.28 566.67 P
-0.53 (e four mor) 363.42 566.67 P
-0.53 (e dir) 413.65 566.67 P
-0.53 (ectories. Only) 435.21 566.67 P
4 9.5 Q
-0.83 (bin) 234 552.67 P
2 11 Q
-0.4 (,) 251.1 552.67 P
4 9.5 Q
-0.83 (lib,) 256.2 552.67 P
2 11 Q
-0.4 ( and) 279 552.67 P
4 9.5 Q
-0.83 (include) 302.32 552.67 P
2 11 Q
-0.4 ( ar) 342.22 552.67 P
-0.4 (e r) 354.22 552.67 P
-0.4 (elevant to this r) 365.98 552.67 P
-0.4 (elease:) 440.07 552.67 P
4 9.5 Q
-0.83 (bin) 474.34 552.67 P
2 11 Q
-0.4 ( is) 491.44 552.67 P
(for storing executable pr) 234 538.67 T
(ograms \050) 352.71 538.67 T
4 9.5 Q
(.exe) 395.47 538.67 T
2 11 Q
( \336les\051,) 418.27 538.67 T
4 9.5 Q
(lib) 449.97 538.67 T
2 11 Q
( is for) 467.07 538.67 T
(storing compiled softwar) 234 524.67 T
(e libraries \050) 356.17 524.67 T
4 9.5 Q
(.lib) 410.41 524.67 T
2 11 Q
( \336les\051, and) 433.21 524.67 T
4 9.5 Q
(include) 234 510.67 T
2 11 Q
( is for storing header \336les for compiled soft-) 273.9 510.67 T
(war) 234 496.67 T
(e libraries \050) 252.82 496.67 T
4 9.5 Q
(.h) 307.06 496.67 T
2 11 Q
( \336les\051.) 318.46 496.67 T
4 9.5 Q
(~/dylan/scc/emulator-registry/) 153 470.67 T
2 11 Q
(Personal emulator r) 234 452.67 T
(egistry dir) 329.93 452.67 T
(ectory) 380.05 452.67 T
(. Y) 409.03 452.67 T
(ou can populate) 420.86 452.67 T
-0.04 (this with r) 234 438.67 P
-0.04 (egistry entries for libraries you want to work) 283.79 438.67 P
-0.38 (with in the emulator) 234 424.67 P
-0.38 (, but which ar) 331.77 424.67 P
-0.38 (e not r) 397.64 424.67 P
-0.38 (egister) 427.79 424.67 P
-0.38 (ed in the) 460.04 424.67 P
(Dylan pr) 234 410.67 T
(oject\325s equivalent r) 277.24 410.67 T
(egistry under) 368.36 410.67 T
4 9.5 Q
(~dylan/) 436.53 410.67 T
(releases/scc/registry) 234 396.67 T
2 11 Q
(.) 352.48 396.67 T
4 9.5 Q
(~/dylan/scc/lib/) 153 370.67 T
2 11 Q
(A default dir) 234 352.67 T
(ectory for storing your own library) 296.7 352.67 T
(sour) 234 338.67 T
(ces. T) 255.45 338.67 T
(ypically) 281.52 338.67 T
(, you would put each library in a sep-) 319.13 338.67 T
(arate subdir) 234 324.67 T
(ectory of) 292.4 324.67 T
4 9.5 Q
(lib) 337.77 324.67 T
2 11 Q
(. Y) 354.87 324.67 T
(ou do not have to put your) 366.7 324.67 T
(libraries under) 234 310.67 T
4 9.5 Q
(lib) 308.68 310.67 T
2 11 Q
( if you would rather put them some-) 325.78 310.67 T
(wher) 234 296.67 T
(e else: it is pr) 258.99 296.67 T
(ovided solely for convenience.) 321.82 296.67 T
(T) 126 276.67 T
(o develop and compile your own libraries, you need to put their sour) 131.73 276.67 T
(ces in) 467.87 276.67 T
-0.04 (dir) 126 262.67 P
-0.04 (ectories under your personal sour) 140.07 262.67 P
-0.04 (ce ar) 304.07 262.67 P
-0.04 (ea. Put the sour) 326.58 262.67 P
-0.04 (ce for each library in) 401.81 262.67 P
(a dir) 126 248.67 T
(ectory of its own under) 148.32 248.67 T
4 9.5 Q
(lib) 264.35 248.67 T
2 11 Q
(. See Figur) 281.45 248.67 T
(e 10.2 for an example.) 332.22 248.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(10) 429.69 695.67 T
(Dylan SCC Installation) 448.69 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(7) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
108 386.01 486 394 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
2 11 Q
0 X
0 0 0 1 0 0 0 K
(Figur) 150.55 397.67 T
(e 10.2  Personal sour) 176.76 397.67 T
(ce dir) 275.76 397.67 T
(ectory tr) 302.73 397.67 T
(ee for thr) 343.42 397.67 T
(ee libraries.) 387.61 397.67 T
3 13 Q
(10.3  T) 108 358.34 T
(ransparent UNIX \336lesystem access fr) 140.34 358.34 T
(om Windo) 327.97 358.34 T
(ws) 379.35 358.34 T
2 11 Q
-0.35 (Dylan SCC\325s r) 108 338.67 P
-0.35 (equir) 175.78 338.67 P
-0.35 (ement that you work on both UNIX and W) 201.19 338.67 P
-0.35 (indows systems) 406.35 338.67 P
(is potentially quite inconvenient. Having to transfer \336les fr) 108 324.67 T
(om UNIX to W) 392.93 324.67 T
(in-) 465.63 324.67 T
(dows in or) 108 310.67 T
(der to build your application would be tedious and likely to r) 159.82 310.67 T
(esult) 458.27 310.67 T
(in the occasional err) 108 296.67 T
(or) 205.12 296.67 T
(.) 214.66 296.67 T
(Fortunately) 108 276.67 T
(, you can use the Samba utility to establish transpar) 163.54 276.67 T
(ent access to a) 413.42 276.67 T
(UNIX \336lesystem on W) 108 262.67 T
(indows. Once established, you do not need to move) 216.93 262.67 T
(\336les fr) 108 248.67 T
(om one platform to the other in or) 138.35 248.67 T
(der to build an application. Dylan) 303.83 248.67 T
(sour) 108 234.67 T
(ces, emitted C sour) 129.45 234.67 T
(ces, compiled libraries and r) 221.86 234.67 T
(eal W) 358.61 234.67 T
(indows executables) 385.73 234.67 T
(can all live on UNIX.) 108 220.67 T
-0.35 (Most UNIX machines at Harlequin r) 108 200.67 P
-0.35 (un Samba, and allow mounts at a number) 282.67 200.67 P
-0.43 (of dif) 108 186.67 P
-0.43 (fer) 133.38 186.67 P
-0.43 (ent points on their \336lesystems. The dir) 146.46 186.67 P
-0.43 (ectory) 330.36 186.67 P
4 9.5 Q
-0.89 (/u) 362.89 186.67 P
2 11 Q
-0.43 (, which should contain) 374.29 186.67 P
(the dir) 108 172.67 T
(ectory) 140.08 172.67 T
4 9.5 Q
(~dylan) 173.03 172.67 T
2 11 Q
( \050) 207.23 172.67 T
4 9.5 Q
(/u/dylan) 213.65 172.67 T
2 11 Q
(\051 and your home dir) 259.24 172.67 T
(ectory) 357.09 172.67 T
(, is normally avail-) 386.08 172.67 T
(able as a mount point. W) 108 158.67 T
(e r) 228.35 158.67 T
(ecommend that you mount a UNIX \336lesystem at) 240.52 158.67 T
(this point on your PC. Full instr) 108 144.67 T
(uctions on how to do this ar) 262.12 144.67 T
(e given in Section) 397.8 144.67 T
(10.5.) 108 130.67 T
0 0 0 1 0 0 0 K
108 414 486 637 C
0 0 0 1 0 0 0 K
4 9 Q
0 X
0 0 0 1 0 0 0 K
(hello-world) 333 526 T
(my-gui-layer) 252 526 T
(examples) 198 526 T
261 565 225 538 2 L
0.25 H
2 Z
N
279 565 279 538 2 L
N
297 565 360 538 2 L
N
(~/dylan/scc) 260.33 626.17 T
(lib) 270 577 T
279 619 279 592 2 L
N
261 619 162 592 2 L
N
297 619 405 592 2 L
N
(platforms) 131.5 577 T
(registry) 396 577 T
J
135 565 117 547 2 L
J
135 565 132.26 562.26 2 L
N
[6.776 5.465] 6.776 I
132.26 562.26 119.74 549.74 2 L
N
J
119.74 549.74 117 547 2 L
N
J
144 565 144 547 2 L
J
144 565 144 561.12 2 L
N
[12.71 10.25] 12.71 I
144 561.12 144 550.88 2 L
N
J
144 550.88 144 547 2 L
N
J
153 565 171 547 2 L
J
153 565 155.74 562.26 2 L
N
[6.776 5.465] 6.776 I
155.74 562.26 168.26 549.74 2 L
N
J
168.26 549.74 171 547 2 L
N
J
405 565 387 547 2 L
J
405 565 402.26 562.26 2 L
N
[6.776 5.465] 6.776 I
402.26 562.26 389.74 549.74 2 L
N
J
389.74 549.74 387 547 2 L
N
J
414 565 414 547 2 L
J
414 565 414 561.12 2 L
N
[12.71 10.25] 12.71 I
414 561.12 414 550.88 2 L
N
J
414 550.88 414 547 2 L
N
J
423 565 441 547 2 L
J
423 565 425.74 562.26 2 L
N
[6.776 5.465] 6.776 I
425.74 562.26 438.26 549.74 2 L
N
J
438.26 549.74 441 547 2 L
N
J
342 511 225 448 2 L
N
351 511 315 448 2 L
N
369 511 405 448 2 L
N
(hello-world-library.dylan) 243 433 T
(hello.dylan) 387 433 T
(hello-world.lid) 153 433 T
J
207 511 189 493 2 L
J
207 511 204.26 508.26 2 L
N
[6.776 5.465] 6.776 I
204.26 508.26 191.74 495.74 2 L
N
J
191.74 495.74 189 493 2 L
N
J
216 511 216 493 2 L
J
216 511 216 507.12 2 L
N
[12.71 10.25] 12.71 I
216 507.12 216 496.88 2 L
N
J
216 496.88 216 493 2 L
N
J
225 511 243 493 2 L
J
225 511 227.74 508.26 2 L
N
[6.776 5.465] 6.776 I
227.74 508.26 240.26 495.74 2 L
N
J
240.26 495.74 243 493 2 L
N
J
270 511 252 493 2 L
J
270 511 267.26 508.26 2 L
N
[6.776 5.465] 6.776 I
267.26 508.26 254.74 495.74 2 L
N
J
254.74 495.74 252 493 2 L
N
J
279 511 279 493 2 L
J
279 511 279 507.12 2 L
N
[12.71 10.25] 12.71 I
279 507.12 279 496.88 2 L
N
J
279 496.88 279 493 2 L
N
J
288 511 297 502 2 L
J
288 511 290.74 508.26 2 L
N
[6.173 4.978] 6.173 I
290.74 508.26 294.26 504.74 2 L
N
J
294.26 504.74 297 502 2 L
N
J
333 619 495 592 2 L
J
333 619 336.82 618.36 2 L
N
[7.568 6.103] 7.568 I
336.82 618.36 491.18 592.64 2 L
N
J
491.18 592.64 495 592 2 L
N
0 0 0 1 0 0 0 K
J
36 72 576 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(8) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 13 Q
0 X
(10.4  The Dylan em) 126 639.33 T
(ulator) 221.8 639.33 T
2 11 Q
(Y) 126 619.67 T
(ou need an emulator image to use SCC. Emulator images for SCC ar) 132.32 619.67 T
(e avail-) 463.06 619.67 T
(able pr) 126 605.67 T
(e-installed at all sites under) 159.56 605.67 T
4 9 Q
(~dylan/releases/scc/platforms/<) 153 585 T
6 F
(platform) 320.4 585 T
4 F
(>/bin/lw+dylan+scc) 355.9 585 T
2 11 Q
(on UNIX machines, wher) 126 564.67 T
(e) 249.18 564.67 T
4 9.5 Q
(<) 257.2 564.67 T
0 11 Q
(platform) 262.9 564.67 T
4 9.5 Q
(>) 300.78 564.67 T
2 11 Q
( is one of:) 306.48 564.67 T
4 9.5 Q
(alpha-osf3) 153 538.67 T
2 11 Q
(DEC Alpha \050OSF 3.0\051) 234 538.67 T
4 9.5 Q
(sparc-solaris2) 153 512.67 T
2 11 Q
(Sun Spar) 234 512.67 T
(c \050Solaris 2\051) 277.59 512.67 T
4 9.5 Q
(sparc-sunos4) 153 486.67 T
2 11 Q
(Sun Spar) 234 486.67 T
(c \050SunOS 4\051) 277.59 486.67 T
3 13 Q
(10.5) 126 453.33 T
(Dylan SCC Installation) 152.68 453.33 T
2 11 Q
(This section pr) 126 433.67 T
(ovides complete Dylan SCC installation instr) 197.28 433.67 T
(uctions.) 415.31 433.67 T
(On UNIX, in bash:) 126 413.67 T
1 F
(1.) 135 393.67 T
2 F
(Cr) 153 393.67 T
(eate a personal r) 164.95 393.67 T
(oot dir) 244.46 393.67 T
(ectory) 276.88 393.67 T
(. For example:) 305.87 393.67 T
4 9 Q
(unix> mkdir ~/dylan/scc) 153 373 T
1 11 Q
(2.) 135 352.67 T
2 F
(Run the) 153 352.67 T
4 9.5 Q
(create-personal-dylan) 194.14 352.67 T
2 11 Q
( script, which is in the dir) 313.84 352.67 T
(ectory) 437.24 352.67 T
4 9.5 Q
(~dylan/releases/scc/admin) 153 338.67 T
2 11 Q
(. For example:) 295.5 338.67 T
4 9 Q
(unix> create-personal-dylan ~/dylan/scc) 153 318 T
(Creating empty directory tree for dylan in: .../dylan/scc) 153 307 T
(unix>) 153 296 T
1 11 Q
(3.) 135 275.67 T
2 F
(Run the) 153 275.67 T
4 9.5 Q
(dylan-setup.sh) 194.14 275.67 T
2 11 Q
( script, which is in the dir) 273.94 275.67 T
(ectory) 397.34 275.67 T
4 9.5 Q
(~dylan/) 430.29 275.67 T
(releases/scc/admin) 153 261.67 T
2 11 Q
(. Pass it your personal r) 255.6 261.67 T
(oot dir) 369.6 261.67 T
(ectory with the) 402.02 261.67 T
(option) 153 247.67 T
4 9.5 Q
(-pr) 187.56 247.67 T
2 11 Q
(. For example:) 203.85 247.67 T
4 9 Q
(unix> source dylan-setup.sh -pr ~/dylan/scc) 153 227 T
2 11 Q
(The script sets up UNIX envir) 153 206.67 T
(onment variables r) 297.86 206.67 T
(equir) 388.86 206.67 T
(ed by the emula-) 414.27 206.67 T
(tor) 153 192.67 T
(. Y) 166.12 192.67 T
(ou could add a call to this script in your shell r) 177.95 192.67 T
(esour) 403.83 192.67 T
(ce \336le) 430.55 192.67 T
-0.23 (\050) 153 178.67 P
4 9.5 Q
-0.49 (.bash_profile) 156.66 178.67 P
2 11 Q
-0.23 ( and the like\051 so that you do not need to keep r) 230.76 178.67 P
-0.23 (unning it.) 454.27 178.67 P
(Always r) 153 158.67 T
(un it with) 197.22 158.67 T
4 9.5 Q
(source) 247.65 158.67 T
2 11 Q
(, so that the envir) 281.86 158.67 T
(onment variables ar) 365.84 158.67 T
(e set in) 462.34 158.67 T
(the curr) 153 144.67 T
(ent shell. If you r) 191.02 144.67 T
(un the script dir) 273.14 144.67 T
(ectly) 351.04 144.67 T
(, the variables ar) 372.88 144.67 T
(e only set) 452.76 144.67 T
(in the subshell the script r) 153 130.67 T
(uns in.) 278.53 130.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(10) 429.69 695.67 T
(Dylan SCC Installation) 448.69 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(9) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
2 11 Q
0 X
(Unfortunately) 135 640.67 T
(, this script only works in) 203.05 640.67 T
4 9.5 Q
(bash) 329.07 640.67 T
2 11 Q
( at pr) 351.87 640.67 T
(esent.) 377.22 640.67 T
(See Section 13.2 on page 14 for mor) 135 620.67 T
(e on this script.) 305.72 620.67 T
(On W) 108 600.67 T
(indows:) 136.19 600.67 T
1 F
(4.) 117 580.67 T
2 F
(Start up an MS-DOS pr) 135 580.67 T
(ompt.) 247.48 580.67 T
1 F
(5.) 117 560.67 T
2 F
-0 (At the MS-DOS pr) 135 560.67 P
-0 (ompt, use the Samba networking package to mount a) 224.18 560.67 P
(UNIX \336lesystem fr) 135 546.67 T
(om which you can access both your personal r) 226.19 546.67 T
(oot) 450.7 546.67 T
(dir) 135 532.67 T
(ectory and) 149.07 532.67 T
4 9.5 Q
(~dylan) 203.4 532.67 T
2 11 Q
(. On most Harlequin machines this means your) 237.6 532.67 T
(mount point should be the dir) 135 518.67 T
(ectory) 281.2 518.67 T
4 9.5 Q
(/u) 314.16 518.67 T
2 11 Q
(.) 325.56 518.67 T
(The UNIX machine must be r) 135 500.67 T
(unning Samba for you to mount a \336lesys-) 277.48 500.67 T
(tem fr) 135 486.67 T
(om it. If you do not know which machines r) 164.13 486.67 T
(un Samba, br) 377.03 486.67 T
(owse) 441.12 486.67 T
(those available under) 135 472.67 T
5 9.6 Q
(Disk > Connect Netw) 242.22 472.67 T
(ork Drive) 337.25 472.67 T
2 11 Q
( fr) 378.86 472.67 T
(om the File Man-) 389.42 472.67 T
(ager) 135 458.67 T
(.) 155.42 458.67 T
(The syntax for this mounting pr) 135 440.67 T
(ocedur) 289.79 440.67 T
(e is:) 323.45 440.67 T
4 9 Q
(net use <) 135 420 T
6 F
(volume-name) 183.6 420 T
4 F
(> <) 238.1 420 T
6 F
(machine-and-mount-point) 254.3 420 T
4 F
(>) 360.84 420 T
2 11 Q
(The volume name is a single letter name, followed by a colon, which is) 135 399.67 T
(given to the notional \324disk\325 that the mounted \336lesystem pr) 135 385.67 T
(ovides.) 417.48 385.67 T
0 F
(<machine-and-mount-point) 135 371.67 T
2 F
(> starts with a double backslash. For example,) 258.58 371.67 T
4 9 Q
(C:\134users\134fred> net use w: \134\134bigserver\134u) 135 351 T
2 11 Q
(mounts the dir) 135 330.67 T
(ectory) 206.83 330.67 T
4 9.5 Q
(\134u) 239.79 330.67 T
2 11 Q
( on the machine) 251.19 330.67 T
4 9.5 Q
(bigserver) 331.22 330.67 T
2 11 Q
( as volume) 382.52 330.67 T
4 9.5 Q
(w:\134) 437.97 330.67 T
2 11 Q
(.) 455.07 330.67 T
(If a volume is alr) 135 312.67 T
(eady in use, you can unmount it with:) 216.62 312.67 T
4 9 Q
(net use <) 135 292 T
6 F
(volume-name) 183.6 292 T
4 F
(> \134delete) 238.1 292 T
1 11 Q
(6.) 117 271.67 T
2 F
(Move to the volume you just mounted. T) 135 271.67 T
(o do so, type its name at the) 333.05 271.67 T
(MS-DOS pr) 135 257.67 T
(ompt and hit r) 191.29 257.67 T
(eturn. For example:) 261.41 257.67 T
4 9 Q
(C:\134users\134fred> w:) 135 237 T
(W:\134> dir) 135 218 T
(Volume in drive W is u) 140.4 207 T
(Volume Serial Number is ...) 140.4 196 T
(Directory of W:\134) 140.4 177 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(10) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 F
0 X
(01\13412\13496) 153 642 T
(02:58p) 207 642 T
(<DIR>) 277.2 642 T
(lost+found) 342 642 T
(01\13411\13496) 153 631 T
(...) 207 631 T
(...) 153 620 T
(W:\134fred\134dylan\134scc\134platforms\134x86-win32\134lib>) 153 609 T
1 11 Q
(7.) 135 588.67 T
2 F
(Run the script) 153 588.67 T
4 9.5 Q
(dylan-setup.cmd) 224.18 588.67 T
2 11 Q
(, which is in the UNIX dir) 309.68 588.67 T
(ectory) 434.53 588.67 T
4 9.5 Q
(~dylan/releases/scc/admin) 153 574.67 T
2 11 Q
(. Y) 295.5 574.67 T
(ou can access this script dir) 307.33 574.67 T
(ectly fr) 439.58 574.67 T
(om) 473.19 574.67 T
(W) 153 560.67 T
(indows now that you have a Samba connection to UNIX.) 163.4 560.67 T
(Like the similarly named UNIX script, this script sets up PC envir) 153 542.67 T
(on-) 471.59 542.67 T
(ment variables r) 153 528.67 T
(equir) 231.6 528.67 T
(ed by the) 257.01 528.67 T
4 9.5 Q
(nmake) 304.7 528.67 T
2 11 Q
( scripts for building executables) 333.2 528.67 T
(and installing compiled libraries.) 153 514.67 T
-0.05 (Pass the script your personal r) 153 496.67 P
-0.05 (oot dir) 299.79 496.67 P
-0.05 (ectory) 332.16 496.67 P
-0.05 (. Always start it with a) 361.15 496.67 P
4 9.5 Q
-0.09 (\134) 473.67 496.67 P
2 11 Q
-0.05 (. For) 479.37 496.67 P
(example:) 153 482.67 T
4 9 Q
(w:\134> dylan\134releases\134scc\134admin\134dylan-setup.cmd \134fred\134dylan\134scc) 153 462 T
2 11 Q
(Optionally) 153 441.67 T
(, you can pass a second ar) 204.25 441.67 T
(gument to name the Dylan pr) 329.57 441.67 T
(oject) 473.27 441.67 T
(r) 153 427.67 T
(oot dir) 157.15 427.67 T
(ectory) 189.56 427.67 T
(,) 218.55 427.67 T
4 9.5 Q
(~dylan/releases/scc) 224.05 427.67 T
2 11 Q
( on UNIX. By default, this is set up) 332.35 427.67 T
(to be) 153 413.67 T
4 9.5 Q
(\134dylan\134releases\134scc) 179.44 413.67 T
2 11 Q
( in the curr) 287.74 413.67 T
(ent volume.) 340.86 413.67 T
(See Section 13.3 on page 15 for mor) 153 395.67 T
(e on this script.) 323.72 395.67 T
1 F
(8.) 135 375.67 T
2 F
-0.21 (If it is not alr) 153 375.67 P
-0.21 (eady set, set the user envir) 214.04 375.67 P
-0.21 (onment variable) 341.55 375.67 P
4 9.5 Q
-0.43 (%CPU%) 423.33 375.67 P
2 11 Q
-0.21 ( to) 451.83 375.67 P
4 9.5 Q
-0.43 (i386) 466.51 375.67 P
2 11 Q
-0.21 ( in) 489.31 375.67 P
5 9.6 Q
(Main > Contr) 153 361.67 T
(ol P) 211.21 361.67 T
(anel > System) 228.53 361.67 T
2 11 Q
(.) 292.83 361.67 T
(Y) 126 341.67 T
(our Dylan SCC installation is complete. T) 132.32 341.67 T
(o test it that it works, follow the) 332.25 341.67 T
(example in the next section.) 126 327.67 T
-0.25 (The next step after installing Dylan SCC and following the short example is to) 126 307.67 P
(populate your personal r) 126 293.67 T
(oot dir) 246.91 293.67 T
(ectory with library sour) 279.33 293.67 T
(ces, and r) 394.39 293.67 T
(egister them) 440.23 293.67 T
(in your emulator and batch-compiler r) 126 279.67 T
(egistries as appr) 312.82 279.67 T
(opriate. See) 391.67 279.67 T
0 F
(Guide to) 450.75 279.67 T
(Dylan Releases) 126 265.67 T
2 F
(, Chapter 3, \322Sour) 193.54 265.67 T
(ce Code Management\323, to \336nd out how to set) 280.36 265.67 T
(library sour) 126 251.67 T
(ces up.) 182.99 251.67 T
3 16 Q
(11  Using Dylan SCC: An e) 126 216.33 T
(xample) 291.33 216.33 T
2 11 Q
(This example shows how to set up a Dylan library for use with Dylan SCC,) 126 195.67 T
-0.39 (how to cr) 126 181.67 P
-0.39 (oss-compile it for W) 170.93 181.67 P
-0.39 (indows, and how to build a W) 267.1 181.67 P
-0.39 (indows executable) 411.73 181.67 P
(fr) 126 167.67 T
(om it. On UNIX:) 133.81 167.67 T
1 F
(1.) 135 147.67 T
2 F
(Under your personal r) 153 147.67 T
(oot dir) 261.79 147.67 T
(ectory) 294.21 147.67 T
(, move to the dir) 323.19 147.67 T
(ectory) 403.06 147.67 T
4 9.5 Q
(lib) 436.02 147.67 T
2 11 Q
(, and into) 453.12 147.67 T
(it check out the) 153 133.67 T
4 9.5 Q
(hello-world) 229.82 133.67 T
2 11 Q
( library fr) 292.52 133.67 T
(om HOPE:) 338.62 133.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(11) 399.85 695.67 T
(Using Dylan SCC: An example) 418.85 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(1) 531.33 100 T
(1) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(unix> cd ~/dylan/scc/lib) 135 642 T
(unix> hope co -compound D-lib-hello-world -branch D-scc) 135 631 T
2 11 Q
(The sour) 135 610.67 T
(ce setup for) 177.61 610.67 T
4 9.5 Q
(hello-world) 236.79 610.67 T
2 11 Q
(, comprised of the \336les) 299.49 610.67 T
4 9.5 Q
(hello-) 412.12 610.67 T
(world.dylan) 135 596.67 T
2 11 Q
(,) 197.7 596.67 T
4 9.5 Q
(hello-world-library.dylan) 203.2 596.67 T
2 11 Q
(, and) 345.7 596.67 T
4 9.5 Q
(hello-world.lid) 372.57 596.67 T
2 11 Q
(, is:) 458.07 596.67 T
4 9 Q
(unix> ls hello-world/) 135 576 T
(hello-world.dylan) 135 565 T
(hello-world-library.dylan) 135 554 T
(hello-world.lid) 135 543 T
(unix>) 135 532 T
2 11 Q
(The dir) 135 511.67 T
(ectory) 170.23 511.67 T
4 9.5 Q
(lib) 203.19 511.67 T
2 11 Q
( was chosen her) 220.29 511.67 T
(e as the dir) 297.32 511.67 T
(ectory in which to put the) 350.33 511.67 T
4 9.5 Q
(hello-world) 135 497.67 T
2 11 Q
( sour) 197.7 497.67 T
(ces because it r) 221.9 497.67 T
(e\337ects the setup of) 294.2 497.67 T
4 9.5 Q
(~dylan) 387.25 497.67 T
2 11 Q
(, but note) 421.45 497.67 T
-0.25 (that wher) 135 483.67 P
-0.25 (e you put libraries is entir) 181.56 483.67 P
-0.25 (ely your choice. All you have to do is) 305.17 483.67 P
-0.12 (to make sur) 135 469.67 P
-0.12 (e that the emulator and batch compiler r) 191.88 469.67 P
-0.12 (egistries contain the) 386.57 469.67 P
(right dir) 135 455.67 T
(ections the their LID \336les.) 175.47 455.67 T
1 F
(2.) 117 435.67 T
2 F
(Cr) 135 435.67 T
(eate a r) 146.95 435.67 T
(egistry entry for the) 181.72 435.67 T
4 9.5 Q
(hello-world) 281 435.67 T
2 11 Q
( library:) 343.7 435.67 T
4 9 Q
(unix> cat > ~/dylan/scc/registry/hello-world) 135 415 T
(abstract://personal-dylan/lib/hello-world/hello-world.lid) 135 404 T
(^D) 135 393 T
(unix>) 135 382 T
2 11 Q
(\050Her) 135 361.67 T
(e,) 157.23 361.67 T
4 9.5 Q
(^D) 168 361.67 T
2 11 Q
( stands for) 179.4 361.67 T
4 9.5 Q
(Ctrl-D) 233.2 361.67 T
2 11 Q
(.\051) 267.4 361.67 T
(A r) 135 343.67 T
(egistry entry is r) 150.46 343.67 T
(equir) 229.73 343.67 T
(ed so that the batch compiler can \336nd the) 255.14 343.67 T
(library sour) 135 329.67 T
(ces when you ask to compile the library) 191.99 329.67 T
(. If you intended to) 383.64 329.67 T
-0.28 (do UNIX-based development work on this library) 135 315.67 P
-0.28 (, it would also need an) 374.95 315.67 P
(emulator r) 135 301.67 T
(egistry entry) 186.15 301.67 T
(.) 246.69 301.67 T
(The following steps take place in the SCC emulator) 108 281.67 T
(. If you make a mistake) 355.79 281.67 T
-0.29 (entering anything her) 108 267.67 P
-0.29 (e, and end up in the TTY debugger) 213.05 267.67 P
-0.29 (, note that r) 379.95 267.67 P
-0.29 (estarts ar) 434.55 267.67 P
-0.29 (e) 478.27 267.67 P
(the same as for LispW) 108 253.67 T
(orks but must be terminated with a semicolon. For) 214.77 253.67 T
(example,) 108 239.67 T
4 9.5 Q
(:a;) 154.74 239.67 T
2 11 Q
( is the abort r) 171.84 239.67 T
(estart.) 235.63 239.67 T
1 F
(3.) 117 219.67 T
2 F
(Start up the SCC emulator image, and enter an in\336x Dylan listener:) 135 219.67 T
4 9 Q
(unix> $DW_BIN/lw+dylan+scc) 135 199 T
([) 135 188 T
6 F
(output) 145.8 188 T
4 F
( ]) 172.82 188 T
(CL-USER 1 > \050dylan::tty-infix-dylan-listen\051) 135 177 T
(DYLANWORKS-USER 1 ?) 135 166 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(12) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
2 11 Q
0 X
(Above,) 153 640.67 T
4 9.5 Q
(<) 190.63 640.67 T
0 11 Q
(platform) 196.33 640.67 T
4 9.5 Q
(>) 234.21 640.67 T
2 11 Q
( can be one of) 239.91 640.67 T
4 9.5 Q
(alpha-osf3) 309.15 640.67 T
2 11 Q
(,) 366.15 640.67 T
4 9.5 Q
(sgi-irix5) 371.65 640.67 T
2 11 Q
(,) 422.95 640.67 T
4 9.5 Q
(sparc-sunos4) 428.45 640.67 T
2 11 Q
(,) 496.85 640.67 T
(or) 153 626.67 T
4 9.5 Q
(sparc-solaris2) 166.1 626.67 T
2 11 Q
(. The envir) 245.9 626.67 T
(onment variable) 297.8 626.67 T
4 9.5 Q
($DW_BIN) 379.99 626.67 T
2 11 Q
( was set during) 419.89 626.67 T
(the call to) 153 612.67 T
4 9.5 Q
(dylan-setup.sh) 202.88 612.67 T
2 11 Q
(.) 282.68 612.67 T
-0.2 (If you would like to stop the image r) 153 594.67 P
-0.2 (eading your) 328.67 594.67 P
4 9.5 Q
-0.42 (.lispworks) 390.07 594.67 P
2 11 Q
-0.2 ( \336le on star-) 447.07 594.67 P
(tup, pass the ar) 153 580.67 T
(gument) 227.17 580.67 T
4 9.5 Q
(-init -) 267.64 580.67 T
2 11 Q
( to the) 307.54 580.67 T
4 9.5 Q
(lw+dylan+scc) 340.64 580.67 T
2 11 Q
( image.) 409.04 580.67 T
1 F
(4.) 135 560.67 T
2 F
(In the in\336x Dylan listener) 153 560.67 T
(, enter the) 276.16 560.67 T
4 9.5 Q
(front-end) 327.28 560.67 T
2 11 Q
( module and compile the) 378.58 560.67 T
4 9.5 Q
(hello-world) 153 546.67 T
2 11 Q
( library:) 215.7 546.67 T
4 9 Q
(DYLANWORKS-USER 1 ? in: front-end;) 153 526 T
(Now in the FRONT-END module) 153 515 T
(FRONT-END 1 ? trans\050#"hello-world"\051;) 153 504 T
([) 153 493 T
6 F
(output) 163.8 493 T
4 F
( ]) 190.82 493 T
2 11 Q
(On W) 126 472.67 T
(indows:) 154.19 472.67 T
1 F
(5.) 135 452.67 T
2 F
-0.07 (Move to the subdir) 153 452.67 P
-0.07 (ectory of your personal r) 245.24 452.67 P
-0.07 (oot dir) 365.08 452.67 P
-0.07 (ectory which you put) 397.42 452.67 P
4 9.5 Q
(hello-world) 153 438.67 T
2 11 Q
( in, and build the executable version of) 215.7 438.67 T
4 9.5 Q
(hello-world) 406.91 438.67 T
2 11 Q
( using) 469.61 438.67 T
4 9.5 Q
(nmake) 153 424.67 T
2 11 Q
(. \050A suitable) 181.5 424.67 T
4 9.5 Q
(makefile) 242.86 424.67 T
2 11 Q
( was emitted during compilation in step 4.\051) 288.46 424.67 T
4 9 Q
(W:\134> cd fred\134dylan\134scc\134lib\134hello-world) 153 404 T
(W:\134fred\134dylan\134scc\134lib\134hello-world> nmake install hello-world.exe) 153 393 T
([) 153 382 T
6 F
(output) 163.8 382 T
4 F
( ]) 190.82 382 T
(W:\134fred\134dylan\134scc\134lib\134hello-world>) 153 371 T
2 11 Q
(Ignor) 153 350.67 T
(e any warning messages fr) 179.38 350.67 T
(om the C compiler) 308.47 350.67 T
(.) 397.92 350.67 T
1 F
(6.) 135 330.67 T
2 F
(Now r) 153 330.67 T
(un the executable \336le:) 184.33 330.67 T
4 9 Q
(W:\134fred\134dylan\134scc\134lib\134hello-world> hello-world.exe) 153 310 T
(shalom) 153 299 T
(W:\134fred\134dylan\134scc\134lib\134hello-world>) 153 288 T
2 11 Q
(Building the application pr) 126 267.67 T
(oduced a library \336le) 257.16 267.67 T
4 9.5 Q
(hello-world.lib) 357.81 267.67 T
2 11 Q
(. When you) 443.31 267.67 T
-0.33 (ran) 126 253.67 P
4 9.5 Q
-0.69 (nmake) 144.66 253.67 P
2 11 Q
-0.33 (, above, the \336rst tar) 173.16 253.67 P
-0.33 (get,) 265.14 253.67 P
4 9.5 Q
-0.69 (install) 285.28 253.67 P
2 11 Q
-0.33 (, compiled and installed the) 325.18 253.67 P
4 9.5 Q
-0.69 (.lib) 461.24 253.67 P
2 11 Q
-0.33 ( \336le) 484.04 253.67 P
-0.21 (in the appr) 126 239.67 P
-0.21 (opriate place for linking. Then the tar) 178.81 239.67 P
-0.21 (get) 358.76 239.67 P
4 9.5 Q
-0.43 (hello-world.exe) 376.27 239.67 P
2 11 Q
-0.21 ( built an) 461.77 239.67 P
(executable fr) 126 225.67 T
(om) 187.93 225.67 T
4 9.5 Q
(hello-world.lib) 206.4 225.67 T
2 11 Q
( and the other libraries it depends upon.) 291.9 225.67 T
(Y) 126 205.67 T
(ou can check on the installation of) 132.32 205.67 T
4 9.5 Q
(hello-world.lib) 300.34 205.67 T
2 11 Q
( as follows:) 385.84 205.67 T
4 9 Q
(W:\134fred\134dylan\134scc\134lib\134hello-world> cd %DW_PERSONAL_LIB%) 153 185 T
(W:\134fred\134dylan\134scc\134platforms\134x86-win32\134lib> dir) 153 166 T
(Volume in drive W is u) 158.4 155 T
(Volume Serial Number is ...) 158.4 144 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(12) 419.04 695.67 T
(Known problems and bugs) 438.04 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(13) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 F
0 X
(Directory of W:\134fred\134dylan\134scc\134platforms\134x86-win32\134lib) 140.4 642 T
(01\13412\13496) 135 623 T
(02:58p) 189 623 T
(<DIR>) 259.2 623 T
(.) 324 623 T
(01\13411\13496) 135 612 T
(03:58p) 189 612 T
(<DIR>) 259.2 612 T
(..) 324 612 T
(01\13411\13496) 135 601 T
(02:58p) 189 601 T
(9,088 hello-world.lib) 291.6 601 T
(3 File<s>) 210.6 590 T
(9,088 bytes) 297 590 T
(41,549,824 bytes free) 270 579 T
(W:\134fred\134dylan\134scc\134platforms\134x86-win32\134lib>) 135 560 T
3 16 Q
(12  Kno) 108 526.33 T
(wn pr) 155.22 526.33 T
(ob) 189.97 526.33 T
(lems and b) 205.89 526.33 T
(ugs) 274.19 526.33 T
3 13 Q
(12.1  Em) 108 492.33 T
(ulator) 151.07 492.33 T
2 11 Q
(\245) 117 472.67 T
(Y) 135 472.67 T
(ou cannot use the FFI under the emulator) 141.32 472.67 T
(.) 341.82 472.67 T
(\245) 117 452.67 T
(The) 135 452.67 T
4 9.5 Q
(trace:) 156.16 452.67 T
2 11 Q
( and) 190.36 452.67 T
4 9.5 Q
(breakpoint:) 214.49 452.67 T
2 11 Q
( listener commands br) 277.19 452.67 T
(eak when applied) 385.21 452.67 T
(only to methods accepting particular types. When no type r) 135 438.67 T
(estrictions) 423.89 438.67 T
(ar) 135 424.67 T
(e enfor) 144.65 424.67 T
(ced, and an entir) 178.15 424.67 T
(e generic function is being traced or having a) 259.16 424.67 T
(br) 135 410.67 T
(eakpoint set on it, these commands work \336ne.) 145.23 410.67 T
3 13 Q
(12.2  Batc) 108 377.33 T
(h compiler) 157.69 377.33 T
2 11 Q
(\245) 117 357.67 T
(The batch compiler can become corr) 135 357.67 T
(upted in the course of or) 310.35 357.67 T
(dinary) 429.4 357.67 T
(work, if, for example, compilation of a library fails. Unfortunately the) 135 343.67 T
(only solution at pr) 135 329.67 T
(esent is to r) 224.52 329.67 T
(estart the image.) 279.56 329.67 T
(\245) 117 309.67 T
(If you move a name fr) 135 309.67 T
(om module to another) 242.27 309.67 T
(, you must r) 350.07 309.67 T
(estart the emu-) 408.57 309.67 T
(lator image.) 135 295.67 T
(\245) 117 275.67 T
(Y) 135 275.67 T
(ou cannot use the \336lename) 141.32 275.67 T
4 9.5 Q
(main.dylan) 274.33 275.67 T
2 11 Q
( in the sour) 331.33 275.67 T
(ces of libraries you) 385.89 275.67 T
(intend to compile with SCC. This is because the batch compiler) 135 261.67 T
(\325s C) 441.98 261.67 T
(back-end emits a) 135 247.67 T
4 9.5 Q
(main.c) 219.82 247.67 T
2 11 Q
( \336le for each library it compiles. \050This \336le con-) 254.02 247.67 T
(tains a) 135 233.67 T
4 9.5 Q
(main) 169.35 233.67 T
2 11 Q
( function so that an application based on the library can be) 192.15 233.67 T
(built.\051 The C back-end also emits a) 135 219.67 T
4 9.5 Q
(.c) 305.52 219.67 T
2 11 Q
( version of each) 316.92 219.67 T
4 9.5 Q
(.dylan) 395.75 219.67 T
2 11 Q
( \336le form-) 429.95 219.67 T
(ing part of a library) 135 205.67 T
(, so a name clash would occur if you used the name) 228.5 205.67 T
4 9.5 Q
(main.dylan) 135 191.67 T
2 11 Q
( in your sour) 192 191.67 T
(ces.) 254.4 191.67 T
(\245) 117 171.67 T
(T) 135 171.67 T
(o be able to use Dylan C FFI types fr) 140.73 171.67 T
(om a library that was compiled in) 316.58 171.67 T
(a pr) 135 157.67 T
(evious session, do this:) 154.01 157.67 T
4 9 Q
(trans\050#"foo", emit?: #f, dump-library?: #f\051;) 135 137 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(14) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
3 16 Q
0 X
(13  Installation script ref) 126 637.33 T
(erence) 276.83 637.33 T
3 13 Q
(13.1  CREA) 126 603.33 T
(TE-PERSONAL-D) 181.93 603.33 T
(YLAN) 268.84 603.33 T
4 9 Q
(create-personal-dylan) 126 575 T
6 F
(personal-r) 244.8 575 T
(oot-dir) 286.15 575 T
0 11 Q
(Installation script) 424.67 573.67 T
2 F
(The) 153 551.67 T
4 9.5 Q
(create-personal-dylan) 174.16 551.67 T
2 11 Q
( script sets up a personal Dylan ar) 293.86 551.67 T
(ea in the) 458.71 551.67 T
(dir) 153 537.67 T
(ectory) 167.07 537.67 T
0 F
(personal-r) 200.02 537.67 T
(oot-dir) 245.05 537.67 T
2 F
(, usually a subdir) 274.17 537.67 T
(ectory of your UNIX home) 358.06 537.67 T
(dir) 153 523.67 T
(ectory) 167.07 523.67 T
(. This r) 196.05 523.67 T
(oot dir) 229.46 523.67 T
(ectory is an empty dir) 261.88 523.67 T
(ectory str) 368.21 523.67 T
(uctur) 413.68 523.67 T
(e to be \336lled) 439.56 523.67 T
-0.27 (with personal r) 153 509.67 P
-0.27 (egistries and sour) 226.47 509.67 P
-0.27 (ces. See \322Personal sour) 311.81 509.67 P
-0.27 (ce ar) 422.11 509.67 P
-0.27 (ea\323 on page) 444.39 509.67 P
(5 for mor) 153 495.67 T
(e information on the purpose of this dir) 197.88 495.67 T
(ectory str) 389.82 495.67 T
(uctur) 435.28 495.67 T
(e.) 461.17 495.67 T
4 9.5 Q
(create-personal-dylan) 153 475.67 T
2 11 Q
( takes one r) 272.7 475.67 T
(equir) 327.91 475.67 T
(ed ar) 353.32 475.67 T
(gument,) 377.71 475.67 T
0 F
(personal-r) 420.92 475.67 T
(oot-dir) 465.95 475.67 T
2 F
(,) 495.07 475.67 T
(and no optional ar) 153 461.67 T
(guments.) 242.44 461.67 T
3 13 Q
(13.2  D) 126 428.33 T
(YLAN-SETUP) 159.64 428.33 T
(.SH) 226.49 428.33 T
4 9 Q
(dylan-setup.sh [ -pr) 126 400 T
6 F
(personal-r) 239.4 400 T
(oot-dir) 280.75 400 T
4 F
( ] [ -r) 309.26 400 T
6 F
(dylan-r) 352.46 400 T
(oot-dir) 382.31 400 T
4 F
(]) 410.82 400 T
0 11 Q
(Installation script) 424.67 398.67 T
2 F
(The) 153 376.67 T
4 9.5 Q
(dylan-setup.sh) 174.16 376.67 T
2 11 Q
( script con\336gur) 253.96 376.67 T
(es your UNIX envir) 327.6 376.67 T
(onment for) 422.86 376.67 T
(application development. Y) 153 362.67 T
(ou should r) 286.54 362.67 T
(un this in) 342.56 362.67 T
4 9.5 Q
(bash) 391.3 362.67 T
2 11 Q
( befor) 414.1 362.67 T
(e you start) 442.02 362.67 T
(the emulator) 153 348.67 T
(. Consider adding a call to this script in your) 214.45 348.67 T
4 9.5 Q
(.bash_profile) 153 334.67 T
2 11 Q
(.) 227.1 334.67 T
(Remember to r) 153 314.67 T
(un the script with sour) 225.36 314.67 T
(ce so that the envir) 335.75 314.67 T
(onment vari-) 427.14 314.67 T
(ables ar) 153 300.67 T
(e set in the par) 190.11 300.67 T
(ent shell and not just in the subshell invoked by) 261.02 300.67 T
(the script.) 153 286.67 T
(The script takes two optional ar) 153 266.67 T
(guments.) 306.52 266.67 T
4 9.5 Q
(-pr) 153 240.67 T
2 11 Q
(The r) 234 240.67 T
(oot of your personal sour) 259.31 240.67 T
(ce tr) 382.13 240.67 T
(ee. This should be) 402.76 240.67 T
(the same as the dir) 234 226.67 T
(ectory you passed to the) 324.89 226.67 T
4 9.5 Q
(create-) 445.88 226.67 T
(personal-dylan) 234 212.67 T
2 11 Q
( script. Defaults to the value passed to) 313.8 212.67 T
4 9.5 Q
(-r) 234 198.67 T
2 11 Q
(.) 244.59 198.67 T
4 9.5 Q
(-r) 153 172.67 T
2 11 Q
(The home of the Dylan pr) 234 172.67 T
(oject libraries, sour) 358.97 172.67 T
(ces, and) 450.8 172.67 T
-0.17 (executables. Defaults to) 234 158.67 P
4 9.5 Q
-0.36 (~dylan/releases/scc) 351.14 158.67 P
2 11 Q
-0.17 (. In most) 459.44 158.67 P
-0.16 (or) 234 144.67 P
-0.16 (dinary uses of the Dylan SCC r) 244.15 144.67 P
-0.16 (elease, you should not) 393.36 144.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(13) 416.15 695.67 T
(Installation script reference) 435.15 695.67 T
108 82.17 540 117 R
7 X
V
0 9 Q
0 X
(Revision 2. Jan 19, 1996.) 108 100 T
1 F
(15) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
2 11 Q
0 X
(need to pass a value for this option. The only r) 216 640.67 T
(eason to) 441.23 640.67 T
(change the default is if you ar) 216 626.67 T
(e shadowing the entir) 360.03 626.67 T
(e) 465.6 626.67 T
(Dylan pr) 216 612.67 T
(oject\325s code.) 259.24 612.67 T
3 13 Q
(13.3  D) 108 579.33 T
(YLAN-SETUP) 141.64 579.33 T
(.CMD) 208.49 579.33 T
4 9 Q
(dylan-setup.cmd) 108 551 T
6 F
(personal-r) 194.4 551 T
(oot-dir) 235.75 551 T
4 F
( [) 264.26 551 T
6 F
(dylan-r) 280.46 551 T
(oot-dir) 310.31 551 T
4 F
( ]) 338.82 551 T
0 11 Q
(Installation script) 406.67 549.67 T
2 F
(The) 135 527.67 T
4 9.5 Q
(dylan-setup.cmd) 156.16 527.67 T
2 11 Q
( script con\336gur) 241.66 527.67 T
(es your PC envir) 315.3 527.67 T
(onment for appli-) 396.26 527.67 T
(cation development. Y) 135 513.67 T
(ou should r) 243.42 513.67 T
(un this befor) 299.44 513.67 T
(e making or r) 360.99 513.67 T
(unning) 426.17 513.67 T
(applications on W) 135 499.67 T
(indows.) 222.67 499.67 T
(The script takes one mandatory ar) 135 479.67 T
(gument and a second optional ar) 300.8 479.67 T
(gu-) 460.5 479.67 T
(ment.) 135 465.67 T
(The \336rst ar) 135 445.67 T
(gument is the r) 187.81 445.67 T
(oot of your personal of your personal sour) 261.05 445.67 T
(ce) 466.88 445.67 T
(tr) 135 431.67 T
(ee. This must be the dir) 142.73 431.67 T
(ectory you passed to the) 256.05 431.67 T
4 9.5 Q
(create-personal-) 377.04 431.67 T
(dylan) 135 417.67 T
2 11 Q
( script. The second, optional, ar) 163.5 417.67 T
(gument should be the home of the) 315.31 417.67 T
(Dylan pr) 135 403.67 T
(oject libraries, sour) 178.24 403.67 T
(ces, and executables for the Dylan SCC) 270.07 403.67 T
(r) 135 389.67 T
(elease. This defaults to the UNIX dir) 139.15 389.67 T
(ectory) 315.48 389.67 T
4 9.5 Q
(~dylan/releases/scc) 348.43 389.67 T
2 11 Q
(\050speci\336ed on the PC as) 135 375.67 T
4 9.5 Q
(dylan\134releases\134scc) 247.96 375.67 T
2 11 Q
(.\051) 350.56 375.67 T
(In most or) 135 355.67 T
(dinary uses of Dylan SCC, you should not need to pass a) 184.73 355.67 T
(value for this second option. The only r) 135 341.67 T
(eason to change the default is if) 325.73 341.67 T
-0.17 (you ar) 135 327.67 P
-0.17 (e shadowing the entir) 165.98 327.67 P
-0.17 (e Dylan pr) 271.04 327.67 P
-0.17 (oject\325s code, or if you ar) 321.96 327.67 P
-0.17 (e r) 436.16 327.67 P
-0.17 (unning) 448.26 327.67 P
-0.22 (the script fr) 135 313.67 P
-0.22 (om a volume other than that in which) 190.42 313.67 P
4 9.5 Q
-0.45 (~dylan/releases/scc) 375.17 313.67 P
2 11 Q
(is mounted.) 135 299.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
0 9.5 Q
0 X
(Dylan SCC Release Notes) 72 695.67 T
72 81 504 118 R
7 X
V
1 9 Q
0 X
(16) 72 101 T
0 F
(Revision 2. Jan 19, 1996.) 413.24 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 16
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 16
%%DocumentFonts: Palatino-Italic
%%+ Palatino-Bold
%%+ Palatino-Roman
%%+ Helvetica-Narrow-Bold
%%+ Courier-Bold
%%+ Helvetica-Bold
%%+ Palatino-BoldItalic
%%EOF
