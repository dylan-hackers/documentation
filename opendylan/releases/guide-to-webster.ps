%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 18 FMDOCUMENT
0 0 /Palatino-Roman FMFONTDEFINE
1 0 /Palatino-Italic FMFONTDEFINE
2 0 /Palatino-Bold FMFONTDEFINE
3 0 /NewCenturySchlbk-Italic FMFONTDEFINE
4 0 /Helvetica-Narrow-Bold FMFONTDEFINE
5 0 /Courier-Bold FMFONTDEFINE
6 0 /Helvetica-Bold FMFONTDEFINE
7 0 /Palatino-BoldItalic FMFONTDEFINE
8 1 /Symbol FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "i" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
108 81 540 243 R
7 X
0 0 0 1 0 0 0 K
V
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 445 504 617 R
V
108 575.45 504 617 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 575.45 504 617 R
7 X
0 0 0 1 0 0 0 K
V
108 610.14 270 610.14 2 L
3 H
2 Z
0 X
N
108 601.14 270 601.14 2 L
1 H
N
36 72 576 720 C
0 0 0 0 1 1 1 K
0 2 Q
7 X
(0) 108 551.45 T
0 0 0 1 0 0 0 K
0 36 Q
0 X
0 0 0 1 0 0 0 K
(Guide to Dylan W) 109 551.45 T
(ebster) 396.28 551.45 T
0 14 Q
(Edition 1.  July 10, 1996.) 108 476.12 T
(Printed: 7/10/96) 108 450.12 T
108 252 486 432 R
7 X
V
0 X
(INTERNAL DOCUMENT) 108 422.67 T
(A) 269.06 422.67 T
(TION) 278.91 422.67 T
(The Dylan W) 108 396.67 T
(ebster internal r) 188.99 396.67 T
(elease) 286.7 396.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "i" 1
%%Page: "ii" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
108 82.17 540 117 R
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 89 T
2 F
(ii) 534.01 89 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "ii" 2
%%Page: "iii" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 540 522 630 R
7 X
0 0 0 1 0 0 0 K
V
0 30 Q
0 X
(Contents) 108 553.83 T
108 540 522 630 C
0 0 0 1 0 0 0 K
108 588.83 405 619 C
0 0 0 1 0 0 0 K
104.67 603.83 266.67 603.83 2 L
3 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
104.67 594.83 266.67 594.83 2 L
1 H
N
0 0 0 1 0 0 0 K
108 540 522 630 C
36 72 576 720 C
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
3 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 11 Q
(iii) 529.01 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 468 R
7 X
V
4 13 Q
0 X
(1) 108 459.33 T
(Overview and Installation Guide) 135 459.33 T
(5) 309.75 459.33 T
0 11 Q
(Intr) 135 439.67 T
(oduction) 152.84 439.67 T
(5) 207.28 439.67 T
(What is Dylan W) 135 425.67 T
(ebster?) 217.32 425.67 T
(5) 262.42 425.67 T
(Should I use Dylan W) 135 411.67 T
(ebster?) 240.73 411.67 T
(6) 285.83 411.67 T
(What does Dylan W) 135 397.67 T
(ebster pr) 232.12 397.67 T
(ovide?) 274.84 397.67 T
(6) 318.14 397.67 T
(What does Dylan W) 135 383.67 T
(ebster not pr) 232.12 383.67 T
(ovide?) 293.59 383.67 T
(7) 336.88 383.67 T
(H/W and S/W r) 135 369.67 T
(equir) 216.28 369.67 T
(ements for Dylan W) 241.69 369.67 T
(ebster) 338.58 369.67 T
(7) 378.79 369.67 T
(What is the Dylan W) 135 355.67 T
(ebster development cycle?) 235.33 355.67 T
(7) 374.55 355.67 T
(Reporting pr) 135 341.67 T
(oblems, bugs, and wishes) 197.39 341.67 T
(8) 332.57 341.67 T
(The Dylan W) 135 327.67 T
(ebster emulator) 198.63 327.67 T
(9) 285.85 327.67 T
(Dylan W) 135 313.67 T
(ebster installation) 177.47 313.67 T
(9) 274.89 313.67 T
(The personal r) 135 299.67 T
(oot and its subdir) 205.06 299.67 T
(ectories) 290.43 299.67 T
(10) 338.65 299.67 T
(Using Dylan W) 135 285.67 T
(ebster) 209.16 285.67 T
(12) 249.38 285.67 T
(An example) 135 271.67 T
(13) 204.95 271.67 T
(Known pr) 135 257.67 T
(oblems and bugs) 184.48 257.67 T
(15) 278.03 257.67 T
(Scripts r) 135 243.67 T
(efer) 174.96 243.67 T
(ence) 193.31 243.67 T
(16) 226.13 243.67 T
4 13 Q
(2) 108 221.33 T
(Source Code Management) 135 221.33 T
(19) 281.87 221.33 T
0 11 Q
(Intr) 135 201.67 T
(oduction) 152.84 201.67 T
(19) 207.28 201.67 T
(Storing library sour) 135 187.67 T
(ces) 230.17 187.67 T
(19) 255.99 187.67 T
(LID \336les and library r) 135 173.67 T
(egistries) 240.29 173.67 T
(20) 291.61 173.67 T
(Or) 135 159.67 T
(ganizing r) 147.79 159.67 T
(egistries) 197.13 159.67 T
(22) 248.44 159.67 T
(LID \336le format) 135 145.67 T
(24) 218.38 145.67 T
(Or) 135 131.67 T
(ganizing personal sour) 147.79 131.67 T
(ces) 259.18 131.67 T
(25) 285 131.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "iii" 3
%%Page: "iv" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
72 81 504 118 R
V
2 11 Q
0 X
(iv) 72 101 T
1 9 Q
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 13 Q
0 X
(3) 126 639.33 T
(The Batch Compiler) 153 639.33 T
(27) 266.7 639.33 T
0 11 Q
(Intr) 153 619.67 T
(oduction) 170.84 619.67 T
(27) 225.28 619.67 T
(Overview of the compilation and building pr) 153 605.67 T
(ocess) 372.01 605.67 T
(27) 408.5 605.67 T
(Compiling Dylan libraries) 153 591.67 T
(27) 291.29 591.67 T
(Compiler pr) 153 577.67 T
(oducts) 212.65 577.67 T
(29) 256.15 577.67 T
(Make\336le operations) 153 563.67 T
(32) 260.76 563.67 T
(Example of building libraries and executables) 153 549.67 T
(34) 386.13 549.67 T
4 13 Q
(4) 126 527.33 T
(Debugging Dylan Applications with GNU GDB) 153 527.33 T
(39) 398.18 527.33 T
0 11 Q
(Intr) 153 507.67 T
(oduction) 170.84 507.67 T
(39) 225.28 507.67 T
(GDB operation and setup) 153 493.67 T
(40) 288.19 493.67 T
(Using the GDB Dylan extensions) 153 479.67 T
(40) 323.7 479.67 T
(GDB extensions) 153 465.67 T
(44) 241.52 465.67 T
(Example session) 153 451.67 T
(48) 244.31 451.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "iv" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(5) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
108 590.45 504 618 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 590.45 504 618 R
7 X
0 0 0 1 0 0 0 K
V
108 611.14 270 611.14 2 L
3 H
2 Z
0 X
N
108 602.14 270 602.14 2 L
1 H
N
36 72 576 720 C
0 30 Q
0 X
0 0 0 1 0 0 0 K
(1) 180 628 T
0 0 0 0 1 1 1 K
0 2 Q
7 X
0 0 0 0 1 1 1 K
(1) 108 566.45 T
0 0 0 1 0 0 0 K
0 30 Q
0 X
0 0 0 1 0 0 0 K
(Overview and Installation) 109 566.45 T
(Guide) 108 528.45 T
108 126 486 432 R
7 X
V
4 16 Q
0 X
(1.1  Intr) 108 421.33 T
(oduction) 154.43 421.33 T
0 11 Q
(This chapter pr) 108 400.67 T
(esents an overview of Dylan W) 181.87 400.67 T
(ebster and also describes how) 332.45 400.67 T
(to install the r) 108 386.67 T
(elease. The chapter explains:) 175 386.67 T
(\245) 117 366.67 T
(What the Dylan W) 135 366.67 T
(ebster r) 224.72 366.67 T
(elease is) 260.83 366.67 T
(\245) 117 346.67 T
(Who would want to use the r) 135 346.67 T
(elease) 276.87 346.67 T
(\245) 117 326.67 T
(What featur) 135 326.67 T
(es the r) 193.04 326.67 T
(elease pr) 227.87 326.67 T
(ovides, and what it does not) 270.55 326.67 T
(\245) 117 306.67 T
(What kind of Dylan development cycle the r) 135 306.67 T
(elease supports) 350.6 306.67 T
(\245) 117 286.67 T
(Whom to r) 135 286.67 T
(eport newly discover) 187.36 286.67 T
(ed pr) 289.95 286.67 T
(oblems and bugs to) 315.44 286.67 T
(\245) 117 266.67 T
(Known pr) 135 266.67 T
(oblems and bugs) 184.48 266.67 T
(\245) 117 246.67 T
(How to install the r) 135 246.67 T
(elease) 229.08 246.67 T
(\245) 117 226.67 T
(How to use the r) 135 226.67 T
(elease, by means of a short example) 215.89 226.67 T
4 16 Q
(1.2  What is Dylan W) 108 191.33 T
(ebster?) 235.15 191.33 T
0 11 Q
(Dylan W) 108 170.67 T
(ebster is a small UNIX-based Dylan development envir) 150.47 170.67 T
(onment pr) 418.45 170.67 T
(o-) 469.34 170.67 T
(viding a cr) 108 156.67 T
(oss compiler with which you can build standalone executables on) 159.89 156.67 T
(the following UNIX plaforms:) 108 142.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(6) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(\245) 135 640.67 T
(Sun Spar) 153 640.67 T
(cs and their clones r) 196.59 640.67 T
(unning SunOS 4.) 293.25 640.67 T
1 F
(x) 375.39 640.67 T
0 F
( or Solaris 2) 380.89 640.67 T
(\245) 135 620.67 T
(DEC Alphas r) 153 620.67 T
(unning OSF/3) 220.73 620.67 T
(\245) 135 600.67 T
(SGI machines r) 153 600.67 T
(unning IRIX 5) 226.67 600.67 T
(Applications ar) 126 580.67 T
(e \336rst developed on UNIX in a Dylan emulator) 200.82 580.67 T
(. They ar) 428.05 580.67 T
(e then) 470.48 580.67 T
(compiled down to C using a Dylan compiler with a C back-end, and \336nally) 126 566.67 T
(compiled and linked into executables using the standar) 126 552.67 T
(d C compiler on the) 394.41 552.67 T
(chosen tar) 126 538.67 T
(get platform. The C back-end emits C \336les and Make\336les suitable) 175.61 538.67 T
(for the standar) 126 524.67 T
(d compiler and) 197.29 524.67 T
5 9.5 Q
(make) 274.11 524.67 T
0 11 Q
( implementation on each platform.) 296.92 524.67 T
(Dylan W) 126 504.67 T
(ebster pr) 168.47 504.67 T
(ovides a number of Dylan libraries \050the library\325s formal) 211.2 504.67 T
(name is in par) 126 490.67 T
(entheses\051:) 194.86 490.67 T
(\245) 135 470.67 T
(Str) 153 470.67 T
(eams \050) 166.51 470.67 T
5 9.5 Q
(streams) 198.07 470.67 T
0 11 Q
(\051) 237.97 470.67 T
(\245) 135 450.67 T
(Print \050) 153 450.67 T
5 9.5 Q
(print) 183.59 450.67 T
0 11 Q
(\051) 212.09 450.67 T
(\245) 135 430.67 T
(Format \050) 153 430.67 T
5 9.5 Q
(format) 194.68 430.67 T
0 11 Q
(\051) 228.88 430.67 T
(\245) 135 410.67 T
(Locators \050) 153 410.67 T
5 9.5 Q
(locators) 201.12 410.67 T
0 11 Q
(\051) 246.73 410.67 T
(\245) 135 390.67 T
(Socket str) 153 390.67 T
(eams \050) 199.78 390.67 T
5 9.5 Q
(tcp-streams) 231.34 390.67 T
0 11 Q
(\051) 294.04 390.67 T
(\245) 135 370.67 T
(Harlequin extensions \050) 153 370.67 T
5 9.5 Q
(harlequin-extensions) 263.17 370.67 T
0 11 Q
(\051) 377.17 370.67 T
(\245) 135 350.67 T
(C-FFI \050) 153 350.67 T
5 9.5 Q
(c-ffi) 186.81 350.67 T
0 11 Q
(\051) 215.31 350.67 T
(\245) 135 330.67 T
(T) 153 330.67 T
(estW) 158.73 330.67 T
(orks \050) 182.24 330.67 T
5 9.5 Q
(testworks) 209.78 330.67 T
0 11 Q
(\051) 261.08 330.67 T
4 16 Q
(1.3  Should I use Dylan W) 126 295.33 T
(ebster?) 284.51 295.33 T
0 11 Q
(Use Dylan W) 126 274.67 T
(ebster if you want to use UNIX as a Dylan development plat-) 189.71 274.67 T
-0.11 (form, but also want to be able to pr) 126 260.67 P
-0.11 (oduce standalone versions of your applica-) 295.31 260.67 P
(tions on any of UNIX, W) 126 246.67 T
(indows and Mac.) 245.59 246.67 T
2 F
-0.23 (Note:) 126 226.67 P
0 F
-0.23 ( For the pr) 153.19 226.67 P
-0.23 (esent, the only supported tar) 203.24 226.67 P
-0.23 (gets ar) 341.93 226.67 P
-0.23 (e UNIX platforms. This sit-) 373.74 226.67 P
(uation should change shortly) 126 212.67 T
(.) 266.88 212.67 T
4 16 Q
(1.4  What does Dylan W) 126 177.33 T
(ebster pr) 272.83 177.33 T
(o) 328.74 177.33 T
(vide?) 336.51 177.33 T
0 11 Q
(Dylan W) 126 156.67 T
(ebster pr) 168.47 156.67 T
(ovides:) 211.2 156.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1.5) 367.78 695.67 T
(What does Dylan Webster not provide?) 389.16 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(7) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(\245) 117 640.67 T
(A UNIX-based Dylan emulator built on top of LispW) 135 640.67 T
(orks. It contains a) 392.36 640.67 T
(full Dylan batch compiler with a C back-end.) 135 626.67 T
(\245) 117 606.67 T
(A version of the GNU GDB debugger) 135 606.67 T
(, extended for use with Dylan exe-) 316.54 606.67 T
(cutables.) 135 592.67 T
(\245) 117 572.67 T
(Dylan libraries:) 135 572.67 T
5 9.5 Q
(dylan) 212.79 572.67 T
0 11 Q
(,) 241.29 572.67 T
5 9.5 Q
(streams) 246.79 572.67 T
0 11 Q
(,) 286.69 572.67 T
5 9.5 Q
(print) 292.19 572.67 T
0 11 Q
(,) 320.69 572.67 T
5 9.5 Q
(format) 326.19 572.67 T
0 11 Q
(,) 360.39 572.67 T
5 9.5 Q
(locators) 365.89 572.67 T
0 11 Q
(,) 411.49 572.67 T
5 9.5 Q
(harlequin-) 416.99 572.67 T
(extensions) 135 558.67 T
0 11 Q
(,) 192 558.67 T
5 9.5 Q
(tcp-streams) 197.5 558.67 T
0 11 Q
(,) 260.2 558.67 T
5 9.5 Q
(c-ffi) 265.7 558.67 T
0 11 Q
(, and) 294.2 558.67 T
5 9.5 Q
(testworks) 321.07 558.67 T
0 11 Q
(.) 372.37 558.67 T
4 16 Q
(1.5  What does Dylan W) 108 523.33 T
(ebster not pr) 254.83 523.33 T
(o) 334.78 523.33 T
(vide?) 342.56 523.33 T
0 11 Q
(Dylan W) 108 502.67 T
(ebster lacks:) 150.47 502.67 T
(\245) 117 482.67 T
(A native W) 135 482.67 T
(indows development envir) 189.63 482.67 T
(onment and compiler) 320.79 482.67 T
(.) 424.71 482.67 T
(\245) 117 462.67 T
(Incr) 135 462.67 T
(emental compilation at the \336le or de\336nition level.) 154.14 462.67 T
(Incr) 135 444.67 T
(emental compilation is available at the application level. If you) 154.14 444.67 T
-0.07 (change a Dylan library) 135 430.67 P
-0.07 (, you need only r) 244.43 430.67 P
-0.07 (ecompile it and the libraries that) 326.2 430.67 P
(use it in or) 135 416.67 T
(der to r) 186.36 416.67 T
(ecompile your application.) 221.93 416.67 T
4 16 Q
(1.6  H/W and S/W requirements f) 108 381.33 T
(or Dylan W) 308.99 381.33 T
(ebster) 377.07 381.33 T
0 11 Q
(T) 108 360.67 T
(o use Dylan W) 113.73 360.67 T
(ebster) 184.27 360.67 T
(, you need a UNIX machine r) 212.68 360.67 T
(unning Solaris 2, SunOS) 354.21 360.67 T
-0.27 (4.) 108 346.67 P
1 F
-0.27 (x) 116.25 346.67 P
0 F
-0.27 (, Irix 5, or OSF/1 3.0, and the) 121.75 346.67 P
5 9.5 Q
-0.57 (bash) 262.92 346.67 P
0 11 Q
-0.27 ( shell. Y) 285.72 346.67 P
-0.27 (ou also need the GNU) 322.48 346.67 P
5 9.5 Q
-0.57 (gcc) 431.88 346.67 P
0 11 Q
-0.27 ( C com-) 448.98 346.67 P
(piler) 108 332.67 T
(.) 129.81 332.67 T
4 16 Q
(1.7  What is the Dylan W) 108 297.33 T
(ebster de) 258.48 297.33 T
(velopment c) 316.64 297.33 T
(yc) 393.09 297.33 T
(le?) 407.44 297.33 T
0 11 Q
(Figur) 108 276.67 T
(e 1.1, page 8, shows the Dylan W) 134.21 276.67 T
(ebster development cycle. Ther) 292.87 276.67 T
(e ar) 444.26 276.67 T
(e) 461.92 276.67 T
(thr) 108 262.67 T
(ee development phases:) 122.14 262.67 T
2 F
(1.) 117 242.67 T
0 F
(Develop and test your application on UNIX in the emulator) 135 242.67 T
(.) 423.82 242.67 T
2 F
(2.) 117 222.67 T
0 F
-0.4 (Still in the emulator) 135 222.67 P
-0.4 (, use the batch compiler to pr) 229.32 222.67 P
-0.4 (oduce a C version of the) 368.04 222.67 P
(application, then, using a Make\336le automatically generated during) 135 208.67 T
(batch compilation, compile the C code down to a standalone UNIX exe-) 135 194.67 T
(cutable.) 135 180.67 T
2 F
(Note:) 135 162.67 T
0 F
( The tar) 162.19 162.67 T
(get UNIX platform need not be the same as the develop-) 199.34 162.67 T
(ment UNIX platform, for example you might develop on a Spar) 135 148.67 T
(c and) 443.85 148.67 T
(build executables on an Alpha.) 135 134.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(8) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
2 11 Q
0 X
(3.) 135 640.67 T
0 F
-0.09 (Run the \336nished executable and debug it if necessary with the extended) 153 640.67 P
(GDB debugger) 153 626.67 T
(. If you pr) 225.12 626.67 T
(efer) 273 626.67 T
(, you can r) 290.73 626.67 T
(eturn to the emulator and debug) 341.42 626.67 T
(any br) 153 612.67 T
(oken libraries ther) 184 612.67 T
(e.) 272.5 612.67 T
126 293.01 504 301 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
36 72 576 720 C
0 11 Q
0 X
0 0 0 1 0 0 0 K
(Figur) 210.33 304.67 T
(e 1.1  The Dylan W) 236.54 304.67 T
(ebster ar) 327.45 304.67 T
(chitectur) 369.06 304.67 T
(e.) 411.65 304.67 T
4 16 Q
(1.8  Repor) 126 263.34 T
(ting pr) 189.7 263.34 T
(ob) 230.27 263.34 T
(lems, b) 246.19 263.34 T
(ugs, and wishes) 291.17 263.34 T
0 11 Q
(Pr) 153 236.67 T
(oblems) 163.79 236.67 T
(Send e-mail to) 234 236.67 T
5 9.5 Q
(dylan-group) 306.56 236.67 T
0 11 Q
(.) 369.26 236.67 T
(Bugs) 153 210.67 T
(Choose) 234 210.67 T
6 9.6 Q
(Dylan > Repor) 272.9 210.67 T
(t Dylan Bug) 337.91 210.67 T
0 11 Q
(; \336ll in and send bug) 391.24 210.67 T
(form. Include a full backtrace with) 234 196.67 T
5 9.5 Q
(bb:;) 404.52 196.67 T
0 11 Q
(.) 427.32 196.67 T
(Doc. pr) 153 170.67 T
(oblems) 188.66 170.67 T
(Send e-mail to) 234 170.67 T
5 9.5 Q
(dylan-doc) 306.56 170.67 T
0 11 Q
(.) 357.86 170.67 T
(Doc. bugs) 153 144.67 T
(Choose) 234 144.67 T
6 9.6 Q
(Dylan > Repor) 272.9 144.67 T
(t Doc Bug) 337.91 144.67 T
0 11 Q
(; \336ll in and send bug) 383.24 144.67 T
(form.) 234 130.67 T
126 126 504 648 C
178.06 321 451.94 589 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
188.09 508 332.09 580 R
7 X
0 0 0 1 0 0 0 K
V
0.25 H
0 Z
0 X
N
7 X
90 450 18 13.5 386.09 557.5 G
0 X
90 450 18 13.5 386.09 557.5 A
7 X
90 450 18 13.5 386.09 503.5 G
0 X
90 450 18 13.5 386.09 503.5 A
368.09 503.51 404.09 530.51 R
7 X
V
N
404.09 557.5 404.09 503.51 2 L
V
2 Z
0 X
N
368.09 557.5 368.09 503.51 2 L
7 X
V
0 X
N
380.92 497.17 390.92 539.17 R
7 X
V
0 11 Q
0 X
(C \336les) 0 -270 388.25 497.17 TF
380.92 497.17 390.92 539.17 R
242.08 508 332.08 553 R
0 Z
N
249.42 513.67 330.42 544.67 R
7 X
V
0 X
(Batch compiler) 249.42 537.33 T
(w/ C back-end) 249.42 523.33 T
188.09 400 332.09 445 R
7 X
V
0 X
N
368.09 341.17 413.09 368.17 R
7 X
V
0 X
N
372.92 350.17 408.92 359.17 R
7 X
V
0 X
(Make) 372.92 351.83 T
260.09 445 260.09 400 2 L
7 X
V
2 Z
0 X
N
197.09 419.83 251.09 428.83 R
7 X
V
0 X
(Debugger) 197.09 421.5 T
269.09 409 323.09 436 R
7 X
V
0 X
(Dylan) 269.09 428.67 T
(extensions) 269.09 414.67 T
296.09 362 323.09 371 R
7 X
V
0 X
(Build) 296.09 363.67 T
386.09 371.51 387.87 371.51 386.09 368.42 384.3 371.51 4 Y
0 Z
N
386.09 371.51 387.87 371.51 386.09 368.42 384.3 371.51 4 Y
V
386.09 490 386.09 371.63 2 L
7 X
V
2 Z
0 X
N
364.75 528.17 364.75 529.95 367.84 528.17 364.75 526.38 4 Y
0 Z
N
364.75 528.17 364.75 529.95 367.84 528.17 364.75 526.38 4 Y
V
332.09 528.17 364.62 528.17 2 L
7 X
V
2 Z
0 X
N
224.09 396.66 222.3 396.66 224.09 399.75 225.87 396.66 4 Y
0 Z
N
224.09 396.66 222.3 396.66 224.09 399.75 225.87 396.66 4 Y
V
224.09 376.34 225.87 376.34 224.09 373.25 222.3 376.34 4 Y
N
224.09 376.34 225.87 376.34 224.09 373.25 222.3 376.34 4 Y
V
224.09 396.54 224.09 376.46 2 L
7 X
V
0 X
N
J
59.45 458 487.68 458 2 L
7 X
V
J
59.45 458 63.32 458 2 L
2 Z
0 X
N
[7.645 6.165] 7.645 I
63.32 458 483.8 458 2 L
N
J
483.8 458 487.68 458 2 L
N
195.43 562 276.43 571 R
7 X
V
0 X
(Dylan Emulator) 195.43 563.67 T
J
396.74 416 468.74 444 R
7 X
V
2 F
0 X
(Delivery) 396.74 436.67 T
(platform) 396.74 422.67 T
J
J
213.44 337 280.94 364 R
7 X
V
0 F
0 X
(Standalone) 213.44 356.67 T
(application) 213.44 342.67 T
206.09 328 287.09 373 R
0 Z
N
290.42 355 290.42 353.22 287.33 355 290.42 356.78 4 Y
N
290.42 355 290.42 353.22 287.33 355 290.42 356.78 4 Y
V
368.09 355 290.55 355 2 L
2 Z
N
396.74 471 450.74 480 R
7 X
V
2 F
0 X
(UNIX) 396.74 472.67 T
J
J
126 126 504 648 C
36 72 576 720 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1.9) 407.35 695.67 T
(The Dylan Webster emulator) 428.73 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(9) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 16 Q
0 X
(1.9  The Dylan W) 108 637.33 T
(ebster em) 211.82 637.33 T
(ulator) 273.57 637.33 T
0 11 Q
(The Dylan W) 108 616.67 T
(ebster batch compiler is packaged into a special version of the) 171.63 616.67 T
(emulator to allow you to bene\336t fr) 108 602.67 T
(om the emulator) 274.85 602.67 T
(\325s limited development) 356.39 602.67 T
(Dylan envir) 108 588.67 T
(onment. The batch compiler is available in the module) 165.72 588.67 T
5 9.5 Q
(webster) 432.63 588.67 T
0 11 Q
(.) 471.72 588.67 T
(Emulator images ar) 108 568.67 T
(e available pr) 203.32 568.67 T
(e-installed on UNIX machines at all sites, as) 268.51 568.67 T
5 9.5 Q
(lw+dylan+webster) 108 554.67 T
0 11 Q
( under) 199.2 554.67 T
5 9 Q
(~dylan/releases/webster/install/<) 135 534 T
7 F
(platform) 313.2 534 T
5 F
(>/bin/) 348.7 534 T
0 11 Q
(Wher) 108 513.67 T
(e) 134.82 513.67 T
5 9.5 Q
(<) 142.84 513.67 T
1 11 Q
(platform) 148.54 513.67 T
5 9.5 Q
(>) 186.42 513.67 T
0 11 Q
( can be one of:) 192.12 513.67 T
5 9.5 Q
(alpha-osf3) 135 487.67 T
0 11 Q
(DEC Alpha \050OSF 3.0\051) 216 487.67 T
5 9.5 Q
(mips-irix5) 135 461.67 T
0 11 Q
(SGI \050Irix 5\051) 216 461.67 T
5 9.5 Q
(sparc-solaris2) 135 435.67 T
0 11 Q
(Sun Spar) 216 435.67 T
(c \050Solaris 2\051) 259.59 435.67 T
5 9.5 Q
(sparc-sunos4) 135 409.67 T
0 11 Q
(Sun Spar) 216 409.67 T
(c \050SunOS 4\051) 259.59 409.67 T
(If an image for the platform you want to use is not available at your site, con-) 108 389.67 T
(tact Arthor W) 108 375.67 T
(einstein \050e-mail:) 174.29 375.67 T
5 9.5 Q
(rthor) 254.74 375.67 T
0 11 Q
(\051.) 283.24 375.67 T
2 F
(Note:) 108 355.67 T
0 F
( Because the Dylan W) 135.19 355.67 T
(ebster batch compiler is built into the emulator) 240.11 355.67 T
(,) 466.72 355.67 T
-0.17 (which contains a Dylan compiler of its own, you must be awar) 108 341.67 P
-0.17 (e of the context) 410.06 341.67 P
(you ar) 108 327.67 T
(e in when compiling libraries. Anything you compile within the mod-) 139.15 327.67 T
(ule) 108 313.67 T
5 9.5 Q
(webster) 125.85 313.67 T
0 11 Q
( in an or) 165.75 313.67 T
(dinary in\336x listener using either) 205.66 313.67 T
5 9.5 Q
(compile-library) 364.65 313.67 T
0 11 Q
( or) 450.15 313.67 T
5 9.5 Q
(update-libraries) 108 299.67 T
0 11 Q
( is compiled in the batch compiler context, with C sour) 199.2 299.67 T
(ce) 464.49 299.67 T
-0.18 (\336les and suitable Make\336les emitted. Compilation by) 108 285.67 P
1 F
-0.18 (any other) 363.13 285.67 P
0 F
-0.18 ( means is compi-) 404.8 285.67 P
(lation in the emulator context, with LispW) 108 271.67 T
(orks fasl \336les being emitted.) 313.22 271.67 T
4 16 Q
(1.10  Dylan W) 108 236.33 T
(ebster installation) 192.14 236.33 T
0 11 Q
(Dylan W) 108 215.67 T
(ebster installation is automated by the) 150.47 215.67 T
5 9.5 Q
(create-personal-dylan) 338.47 215.67 T
0 11 Q
(script, available under) 108 201.67 T
5 9.5 Q
(~dylan/releases/webster/admin) 219.33 201.67 T
0 11 Q
(.) 384.63 201.67 T
(The script cr) 108 181.67 T
(eates an empty dir) 168.24 181.67 T
(ectory str) 258.04 181.67 T
(uctur) 303.5 181.67 T
(e under your home dir) 329.39 181.67 T
(ectory in) 439.58 181.67 T
-0.39 (which you can stor) 108 167.67 P
-0.39 (e library sour) 199.07 167.67 P
-0.39 (ces, compiled libraries, executables and so on.) 263.29 167.67 P
-0.02 (The script cr) 108 153.67 P
-0.02 (eates this dir) 168.19 153.67 P
-0.02 (ectory str) 229.86 153.67 P
-0.02 (uctur) 275.3 153.67 P
-0.02 (e under a dir) 301.18 153.67 P
-0.02 (ectory called the) 363.57 153.67 P
1 F
-0.02 (personal) 445.99 153.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(10) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
1 11 Q
0 X
(r) 126 640.67 T
(oot) 130.08 640.67 T
0 F
(. See Section 1.15.1 on page 16 for mor) 143.51 640.67 T
(e on the) 327.98 640.67 T
5 9.5 Q
(create-personal-dylan) 369.17 640.67 T
0 11 Q
(script.) 126 626.67 T
(T) 126 606.67 T
(o cr) 131.73 606.67 T
(eate your personal r) 149.52 606.67 T
(oot dir) 246.64 606.67 T
(ectory str) 279.05 606.67 T
(uctur) 324.52 606.67 T
(e on UNIX:) 350.4 606.67 T
2 F
(1.) 135 586.67 T
0 F
(Run the) 153 586.67 T
5 9.5 Q
(create-personal-dylan) 194.14 586.67 T
0 11 Q
( script, passing your personal r) 313.84 586.67 T
(oot) 464.03 586.67 T
(dir) 153 572.67 T
(ectory on the command line. For example:) 167.07 572.67 T
5 9 Q
(unix> create-personal-dylan ~/dylan/webster) 153 552 T
([) 153 541 T
7 F
(messages) 163.8 541 T
5 F
( ]) 200.78 541 T
(unix>) 153 530 T
0 11 Q
(This call would cr) 126 509.67 T
(eate the dir) 212.81 509.67 T
(ectory) 267.26 509.67 T
5 9.5 Q
(~/dylan/webster) 300.22 509.67 T
0 11 Q
( and then build an) 385.72 509.67 T
(empty personal r) 126 495.67 T
(oot dir) 208.94 495.67 T
(ectory str) 241.36 495.67 T
(uctur) 286.82 495.67 T
(e under it.) 312.7 495.67 T
(The basics of Dylan W) 126 475.67 T
(ebster installation ar) 233.8 475.67 T
(e now complete. T) 332.61 475.67 T
(o do any serious) 420.73 475.67 T
(work, however) 126 461.67 T
(, you must also populate your personal r) 199.01 461.67 T
(oot dir) 396.39 461.67 T
(ectory with) 428.81 461.67 T
(library sour) 126 447.67 T
(ces, and r) 182.99 447.67 T
(egister them in your emulator and batch-compiler r) 228.83 447.67 T
(egis-) 478.57 447.67 T
(tries as appr) 126 433.67 T
(opriate. See Chapter 2,  \322Sour) 185.6 433.67 T
(ce Code Management\323, to \336nd out) 328.75 433.67 T
(how to do this. For now) 126 419.67 T
(, continue r) 241.29 419.67 T
(eading to learn what the various personal) 296.07 419.67 T
-0.25 (r) 126 405.67 P
-0.25 (oot subdir) 130.15 405.67 P
-0.25 (ectories ar) 179.69 405.67 P
-0.25 (e for and to test that your installation works by means of) 229.06 405.67 P
(a simple example.) 126 391.67 T
4 16 Q
(1.11  The per) 126 356.33 T
(sonal r) 206.05 356.33 T
(oot and its subdirectories) 248.83 356.33 T
0 11 Q
-0.38 (Chapter 2,  \322Sour) 126 335.67 P
-0.38 (ce Code Management\323, explains many of the concepts in this) 208.95 335.67 P
(section.) 126 321.67 T
(Given) 126 301.67 T
5 9.5 Q
(~/dylan/webster) 158.23 301.67 T
0 11 Q
( as a value for a personal r) 243.73 301.67 T
(oot dir) 371.12 301.67 T
(ectory) 403.54 301.67 T
(, the) 432.52 301.67 T
5 9.5 Q
(create-) 456.03 301.67 T
(personal-dylan) 126 287.67 T
0 11 Q
( script cr) 205.8 287.67 T
(eates the following subdir) 247.62 287.67 T
(ectories:) 373.84 287.67 T
5 9.5 Q
(~/dylan/webster/lib/) 153 261.67 T
0 11 Q
-0.1 (This dir) 234 243.67 P
-0.1 (ectory is for storing your Dylan library sour) 271.73 243.67 P
-0.1 (ces.) 483.78 243.67 P
(Each library you install should go in a dir) 234 229.67 T
(ectory of its) 435.73 229.67 T
(own under) 234 215.67 T
5 9.5 Q
(lib) 290.45 215.67 T
0 11 Q
(. See Section 2.6 on page 25.) 307.55 215.67 T
5 9.5 Q
(~/dylan/webster/registry/) 153 189.67 T
0 11 Q
(This is your personal r) 234 171.67 T
(egistry dir) 343.12 171.67 T
(ectory) 393.24 171.67 T
(. Y) 422.22 171.67 T
(ou can popu-) 434.05 171.67 T
(late this with r) 234 157.67 T
(egistry entries for libraries you wish to) 304.17 157.67 T
(compile, but which ar) 234 143.67 T
(e not r) 339.9 143.67 T
(egister) 370.81 143.67 T
(ed in the Dylan) 403.06 143.67 T
(pr) 234 129.67 T
(oject\325s equivalent r) 244.76 129.67 T
(egistry under) 335.88 129.67 T
5 9.5 Q
(~dylan) 404.05 129.67 T
0 11 Q
(.) 438.25 129.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1.11) 363.38 695.67 T
(The personal root and its subdirectories) 389.5 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(1) 531.33 100 T
(1) 535.5 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(Contains a subdir) 216 640.67 T
(ectory for each platform, then one) 302.01 640.67 T
(called) 216 626.67 T
5 9.5 Q
(generic) 247.53 626.67 T
0 11 Q
( for non-platform-speci\336c libraries, and) 287.43 626.67 T
(one called) 216 612.67 T
5 9.5 Q
(emulator) 267.95 612.67 T
0 11 Q
( for emulator) 313.55 612.67 T
(-speci\336c libraries. See) 377.12 612.67 T
(Section 2.3 on page 20.) 216 598.67 T
5 9.5 Q
(~/dylan/webster/build) 135 572.67 T
0 11 Q
-0.04 (The emitted C versions of Dylan libraries that you com-) 216 554.67 P
(piled ar) 216 540.67 T
(e stor) 253.4 540.67 T
(ed under this dir) 279.82 540.67 T
(ectory) 361.35 540.67 T
(, and any binary) 390.34 540.67 T
(libraries \050) 216 526.67 T
5 9.5 Q
(.a) 262.22 526.67 T
0 11 Q
( and) 273.62 526.67 T
5 9.5 Q
(.so) 297.74 526.67 T
0 11 Q
( \336les\051 or executables you pr) 314.85 526.67 T
(oduce) 447.95 526.67 T
(will be built ther) 216 512.67 T
(e.) 296.49 512.67 T
(The dir) 216 494.67 T
(ectory contains a subdir) 251.23 494.67 T
(ectory for each of the) 367.28 494.67 T
(possible tar) 216 480.67 T
(get platforms:) 271.68 480.67 T
5 9.5 Q
(alpha-osf3) 342.19 480.67 T
0 11 Q
(,) 399.19 480.67 T
5 9.5 Q
(mips-irix5) 404.69 480.67 T
0 11 Q
(,) 461.69 480.67 T
5 9.5 Q
(sparc-solaris2) 216 466.67 T
0 11 Q
(, and) 295.8 466.67 T
5 9.5 Q
(sparc-sunos4) 322.67 466.67 T
0 11 Q
(. When you com-) 391.07 466.67 T
(pile a Dylan library for one of these platforms, the com-) 216 452.67 T
-0.48 (piler cr) 216 438.67 P
-0.48 (eates a subdir) 249.93 438.67 P
-0.48 (ectory named after that library and) 315.71 438.67 P
(emits C \336les and a Make\336le into it.) 216 424.67 T
(Thus, if you compile a library called) 216 406.67 T
5 9.5 Q
(networks) 394.01 406.67 T
0 11 Q
( for SGI) 439.61 406.67 T
(MIPS r) 216 392.67 T
(unning Irix5, C \336les and a Make\336le for it ar) 249.54 392.67 T
(e) 459.2 392.67 T
(emitted into a dir) 216 378.67 T
(ectory) 300.36 378.67 T
5 9.5 Q
(~/dylan/webster/build/) 333.32 378.67 T
(mips-irix5/networks/) 216 364.67 T
0 11 Q
(.) 330 364.67 T
5 9.5 Q
(~/dylan/webster/install/) 135 338.67 T
0 11 Q
(Any binary libraries \050) 216 320.67 T
5 9.5 Q
(.a) 320.45 320.67 T
0 11 Q
( and) 331.85 320.67 T
5 9.5 Q
(.so) 355.97 320.67 T
0 11 Q
( \336les\051 and executable) 373.07 320.67 T
(\336les fr) 216 306.67 T
(om the) 246.35 306.67 T
5 9.5 Q
(build) 282.83 306.67 T
0 11 Q
( dir) 311.33 306.67 T
(ectory that you decide to keep) 328.14 306.67 T
-0.15 (can be installed under this dir) 216 292.67 P
-0.15 (ectory) 360.19 292.67 P
-0.15 (. The Make\336le emit-) 389.18 292.67 P
(ted for each library contains tar) 216 278.67 T
(gets) 368.06 278.67 T
5 9.5 Q
(install) 390.45 278.67 T
0 11 Q
( and) 430.35 278.67 T
5 9.5 Q
-0.28 (install-app) 216 264.67 P
0 11 Q
-0.13 ( that perform these installations for binary) 278.7 264.67 P
(libraries and executables r) 216 250.67 T
(espectively) 342.86 250.67 T
(.) 395.93 250.67 T
(The dir) 216 232.67 T
(ectory contains a subdir) 251.23 232.67 T
(ectory for each of the) 367.28 232.67 T
(possible tar) 216 218.67 T
(get platforms:) 271.68 218.67 T
5 9.5 Q
(alpha-osf3) 342.19 218.67 T
0 11 Q
(,) 399.19 218.67 T
5 9.5 Q
(mips-irix5) 404.69 218.67 T
0 11 Q
(,) 461.69 218.67 T
5 9.5 Q
(sparc-solaris2) 216 204.67 T
0 11 Q
(, and) 295.8 204.67 T
5 9.5 Q
(sparc-sunos4) 322.67 204.67 T
0 11 Q
(, so that compiled) 391.07 204.67 T
-0.02 (\336les for the dif) 216 190.67 P
-0.02 (fer) 286.62 190.67 P
-0.02 (ent platforms can be stor) 299.7 190.67 P
-0.02 (ed separately) 419.69 190.67 P
-0.02 (.) 483.25 190.67 P
(Under each platform dir) 216 172.67 T
(ectory) 334.29 172.67 T
(, ther) 363.28 172.67 T
(e ar) 388.18 172.67 T
(e two mor) 405.85 172.67 T
(e) 455.25 172.67 T
-0.31 (dir) 216 158.67 P
-0.31 (ectories:) 230.07 158.67 P
5 9.5 Q
-0.64 (bin) 272.48 158.67 P
0 11 Q
-0.31 ( and) 289.58 158.67 P
5 9.5 Q
-0.64 (lib) 313.08 158.67 P
0 11 Q
-0.31 (. The) 330.18 158.67 P
5 9.5 Q
-0.64 (bin) 356.23 158.67 P
0 11 Q
-0.31 ( dir) 373.33 158.67 P
-0.31 (ectory is for storing) 389.84 158.67 P
(executables, while) 216 144.67 T
5 9.5 Q
(lib) 307.53 144.67 T
0 11 Q
( is for storing binary libraries.) 324.63 144.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(12) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 16 Q
0 X
(1.12  Using Dylan W) 126 637.33 T
(ebster) 250.24 637.33 T
0 11 Q
(This section explains how to r) 126 616.67 T
(un the Dylan W) 270.73 616.67 T
(ebster emulator and how to set) 346.99 616.67 T
(up your envir) 126 602.67 T
(onment for building libraries and executables.) 193.08 602.67 T
4 13 Q
(1.12.1  Running the em) 126 569.33 T
(ulator) 241.92 569.33 T
0 11 Q
(T) 126 549.67 T
(o r) 131.73 549.67 T
(un the Dylan W) 144.74 549.67 T
(ebster emulator) 221.01 549.67 T
(, use the) 296.41 549.67 T
5 9.5 Q
(webster) 339.23 549.67 T
0 11 Q
( script, which is in the) 379.14 549.67 T
-0.11 (dir) 126 535.67 P
-0.11 (ectory) 140.07 535.67 P
5 9.5 Q
-0.22 (~dylan/releases/webster/admin) 172.92 535.67 P
0 11 Q
-0.11 (. The script sets up UNIX envir) 338.22 535.67 P
-0.11 (on-) 487.93 535.67 P
(ment variables r) 126 521.67 T
(equir) 204.6 521.67 T
(ed by the emulator) 230.01 521.67 T
(, and then starts the emulator up.) 321.14 521.67 T
(Pass the script your personal r) 126 501.67 T
(oot dir) 273.02 501.67 T
(ectory with the option) 305.43 501.67 T
5 9.5 Q
(-pr) 416.07 501.67 T
0 11 Q
( \050with) 433.17 501.67 T
1 F
(no) 464.7 501.67 T
0 F
( trail-) 475.7 501.67 T
(ing slash\051. For example:) 126 487.67 T
5 9 Q
(unix> webster -pr ~/dylan/webster) 153 467 T
0 11 Q
(Y) 126 446.67 T
(ou can now start up the LispW) 132.32 446.67 T
(orks envir) 281.2 446.67 T
(onment and begin development.) 330.31 446.67 T
(See Section 1.15.2 on page 17 for mor) 126 426.67 T
(e on the) 304.97 426.67 T
5 9.5 Q
(webster) 346.15 426.67 T
0 11 Q
( script. The section) 386.05 426.67 T
(includes an explanation of how to set the default tar) 126 412.67 T
(get platform for batch) 378.41 412.67 T
(compiler compilation.) 126 398.67 T
4 13 Q
(1.12.2  Preparing y) 126 365.33 T
(our en) 219.96 365.33 T
(vir) 252.13 365.33 T
(onment f) 264.97 365.33 T
(or b) 309.78 365.33 T
(uild operations) 329.72 365.33 T
0 11 Q
(T) 126 345.67 T
(o r) 131.73 345.67 T
(eady your envir) 144.63 345.67 T
(onment for building libraries and executables with the) 222.07 345.67 T
(Make\336les emitted by the batch compiler) 126 331.67 T
(, you must r) 320.5 331.67 T
(un the) 379.11 331.67 T
5 9.5 Q
(webster-env.sh) 412.9 331.67 T
0 11 Q
(script, which is in the dir) 126 317.67 T
(ectory) 246.65 317.67 T
5 9.5 Q
(~dylan/releases/webster/admin) 279.6 317.67 T
0 11 Q
(. The script) 444.9 317.67 T
(must be r) 126 303.67 T
(un in a shell on the compilation tar) 171.71 303.67 T
(get platform.) 341.04 303.67 T
-0.29 (Pass the name of your personal r) 126 283.67 P
-0.29 (oot dir) 283.3 283.67 P
-0.29 (ectory to the script with the option) 315.43 283.67 P
5 9.5 Q
-0.6 (-pr) 484.44 283.67 P
0 11 Q
(\050and with) 126 269.67 T
1 F
(no) 176.15 269.67 T
0 F
( trailing slash\051. For example:) 187.15 269.67 T
5 9 Q
(unix> cd ~dylan/releases/webster/admin) 153 249 T
(unix> source webster-env.sh -pr ~/dylan/webster) 153 238 T
([) 153 227 T
7 F
(messages) 163.8 227 T
5 F
( ]) 200.78 227 T
(unix>) 153 216 T
2 11 Q
(Note:) 126 195.67 T
0 F
( Always r) 153.19 195.67 T
(un) 200.16 195.67 T
5 9.5 Q
(webster-env.sh) 215.95 195.67 T
0 11 Q
( in) 295.75 195.67 T
5 9.5 Q
(bash) 310.85 195.67 T
0 11 Q
( using the) 333.65 195.67 T
5 9.5 Q
(source) 384.17 195.67 T
0 11 Q
( shell command,) 418.37 195.67 T
(so that the envir) 126 181.67 T
(onment variables ar) 204.49 181.67 T
(e set in the curr) 300.99 181.67 T
(ent shell. If you r) 375.64 181.67 T
(un the) 457.77 181.67 T
-0.43 (script dir) 126 167.67 P
-0.43 (ectly \050as simply \322) 169.68 167.67 P
5 9.5 Q
-0.88 (webster-env.sh) 252.54 167.67 P
0 11 Q
-0.43 ( ...\323, the variables ar) 332.34 167.67 P
-0.43 (e only set in the) 427.01 167.67 P
(subshell that the script r) 126 153.67 T
(uns in.) 243 153.67 T
2 F
(Note:) 126 133.67 T
0 F
( Unfortunately) 153.19 133.67 T
(, this script works only in the) 223.99 133.67 T
5 9.5 Q
(bash) 368.02 133.67 T
0 11 Q
( shell at pr) 390.82 133.67 T
(esent.) 441.65 133.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1.13) 468.22 695.67 T
(An example) 494.34 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(13) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(See Section 1.15.3 on page 18 for mor) 108 640.67 T
(e on this script, and Chapter 3,  \322The) 286.97 640.67 T
(Batch Compiler\323 for details of how to use the generated build scripts.) 108 626.67 T
4 16 Q
(1.13  An e) 108 591.33 T
(xample) 169.09 591.33 T
0 11 Q
-0.41 (This example shows how to set up a Dylan library for use with Dylan W) 108 570.67 P
-0.41 (ebster) 452.51 570.67 P
-0.41 (,) 480.91 570.67 P
(how to compile it down to C, and how to build an executable fr) 108 556.67 T
(om it. Note) 415.76 556.67 T
(that some of the details of this pr) 108 542.67 T
(ocess \050for example, r) 267.32 542.67 T
(egistries\051 ar) 366.87 542.67 T
(e not) 423.25 542.67 T
(explained until later in this guide.) 108 528.67 T
2 F
(1.) 117 508.67 T
0 F
(Under your personal r) 135 508.67 T
(oot dir) 243.79 508.67 T
(ectory) 276.21 508.67 T
(, move to the dir) 305.19 508.67 T
(ectory) 385.06 508.67 T
5 9.5 Q
(lib) 418.02 508.67 T
0 11 Q
(, and into) 435.12 508.67 T
(it check out the) 135 494.67 T
5 9.5 Q
(hello-world) 211.82 494.67 T
0 11 Q
( library fr) 274.52 494.67 T
(om HOPE. For example:) 320.62 494.67 T
5 9 Q
(unix> cd ~/dylan/webster/lib) 135 474 T
(unix> hope co -compound D-lib-hello-world) 135 463 T
([) 135 452 T
7 F
(messages) 145.8 452 T
5 F
( ]) 182.78 452 T
0 11 Q
(The) 135 431.67 T
5 9.5 Q
(hello-world) 156.16 431.67 T
0 11 Q
( example library de\336nes a method) 218.86 431.67 T
5 9.5 Q
(say-hello) 387.57 431.67 T
0 11 Q
( which) 438.87 431.67 T
(prints the message \322hello ther) 135 417.67 T
(e!\323 The library is comprised of the follow-) 280.24 417.67 T
(ing \336les:) 135 403.67 T
5 9 Q
(unix> ls hello-world/) 135 383 T
(hello-world-library.dylan) 135 372 T
(hello-world.lid) 135 361 T
(hello.dylan) 135 350 T
(unix>) 135 339 T
2 11 Q
(2.) 117 318.67 T
0 F
(Cr) 135 318.67 T
(eate a r) 146.95 318.67 T
(egistry entry for the) 181.72 318.67 T
5 9.5 Q
(hello-world) 281 318.67 T
0 11 Q
( library) 343.7 318.67 T
(. For example:) 378.02 318.67 T
5 9 Q
(unix> cat > ~/dylan/webster/registry/generic/hello-world) 135 298 T
(abstract://dylan/lib/hello-world/hello-world.lid) 135 287 T
(^D) 135 276 T
(unix>) 135 265 T
0 11 Q
(\050Her) 135 244.67 T
(e,) 157.23 244.67 T
5 9.5 Q
(^D) 168 244.67 T
0 11 Q
( stands for) 179.4 244.67 T
5 9.5 Q
(Ctrl-D) 233.2 244.67 T
0 11 Q
(.\051) 267.4 244.67 T
(A r) 135 226.67 T
(egistry entry is r) 150.46 226.67 T
(equir) 229.73 226.67 T
(ed so that the batch compiler and r) 255.14 226.67 T
(emote lis-) 423.84 226.67 T
(tener can each \336nd the library sour) 135 212.67 T
(ces when you ask to compile the) 304.49 212.67 T
(library) 135 198.67 T
(.) 166.57 198.67 T
2 F
(3.) 117 178.67 T
0 F
(Start up the Dylan W) 135 178.67 T
(ebster emulator image. The) 237.01 178.67 T
5 9.5 Q
(webster) 372.45 178.67 T
0 11 Q
( script is in) 412.35 178.67 T
5 9.5 Q
(~dylan/releases/webster/admin/) 135 164.67 T
0 11 Q
(.) 306 164.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(14) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
5 F
0 X
(unix> webster -pr ~/dylan/webster) 153 642 T
([) 153 631 T
7 F
(messages) 163.8 631 T
5 F
( ]) 200.78 631 T
(CL-USER 1 >) 153 620 T
2 11 Q
(4.) 135 599.67 T
0 F
(Start up the LispW) 153 599.67 T
(orks envir) 243.73 599.67 T
(onment:) 292.84 599.67 T
5 9 Q
(CL-USER 2 > \050tools:start-lispworks\051) 153 579 T
([) 153 568 T
7 F
(messages) 163.8 568 T
5 F
( ]) 200.78 568 T
2 11 Q
(5.) 135 547.67 T
0 F
(Start up an in\336x-Dylan listener by selecting) 153 547.67 T
6 9.6 Q
(Dylan > In\336x Listener) 366.25 547.67 T
0 11 Q
( fr) 463.08 547.67 T
(om) 473.64 547.67 T
(the podium.) 153 533.67 T
2 F
(6.) 135 513.67 T
0 F
(Run the) 153 513.67 T
5 9.5 Q
(hello-world) 194.14 513.67 T
0 11 Q
( library thr) 256.84 513.67 T
(ough the batch compiler:) 309.27 513.67 T
5 9 Q
(DYLAN-USER 1 ? in: webster;) 153 493 T
(Now in the WEBSTER module) 153 482 T
(WEBSTER 2 ? compile-library\050#"hello-world"\051;) 153 463 T
(// Compiling new library sources.) 153 452 T
([) 153 441 T
7 F
(messages) 163.8 441 T
5 F
( ]) 200.78 441 T
(// Emitting Glue: hello-world) 153 430 T
(#f) 153 419 T
(WEBSTER 2 ?) 153 400 T
0 11 Q
-0.12 (Compilation pr) 153 379.67 P
-0.12 (oduces) 227.62 379.67 P
5 9.5 Q
-0.24 (.c) 264.43 379.67 P
0 11 Q
-0.12 ( \336les for the library) 275.83 379.67 P
-0.12 (. The next step is to compile) 366.99 379.67 P
(the C \336les into a standalone executable.) 153 365.67 T
2 F
(7.) 135 345.67 T
0 F
(In a shell on your tar) 153 345.67 T
(get compilation platform, set up the build envir) 253.84 345.67 T
(on-) 484.84 345.67 T
(ment variables with the script) 153 331.67 T
5 9.5 Q
(webster-env.sh) 300.61 331.67 T
0 11 Q
(:) 380.41 331.67 T
5 9 Q
(unix> cd ~dylan/releases/webster/admin) 153 311 T
(unix> source webster-env.sh -pr ~/dylan/webster) 153 300 T
([) 153 289 T
7 F
(messages) 163.8 289 T
5 F
( ]) 200.78 289 T
(unix>) 153 278 T
2 11 Q
(8.) 135 257.67 T
0 F
(In the) 153 257.67 T
5 9.5 Q
(build) 183.87 257.67 T
0 11 Q
( subdir) 212.37 257.67 T
(ectory of your personal r) 246.57 257.67 T
(oot, go to the subdir) 366.68 257.67 T
(ectory) 464.45 257.67 T
(for your curr) 153 243.67 T
(ent tar) 215.62 243.67 T
(get platform and then to the) 246.86 243.67 T
5 9.5 Q
(hello-world) 386.09 243.67 T
0 11 Q
( that was) 448.79 243.67 T
(cr) 153 229.67 T
(eated for it automatically) 162.03 229.67 T
(. Build an executable version of) 282.83 229.67 T
5 9.5 Q
(hello-world) 437.6 229.67 T
0 11 Q
(using the Make\336le \050which was emitted during step 6\051. For example:) 153 215.67 T
5 9 Q
(unix> cd ~/dylan/webster/build/alpha-osf3/hello-world/) 153 195 T
(unix> make app) 153 184 T
([) 153 173 T
7 F
(messages) 163.8 173 T
5 F
( ]) 200.78 173 T
(unix>) 153 162 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1.14) 411.91 695.67 T
(Known problems and bugs) 438.04 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(15) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(The) 135 640.67 T
5 9.5 Q
(make) 156.16 640.67 T
0 11 Q
( tar) 178.96 640.67 T
(get builds a library \336le \050) 194.95 640.67 T
5 9.5 Q
(lib_hello-world.a) 311.25 640.67 T
0 11 Q
( or) 408.15 640.67 T
5 9.5 Q
(lib_hello-) 424 640.67 T
(world.so) 135 626.67 T
0 11 Q
( depending on the platform\051 in the curr) 180.6 626.67 T
(ent dir) 371.38 626.67 T
(ectory) 403.46 626.67 T
(, then cop-) 432.45 626.67 T
(ies it in the) 135 612.67 T
5 9.5 Q
($WEBSTER_PERSONAL_LIB) 190.78 612.67 T
0 11 Q
( dir) 310.48 612.67 T
(ectory) 327.3 612.67 T
(,) 356.29 612.67 T
5 9 Q
(~/dylan/webster/install/<) 135 592 T
7 F
(platform) 270 592 T
5 F
(>/lib/) 305.51 592 T
0 11 Q
(so that it can be accessed during any futur) 135 571.67 T
(e application builds you per-) 339.62 571.67 T
(form. It then builds an executable) 135 557.67 T
5 9.5 Q
(hello-world) 300.7 557.67 T
0 11 Q
( in the curr) 363.4 557.67 T
(ent dir) 416.52 557.67 T
(ectory) 448.6 557.67 T
(.) 477.58 557.67 T
2 F
(9.) 117 537.67 T
0 F
(Now r) 135 537.67 T
(un the executable \336le:) 166.33 537.67 T
5 9 Q
(unix> hello-world) 135 517 T
(hello there!) 135 506 T
(unix>) 135 495 T
0 11 Q
(The message \322hello ther) 135 474.67 T
(e!\323 appears in the r) 251.84 474.67 T
(emote listener) 344.18 474.67 T
(.) 411.89 474.67 T
(The example pr) 108 454.67 T
(esented in this section was brief, but it illustrates all the steps) 183.91 454.67 T
(necessary to build an application. The r) 108 440.67 T
(est of the document explains the pr) 298.96 440.67 T
(o-) 469.66 440.67 T
(cess in mor) 108 426.67 T
(e detail.) 162.45 426.67 T
-0.08 (See Chapter 2,  \322Sour) 108 406.67 P
-0.08 (ce Code Management\323, for details of library sour) 210.8 406.67 P
-0.08 (ce man-) 447.9 406.67 P
(agement and r) 108 392.67 T
(egistries.) 178.12 392.67 T
(Chapter 3,  \322The Batch Compiler\323, explains the commands available for com-) 108 372.67 T
-0.28 (piling single and multiple libraries. Section 3.5 on page 32 explains each of the) 108 358.67 P
(Make\336le operations available for application building.) 108 344.67 T
(Chapter 4,  \322Debugging Dylan Applications with GNU GDB\323, explains) 108 324.67 T
(debugging \050not cover) 108 310.67 T
(ed in the example above\051 the application executable) 212.34 310.67 T
(with a version of GNU GDB extended for use with Dylan pr) 108 296.67 T
(ograms.) 399.95 296.67 T
4 16 Q
(1.14  Kno) 108 261.33 T
(wn pr) 166.16 261.33 T
(ob) 200.91 261.33 T
(lems and b) 216.83 261.33 T
(ugs) 285.14 261.33 T
4 13 Q
(1.14.1  Dylan langua) 108 227.33 T
(g) 209.83 227.33 T
(e implementation) 216.45 227.33 T
0 11 Q
(The batch compiler supports mor) 108 207.67 T
(e of the Dylan language than pr) 270.08 207.67 T
(evious com-) 423.9 207.67 T
(pilers \321 the SCC and VMT) 108 193.67 T
(ether+W) 239.37 193.67 T
(in32 r) 281.3 193.67 T
(elease\325s batch compilers, and the) 308.8 193.67 T
(emulator) 108 179.67 T
(\325s compiler \321 but does have some limitations at pr) 153.07 179.67 T
(esent, including:) 399.87 179.67 T
(\245) 117 159.67 T
(no pr) 135 159.67 T
(oper tail calls) 160.92 159.67 T
(\245) 117 139.67 T
(no dynamic type expr) 135 139.67 T
(essions) 241.48 139.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(16) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(\245) 135 640.67 T
(only limited integer types) 153 640.67 T
(\245) 135 620.67 T
(Common Lisp multiple-values calling convention) 153 620.67 T
(See the Dylan Notebook in Spring for mor) 126 600.67 T
(e details. The document is) 330.7 600.67 T
5 9 Q
(\134DylanWorks\134Compiler\134Compiler/runtime language limitations) 153 580 T
4 13 Q
(1.14.2  Em) 126 548.33 T
(ulator) 177.96 548.33 T
0 11 Q
(\245) 135 528.67 T
(Y) 153 528.67 T
(ou cannot use the FFI under the emulator) 159.32 528.67 T
(.) 359.82 528.67 T
(\245) 135 508.67 T
(The) 153 508.67 T
5 9.5 Q
(trace:) 174.16 508.67 T
0 11 Q
( and) 208.36 508.67 T
5 9.5 Q
(breakpoint:) 232.49 508.67 T
0 11 Q
( listener commands br) 295.19 508.67 T
(eak when applied) 403.21 508.67 T
(only to methods accepting particular types. When no type r) 153 494.67 T
(estrictions) 441.89 494.67 T
(ar) 153 480.67 T
(e enfor) 162.65 480.67 T
(ced, and an entir) 196.15 480.67 T
(e generic function is being traced or having a) 277.16 480.67 T
(br) 153 466.67 T
(eakpoint set on it, these commands work \336ne.) 163.23 466.67 T
(\245) 135 446.67 T
(Region compilation does not work perfectly) 153 446.67 T
(. T) 365.42 446.67 T
(ry to end your r) 376.67 446.67 T
(egion) 453.37 446.67 T
(selection on a blank line: you will sometimes get sever) 153 432.67 T
(e-sounding err) 416.42 432.67 T
(or) 488.01 432.67 T
(r) 153 418.67 T
(eports during r) 157.15 418.67 T
(egion compilation which ar) 230.69 418.67 T
(e simply the r) 363.96 418.67 T
(esult of select-) 430.39 418.67 T
(ing a r) 153 404.67 T
(egion which ends on the same line as a piece of code.) 183.87 404.67 T
4 16 Q
(1.15  Scripts ref) 126 369.33 T
(erence) 223.62 369.33 T
4 13 Q
(1.15.1  CREA) 126 335.33 T
(TE-PERSONAL-D) 190.82 335.33 T
(YLAN) 277.74 335.33 T
5 9 Q
(create-personal-dylan) 126 307 T
7 F
(personal-r) 244.8 307 T
(oot-dir) 286.15 307 T
1 11 Q
(Installation script) 424.67 305.67 T
0 F
(The) 153 283.67 T
5 9.5 Q
(create-personal-dylan) 174.16 283.67 T
0 11 Q
( script sets up a personal Dylan ar) 293.86 283.67 T
(ea in the) 458.71 283.67 T
(dir) 153 269.67 T
(ectory) 167.07 269.67 T
1 F
(personal-r) 200.02 269.67 T
(oot-dir) 245.05 269.67 T
0 F
(, usually a subdir) 274.17 269.67 T
(ectory of your UNIX home) 358.06 269.67 T
(dir) 153 255.67 T
(ectory) 167.07 255.67 T
(. This r) 196.05 255.67 T
(oot dir) 229.46 255.67 T
(ectory is an empty dir) 261.88 255.67 T
(ectory str) 368.21 255.67 T
(uctur) 413.68 255.67 T
(e to be \336lled) 439.56 255.67 T
(with personal library sour) 153 241.67 T
(ces, compiled \336les, r) 279.85 241.67 T
(egistries, and other per-) 377.96 241.67 T
-0.01 (sonal materials. See Section 1.1) 153 227.67 P
-0.01 (1 on page 10 for mor) 302.06 227.67 P
-0.01 (e information on the) 402.06 227.67 P
(purpose of this dir) 153 213.67 T
(ectory str) 242.98 213.67 T
(uctur) 288.44 213.67 T
(e.) 314.33 213.67 T
5 9.5 Q
(create-personal-dylan) 153 193.67 T
0 11 Q
( takes one r) 272.7 193.67 T
(equir) 327.91 193.67 T
(ed ar) 353.32 193.67 T
(gument,) 377.71 193.67 T
1 F
(personal-r) 420.92 193.67 T
(oot-dir) 465.95 193.67 T
0 F
(,) 495.07 193.67 T
(and no optional ar) 153 179.67 T
(guments.) 242.44 179.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1.15) 450.44 695.67 T
(Scripts reference) 476.57 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(17) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 13 Q
0 X
(1.15.2  WEBSTER) 108 639.33 T
5 9 Q
(webster -pr) 108 611 T
7 F
(pr-dir) 172.8 611 T
5 F
( [ -r) 196.31 611 T
7 F
(dr-dir) 228.71 611 T
5 F
( ] [ -pl) 252.22 611 T
7 F
(platform) 300.82 611 T
5 F
( ]) 336.32 611 T
1 11 Q
(Envir) 363.77 609.67 T
(onment startup script) 389.24 609.67 T
0 F
(The) 135 587.67 T
5 9.5 Q
(webster) 156.16 587.67 T
0 11 Q
( script con\336gur) 196.06 587.67 T
(es your UNIX envir) 269.7 587.67 T
(onment for the W) 364.96 587.67 T
(ebster) 449.85 587.67 T
(emulator) 135 573.67 T
(, and then starts the emulator up.) 178.44 573.67 T
(The script takes thr) 135 553.67 T
(ee ar) 228.23 553.67 T
(guments.) 251.16 553.67 T
5 9.5 Q
(-pr) 135 527.67 T
0 11 Q
-0.16 (The r) 216 527.67 P
-0.16 (oot of your personal sour) 241.15 527.67 P
-0.16 (ce tr) 363.34 527.67 P
-0.16 (ee. This is a r) 383.82 527.67 P
-0.16 (equir) 446.01 527.67 P
-0.16 (ed) 471.42 527.67 P
(ar) 216 513.67 T
(gument. It must be the same as the dir) 225.65 513.67 T
(ectory you) 411.25 513.67 T
(passed to the) 216 499.67 T
5 9.5 Q
(create-personal-dylan) 282.53 499.67 T
0 11 Q
( script. Do not) 402.23 499.67 T
(terminate this dir) 216 485.67 T
(ectory with a) 300.29 485.67 T
5 9.5 Q
(/) 366.61 485.67 T
0 11 Q
(.) 372.31 485.67 T
5 9.5 Q
(-r) 135 459.67 T
0 11 Q
(The home of the Dylan pr) 216 459.67 T
(oject libraries, sour) 340.97 459.67 T
(ces, and) 432.8 459.67 T
(executables. Defaults to) 216 445.67 T
5 9.5 Q
(~dylan/releases/webster) 333.66 445.67 T
0 11 Q
(. In) 463.94 445.67 T
(most or) 216 431.67 T
(dinary uses of the Dylan W) 252.87 431.67 T
(ebster r) 384.78 431.67 T
(elease, you) 420.9 431.67 T
(should not need to pass a value for this option. The) 216 417.67 T
(only r) 216 403.67 T
(eason to change the default is if you ar) 244.62 403.67 T
(e shadow-) 431.59 403.67 T
(ing the entir) 216 389.67 T
(e Dylan pr) 275.08 389.67 T
(oject\325s code. Do not terminate) 326.34 389.67 T
(this dir) 216 375.67 T
(ectory name with a) 250.67 375.67 T
5 9.5 Q
(/) 346.62 375.67 T
0 11 Q
(.) 352.33 375.67 T
5 9.5 Q
(-pl) 135 349.67 T
0 11 Q
(The compilation tar) 216 349.67 T
(get platform. Emitted C \336les and) 311.46 349.67 T
-0.37 (build scripts will be crafted to suit this platform. Can be) 216 335.67 P
(one of) 216 321.67 T
5 9.5 Q
(alpha-osf3) 248.85 321.67 T
0 11 Q
(,) 305.85 321.67 T
5 9.5 Q
(mips-irix5) 311.35 321.67 T
0 11 Q
(,) 368.35 321.67 T
5 9.5 Q
(sparc-sunos4) 373.85 321.67 T
0 11 Q
(, and) 442.25 321.67 T
5 9.5 Q
(sparc-solaris2) 216 307.67 T
0 11 Q
(. It defaults to the curr) 295.8 307.67 T
(ent platform.) 403.69 307.67 T
(If you would like to stop the emulator r) 135 287.67 T
(eading your) 326.76 287.67 T
5 9.5 Q
(.lispworks) 388.57 287.67 T
0 11 Q
( \336le on) 445.57 287.67 T
(startup, make a copy of) 135 273.67 T
5 9.5 Q
(webster) 251.81 273.67 T
0 11 Q
( and edit the line calling the) 291.71 273.67 T
5 9.5 Q
(lw+dylan+webster) 135 259.67 T
0 11 Q
( image so that the following ar) 226.2 259.67 T
(guments ar) 374.12 259.67 T
(e passed to) 428.9 259.67 T
(it:) 135 245.67 T
5 9 Q
(-init -) 135 225 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(1) 72 695.67 T
(Overview and Installation Guide) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(18) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 13 Q
0 X
(1.15.3  WEBSTER-ENV) 126 639.33 T
(.SH) 239.07 639.33 T
5 9 Q
(webster-env.sh -pr) 126 611 T
7 F
(personal-r) 228.6 611 T
(oot-dir) 269.95 611 T
5 F
( [ -r) 298.46 611 T
7 F
(dylan-r) 330.86 611 T
(oot-dir) 360.71 611 T
5 F
( ]) 389.22 611 T
1 11 Q
(Con\336guration script) 413.35 609.67 T
0 F
(The) 153 587.67 T
5 9.5 Q
(webster-env.sh) 174.16 587.67 T
0 11 Q
( script con\336gur) 253.96 587.67 T
(es your UNIX envir) 327.6 587.67 T
(onment for) 422.86 587.67 T
-0 (Dylan application development. Y) 153 573.67 P
-0 (ou should r) 319.02 573.67 P
-0 (un this in) 375.03 573.67 P
5 9.5 Q
-0 (bash) 423.77 573.67 P
0 11 Q
-0 ( befor) 446.57 573.67 P
-0 (e you) 474.48 573.67 P
(start building libraries and executables fr) 153 559.67 T
(om the C output of the batch) 352.27 559.67 T
(compiler) 153 545.67 T
(. Consider adding a call to this script in your) 195.42 545.67 T
5 9.5 Q
(.bash_profile) 414.46 545.67 T
0 11 Q
(.) 488.56 545.67 T
(Remember to r) 153 525.67 T
(un the script by passing it as an ar) 225.36 525.67 T
(gument to the) 390.8 525.67 T
5 9.5 Q
(source) 461.62 525.67 T
0 11 Q
(command, so that the envir) 153 511.67 T
(onment variables ar) 285.92 511.67 T
(e set in the par) 382.43 511.67 T
(ent shell,) 453.33 511.67 T
(and not just in a subshell, as would be invoked by r) 153 497.67 T
(unning the script) 402.93 497.67 T
(dir) 153 483.67 T
(ectly) 167.07 483.67 T
(.) 188.9 483.67 T
(The script takes two ar) 153 463.67 T
(guments.) 263.25 463.67 T
5 9.5 Q
(-pr) 153 437.67 T
0 11 Q
(The r) 234 437.67 T
(oot of your personal sour) 259.31 437.67 T
(ce tr) 382.13 437.67 T
(ee. This must be the) 402.76 437.67 T
(same as the dir) 234 423.67 T
(ectory you passed to the) 306.89 423.67 T
5 9.5 Q
(create-per-) 427.88 423.67 T
(sonal-dylan) 234 409.67 T
0 11 Q
( script. Do not terminate this dir) 296.7 409.67 T
(ectory) 452.55 409.67 T
(with a) 234 395.67 T
5 9.5 Q
(/) 267.36 395.67 T
0 11 Q
(. This is a r) 273.06 395.67 T
(equir) 325.33 395.67 T
(ed ar) 350.74 395.67 T
(gument.) 375.13 395.67 T
5 9.5 Q
(-r) 153 369.67 T
0 11 Q
(The home of the Dylan pr) 234 369.67 T
(oject libraries, sour) 358.97 369.67 T
(ces, and) 450.8 369.67 T
(executables. Defaults to) 234 355.67 T
5 9.5 Q
(~dylan/releases/webster) 351.66 355.67 T
0 11 Q
(. In) 481.94 355.67 T
(most or) 234 341.67 T
(dinary uses of the Dylan W) 270.87 341.67 T
(ebster r) 402.78 341.67 T
(elease, you) 438.9 341.67 T
(should not need to pass a value for this option. The) 234 327.67 T
(only r) 234 313.67 T
(eason to change the default is if you ar) 262.62 313.67 T
(e shadow-) 449.59 313.67 T
(ing the entir) 234 299.67 T
(e Dylan pr) 293.08 299.67 T
(oject\325s code. Do not terminate) 344.34 299.67 T
(this dir) 234 285.67 T
(ectory name with a) 268.67 285.67 T
5 9.5 Q
(/) 364.62 285.67 T
0 11 Q
(.) 370.33 285.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(19) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
108 590.45 504 618 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 590.45 504 618 R
7 X
0 0 0 1 0 0 0 K
V
108 611.14 270 611.14 2 L
3 H
2 Z
0 X
N
108 602.14 270 602.14 2 L
1 H
N
36 72 576 720 C
0 30 Q
0 X
0 0 0 1 0 0 0 K
(2) 180 628 T
0 0 0 0 1 1 1 K
0 2 Q
7 X
0 0 0 0 1 1 1 K
(2) 108 566.45 T
0 0 0 1 0 0 0 K
0 30 Q
0 X
0 0 0 1 0 0 0 K
(Sour) 109 566.45 T
(ce Code Management) 170.53 566.45 T
108 126 486 432 R
7 X
V
4 16 Q
0 X
(2.1  Intr) 108 421.33 T
(oduction) 154.43 421.33 T
0 11 Q
(Dylan applications ar) 108 400.67 T
(e built fr) 212.25 400.67 T
(om one or mor) 253.53 400.67 T
(e libraries. Libraries, in turn, ar) 325.39 400.67 T
(e) 476.02 400.67 T
-0.15 (built fr) 108 386.67 P
-0.15 (om one or mor) 141.12 386.67 P
-0.15 (e \336les on disk. T) 212.53 386.67 P
-0.15 (o know which \336les to look for when it is) 289.59 386.67 P
(asked to compile or load a particular library) 108 372.67 T
(, a Dylan system needs a mecha-) 320.65 372.67 T
(nism for mapping libraries to their component \336les.) 108 358.67 T
(This mapping mechanism is not de\336ned by the Dylan language, and must) 108 338.67 T
-0.41 (ther) 108 324.67 P
-0.41 (efor) 127.4 324.67 P
-0.41 (e be de\336ned by an implementation. The Dylan W) 146.49 324.67 P
-0.41 (ebster r) 381.48 324.67 P
-0.41 (elease de\336nes) 417.18 324.67 P
(a \337exible mechanism which allows for platform-dependent versions of librar-) 108 310.67 T
(ies and mirr) 108 296.67 T
(or) 166.66 296.67 T
(ed copies of standar) 176.82 296.67 T
(d Dylan libraries stor) 273.88 296.67 T
(ed in a private ar) 376.8 296.67 T
(ea.) 459.26 296.67 T
4 16 Q
(2.2  Storing librar) 108 261.33 T
(y sour) 216.05 261.33 T
(ces) 255.18 261.33 T
0 11 Q
(Dylan application development typically involves using both \324standar) 108 240.67 T
(d\325, cen-) 448.21 240.67 T
-0.2 (trally installed libraries, and libraries you ar) 108 226.67 P
-0.2 (e working on yourself outside the) 320.41 226.67 P
(main development str) 108 212.67 T
(eam.) 214.98 212.67 T
(Dylan W) 108 192.67 T
(ebster stor) 150.47 192.67 T
(es standar) 200.84 192.67 T
(d library sour) 250.04 192.67 T
(ces and other r) 316.51 192.67 T
(elease materials) 387.95 192.67 T
(\050such as emulator images\051 under the) 108 178.67 T
1 F
(system r) 287.92 178.67 T
(oot dir) 325.3 178.67 T
(ectory) 354.12 178.67 T
0 F
(. The system r) 379.99 178.67 T
(oot is) 447.56 178.67 T
(given by the value of the UNIX envir) 108 164.67 T
(onment variable) 287.63 164.67 T
5 9.5 Q
(WEBSTER_SYSTEM_ROOT) 369.82 164.67 T
0 11 Q
(.) 477.31 164.67 T
(Y) 108 144.67 T
(ou can stor) 114.32 144.67 T
(e the sour) 167.65 144.67 T
(ces for your own libraries and other personal Dylan) 215.13 144.67 T
(materials under your) 108 130.67 T
1 F
(personal r) 213.7 130.67 T
(oot dir) 257.81 130.67 T
(ectory) 286.63 130.67 T
0 F
(. The personal r) 312.49 130.67 T
(oot is typically a) 388.05 130.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2) 72 695.67 T
(Source Code Management) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(20) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(subdir) 126 640.67 T
(ectory of your UNIX home dir) 157.45 640.67 T
(ectory) 304.38 640.67 T
(. The personal r) 333.36 640.67 T
(oot is given by the) 408.92 640.67 T
(value of the UNIX envir) 126 626.67 T
(onment variable) 242.72 626.67 T
5 9.5 Q
(WEBSTER_PERSONAL_ROOT) 324.91 626.67 T
0 11 Q
(.) 443.8 626.67 T
(See Section 2.6 on page 25 for mor) 126 606.67 T
(e on or) 291.22 606.67 T
(ganizing personal library sour) 324.55 606.67 T
(ces.) 471.48 606.67 T
4 16 Q
(2.3  LID \336les and librar) 126 571.33 T
(y registries) 266.14 571.33 T
0 11 Q
(The names of the \336les constituting a particular library ar) 126 550.67 T
(e stor) 399.44 550.67 T
(ed in that) 425.86 550.67 T
(library\325s) 126 536.67 T
1 F
(library inter) 169.26 536.67 T
(change description) 223.36 536.67 T
0 F
( \050LID\051 \336le. T) 305.96 536.67 T
(o manipulate a library) 364.08 536.67 T
(, the) 471.03 536.67 T
(Dylan system needs to know wher) 126 522.67 T
(e to \336nd its LID \336le: once it has found the) 294.1 522.67 T
(LID \336le, the system can use it to \336nd all the sour) 126 508.67 T
(ce \336les that make up the) 360.45 508.67 T
(library) 126 494.67 T
(.) 157.57 494.67 T
(T) 126 474.67 T
(o \336nd a library\325s LID \336le, the system consults a UNIX-based) 131.73 474.67 T
1 F
(library r) 426.05 474.67 T
(egistry) 463.03 474.67 T
0 F
(.) 492.37 474.67 T
-0.42 (The r) 126 460.67 P
-0.42 (egistry tells it wher) 150.89 460.67 P
-0.42 (e the LID \336le for the library can be found. A r) 242.88 460.67 P
-0.42 (egistry is) 458.18 460.67 P
(essentially a mapping fr) 126 446.67 T
(om library names to the locations of their associated) 242.79 446.67 T
(LID \336les.) 126 432.67 T
(Befor) 126 412.67 T
(e manipulating a library you have written, you must build a LID \336le for) 151.81 412.67 T
(it, and add a) 126 398.67 T
1 F
(r) 189.6 398.67 T
(egistry entry) 193.68 398.67 T
0 F
( for the library and its LID \336le to your) 250.83 398.67 T
1 F
(personal r) 437.22 398.67 T
(egis-) 481.33 398.67 T
(try) 126 384.67 T
0 F
(. A r) 138.22 384.67 T
(egistry entry describes the location of the library\325s LID \336le.) 159.18 384.67 T
4 13 Q
(2.3.1  P) 126 351.33 T
(er) 162.44 351.33 T
(sonal and system registries) 172.37 351.33 T
0 11 Q
(As noted above, you should r) 126 331.67 T
(egister your own libraries, and also any stan-) 269.31 331.67 T
(dar) 126 317.67 T
(d Dylan libraries that you wish to shadow) 142.37 317.67 T
(, in your personal r) 346.2 317.67 T
(egistry) 438.8 317.67 T
(.) 470.87 317.67 T
(The standar) 126 297.67 T
(d Dylan libraries that ar) 183.68 297.67 T
(e stor) 299.67 297.67 T
(ed under the system r) 326.09 297.67 T
(oot ar) 431.87 297.67 T
(e also) 459.86 297.67 T
-0.45 (r) 126 283.67 P
-0.45 (egister) 130.15 283.67 P
-0.45 (ed ther) 162.4 283.67 P
-0.45 (e, in the) 196.09 283.67 P
1 F
-0.45 (system r) 235.88 283.67 P
-0.45 (egistry) 272.82 283.67 P
0 F
-0.45 (. The system r) 302.15 283.67 P
-0.45 (egistry is maintained by the) 368.38 283.67 P
(Dylan gr) 126 269.67 T
(oup.) 168.75 269.67 T
(When sear) 126 249.67 T
(ching for library sour) 177.4 249.67 T
(ces, the Dylan system consults your personal) 280.91 249.67 T
-0.11 (r) 126 235.67 P
-0.11 (egistry befor) 130.15 235.67 P
-0.11 (e it consults its own. So if a library is r) 191.25 235.67 P
-0.11 (egister) 374.49 235.67 P
-0.11 (ed in your personal) 406.74 235.67 P
(r) 126 221.67 T
(egistry and also in the system r) 130.15 221.67 T
(egistry) 280.96 221.67 T
(, your de\336nition takes pr) 313.03 221.67 T
(ecedence.) 433.22 221.67 T
4 13 Q
(2.3.2  Registr) 126 188.33 T
(y locations) 192.47 188.33 T
0 11 Q
(Y) 126 168.67 T
(our personal r) 132.32 168.67 T
(egistry must be under the dir) 200.95 168.67 T
(ectory:) 342.64 168.67 T
5 9 Q
($WEBSTER_PERSONAL_ROOT/registry) 153 148 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2.3) 402.32 695.67 T
(LID files and library registries) 423.69 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(21) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(The Dylan system \336nds the system r) 108 640.67 T
(egistry under the dir) 284.52 640.67 T
(ectory:) 384.76 640.67 T
5 9 Q
($WEBSTER_SYSTEM_ROOT/registry) 135 620 T
4 13 Q
(2.3.3  Registr) 108 588.33 T
(y entr) 174.47 588.33 T
(y \336les) 203.6 588.33 T
0 11 Q
(When you compile a library) 108 568.67 T
(, the Dylan system looks for a r) 242.78 568.67 T
(egistry entry for) 393.44 568.67 T
(that library) 108 554.67 T
(. A r) 161.39 554.67 T
(egistry entry is a \336le that must have exactly the same name as) 182.35 554.67 T
(the library it r) 108 540.67 T
(egisters. Thus, if you compile the) 175.23 540.67 T
5 9.5 Q
(gui-layer) 338.55 540.67 T
0 11 Q
( library ther) 389.85 540.67 T
(e must) 447.54 540.67 T
(be a \336le in either the system or personal r) 108 526.67 T
(egistry called) 308.17 526.67 T
5 9.5 Q
(gui-layer) 375.74 526.67 T
0 11 Q
(. If ther) 426.23 526.67 T
(e is) 461.25 526.67 T
(no such \336le, the Dylan system concludes that the library does not exist.) 108 512.67 T
4 13 Q
(2.3.4  Registering platf) 108 479.33 T
(orm-speci\336c librar) 221.55 479.33 T
(y implementations) 314.67 479.33 T
0 11 Q
(Because the way that some libraries ar) 108 459.67 T
(e implemented depends on the plat-) 293.67 459.67 T
(form they ar) 108 445.67 T
(e intended to r) 168.25 445.67 T
(un on, the r) 239.19 445.67 T
(egistry mechanism allows you to r) 295.03 445.67 T
(egis-) 462.07 445.67 T
(ter both generic and platform-speci\336c implementations of a library) 108 431.67 T
(.) 430.9 431.67 T
(A platform-speci\336c version of a library is assumed to take pr) 108 411.67 T
(ecedence over a) 402.43 411.67 T
-0.41 (generic one, so when looking for library sour) 108 397.67 P
-0.41 (ces, the compiler \336rst looks to see) 323.52 397.67 P
(if a version speci\336c to the curr) 108 383.67 T
(ent tar) 253.99 383.67 T
(get platform has been r) 285.23 383.67 T
(egister) 397.56 383.67 T
(ed. If no) 429.82 383.67 T
(such version can be found the compiler picks up the generic version.) 108 369.67 T
-0.01 (See Section 3.3 on page 27 for details of how to set the compilation tar) 108 349.67 P
-0.01 (get plat-) 445.73 349.67 P
(form.) 108 335.67 T
4 13 Q
(2.3.5  Em) 108 302.33 T
(ulator) 154.03 302.33 T
(-speci\336c librar) 183.45 302.33 T
(y implementations) 256.43 302.33 T
0 11 Q
(The emulator uses the same r) 108 282.67 T
(egistry as the batch compiler to \336nd libraries) 250.2 282.67 T
(during compilation operations. \050Emulator compilations ar) 108 268.67 T
(e those not done) 389.81 268.67 T
(with) 108 254.67 T
5 9.5 Q
(compile-library) 133.11 254.67 T
0 11 Q
( or) 218.61 254.67 T
5 9.5 Q
(update-libraries) 234.46 254.67 T
0 11 Q
( in the) 325.66 254.67 T
5 9.5 Q
(webster) 358.77 254.67 T
0 11 Q
( module \321 see) 398.67 254.67 T
(Section 3.3 on page 27.\051) 108 240.67 T
-0.01 (However) 108 220.67 P
-0.01 (, the emulator only uses) 152.62 220.67 P
1 F
-0.01 (generic) 271.54 220.67 P
0 F
-0.01 ( implementations of a library) 303.53 220.67 P
-0.01 (. Even if) 443.55 220.67 P
(you have only r) 108 206.67 T
(egister) 184.26 206.67 T
(ed a platform-speci\336c implementation, that implemen-) 216.51 206.67 T
(tation is not compiled.) 108 192.67 T
-0.51 (Ther) 108 172.67 P
-0.51 (e is also a r) 130.56 172.67 P
-0.51 (egistry category for emulator) 181.67 172.67 P
-0.51 (-speci\336c library implementations.) 321.58 172.67 P
(Such a library might be one back-ended thr) 108 158.67 T
(ough LispW) 318.05 158.67 T
(orks. It is useful to) 377.14 158.67 T
(think of the emulator as a distinct platform.) 108 144.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2) 72 695.67 T
(Source Code Management) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(22) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 16 Q
0 X
(2.4  Or) 126 637.33 T
(ganizing registries) 166.67 637.33 T
0 11 Q
(This section explains how r) 126 616.67 T
(egistries ar) 258.27 616.67 T
(e or) 310.99 616.67 T
(ganized on the \336le system, how to) 329.16 616.67 T
(populate a r) 126 602.67 T
(egistry with entries that r) 184.56 602.67 T
(egister your libraries, and how to cr) 307.18 602.67 T
(eate) 480.62 602.67 T
(LID \336les.) 126 588.67 T
4 13 Q
(2.4.1  Registr) 126 555.33 T
(y structure) 192.47 555.33 T
0 11 Q
(T) 126 535.67 T
(o allow for r) 131.73 535.67 T
(egistering platform-speci\336c, emulator) 191.23 535.67 T
(-speci\336c, and generic) 374.16 535.67 T
(library implementations, r) 126 521.67 T
(egistries ar) 253.51 521.67 T
(e split up into platform-speci\336c and) 306.22 521.67 T
(generic categories. \050For the purpose of r) 126 507.67 T
(egistering libraries, the emulator can) 318.92 507.67 T
(be consider) 126 493.67 T
(ed its own platform.\051) 181.4 493.67 T
(On the \336lesystem, a r) 126 473.67 T
(egistry is implemented as a single dir) 228.84 473.67 T
(ectory) 410.04 473.67 T
(,) 439.03 473.67 T
5 9.5 Q
(registry) 444.53 473.67 T
0 11 Q
(,) 488.91 473.67 T
(that contains a number of subdir) 126 459.67 T
(ectories, one for the generic case and one for) 284.53 459.67 T
(each platform. The dir) 126 445.67 T
(ectory names ar) 234.16 445.67 T
(e) 311.06 445.67 T
5 9.5 Q
(alpha-osf3) 319.08 445.67 T
0 11 Q
(,) 376.08 445.67 T
5 9.5 Q
(mips-irix5) 381.58 445.67 T
0 11 Q
(,) 438.58 445.67 T
5 9.5 Q
(sparc-) 444.08 445.67 T
(solaris2) 126 431.67 T
0 11 Q
(,) 171.6 431.67 T
5 9.5 Q
(sparc-sunos4) 177.1 431.67 T
0 11 Q
(,) 245.5 431.67 T
5 9.5 Q
(emulator) 251 431.67 T
0 11 Q
(, and) 295.79 431.67 T
5 9.5 Q
(generic) 322.66 431.67 T
0 11 Q
(. Figur) 362.56 431.67 T
(e 2.1 shows this dir) 394.27 431.67 T
(ec-) 487.12 431.67 T
(tory or) 126 417.67 T
(ganization.) 158.96 417.67 T
0 0 0 1 0 0 0 K
126 239.84 504 247.83 C
36 72 576 720 C
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(Figur) 205.21 251.5 T
(e 2.1  An example of a personal r) 231.43 251.5 T
(egistry) 389.96 251.5 T
(.) 422.04 251.5 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(A library is r) 126 219.51 T
(egister) 187.61 219.51 T
(ed by adding a r) 219.86 219.51 T
(egistry entry \336le to one of the subdir) 299.36 219.51 T
(ecto-) 476.39 219.51 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.16 (ries. If a platform-speci\336c version of a library is being r) 126 205.51 P
-0.16 (egister) 390.56 205.51 P
-0.16 (ed, the entry \336le) 422.82 205.51 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(should be added to the subdir) 126 191.51 T
(ectory for the appr) 271.96 191.51 T
(opriate platform; if the) 362.55 191.51 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(library is not platform-speci\336c, its entry \336le can be placed in the) 126 177.51 T
5 9.5 Q
(generic) 438.33 177.51 T
0 11 Q
( sub-) 478.23 177.51 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(dir) 126 163.51 T
(ectory) 140.07 163.51 T
(.) 169.05 163.51 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 267.83 502.5 394 C
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(registry/) 286.5 352 T
(alpha-osf3/) 128.33 314 T
(sparc-solaris2/) 426.17 314 T
(sparc-sunos4/) 356.33 314 T
(generic/) 247.83 314 T
(hello) 254.33 280 T
(~/dylan/webster/) 259.5 379 T
(mips-irix5/) 292.67 314 T
304.5 376 304.5 358 2 L
0.25 H
2 Z
N
304.5 349 163.25 320.5 2 L
N
304.5 349 216 322 2 L
N
304.5 349 304.5 320.25 2 L
N
304.5 349 377.5 320.5 2 L
N
304.5 349 449 320.25 2 L
N
(streams) 145 280 T
(streams) 313.5 280 T
328.67 311 328.67 286 2 L
N
162.67 310.5 162.67 286 2 L
N
(streams) 375.33 280 T
(streams) 440.33 280 T
266.33 310.5 266.33 285.5 2 L
N
392.83 310 392.83 285 2 L
N
458.33 311.5 458.33 286.5 2 L
N
(emulator/) 192.33 314.33 T
(streams) 195.17 280 T
212.83 310.5 212.83 286 2 L
N
306 349 270 322 2 L
N
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2.4) 436.01 695.67 T
(Organizing registries) 457.39 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(23) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(In Figur) 108 640.67 T
(e 2.1 shows an example personal r) 147.07 640.67 T
(egistry) 312.79 640.67 T
(. W) 344.86 640.67 T
(e can see that a library) 360.35 640.67 T
(called) 108 626.67 T
5 9.5 Q
(hello) 139.53 626.67 T
0 11 Q
( has been r) 168.03 626.67 T
(egister) 220.01 626.67 T
(ed as a generic library) 252.26 626.67 T
(. Ther) 357.97 626.67 T
(e ar) 386.04 626.67 T
(e no entries for) 403.7 626.67 T
-0.29 (platform-speci\336c versions of this library) 108 612.67 P
-0.29 (, implying that) 300.15 612.67 P
5 9.5 Q
-0.6 (hello) 373.92 612.67 P
0 11 Q
-0.29 ( can be compiled) 402.42 612.67 P
(for any platform.) 108 598.67 T
(Five versions of the library) 108 578.67 T
5 9.5 Q
(streams) 241.03 578.67 T
0 11 Q
( have been r) 280.93 578.67 T
(egister) 339.74 578.67 T
(ed, one for each possi-) 371.99 578.67 T
(ble tar) 108 564.67 T
(get platform, including one for the emulator) 138.54 564.67 T
(. Because) 352.53 564.67 T
5 9.5 Q
(streams) 399.72 564.67 T
0 11 Q
( makes) 439.62 564.67 T
-0.39 (calls to the operating system, it always needs platform-speci\336c back-end code,) 108 550.67 P
(and thus must be built fr) 108 536.67 T
(om slightly dif) 228.12 536.67 T
(fer) 299.21 536.67 T
(ent sets of sour) 312.29 536.67 T
(ces for each plat-) 385.1 536.67 T
(form. \050The emulator version simulates OS calls, using LispW) 108 522.67 T
(orks commands) 402.16 522.67 T
(instead. LispW) 108 508.67 T
(orks in turn calls the OS, so the back-ending pr) 180.03 508.67 T
(ocess is the) 407.4 508.67 T
(same, but adds one level of indir) 108 494.67 T
(ection.\051) 266.48 494.67 T
4 13 Q
(2.4.2  Registr) 108 461.33 T
(y entr) 174.47 461.33 T
(y \336les) 203.6 461.33 T
0 11 Q
(Registry entries describe the location of the LID \336le for a library) 108 441.67 T
(. Registry) 416.19 441.67 T
(entry \336les must have the same name as the library they r) 108 427.67 T
(egister) 382.76 427.67 T
(.) 414.39 427.67 T
(The r) 108 407.67 T
(egistry entry \336le contains a description of a LID \336le location. Instead of) 133.31 407.67 T
-0.28 (using an or) 108 393.67 P
-0.28 (dinary pathname, the location is described using an) 162.01 393.67 P
1 F
-0.28 (abstract locator) 413.77 393.67 P
0 F
-0.28 (.) 480.78 393.67 P
(\050See the Dylan Locators library pr) 108 379.67 T
(oposal, available in PostScript form under) 271.98 379.67 T
5 9.5 Q
(~dylan/doc/lib/locators.ps) 108 365.67 T
0 11 Q
(.\051 The use of abstract locators makes the r) 256.2 365.67 T
(egis-) 456.27 365.67 T
(try portable and makes mirr) 108 351.67 T
(oring libraries under your personal r) 244.94 351.67 T
(oot simpler) 423.18 351.67 T
(.) 477.72 351.67 T
(Registry entry locators use the abstract scheme) 108 331.67 T
5 9.5 Q
(abstract://dylan/) 337.98 331.67 T
0 11 Q
(. The) 434.88 331.67 T
(Dylan system translates this scheme into either the system r) 108 317.67 T
(oot or your per-) 397.95 317.67 T
(sonal r) 108 303.67 T
(oot. Given a locator) 140.67 303.67 T
(, the system knows which of the two r) 234.96 303.67 T
(oots is) 419.24 303.67 T
(implied because it knows whether it found the curr) 108 289.67 T
(ent r) 357.29 289.67 T
(egistry entry in the) 379.45 289.67 T
(system r) 108 275.67 T
(egistry or your personal r) 148.91 275.67 T
(egistry) 272.8 275.67 T
(.) 304.88 275.67 T
-0.01 (For example, suppose the system r) 108 255.67 P
-0.01 (oot is) 276.02 255.67 P
5 9.5 Q
-0.02 (~dylan/releases/webster) 304.96 255.67 P
0 11 Q
-0.01 ( and your) 436.06 255.67 P
(personal r) 108 241.67 T
(oot is) 156.9 241.67 T
5 9.5 Q
(~dylan/webster) 185.86 241.67 T
0 11 Q
(. Y) 264.84 241.67 T
(ou attempt to compile the library) 276.67 241.67 T
5 9.5 Q
(gui-) 440.18 241.67 T
(layer) 108 227.67 T
0 11 Q
(, which is a library you ar) 135.69 227.67 T
(e developing. The Dylan system \336nds a r) 259.56 227.67 T
(egis-) 458.08 227.67 T
(try entry for) 108 213.67 T
5 9.5 Q
(gui-layer) 170.03 213.67 T
0 11 Q
( in your personal r) 221.33 213.67 T
(egistry) 311.18 213.67 T
(. Inside that entry is the fol-) 343.25 213.67 T
(lowing locator string:) 108 199.67 T
5 9 Q
(abstract://dylan/lib/gui-layer/gui-layer.lid) 135 179 T
0 11 Q
(The abstract locator scheme is translated into the value of the envir) 108 158.67 T
(onment) 432.61 158.67 T
-0.55 (variable) 108 144.67 P
5 9.5 Q
-1.14 (WEBSTER_PERSONAL_ROOT) 149.51 144.67 P
0 11 Q
-0.55 (, ther) 268.4 144.67 P
-0.55 (eby establishing the physical location of) 292.75 144.67 P
5 9.5 Q
(gui-layer.lid) 108 130.67 T
0 11 Q
( to be:) 182.1 130.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 23
%%Page: "24" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2) 72 695.67 T
(Source Code Management) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(24) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
5 F
0 X
(~/dylan/webster/lib/gui-layer/gui-layer.lid) 153 642 T
0 11 Q
-0.06 (If an entry for) 126 621.67 P
5 9.5 Q
-0.13 (gui-layer) 195.75 621.67 P
0 11 Q
-0.06 ( was not found in your personal r) 247.05 621.67 P
-0.06 (egistry) 409.47 621.67 P
-0.06 (, but instead) 441.54 621.67 P
(in the system r) 126 607.67 T
(egistry) 197.27 607.67 T
(, the batch compiler would translate the locator as fol-) 229.35 607.67 T
(lows:) 126 593.67 T
5 9 Q
(~dylan/releases/webster/lib/gui-layer/gui-layer.lid) 153 573 T
4 16 Q
(2.5  LID \336le f) 126 539.33 T
(ormat) 203.06 539.33 T
0 11 Q
(LID \336les must have the suf) 126 518.67 T
(\336x) 256.48 518.67 T
5 9.5 Q
(.lid) 271.56 518.67 T
0 11 Q
(. Though it can be useful to make the stem) 294.36 518.67 T
-0.14 (of a LID \336le name the same as the library it de\336nes, it is not necessary) 126 504.67 P
-0.14 (. Section) 460.91 504.67 P
(2.5.1 explains how it can be useful to exploit this fr) 126 490.67 T
(eedom.) 371.4 490.67 T
(LID \336les look similar to the headers of Dylan sour) 126 470.67 T
(ce \336les. They begin by giv-) 368.51 470.67 T
(ing the library\325s name with the keywor) 126 456.67 T
(d) 315.32 456.67 T
5 9.5 Q
(library:) 324.79 456.67 T
0 11 Q
(, and follow this on a new) 370.39 456.67 T
(line by a) 126 442.67 T
5 9.5 Q
(files:) 170.02 442.67 T
0 11 Q
( clause, which gives a list \336lenames. For example:) 204.22 442.67 T
5 9 Q
(library:) 153 422 T
(my-library) 201.6 422 T
(files:) 153 411 T
(standard-library) 201.6 411 T
(my-classes) 201.6 400 T
(my-functions) 201.6 389 T
7 F
(EOF) 153 378 T
0 11 Q
(A library\325s sour) 126 357.67 T
(ce \336les should be stor) 202.02 357.67 T
(ed in the same dir) 306.35 357.67 T
(ectory as its LID \336le.) 393.41 357.67 T
(Files listed without a suf) 126 337.67 T
(\336x ar) 244.94 337.67 T
(e assumed to have the suf) 269.67 337.67 T
(\336x) 394.85 337.67 T
5 9.5 Q
(.dylan) 409.93 337.67 T
0 11 Q
(.) 444.13 337.67 T
(The Dylan system compiles the sour) 126 317.67 T
(ce \336les of a library in the or) 302.17 317.67 T
(der they ar) 434.33 317.67 T
(e) 487.18 317.67 T
(listed in the LID \336le.) 126 303.67 T
2 F
-0.05 (Note:) 126 283.67 P
0 F
-0.05 ( The \336rst \336le speci\336ed in the) 153.19 283.67 P
5 9.5 Q
-0.11 (files:) 293 283.67 P
0 11 Q
-0.05 ( list) 327.2 283.67 P
1 F
-0.05 (must) 347.25 283.67 P
0 F
-0.05 ( start with an library de\336ni-) 369.86 283.67 P
-0.48 (tion, and be followed immediately by a module de\336nition. This r) 126 269.67 P
-0.48 (equir) 435.95 269.67 P
-0.48 (ement is) 461.36 269.67 P
(due to limitations of the pr) 126 255.67 T
(esent implementation rather than of Dylan itself.) 255.91 255.67 T
2 F
(Note) 126 235.67 T
0 F
(: Just like sour) 150.44 235.67 T
(ce \336le headers, LID \336les cannot contain comments.) 219.23 235.67 T
4 13 Q
(2.5.1  A note on the naming of LID \336les) 126 202.33 T
0 11 Q
-0.37 (Because the stem name of a LID \336le does not have to be the same as the library) 126 182.67 P
-0.15 (it de\336nes, a dir) 126 168.67 P
-0.15 (ectory containing a set of library sour) 197.9 168.67 P
-0.15 (ces can host multiple LID) 378.36 168.67 P
(\336les each of which de\336ne dif) 126 154.67 T
(fer) 265.03 154.67 T
(ent versions of the same library) 278.11 154.67 T
(. Consider the) 429.52 154.67 T
-0.24 (example of Figur) 126 140.67 P
-0.24 (e 2.1: the dif) 208.14 140.67 P
-0.24 (fer) 266.08 140.67 P
-0.24 (ent versions of) 279.16 140.67 P
5 9.5 Q
-0.5 (streams) 352.38 140.67 P
0 11 Q
-0.24 ( could all be generated) 392.28 140.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 24
%%Page: "25" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2.6) 408.66 695.67 T
(Organizing personal sources) 430.04 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(25) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(fr) 108 640.67 T
(om sour) 115.81 640.67 T
(ces in one dir) 155.73 640.67 T
(ectory) 220.15 640.67 T
(, using \336ve LID \336les \321) 249.13 640.67 T
5 9.5 Q
(osf3-streams.lid) 363.27 640.67 T
0 11 Q
(, and) 454.47 640.67 T
5 9.5 Q
(irix-streams.lid) 108 626.67 T
0 11 Q
(,) 199.2 626.67 T
5 9.5 Q
(solaris2-streams.lid) 204.7 626.67 T
0 11 Q
(,) 318.7 626.67 T
5 9.5 Q
(sunos4-streams.lid) 324.2 626.67 T
0 11 Q
(, and) 426.8 626.67 T
5 9.5 Q
(emu-) 453.67 626.67 T
-0.34 (lator-streams.lid) 108 612.67 P
0 11 Q
-0.16 (, say \321 each of which de\336nes a library called) 204.9 612.67 P
5 9.5 Q
-0.34 (streams) 424.63 612.67 P
0 11 Q
-0.16 ( but) 464.53 612.67 P
-0.31 (uses a dif) 108 598.67 P
-0.31 (fer) 153 598.67 P
-0.31 (ent, platform-speci\336c, set of sour) 166.08 598.67 P
-0.31 (ce \336les in each case in or) 323.7 598.67 P
-0.31 (der to do) 440.02 598.67 P
(so.) 108 584.67 T
4 16 Q
(2.6  Or) 108 549.33 T
(ganizing per) 148.67 549.33 T
(sonal sour) 225.78 549.33 T
(ces) 291.89 549.33 T
0 11 Q
(Wher) 108 528.67 T
(e you put your library sour) 134.82 528.67 T
(ces is up to you, as long as you r) 266.76 528.67 T
(egister their) 423.49 528.67 T
(LID \336le locations in your personal r) 108 514.67 T
(egistry) 280.86 514.67 T
(. However) 312.94 514.67 T
(, it is worth applying) 363.06 514.67 T
(some discipline to the arrangement of library sour) 108 500.67 T
(ces.) 351.46 500.67 T
(Stor) 108 480.67 T
(e library sour) 127.51 480.67 T
(ces in subdir) 192.52 480.67 T
(ectories of your personal r) 253.89 480.67 T
(oot dir) 381.03 480.67 T
(ectory) 413.45 480.67 T
(. When) 442.43 480.67 T
(you install Dylan W) 108 466.67 T
(ebster) 204.48 466.67 T
(, a subdir) 232.88 466.67 T
(ectory of your personal r) 278.08 466.67 T
(oot dir) 398.2 466.67 T
(ectory) 430.62 466.67 T
(called) 108 452.67 T
5 9.5 Q
(lib) 139.53 452.67 T
0 11 Q
( is cr) 156.63 452.67 T
(eated automatically for the purpose of pr) 179.02 452.67 T
(oviding a top-level) 378.33 452.67 T
(dir) 108 438.67 T
(ectory for all library sour) 122.07 438.67 T
(ces. Thus your library sour) 243.43 438.67 T
(ces can be stor) 373.78 438.67 T
(ed in) 443.39 438.67 T
(subdir) 108 424.67 T
(ectories of) 139.45 424.67 T
5 9.5 Q
(lib) 191.84 424.67 T
0 11 Q
(. Figur) 208.94 424.67 T
(e 2.2 shows how the sour) 240.65 424.67 T
(ces for thr) 362.62 424.67 T
(ee libraries) 411.09 424.67 T
(might be stor) 108 410.67 T
(ed.) 172.27 410.67 T
0 0 0 1 0 0 0 K
108 208.01 486 216 C
36 72 576 720 C
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(Figur) 153.3 219.67 T
(e 2.2  Personal sour) 179.51 219.67 T
(ce dir) 273.01 219.67 T
(ectory tr) 299.98 219.67 T
(ee for thr) 340.67 219.67 T
(ee libraries.) 384.86 219.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Keep the LID \336le describing a library in the same dir) 108 187.67 T
(ectory as the library) 363.21 187.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(sour) 108 173.67 T
(ces.) 129.45 173.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Y) 108 153.67 T
(ou may place the sour) 114.32 153.67 T
(ces for mor) 221.46 153.67 T
(e than one library in the same dir) 275.66 153.67 T
(ectory if) 436.61 153.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(you wish. The only constraint is that the libraries have dif) 108 139.67 T
(fer) 387.94 139.67 T
(ent LID \336les.) 401.02 139.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 236 486 387 C
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(hello-world) 343.5 307.67 T
(my-gui-layer) 262.5 307.67 T
(examples) 208.5 307.67 T
270 335.67 234 315 2 L
0.25 H
2 Z
N
288 335.5 288 315 2 L
N
306 335.67 369 317.67 2 L
N
(~/dylan/webster) 252 378.67 T
(lib) 279 343.5 T
288 372.33 288 354.33 2 L
N
270.83 373.17 198.83 351.83 2 L
N
306 372.33 414 354.33 2 L
N
(install) 185.5 344.17 T
(registry) 405 343.5 T
J
192.33 337.33 183.33 328.33 2 L
J
192.33 337.33 189.59 334.59 2 L
N
[6.173 4.978] 6.173 I
189.59 334.59 186.07 331.07 2 L
N
J
186.07 331.07 183.33 328.33 2 L
N
J
201.33 337.17 201.33 328.17 2 L
J
201.33 337.17 201.33 333.29 2 L
N
[1.55 1.25] 1.55 I
201.33 333.29 201.33 332.04 2 L
N
J
201.33 332.04 201.33 328.17 2 L
N
J
210.33 337.33 219.33 328.33 2 L
J
210.33 337.33 213.07 334.59 2 L
N
[6.173 4.978] 6.173 I
213.07 334.59 216.59 331.07 2 L
N
J
216.59 331.07 219.33 328.33 2 L
N
J
414 335.67 405 326.67 2 L
J
414 335.67 411.26 332.93 2 L
N
[6.173 4.978] 6.173 I
411.26 332.93 407.74 329.41 2 L
N
J
407.74 329.41 405 326.67 2 L
N
J
423 335.67 423 326.67 2 L
J
423 335.67 423 331.79 2 L
N
[1.55 1.25] 1.55 I
423 331.79 423 330.54 2 L
N
J
423 330.54 423 326.67 2 L
N
J
432 335.67 441 326.67 2 L
J
432 335.67 434.74 332.93 2 L
N
[6.173 4.978] 6.173 I
434.74 332.93 438.26 329.41 2 L
N
J
438.26 329.41 441 326.67 2 L
N
J
352.5 298.17 262.5 262.17 2 L
N
361.5 298.17 343.5 262.17 2 L
N
379.5 298.17 459 261 2 L
N
(hello-world-library.dylan) 287.67 247.17 T
(hello.dylan) 429.17 247.17 T
(hello-world.lid) 197.67 247.17 T
J
217.5 298.17 199.5 280.17 2 L
J
217.5 298.17 214.76 295.43 2 L
N
[6.776 5.465] 6.776 I
214.76 295.43 202.24 282.91 2 L
N
J
202.24 282.91 199.5 280.17 2 L
N
J
226.5 298.17 226.5 280.17 2 L
J
226.5 298.17 226.5 294.29 2 L
N
[12.71 10.25] 12.71 I
226.5 294.29 226.5 284.04 2 L
N
J
226.5 284.04 226.5 280.17 2 L
N
J
235.5 298.17 253.5 280.17 2 L
J
235.5 298.17 238.24 295.43 2 L
N
[6.776 5.465] 6.776 I
238.24 295.43 250.76 282.91 2 L
N
J
250.76 282.91 253.5 280.17 2 L
N
J
280.5 298.17 262.5 280.17 2 L
J
280.5 298.17 277.76 295.43 2 L
N
[6.776 5.465] 6.776 I
277.76 295.43 265.24 282.91 2 L
N
J
265.24 282.91 262.5 280.17 2 L
N
J
289.5 298.17 289.5 280.17 2 L
J
289.5 298.17 289.5 294.29 2 L
N
[12.71 10.25] 12.71 I
289.5 294.29 289.5 284.04 2 L
N
J
289.5 284.04 289.5 280.17 2 L
N
J
298.5 298.17 307.5 289.17 2 L
J
298.5 298.17 301.24 295.43 2 L
N
[6.173 4.978] 6.173 I
301.24 295.43 304.76 291.91 2 L
N
J
304.76 291.91 307.5 289.17 2 L
N
J
(build) 119.17 344.17 T
270.83 372.33 135.83 354.33 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
J
121.83 335.67 112.83 326.67 2 L
J
121.83 335.67 119.09 332.93 2 L
N
[6.173 4.978] 6.173 I
119.09 332.93 115.57 329.41 2 L
N
J
115.57 329.41 112.83 326.67 2 L
N
J
130.83 335.5 130.83 326.5 2 L
J
130.83 335.5 130.83 331.63 2 L
N
[1.55 1.25] 1.55 I
130.83 331.63 130.83 330.38 2 L
N
J
130.83 330.38 130.83 326.5 2 L
N
J
139.83 335.67 148.83 326.67 2 L
J
139.83 335.67 142.57 332.93 2 L
N
[6.173 4.978] 6.173 I
142.57 332.93 146.09 329.41 2 L
N
J
146.09 329.41 148.83 326.67 2 L
N
0 0 0 1 0 0 0 K
J
36 72 576 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 25
%%Page: "26" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(2) 72 695.67 T
(Source Code Management) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(26) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 26
%%Page: "27" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(27) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
108 590.45 504 618 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 590.45 504 618 R
7 X
0 0 0 1 0 0 0 K
V
108 611.14 270 611.14 2 L
3 H
2 Z
0 X
N
108 602.14 270 602.14 2 L
1 H
N
36 72 576 720 C
0 30 Q
0 X
0 0 0 1 0 0 0 K
(3) 180 628 T
0 0 0 0 1 1 1 K
0 2 Q
7 X
0 0 0 0 1 1 1 K
(3) 108 566.45 T
0 0 0 1 0 0 0 K
0 30 Q
0 X
0 0 0 1 0 0 0 K
(The Batch Compiler) 109 566.45 T
108 126 486 432 R
7 X
V
4 16 Q
0 X
(3.1  Intr) 108 421.33 T
(oduction) 154.43 421.33 T
0 11 Q
(This chapter explains how to use the Dylan W) 108 400.67 T
(ebster compiler) 330.85 400.67 T
(, and how to) 405.23 400.67 T
(build static and shar) 108 386.67 T
(ed libraries or standalone executables fr) 206.85 386.67 T
(om its output.) 399.84 386.67 T
4 16 Q
(3.2  Over) 108 351.33 T
(vie) 163.57 351.33 T
(w of the compilation and b) 181.63 351.33 T
(uilding pr) 346.88 351.33 T
(ocess) 406.42 351.33 T
0 11 Q
(The Dylan W) 108 330.67 T
(ebster compiler is a batch compiler) 171.63 330.67 T
(, available thr) 340.07 330.67 T
(ough the mod-) 406.12 330.67 T
(ule) 108 316.67 T
5 9.5 Q
(webster) 125.85 316.67 T
0 11 Q
(. The) 164.94 316.67 T
5 9.5 Q
(webster) 191.6 316.67 T
0 11 Q
( module contains functions for compiling libraries) 231.5 316.67 T
-0.23 (with the batch compiler) 108 302.67 P
-0.23 (. Make sur) 222.05 302.67 P
-0.23 (e the libraries you intend to compile ar) 272.58 302.67 P
-0.23 (e r) 459.02 302.67 P
-0.23 (eg-) 470.95 302.67 P
(ister) 108 288.67 T
(ed in a r) 128.87 288.67 T
(egistry) 168.36 288.67 T
(. See Section 2.3 on page 20.) 200.43 288.67 T
(The compiler has a C back-end, and so emits C \336les which must be further) 108 268.67 T
(compiled using a C compiler and linker if appr) 108 254.67 T
(opriate. The C back-end also) 336.04 254.67 T
(emits a Make\336le for each library to simplify the extra C compilation steps.) 108 240.67 T
4 16 Q
(3.3  Compiling Dylan libraries) 108 205.33 T
0 11 Q
(T) 108 184.67 T
(wo functions in the) 113.75 184.67 T
5 9.5 Q
(webster) 210.23 184.67 T
0 11 Q
( module ar) 250.13 184.67 T
(e available for compiling libraries:) 302.82 184.67 T
5 9.5 Q
(compile-library) 108 170.67 T
0 11 Q
(, which compiles a single library) 192.28 170.67 T
(, and) 348.31 170.67 T
5 9.5 Q
(update-libraries) 375.19 170.67 T
0 11 Q
(,) 466.39 170.67 T
(which compiles a library and all libraries it depends on, optionally skipping) 108 156.67 T
(libraries whose compiled versions ar) 108 142.67 T
(e up to date with their sour) 286.34 142.67 T
(ces.) 418.64 142.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 27
%%Page: "28" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3) 72 695.67 T
(The Batch Compiler) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(28) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
5 F
0 X
(compile-library) 126 642 T
7 F
(library) 212.4 642 T
1 11 Q
(Function) 463.45 640.67 T
0 F
(Compiles a single Dylan library) 153 618.67 T
(, and emits C \336les and a Make\336le for it) 306.12 618.67 T
(thr) 153 604.67 T
(ough the C back-end.) 167.13 604.67 T
(The ar) 153 584.67 T
(gument is a symbol or string naming the library) 183.81 584.67 T
(.) 415.5 584.67 T
-0.1 (The following form compiles the library) 153 564.67 P
5 9.5 Q
-0.2 (hello-world) 349.63 564.67 P
0 11 Q
-0.1 (, pr) 412.33 564.67 P
-0.1 (oducing C \336les) 428.49 564.67 P
(and a Make\336le for compiling the library into a standalone executable or) 153 550.67 T
(a binary library:) 153 536.67 T
5 9 Q
(WEBSTER 1 ? compile-library\050#"hello-world"\051;) 153 516 T
([) 153 505 T
7 F
(messages) 163.8 505 T
5 F
( ]) 200.78 505 T
0 11 Q
(The C \336les and the Make\336le pr) 153 484.67 T
(oduced ar) 302.56 484.67 T
(e tailor) 351.19 484.67 T
(ed for the curr) 384.85 484.67 T
(ent tar) 454.37 484.67 T
(get) 485.61 484.67 T
(platform. The tar) 153 470.67 T
(get platform can be set with the) 235.52 470.67 T
5 9.5 Q
(target-platform-) 391.64 470.67 T
(name-setter) 153 456.67 T
0 11 Q
( function. See page 29.) 215.7 456.67 T
(The C \336les and Make\336le ar) 153 436.67 T
(e cr) 283.44 436.67 T
(eated under the personal r) 300.49 436.67 T
(oot subdir) 428.61 436.67 T
(ec-) 478.4 436.67 T
(tory) 153 422.67 T
5 9.5 Q
(build/<) 175.8 422.67 T
1 11 Q
(platform) 215.7 422.67 T
5 9.5 Q
(>/<) 253.59 422.67 T
1 11 Q
(library) 270.69 422.67 T
5 9.5 Q
(>) 300.84 422.67 T
0 11 Q
(. See Section 3.4 on page 29.) 306.54 422.67 T
5 9 Q
(update-libraries) 126 394 T
7 F
(library) 217.8 394 T
5 F
( #key) 245.64 394 T
7 F
(for) 278.04 394 T
(ce?) 289.38 394 T
(full?) 306.77 394 T
1 11 Q
(Function) 463.45 392.67 T
0 F
(This function pr) 153 370.67 T
(ovides a facility for compiling a library and all those) 231.04 370.67 T
(libraries it depends upon. It can for) 153 356.67 T
(ce-compile all libraries r) 324.05 356.67 T
(egar) 440.86 356.67 T
(dless of) 461.89 356.67 T
(necessity or compile only those r) 153 342.67 T
(equiring r) 311.84 342.67 T
(ecompilation because their) 360.06 342.67 T
(sour) 153 328.67 T
(ces have been changed since the last compilation.) 174.45 328.67 T
(The function examines the UNIX-based Dylan \336les comprising) 153 308.67 T
1 F
(library) 460.45 308.67 T
0 F
(,) 489.38 308.67 T
(and those comprising the libraries) 153 294.67 T
1 F
(library) 321.51 294.67 T
0 F
( depends on to \336nd out which) 351.66 294.67 T
(libraries\325 compiled \336les ar) 153 280.67 T
(e not up to date with their sour) 279.16 280.67 T
(ce \336les.) 430.2 280.67 T
(For each library) 153 260.67 T
(, compilation emits C \336les and Make\336le as for) 228.59 260.67 T
5 9.5 Q
(compile-) 453.64 260.67 T
(library) 153 246.67 T
0 11 Q
(.) 191.68 246.67 T
-0.24 (The) 153 226.67 P
5 9.5 Q
-0.5 (force?:) 173.93 226.67 P
0 11 Q
-0.24 ( keywor) 213.82 226.67 P
-0.24 (d contr) 253.16 226.67 P
-0.24 (ols whether update-libraries compiles every-) 287.42 226.67 P
(thing by for) 153 212.67 T
(ce or performs a selective r) 210.22 212.67 T
(ecompilation. If it is) 340.3 212.67 T
5 9.5 Q
(#t) 439.65 212.67 T
0 11 Q
(,) 451.05 212.67 T
1 F
(library) 456.55 212.67 T
0 F
(and all the libraries it depends upon ar) 153 198.67 T
(e compiled, and any other key-) 341.58 198.67 T
(wor) 153 184.67 T
(d ar) 172.33 184.67 T
(guments passed to) 191.45 184.67 T
5 9.5 Q
(update-libraries) 285.1 184.67 T
0 11 Q
( ar) 376.3 184.67 T
(e ignor) 388.7 184.67 T
(ed. It is) 422.59 184.67 T
5 9.5 Q
(#f) 460.73 184.67 T
0 11 Q
( by) 472.14 184.67 T
(default.) 153 170.67 T
(If) 153 150.67 T
5 9.5 Q
(force:?) 163.12 150.67 T
0 11 Q
( is) 203.02 150.67 T
5 9.5 Q
(#f) 216.38 150.67 T
0 11 Q
(, the values of the) 227.79 150.67 T
5 9.5 Q
(full?:) 315.95 150.67 T
0 11 Q
( and) 350.15 150.67 T
5 9.5 Q
(library?:) 374.27 150.67 T
0 11 Q
( keywor) 425.57 150.67 T
(ds ar) 465.15 150.67 T
(e) 488.93 150.67 T
(consider) 153 136.67 T
(ed.) 194.29 136.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 28
%%Page: "29" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3.4) 447.46 695.67 T
(Compiler products) 468.84 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(29) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(The) 135 640.67 T
5 9.5 Q
(full?:) 156.16 640.67 T
0 11 Q
( keywor) 190.36 640.67 T
(d contr) 229.94 640.67 T
(ols whether sour) 264.44 640.67 T
(ces that depend on out-of-) 345.71 640.67 T
-0.14 (date sour) 135 626.67 P
-0.14 (ces ar) 180.14 626.67 P
-0.14 (e compiled along with the out-of-date sour) 207.22 626.67 P
-0.14 (ces. If) 414.38 626.67 P
5 9.5 Q
-0.28 (#t) 444.54 626.67 P
0 11 Q
-0.14 (, both) 455.94 626.67 P
(out-of-date sour) 135 612.67 T
(ces and the sour) 213.5 612.67 T
(ces that depend on them ar) 291.89 612.67 T
(e compiled.) 423.55 612.67 T
(If) 135 598.67 T
5 9.5 Q
(#f) 145.12 598.67 T
0 11 Q
(, only the out-of-date sour) 156.52 598.67 T
(ces ar) 283 598.67 T
(e compiled. It is) 310.21 598.67 T
5 9.5 Q
(#t) 389.99 598.67 T
0 11 Q
( by default.) 401.39 598.67 T
5 9 Q
(target-platform-name) 108 570 T
1 11 Q
(Function) 445.45 568.67 T
0 F
(Gets the curr) 135 546.67 T
(ent tar) 197.68 546.67 T
(get platform for the W) 228.92 546.67 T
(ebster batch compiler) 336.77 546.67 T
(. The) 440.36 546.67 T
(string r) 135 532.67 T
(eturned is always one of) 170.21 532.67 T
5 9.5 Q
("alpha-osf3") 291.55 532.67 T
0 11 Q
(,) 359.95 532.67 T
5 9.5 Q
("mips-irix5") 365.45 532.67 T
0 11 Q
(,) 433.85 532.67 T
5 9.5 Q
("sparc-) 439.35 532.67 T
(solaris2") 135 518.67 T
0 11 Q
(, and) 186.3 518.67 T
5 9.5 Q
("sparc-sunos4") 213.17 518.67 T
0 11 Q
(.) 292.97 518.67 T
5 9 Q
(target-platform-name-setter) 108 490 T
7 F
(platform) 259.2 490 T
1 11 Q
(Function) 445.45 488.67 T
0 F
(Set the curr) 135 466.67 T
(ent tar) 190.4 466.67 T
(get platform for the W) 221.64 466.67 T
(ebster batch compiler) 329.49 466.67 T
(.) 433.08 466.67 T
(The following call sets the curr) 135 446.67 T
(ent tar) 284.37 446.67 T
(get platform to DEC Alpha r) 315.61 446.67 T
(un-) 454.11 446.67 T
(ning OSF/3:) 135 432.67 T
5 9 Q
(WEBSTER 5 ? target-platform-name\050\051 := "alpha-osf3";) 135 412 T
1 11 Q
(platform) 135 391.67 T
0 F
( must be a string and can be one of) 172.88 391.67 T
5 9.5 Q
("alpha-osf3") 344.25 391.67 T
0 11 Q
(,) 412.65 391.67 T
5 9.5 Q
("mips-) 418.15 391.67 T
(irix5") 135 377.67 T
0 11 Q
(,) 169.2 377.67 T
5 9.5 Q
("sparc-solaris2") 174.7 377.67 T
0 11 Q
(, and) 265.9 377.67 T
5 9.5 Q
("sparc-sunos4") 292.77 377.67 T
0 11 Q
(.) 372.57 377.67 T
(The default platform) 378.07 377.67 T
(is the curr) 135 363.67 T
(ent platform or whatever was passed to the) 183.63 363.67 T
5 9.5 Q
(webster) 397.24 363.67 T
0 11 Q
( script.) 437.14 363.67 T
4 16 Q
(3.4  Compiler pr) 108 328.33 T
(oducts) 206.93 328.33 T
0 11 Q
(This section discusses the) 108 307.67 T
5 9.5 Q
(build) 234.64 307.67 T
0 11 Q
( and) 263.14 307.67 T
5 9.5 Q
(install) 287.27 307.67 T
0 11 Q
( subdir) 327.17 307.67 T
(ectories of your personal) 361.36 307.67 T
(r) 108 293.67 T
(oot dir) 112.15 293.67 T
(ectory) 144.56 293.67 T
(.) 173.55 293.67 T
4 13 Q
(3.4.1  The B) 108 260.33 T
(UILD director) 167.16 260.33 T
(y) 234.79 260.33 T
0 11 Q
(When you compile a library) 108 240.67 T
(, the compiler emits C \336les and a Make\336le in a) 242.78 240.67 T
(subdir) 108 226.67 T
(ectory of) 139.45 226.67 T
5 9.5 Q
($WEBSTER_PERSONAL_ROOT/build) 184.82 226.67 T
0 11 Q
(. The build dir) 344.42 226.67 T
(ectory holds) 413.75 226.67 T
(all compiler pr) 108 212.67 T
(oducts, and is also the place wher) 179.39 212.67 T
(e binary libraries and standa-) 342.71 212.67 T
(lone executables ar) 108 198.67 T
(e built.) 200.06 198.67 T
(The pr) 108 178.67 T
(oducts of a library compilation ar) 139.92 178.67 T
(e emitted into a subdir) 302.08 178.67 T
(ectory of build) 411.84 178.67 T
(determined by the tar) 108 164.67 T
(get platform and the library name. When you install) 213.43 164.67 T
(W) 108 150.67 T
(ebster with the) 117.99 150.67 T
5 9.5 Q
(create-personal-dylan) 193.07 150.67 T
0 11 Q
( script, a subdir) 312.77 150.67 T
(ectory of) 388.01 150.67 T
5 9.5 Q
(build) 433.39 150.67 T
0 11 Q
( is) 461.89 150.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 29
%%Page: "30" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3) 72 695.67 T
(The Batch Compiler) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(30) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(cr) 126 640.67 T
(eated for each possible tar) 135.03 640.67 T
(get platform:) 261.38 640.67 T
5 9.5 Q
(alpha-osf3) 327.22 640.67 T
0 11 Q
(,) 384.22 640.67 T
5 9.5 Q
(mips-irix5) 389.72 640.67 T
0 11 Q
(,) 446.72 640.67 T
5 9.5 Q
(sparc-) 452.22 640.67 T
(solaris2) 126 626.67 T
0 11 Q
(, and) 171.6 626.67 T
5 9.5 Q
(sparc-sunos4) 198.47 626.67 T
0 11 Q
(.) 266.87 626.67 T
(When you compile a Dylan library for a particular platform, the compiler cr) 126 606.67 T
(e-) 493.95 606.67 T
(ates a further subdir) 126 592.67 T
(ectory named after that library and emits C \336les and a) 224.46 592.67 T
(Make\336le into it. The formula for computing the subdir) 126 578.67 T
(ectory is:) 390.49 578.67 T
5 9 Q
(build/<) 153 558 T
7 F
(platform) 190.8 558 T
5 F
(>/<) 226.3 558 T
7 F
(library-name) 242.51 558 T
5 F
(>/) 295.34 558 T
0 11 Q
-0.22 (Thus, if you compile a library called) 126 537.67 P
5 9.5 Q
-0.46 (networks) 302.45 537.67 P
0 11 Q
-0.22 ( for SGI MIPS r) 348.05 537.67 P
-0.22 (unning Irix5, the) 420.83 537.67 P
(C \336les and a Make\336le for it ar) 126 523.67 T
(e emitted into a dir) 269.83 523.67 T
(ectory) 362.2 523.67 T
5 9.5 Q
(~/dylan/webster/) 395.16 523.67 T
(build/mips-irix5/networks/) 126 509.67 T
0 11 Q
(.) 274.2 509.67 T
2 F
(Note:) 126 489.67 T
0 F
( Ther) 153.19 489.67 T
(e is no) 178.5 489.67 T
5 9.5 Q
(generic) 212.29 489.67 T
0 11 Q
( subdir) 252.2 489.67 T
(ectory) 286.39 489.67 T
(, as ther) 315.38 489.67 T
(e is in a r) 353.2 489.67 T
(egistry) 396.58 489.67 T
(, because ther) 428.66 489.67 T
(e) 494.61 489.67 T
(is no concept of a generic platform: a generic version of a library is always) 126 475.67 T
-0.31 (compiled down to a set of C \336les suitable for compilation on the curr) 126 461.67 P
-0.31 (ent tar) 455.65 461.67 P
-0.31 (get) 486.59 461.67 P
(platform. This implies that even if a library is generically implemented, you) 126 447.67 T
(cannot use the C version of it on dif) 126 433.67 T
(fer) 298.76 433.67 T
(ent platforms \321 the emitted C version) 311.83 433.67 T
(is platform speci\336c.) 126 419.67 T
-0.04 (The C back-end emits a C \336le for each sour) 126 399.67 P
-0.04 (ce \336le in the Dylan library) 333.63 399.67 P
-0.04 (. The \336le-) 458.62 399.67 P
(names use the same stem as the Dylan sour) 126 385.67 T
(ce \336le, but) 336.35 385.67 T
5 9.5 Q
(_dude) 388.93 385.67 T
0 11 Q
( is appended to) 417.43 385.67 T
-0.06 (the stem. Also, the) 126 371.67 P
5 9.5 Q
-0.12 (.dylan) 218.45 371.67 P
0 11 Q
-0.06 ( suf) 252.65 371.67 P
-0.06 (\336x is r) 270.11 371.67 P
-0.06 (eplaced by) 299.84 371.67 P
5 9.5 Q
-0.12 (.c) 354.88 371.67 P
0 11 Q
-0.06 (. In addition, every compila-) 366.28 371.67 P
(tion pr) 126 357.67 T
(oduces the following two C \336les:) 158.7 357.67 T
5 9.5 Q
(_main_dude.c) 153 331.67 T
(_glue_dude.c) 153 308.67 T
0 11 Q
-0.24 (Because the \336les ar) 126 289.17 P
-0.24 (e emitted into a dir) 217.15 289.17 P
-0.24 (ectory used solely for the pr) 308.55 289.17 P
-0.24 (oducts a sin-) 443.06 289.17 P
(gle Dylan library) 126 275.17 T
(, ther) 207.39 275.17 T
(e is no danger of these \336les clashing with those pr) 232.29 275.17 T
(o-) 473.75 275.17 T
(duced when compiling a dif) 126 261.17 T
(fer) 262.7 261.17 T
(ent library) 275.78 261.17 T
(.) 325.35 261.17 T
2 F
(Note:) 126 241.17 T
0 F
( The) 153.19 241.17 T
5 9.5 Q
(_dude) 177.11 241.17 T
0 11 Q
( component of emitted-C-\336le names has been intr) 205.61 241.17 T
(oduced to) 445.47 241.17 T
(allow sour) 126 227.17 T
(ce-level debugging in GDB. The extended version of GDB needs to) 177.28 227.17 T
(know when a \336le r) 126 213.17 T
(epr) 216.72 213.17 T
(esents Dylan sour) 232.74 213.17 T
(ce code, as opposed to C. The) 319.28 213.17 T
5 9.5 Q
(_dude) 464.92 213.17 T
0 11 Q
(component pr) 126 199.17 T
(ovides a marker to this ef) 194.39 199.17 T
(fect.) 317.18 199.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 30
%%Page: "31" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3.4) 447.46 695.67 T
(Compiler products) 468.84 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(31) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 0 0 1 0 0 0 K
108 404.01 486 412 C
36 72 576 720 C
0 0 0 1 0 0 0 K
0 11 Q
0 X
0 0 0 1 0 0 0 K
(Figur) 136.37 415.67 T
(e 3.1  The) 162.58 415.67 T
5 9.5 Q
(streams) 211.01 415.67 T
0 11 Q
( library) 250.91 415.67 T
(, compiled for Irix 5 and SunOS 4.) 285.23 415.67 T
1 F
(x) 449.38 415.67 T
0 F
(.) 454.88 415.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(In Figur) 108 383.67 T
(e 3.1, the library) 147.07 383.67 T
5 9.5 Q
(streams) 227.89 383.67 T
0 11 Q
( has been compiled for the) 267.79 383.67 T
5 9.5 Q
(mips-irix5) 398.76 383.67 T
0 11 Q
( plat-) 455.76 383.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(form. The list of sour) 108 369.67 T
(ces suggests that ther) 209.66 369.67 T
(e ar) 312.92 369.67 T
(e two versions of str) 330.58 369.67 T
(eams: one) 428.45 369.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(for) 108 355.67 T
5 9.5 Q
(mips-irix5) 124.76 355.67 T
0 11 Q
( and one for) 181.76 355.67 T
5 9.5 Q
(sparc-sunos4) 243.08 355.67 T
0 11 Q
(. The Irix 5 version, de\336ned by) 311.48 355.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9.5 Q
(irix-streams.lid) 108 341.67 T
0 11 Q
(, includes the \336le) 199.2 341.67 T
5 9.5 Q
(irix-streams.dylan) 284.31 341.67 T
0 11 Q
(, while the SunOS) 386.91 341.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.) 108 327.67 T
1 F
(x) 116.25 327.67 T
0 F
( version includes the \336le) 121.75 327.67 T
5 9.5 Q
(sunos-streams.dylan) 242.96 327.67 T
0 11 Q
(. Thus the compilation) 351.26 327.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(pr) 108 313.67 T
(oducts of the Irix 5 version of) 118.76 313.67 T
5 9.5 Q
(streams) 263.63 313.67 T
0 11 Q
( include C \336les for all) 303.53 313.67 T
5 9.5 Q
(.dylan) 409.84 313.67 T
0 11 Q
( \336les) 444.04 313.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(listed in) 108 299.67 T
5 9.5 Q
(lib/streams) 149.74 299.67 T
0 11 Q
(, except for) 212.45 299.67 T
5 9.5 Q
(sunos-streams.dylan) 268.75 299.67 T
0 11 Q
(, which would only) 377.05 299.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(appear under) 108 285.67 T
5 9.5 Q
(build/sparc-sunos4/streams) 176.71 285.67 T
0 11 Q
(.) 324.91 285.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 13 Q
(3.4.2  The INST) 108 252.34 T
(ALL director) 182.89 252.34 T
(y) 246.37 252.34 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 11 Q
(Once you have compiled a Dylan library down to C you can build binary) 108 232.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
-0.28 (libraries and standalone executables fr) 108 218.67 P
-0.28 (om it. \050See Section 3.5.\051 Y) 293.39 218.67 P
-0.28 (ou may decide) 412.57 218.67 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(to pr) 108 204.67 T
(eserve such artefacts: for instance, it is very useful to keep copies of) 131.1 204.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(binary libraries ar) 108 190.67 T
(ound so that they can be linked into dif) 194.6 190.67 T
(fer) 385.11 190.67 T
(ent applications.) 398.19 190.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The) 108 170.67 T
5 9.5 Q
(install) 129.16 170.67 T
0 11 Q
( dir) 169.06 170.67 T
(ectory pr) 185.88 170.67 T
(ovides a r) 229.6 170.67 T
(epository for binary libraries and executa-) 276.82 170.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(bles that you wish to keep. Like the) 108 156.67 T
5 9.5 Q
(build) 282.66 156.67 T
0 11 Q
( dir) 311.16 156.67 T
(ectory it contains a single subdi-) 327.98 156.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(r) 108 142.67 T
(ectory for each tar) 112.15 142.67 T
(get platform. The Make\336le emitted with each library) 199.9 142.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 432 486 637 C
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(~/dylan/webster) 225 631 T
(streams) 135 568 T
(build) 342 604 T
(irix-streams.dylan) 112 469 T
(sunos-streams.lid) 112 523 T
(irix-streams.lid) 112 541 T
(streams-library.dylan) 112 505 T
(sunos-streams.dylan) 112 451 T
(streams.dylan) 112 487 T
279 628 153 610 2 L
0.25 H
2 Z
N
153 565 153 547 2 L
N
(streams) 307 549 T
(mips-irix5) 297 577 T
(sparc-sunos4) 424.17 577 T
(streams) 434.5 550 T
324 574 324 556 2 L
N
(_main_dude.c) 287.67 456.33 T
(_glue_dude.c) 287.67 473.5 T
(Makefile) 287.67 440 T
J
J
360 601 324 583 2 L
N
J
450 547 432 520 2 L
J
450 547 447.85 543.78 2 L
N
[9.453 7.623] 9.453 I
447.85 543.78 434.15 523.22 2 L
N
J
434.15 523.22 432 520 2 L
N
J
450 547 450 520 2 L
J
450 547 450 543.13 2 L
N
[7.367 5.941] 7.367 I
450 543.13 450 523.88 2 L
N
J
450 523.88 450 520 2 L
N
J
450 547 477 520 2 L
J
450 547 452.74 544.26 2 L
N
[6.886 5.554] 6.886 I
452.74 544.26 474.26 522.74 2 L
N
J
474.26 522.74 477 520 2 L
N
J
360 601 459 583 2 L
N
(lib) 144 604 T
324 545 324 529 2 L
N
153 601 153 574 2 L
N
J
153 601 189 574 2 L
J
153 601 156.1 598.68 2 L
N
[8.429 6.797] 8.429 I
156.1 598.68 185.9 576.33 2 L
N
J
185.9 576.33 189 574 2 L
N
J
153 601 117 574 2 L
J
153 601 149.9 598.68 2 L
N
[8.429 6.797] 8.429 I
149.9 598.68 120.1 576.33 2 L
N
J
120.1 576.33 117 574 2 L
N
J
279 628 360 610 2 L
N
450 574 450 556 2 L
N
(irix-streams_dude.c) 287.67 488.5 T
(streams-library_dude.c) 287.67 520.33 T
(streams_dude.c) 287.67 505.67 T
0 0 0 1 0 0 0 K
36 72 576 720 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 31
%%Page: "32" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3) 72 695.67 T
(The Batch Compiler) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(32) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(contains tar) 126 640.67 T
(gets) 182.63 640.67 T
5 9.5 Q
(install) 205.01 640.67 T
0 11 Q
( and) 244.91 640.67 T
5 9.5 Q
(install-app) 269.04 640.67 T
0 11 Q
( that perform installation by copy-) 331.74 640.67 T
(ing binary libraries and executables fr) 126 626.67 T
(om the) 309.39 626.67 T
5 9.5 Q
(build) 345.87 626.67 T
0 11 Q
( subdir) 374.37 626.67 T
(ectory to the) 408.57 626.67 T
5 9.5 Q
(install) 126 612.67 T
0 11 Q
( subdir) 165.9 612.67 T
(ectory designating the platform they wer) 200.1 612.67 T
(e compiled on.) 399.08 612.67 T
2 F
(Note:) 126 592.67 T
0 F
( Ther) 153.19 592.67 T
(e is also a system r) 178.5 592.67 T
(epository of binary libraries:) 268.42 592.67 T
5 9 Q
(~dylan/releases/webster/install/<) 153 572 T
7 F
(platform) 331.2 572 T
5 F
(>/lib) 366.7 572 T
0 11 Q
(This dir) 126 551.67 T
(ectory contains binary libraries for the Dylan libraries r) 163.83 551.67 T
(eleased with) 431.1 551.67 T
(W) 126 537.67 T
(ebster:) 135.99 537.67 T
5 9.5 Q
(dylan) 170.7 537.67 T
0 11 Q
(,) 199.2 537.67 T
5 9.5 Q
(streams) 204.7 537.67 T
0 11 Q
(,) 244.6 537.67 T
5 9.5 Q
(print) 250.1 537.67 T
0 11 Q
(,) 278.6 537.67 T
5 9.5 Q
(format) 284.1 537.67 T
0 11 Q
(,) 318.3 537.67 T
5 9.5 Q
(locators) 323.8 537.67 T
0 11 Q
(,) 369.4 537.67 T
5 9.5 Q
(harlequin-extensions) 374.9 537.67 T
0 11 Q
(,) 488.9 537.67 T
5 9.5 Q
(tcp-streams) 126 523.67 T
0 11 Q
(,) 188.7 523.67 T
5 9.5 Q
(c-ffi) 194.2 523.67 T
0 11 Q
( and) 222.7 523.67 T
5 9.5 Q
(testworks) 246.82 523.67 T
0 11 Q
(.) 298.12 523.67 T
(The Make\336le ensur) 126 503.67 T
(es that the appr) 219.45 503.67 T
(opriate binary library is found during) 294.83 503.67 T
(builds involving a particular Dylan library) 126 489.67 T
(, be it a system or personal library) 331.82 489.67 T
(.) 495.39 489.67 T
4 16 Q
(3.5  Make\336le operations) 126 454.33 T
0 11 Q
(Once you have compiled your Dylan libraries, you can go to the appr) 126 433.67 T
(opriate) 462.72 433.67 T
(compiler pr) 126 419.67 T
(oducts dir) 182.74 419.67 T
(ectory and build binary libraries or standalone executa-) 232.05 419.67 T
(bles.) 126 405.67 T
(The Make\336le emitted for each library permits a number of dif) 126 385.67 T
(fer) 424.92 385.67 T
(ent opera-) 438 385.67 T
(tions, including building a standalone executable or a binary library) 126 371.67 T
(. The) 454.87 371.67 T
(Make\336le ensur) 126 357.67 T
(es that any libraries that the Dylan library depends upon ar) 198.28 357.67 T
(e) 486.43 357.67 T
(compiled automatically) 126 343.67 T
(. \050However) 239.76 343.67 T
(, those libraries must have been compiled) 293.54 343.67 T
(down to C using the W) 126 329.67 T
(ebster compiler \336rst.\051) 237.71 329.67 T
(The Make\336le for) 126 309.67 T
1 F
(library) 209.09 309.67 T
0 F
( pr) 239.24 309.67 T
(ovides the following tar) 252.75 309.67 T
(gets. Note that in calls to) 368.54 309.67 T
5 9.5 Q
(make) 126 295.67 T
0 11 Q
(, you can list multiple tar) 148.8 295.67 T
(gets on the command line to save time.) 270.14 295.67 T
5 9.5 Q
(make) 153 269.67 T
0 11 Q
(See) 234 269.67 T
5 9.5 Q
(make) 253.06 269.67 T
(lib) 278.61 269.67 T
0 11 Q
(.) 295.71 269.67 T
5 9.5 Q
(make lib) 153 243.67 T
0 11 Q
-0.03 (Compiles the C \336les to pr) 234 243.67 P
-0.03 (oduce a library \050) 357.28 243.67 P
5 9.5 Q
-0.05 (lib_) 436.92 243.67 P
1 11 Q
-0.03 (library) 459.72 243.67 P
5 9.5 Q
-0.05 (.a) 489.88 243.67 P
0 11 Q
(or) 234 229.67 T
5 9.5 Q
(lib_) 247.1 229.67 T
1 11 Q
(library) 269.9 229.67 T
5 9.5 Q
(.so) 300.05 229.67 T
0 11 Q
( depending on the platform\051. This is) 317.15 229.67 T
(the \336rst tar) 234 215.67 T
(get and so can also be called with simply) 287.24 215.67 T
5 9.5 Q
(make) 234 201.67 T
0 11 Q
(.) 256.8 201.67 T
5 9.5 Q
(make install) 153 175.67 T
0 11 Q
(Copies the compiled binary version of) 234 175.67 T
1 F
(library) 422.33 175.67 T
0 F
( to your) 452.48 175.67 T
(library installation dir) 234 161.67 T
(ectory) 340.81 161.67 T
(,) 369.8 161.67 T
5 9.5 Q
($WEBSTER_PERSONAL_LIB) 375.3 161.67 T
0 11 Q
(.) 494.99 161.67 T
-0.18 (If ther) 234 147.67 P
-0.18 (e is no up-to-date version of the library in the cur-) 263.34 147.67 P
(r) 234 133.67 T
(ent dir) 238.15 133.67 T
(ectory it performs the compilation.) 270.22 133.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 32
%%Page: "33" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3.5) 443.95 695.67 T
(Makefile operations) 465.33 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(33) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(Depended-upon libraries ar) 216 640.67 T
(e also compiled if neces-) 351.05 640.67 T
-0.34 (sary: if a library has been compiled down to a C version) 216 626.67 P
(for the curr) 216 612.67 T
(ent platform, but ther) 270.78 612.67 T
(e is no up-to-date) 375.37 612.67 T
(binary library for it installed in either system installa-) 216 598.67 T
(tion or your personal installation dir) 216 584.67 T
(ectory) 392.91 584.67 T
(, then) 421.9 584.67 T
5 9.5 Q
(make) 451.81 584.67 T
-0.81 (install) 216 570.67 P
0 11 Q
-0.39 ( compiles it and then installs it in your personal) 255.9 570.67 P
(installation dir) 216 556.67 T
(ectory) 287.27 556.67 T
(.) 316.25 556.67 T
5 9.5 Q
(make app) 135 530.67 T
0 11 Q
(Calls the) 216 530.67 T
5 9.5 Q
(install) 261.12 530.67 T
0 11 Q
( tar) 301.02 530.67 T
(get to build and install all binary) 317.01 530.67 T
(libraries necessary to build the application executable.) 216 516.67 T
(Then compiles) 216 502.67 T
5 9.5 Q
(_main_dude.c) 289.86 502.67 T
0 11 Q
( and) 358.27 502.67 T
5 9.5 Q
(_glue_dude.c) 382.39 502.67 T
0 11 Q
(, to) 450.79 502.67 T
(pr) 216 488.67 T
(oduce object \336les \050) 226.76 488.67 T
5 9.5 Q
(_main_dude.o) 316.38 488.67 T
0 11 Q
( and) 384.77 488.67 T
5 9.5 Q
(_glue_dude.o) 408.9 488.67 T
0 11 Q
(\051) 477.3 488.67 T
(which ar) 216 474.67 T
(e linked with the r) 258.46 474.67 T
(equir) 347.41 474.67 T
(ed libraries to pr) 372.82 474.67 T
(oduce) 453.21 474.67 T
(an executable,) 216 460.67 T
1 F
(library) 287.52 460.67 T
(.) 317.27 460.67 T
0 F
( The application is linked against) 320.02 460.67 T
(binary libraries installed in the installation dir) 216 446.67 T
(ectories) 439.08 446.67 T
5 9.5 Q
($WEBSTER_SYSTEM_LIB) 216 432.67 T
0 11 Q
( and) 324.3 432.67 T
5 9.5 Q
($WEBSTER_PERSONAL_LIB) 348.42 432.67 T
0 11 Q
(.) 468.12 432.67 T
5 9.5 Q
(make install-app) 135 406.67 T
0 11 Q
(Copies the executable to your executables installation) 216 388.67 T
(dir) 216 374.67 T
(ectory) 230.07 374.67 T
(,) 259.05 374.67 T
5 9.5 Q
($WEBSTER_PERSONAL_BIN) 264.55 374.67 T
0 11 Q
(.) 384.25 374.67 T
5 9.5 Q
(make clean) 135 348.67 T
0 11 Q
(Deletes \336les of the following kinds fr) 216 348.67 T
(om the curr) 394.87 348.67 T
(ent) 451.36 348.67 T
(dir) 216 334.67 T
(ectory:) 230.07 334.67 T
5 9.5 Q
(.o) 265.77 334.67 T
0 11 Q
(,) 277.17 334.67 T
5 9.5 Q
(.a) 282.67 334.67 T
0 11 Q
(,) 294.08 334.67 T
5 9.5 Q
(.so) 299.58 334.67 T
0 11 Q
(, and any application executable.) 316.67 334.67 T
5 9.5 Q
(make clean-all) 135 308.67 T
0 11 Q
(Deletes \336les of the following kinds fr) 216 290.67 T
(om the curr) 394.87 290.67 T
(ent) 451.36 290.67 T
(dir) 216 276.67 T
(ectory:) 230.07 276.67 T
5 9.5 Q
(.o) 265.77 276.67 T
0 11 Q
(,) 277.17 276.67 T
5 9.5 Q
(.a) 282.67 276.67 T
0 11 Q
(,) 294.08 276.67 T
5 9.5 Q
(.so) 299.58 276.67 T
0 11 Q
(,) 316.67 276.67 T
5 9.5 Q
(.c) 322.17 276.67 T
0 11 Q
(, and any application execut-) 333.58 276.67 T
(able.) 216 262.67 T
(Consider the example of the) 108 242.67 T
5 9.5 Q
(hello-world) 247.58 242.67 T
0 11 Q
( library) 310.28 242.67 T
(. It is comprised of the \336les) 344.6 242.67 T
5 9.5 Q
(hello-world-library.dylan) 108 228.67 T
0 11 Q
( and) 250.5 228.67 T
5 9.5 Q
(hello.dylan) 274.62 228.67 T
0 11 Q
(. Calling) 337.32 228.67 T
5 9 Q
(compile-library\050#"hello-world"\051) 135 208 T
0 11 Q
(r) 108 187.67 T
(esults in the C back-end emitting a Make\336le with the following tar) 112.15 187.67 T
(gets:) 434.52 187.67 T
5 9.5 Q
(make lib) 135 161.67 T
0 11 Q
-0.24 (Pr) 216 161.67 P
-0.24 (oduces) 226.79 161.67 P
5 9.5 Q
-0.5 (lib_hello-world.a) 263.48 161.67 P
0 11 Q
-0.24 ( or) 360.38 161.67 P
5 9.5 Q
-0.5 (.so) 375.74 161.67 P
0 11 Q
-0.24 (, depending on the) 392.84 161.67 P
(curr) 216 147.67 T
(ent platform.) 236.01 147.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 33
%%Page: "34" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3) 72 695.67 T
(The Batch Compiler) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(34) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
5 9.5 Q
0 X
(make install) 153 640.67 T
0 11 Q
(Copies) 234 640.67 T
5 9.5 Q
(lib_hello-world) 270.3 640.67 T
0 11 Q
({) 355.8 640.67 T
5 9.5 Q
(.a) 359.46 640.67 T
0 11 Q
(,) 370.86 640.67 T
5 9.5 Q
(.so) 376.36 640.67 T
0 11 Q
(} fr) 393.46 640.67 T
(om the curr) 407.69 640.67 T
(ent) 464.17 640.67 T
(dir) 234 626.67 T
(ectory to your binary library installation dir) 248.07 626.67 T
(ectory) 460.42 626.67 T
(,) 489.41 626.67 T
5 9.5 Q
($WEBSTER_PERSONAL_LIB) 234 612.67 T
0 11 Q
(. Compiles the binary library) 353.7 612.67 T
-0.28 (\336rst if necessary) 234 598.67 P
-0.28 (. Also installs and if necessary compiles) 310.95 598.67 P
(any libraries that) 234 584.67 T
5 9.5 Q
(hello-world) 319.15 584.67 T
0 11 Q
( depends upon.) 381.85 584.67 T
5 9.5 Q
(make app) 153 558.67 T
0 11 Q
(Pr) 234 558.67 T
(oduces) 244.79 558.67 T
5 9.5 Q
(hello-world) 281.72 558.67 T
0 11 Q
(, the executable console applica-) 344.42 558.67 T
(tion;) 234 544.67 T
5 9.5 Q
(_main_dude.o) 258.7 544.67 T
0 11 Q
( , the application start-up stub gen-) 327.1 544.67 T
(erated fr) 234 530.67 T
(om) 275.25 530.67 T
5 9.5 Q
(_main_dude.c) 293.72 530.67 T
0 11 Q
(; and) 362.12 530.67 T
5 9.5 Q
(_glue_dude.o) 388.99 530.67 T
0 11 Q
(,) 457.39 530.67 T
(generated fr) 234 516.67 T
(om) 293.04 516.67 T
5 9.5 Q
(_glue_dude.c) 311.51 516.67 T
0 11 Q
(.) 379.91 516.67 T
5 9.5 Q
(make install-app) 153 493.67 T
0 11 Q
-0.12 (Copies the executable) 234 476.17 P
5 9.5 Q
-0.25 (hello-world) 342.06 476.17 P
0 11 Q
-0.12 ( to your executables) 404.76 476.17 P
(installation dir) 234 462.17 T
(ectory) 305.27 462.17 T
(,) 334.25 462.17 T
5 9.5 Q
($WEBSTER_PERSONAL_BIN) 339.75 462.17 T
0 11 Q
(.) 459.45 462.17 T
5 9.5 Q
(make clean) 153 436.17 T
0 11 Q
(Deletes) 234 436.17 T
5 9.5 Q
(_main_dude.o) 272.52 436.17 T
0 11 Q
(,) 340.92 436.17 T
5 9.5 Q
(_glue_dude.o) 346.42 436.17 T
0 11 Q
(,) 414.82 436.17 T
5 9.5 Q
(hello-world-) 420.32 436.17 T
(library_dude.o) 234 422.17 T
0 11 Q
(,) 313.8 422.17 T
5 9.5 Q
(hello_dude.o) 319.3 422.17 T
0 11 Q
(,) 387.7 422.17 T
5 9.5 Q
(lib_hello-world) 393.2 422.17 T
0 11 Q
({) 478.7 422.17 T
5 9.5 Q
(.a) 482.36 422.17 T
0 11 Q
(,) 493.76 422.17 T
5 9.5 Q
(.so) 234 408.17 T
0 11 Q
(}, and) 251.1 408.17 T
5 9.5 Q
(hello-world) 281.64 408.17 T
0 11 Q
( fr) 344.34 408.17 T
(om the curr) 354.9 408.17 T
(ent dir) 411.38 408.17 T
(ectory) 443.46 408.17 T
(.) 472.44 408.17 T
5 9.5 Q
(make clean-all) 153 382.17 T
0 11 Q
(Deletes these \336les \321) 234 364.17 T
5 9.5 Q
(_main_dude.c) 336.75 364.17 T
0 11 Q
(,) 405.15 364.17 T
5 9.5 Q
(_glue_dude.c) 410.65 364.17 T
0 11 Q
(,) 479.05 364.17 T
5 9.5 Q
(_main_dude.o) 234 350.17 T
0 11 Q
(,) 302.4 350.17 T
5 9.5 Q
(_glue_dude.o) 307.9 350.17 T
0 11 Q
(,) 376.3 350.17 T
5 9.5 Q
(lib_hello-world) 381.8 350.17 T
0 11 Q
({) 467.3 350.17 T
5 9.5 Q
(.a) 470.96 350.17 T
0 11 Q
(,) 482.36 350.17 T
5 9.5 Q
(.so) 234 336.17 T
0 11 Q
(},) 251.1 336.17 T
5 9.5 Q
(hello-world-library_dude.c) 260.26 336.17 T
0 11 Q
(,) 408.46 336.17 T
5 9.5 Q
(hello_dude.c) 413.96 336.17 T
0 11 Q
(,) 482.36 336.17 T
5 9.5 Q
(hello-world-library_dude.o) 234 322.17 T
0 11 Q
(,) 382.2 322.17 T
5 9.5 Q
(hello_dude.o) 387.7 322.17 T
0 11 Q
(, and) 456.1 322.17 T
5 9.5 Q
(hello-world) 234 308.17 T
0 11 Q
( \321 fr) 296.7 308.17 T
(om the curr) 321.01 308.17 T
(ent dir) 377.49 308.17 T
(ectory) 409.57 308.17 T
(.) 438.56 308.17 T
4 16 Q
(3.6  Example of b) 126 272.83 T
(uilding libraries and e) 232.96 272.83 T
(x) 368.42 272.83 T
(ecutab) 375.6 272.83 T
(les) 417.78 272.83 T
0 11 Q
(Suppose you have the library) 126 252.17 T
5 9.5 Q
(networks) 271.51 252.17 T
0 11 Q
(, below) 317.11 252.17 T
(.) 351.33 252.17 T
5 9 Q
(define library networks) 153 231.5 T
(use dylan;) 163.8 220.5 T
(use nodes-and-links;) 163.8 209.5 T
(use network-formatter;) 163.8 198.5 T
(end library networks;) 153 187.5 T
0 11 Q
(Suppose also that you want to build an executable version of) 126 167.17 T
5 9.5 Q
(networks) 424.15 167.17 T
0 11 Q
( for) 469.76 167.17 T
(SunOS 4.) 126 153.17 T
1 F
(x) 170.23 153.17 T
0 F
(, and to compile and install binary libraries for) 175.73 153.17 T
5 9.5 Q
(dylan) 404.18 153.17 T
0 11 Q
(,) 432.68 153.17 T
5 9.5 Q
(networks) 438.18 153.17 T
0 11 Q
(,) 483.78 153.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 34
%%Page: "35" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3.6) 345.58 695.67 T
(Example of building libraries and executables) 366.96 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(35) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 9.5 Q
0 X
(nodes-and-links) 108 640.67 T
0 11 Q
(, and) 193.5 640.67 T
5 9.5 Q
(network-formatter) 220.37 640.67 T
0 11 Q
( along the way) 317.27 640.67 T
(, so that you can r) 387.57 640.67 T
(e-) 473.51 640.67 T
(use them in other compilation sessions.) 108 626.67 T
(Y) 108 606.67 T
(ou should compile) 114.32 606.67 T
5 9.5 Q
(networks) 207.73 606.67 T
0 11 Q
( in the) 253.33 606.67 T
5 9.5 Q
(webster) 286.44 606.67 T
0 11 Q
( module using the) 326.34 606.67 T
5 9.5 Q
(update-) 417.15 606.67 T
-0.37 (libraries) 108 592.67 P
0 11 Q
-0.18 ( function. The) 159.3 592.67 P
5 9.5 Q
-0.37 (update-libraries) 228.96 592.67 P
0 11 Q
-0.18 ( function will compile a C version) 320.16 592.67 P
(of) 108 578.67 T
5 9.5 Q
(networks) 120.42 578.67 T
0 11 Q
(. It will also pr) 166.02 578.67 T
(oduce C versions of) 235.97 578.67 T
5 9.5 Q
(nodes-and-links) 334.71 578.67 T
0 11 Q
( and) 420.21 578.67 T
5 9.5 Q
(net-) 444.34 578.67 T
(work-formatter) 108 564.67 T
0 11 Q
( unless up-to-date versions alr) 187.8 564.67 T
(eady exist. Because) 334.48 564.67 T
5 9.5 Q
(dylan) 430.43 564.67 T
0 11 Q
( is a) 458.93 564.67 T
(standar) 108 550.67 T
(d library) 144.52 550.67 T
(, with up-to-date sour) 185.56 550.67 T
(ces pr) 291.61 550.67 T
(ecompiled under the system r) 319.94 550.67 T
(oot,) 464.6 550.67 T
5 9.5 Q
(update-libraries) 108 536.67 T
0 11 Q
( does not need to compile and install it.) 199.2 536.67 T
(Y) 108 516.67 T
(ou should make sur) 114.32 516.67 T
(e that the compiler tar) 210.88 516.67 T
(get platform is set to) 317.95 516.67 T
5 9.5 Q
("sparc-) 420.27 516.67 T
(sunos4") 108 502.67 T
0 11 Q
( befor) 147.9 502.67 T
(e starting the compilation.) 175.82 502.67 T
5 9 Q
(WEBSTER 1 ? target-platform-name\050\051 := "sparc-sunos4";) 135 482 T
("sparc-sunos4") 135 471 T
(WEBSTER 2 ? update-libraries\050#"networks"\051;) 135 460 T
([) 135 449 T
7 F
(messages) 145.8 449 T
5 F
( ]) 182.78 449 T
(WEBSTER 3 ?) 135 438 T
0 11 Q
-0.11 (The generated C \336les and Make\336les for) 108 417.67 P
5 9.5 Q
-0.23 (networks) 300.65 417.67 P
0 11 Q
-0.11 ( and your other libraries can) 346.25 417.67 P
(be found under) 108 403.67 T
5 9 Q
($WEBSTER_PERSONAL_ROOT/build/sparc-sunos4/) 135 383 T
7 F
(library-name) 361.8 383 T
5 F
(/) 414.64 383 T
0 11 Q
(The pr) 108 362.67 T
(e-generated C \336les and Make\336le for the) 139.92 362.67 T
5 9.5 Q
(dylan) 334.48 362.67 T
0 11 Q
( library can be found) 362.98 362.67 T
(under) 108 348.67 T
5 9 Q
($WEBSTER_SYSTEM_ROOT/build/sparc-sunos4/dylan/) 135 328 T
0 11 Q
(In addition, a binary library version of) 108 307.67 T
5 9.5 Q
(dylan) 297.16 307.67 T
0 11 Q
( can be found under) 325.66 307.67 T
5 9 Q
($WEBSTER_SYSTEM_ROOT/install/sparc-sunos4/lib_dylan.a) 135 287 T
0 11 Q
(Each of the Make\336les generated for the libraries) 108 266.67 T
5 9.5 Q
(networks) 343.07 266.67 T
0 11 Q
(,) 388.67 266.67 T
5 9.5 Q
(nodes-and-links) 394.17 266.67 T
0 11 Q
(and) 108 252.67 T
5 9.5 Q
(network-formatter) 129.37 252.67 T
0 11 Q
( uses envir) 226.27 252.67 T
(onment variables derived fr) 278.24 252.67 T
(om the name) 413.39 252.67 T
(of your personal r) 108 238.67 T
(oot dir) 195.16 238.67 T
(ectory) 227.58 238.67 T
(. Ther) 256.57 238.67 T
(efor) 284.63 238.67 T
(e, the next step is to start up a bash) 303.71 238.67 T
-0.1 (shell on the chosen delivery platform \321 a machine r) 108 224.67 P
-0.1 (unning SunOS 4.) 360.98 224.67 P
1 F
-0.1 (x) 442.92 224.67 P
0 F
-0.1 ( \321 and) 448.42 224.67 P
(to con\336gur) 108 210.67 T
(e the envir) 161.18 210.67 T
(onment appr) 212.45 210.67 T
(opriately) 275.44 210.67 T
(. The) 318.06 210.67 T
5 9.5 Q
(webster-env.sh) 344.72 210.67 T
0 11 Q
( script, in) 424.52 210.67 T
5 9.5 Q
(~dylan/releases/webster/admin) 108 196.67 T
0 11 Q
(, is pr) 273.3 196.67 T
(ovided for this purpose.) 300.17 196.67 T
(For example:) 108 176.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 35
%%Page: "36" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3) 72 695.67 T
(The Batch Compiler) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(36) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
5 F
0 X
(unix> cd ~dylan/releases/webster/admin/) 153 642 T
(unix> source webster-env.sh -pr ~/dylan/webster) 153 631 T
([) 153 620 T
7 F
(messages) 163.8 620 T
5 F
( ]) 200.78 620 T
(unix>) 153 609 T
2 11 Q
(Note:) 126 588.67 T
0 F
( Y) 153.19 588.67 T
(ou must r) 162.27 588.67 T
(un this script with) 209.26 588.67 T
5 9.5 Q
(source) 300.8 588.67 T
0 11 Q
( \050and in) 335 588.67 T
5 9.5 Q
(bash) 375.14 588.67 T
0 11 Q
(\051.) 397.94 588.67 T
(Now that your UNIX shell envir) 126 568.67 T
(onment is corr) 282.96 568.67 T
(ectly con\336gur) 353.08 568.67 T
(ed, you can start) 419.73 568.67 T
(performing build tasks. The Make\336le pr) 126 554.67 T
(ovides several tar) 320.13 554.67 T
(gets, which ar) 405.4 554.67 T
(e) 472.99 554.67 T
(described in full in Section 3.5 on page 32.) 126 540.67 T
-0.47 (In this instance, you should build binary library versions of each Dylan library) 126 520.67 P
(in the application, with the exception of) 126 506.67 T
5 9.5 Q
(dylan) 321.76 506.67 T
0 11 Q
(, for which a pr) 350.26 506.67 T
(e-built binary) 424.34 506.67 T
(library is available. Y) 126 492.67 T
(ou should then install those binary libraries in your per-) 227.65 492.67 T
(sonal installation ar) 126 478.67 T
(ea \050the) 221.37 478.67 T
5 9.5 Q
(install) 256.56 478.67 T
0 11 Q
( dir) 296.46 478.67 T
(ectory under your personal r) 313.28 478.67 T
(oot\051.) 453.1 478.67 T
(Finally) 126 464.67 T
(, you should cr) 158.52 464.67 T
(eate a standalone executable version of) 230.93 464.67 T
5 9.5 Q
(networks) 422.95 464.67 T
0 11 Q
( fr) 468.55 464.67 T
(om) 479.11 464.67 T
(the four binary libraries.) 126 450.67 T
(Y) 126 430.67 T
(ou can do all of these things with the Make\336le emitted for) 132.32 430.67 T
5 9.5 Q
(networks) 416 430.67 T
0 11 Q
(. That) 461.6 430.67 T
(Make\336le knows how to build and install all the libraries) 126 416.67 T
5 9.5 Q
(networks) 400.64 416.67 T
0 11 Q
( depends) 446.24 416.67 T
(on, and how to how to build an executable for) 126 402.67 T
5 9.5 Q
(networks) 352.75 402.67 T
0 11 Q
(.) 398.35 402.67 T
-0.33 (So, to build the) 126 382.67 P
5 9.5 Q
-0.69 (networks) 200.88 382.67 P
0 11 Q
-0.33 ( executable and the binary libraries it is formed fr) 246.48 382.67 P
-0.33 (om,) 483.11 382.67 P
(go to the) 126 368.67 T
5 9.5 Q
(sparc-sunos4/networks) 171.22 368.67 T
0 11 Q
( dir) 290.92 368.67 T
(ectory under) 307.74 368.67 T
5 9.5 Q
(build) 372.82 368.67 T
0 11 Q
(.) 401.32 368.67 T
5 9 Q
(unix> cd $WEBSTER_PERSONAL_ROOT/build/sparc-sunos4/networks) 153 348 T
(unix> make install app) 153 337 T
0 11 Q
(The) 126 316.67 T
5 9.5 Q
(make) 147.16 316.67 T
0 11 Q
( call involves two tar) 169.96 316.67 T
(gets:) 270.92 316.67 T
5 9.5 Q
(install) 296.06 316.67 T
0 11 Q
( and then) 335.96 316.67 T
5 9.5 Q
(app) 384.49 316.67 T
0 11 Q
(. The \336rst takes the) 401.59 316.67 T
5 9.5 Q
-0.93 (networks) 126 302.67 P
0 11 Q
-0.45 ( library and each of the depended-upon Dylan libraries. If a library is) 171.6 302.67 P
-0.4 (not alr) 126 288.67 P
-0.4 (eady compiled and installed under the system r) 157.2 288.67 P
-0.4 (oot\325s installation ar) 386.04 288.67 P
-0.4 (ea or) 478.17 288.67 P
(your own, it compiles and installs binary versions of them. Y) 126 274.67 T
(our personal) 420.44 274.67 T
(installation ar) 126 260.67 T
(ea is) 192.85 260.67 T
5 9 Q
($WEBSTER_PERSONAL_ROOT/install/sparc-sunos4/) 153 240 T
0 11 Q
(Once the necessary set of binary libraries is compiled installed, the) 126 219.67 T
5 9.5 Q
(app) 451.69 219.67 T
0 11 Q
( tar) 468.79 219.67 T
(get) 484.77 219.67 T
(is executed. The) 126 205.67 T
5 9.5 Q
(app) 206.59 205.67 T
0 11 Q
( tar) 223.69 205.67 T
(get builds an application executable fr) 239.67 205.67 T
(om the binary) 424.68 205.67 T
(libraries.) 126 191.67 T
(The r) 126 171.67 T
(esult of calling) 151.31 171.67 T
5 9.5 Q
(make install app) 225.09 171.67 T
0 11 Q
( is ther) 316.29 171.67 T
(efor) 349.06 171.67 T
(e:) 368.14 171.67 T
(\245) 135 151.67 T
(An executable \336le) 153 151.67 T
5 9.5 Q
(networks) 242.71 151.67 T
0 11 Q
(, cr) 288.3 151.67 T
(eated in the curr) 302.84 151.67 T
(ent dir) 382.3 151.67 T
(ectory) 414.38 151.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 36
%%Page: "37" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3.6) 345.58 695.67 T
(Example of building libraries and executables) 366.96 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(37) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
0 11 Q
0 X
(\245) 117 640.67 T
(Binary libraries) 135 640.67 T
5 9.5 Q
(lib_networks.a) 212.59 640.67 T
0 11 Q
(,) 292.39 640.67 T
5 9.5 Q
(lib_ nodes_and_links.a) 297.89 640.67 T
0 11 Q
(, and) 423.29 640.67 T
5 9.5 Q
(net-) 450.17 640.67 T
(works.a) 135 626.67 T
0 11 Q
( installed in) 174.9 626.67 T
5 9 Q
($WEBSTER_PERSONAL_ROOT/install/sparc-sunos4/lib/) 135 606 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 37
%%Page: "38" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(3) 72 695.67 T
(The Batch Compiler) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(38) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "38" 38
%%Page: "39" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 81 540 117 R
7 X
0 0 0 1 0 0 0 K
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(39) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 513 504 648 R
7 X
V
108 590.45 504 618 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 590.45 504 618 R
7 X
0 0 0 1 0 0 0 K
V
108 611.14 270 611.14 2 L
3 H
2 Z
0 X
N
108 602.14 270 602.14 2 L
1 H
N
36 72 576 720 C
0 30 Q
0 X
0 0 0 1 0 0 0 K
(4) 180 628 T
0 0 0 0 1 1 1 K
0 2 Q
7 X
0 0 0 0 1 1 1 K
(4) 108 566.45 T
0 0 0 1 0 0 0 K
0 30 Q
0 X
0 0 0 1 0 0 0 K
(Debugging Dylan) 109 566.45 T
(Applications with GNU GDB) 108 528.45 T
108 126 486 432 R
7 X
V
4 16 Q
0 X
(4.1  Intr) 108 421.33 T
(oduction) 154.43 421.33 T
0 11 Q
(Y) 108 400.67 T
(ou can debug an application executable on UNIX using Harlequin\325s) 114.32 400.67 T
(extended version of the Fr) 108 386.67 T
(ee Softwar) 235.2 386.67 T
(e Foundation\325s GNU) 286.34 386.67 T
5 9.5 Q
(gdb) 390.25 386.67 T
0 11 Q
( debugger) 407.35 386.67 T
(.) 455.84 386.67 T
(The extended GDB debugger pr) 108 366.67 T
(ovides:) 263.27 366.67 T
(\245) 117 346.67 T
(Dylan-style object printing.) 135 346.67 T
(\245) 117 326.67 T
(Contr) 135 326.67 T
(ol of str) 162.94 326.67 T
(uctur) 199.82 326.67 T
(ed object printing.) 225.71 326.67 T
(For example, the number of levels of nesting in collections or the num-) 135 308.67 T
(ber of collection elements printed.) 135 294.67 T
(\245) 117 274.67 T
(Automatic conversions between Dylan and mangled names.) 135 274.67 T
(\245) 117 254.67 T
(Dylan- and C-style backtraces.) 135 254.67 T
(The extended GDB debugger is available in the Dylan W) 108 234.67 T
(ebster distribution) 382.37 234.67 T
(under) 108 220.67 T
5 9 Q
($WEBSTER_SYSTEM_ROOT/platforms/) 135 200 T
7 F
(platform) 302.4 200 T
5 F
(/bin/webster-gdb) 337.9 200 T
0 11 Q
(wher) 108 179.67 T
(e) 132.99 179.67 T
1 F
(platform) 141.01 179.67 T
0 F
( is one of) 178.9 179.67 T
5 9.5 Q
(alpha-osf3) 225.11 179.67 T
0 11 Q
(,) 282.11 179.67 T
5 9.5 Q
(mips-irix5) 287.61 179.67 T
0 11 Q
(,) 344.61 179.67 T
5 9.5 Q
(sparc-solaris2) 350.11 179.67 T
0 11 Q
(, and) 429.91 179.67 T
5 9.5 Q
(sparc-sunos4) 108 165.67 T
0 11 Q
(.) 176.4 165.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 39
%%Page: "40" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(40) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 16 Q
0 X
(4.2  GDB operation and setup) 126 637.33 T
0 11 Q
(This chapter does not explain how to use GDB. However) 126 616.67 T
(, the extended exam-) 401.61 616.67 T
(ple on page 48 does, for the sake of completeness, show how to start GDB up) 126 602.67 T
(and how to connect a pr) 126 588.67 T
(ogram to it. This should get you started.) 243.24 588.67 T
4 16 Q
(4.3  Using the GDB Dylan e) 126 553.33 T
(xtensions) 294.26 553.33 T
0 11 Q
(This section pr) 126 532.67 T
(ovides details of how the GDB Dylan extensions ar) 197.28 532.67 T
(e imple-) 444.15 532.67 T
(mented, and how to go about using them.) 126 518.67 T
4 13 Q
(4.3.1  Stac) 126 485.33 T
(k frames) 177.96 485.33 T
0 11 Q
(The extended GDB \336lters out non-Dylan frames in an executing application.) 126 465.67 T
(Dylan applications ar) 126 451.67 T
(e linked with a r) 230.25 451.67 T
(untime and a garbage collector written) 309.55 451.67 T
(in C, and a pr) 126 437.67 T
(oportion of application execution takes place ther) 192.03 437.67 T
(e. Those stack) 432 437.67 T
-0.28 (frames ar) 126 423.67 P
-0.28 (e \336lter) 171.27 423.67 P
-0.28 (ed most of the time; the GDB commands) 201.86 423.67 P
5 9.5 Q
-0.59 (up) 399.48 423.67 P
0 11 Q
-0.28 ( and) 410.88 423.67 P
5 9.5 Q
-0.59 (down) 434.43 423.67 P
0 11 Q
-0.28 ( will skip) 457.23 423.67 P
(them. Y) 126 409.67 T
(ou can display all frames with the GDB commands) 162.79 409.67 T
5 9.5 Q
(where) 412.89 409.67 T
0 11 Q
( and) 441.39 409.67 T
5 9.5 Q
(bt) 465.51 409.67 T
0 11 Q
(.) 476.91 409.67 T
4 13 Q
(4.3.2  Langua) 126 376.33 T
(g) 193.46 376.33 T
(es in the deb) 200.07 376.33 T
(ug) 265.05 376.33 T
(g) 277.98 376.33 T
(er) 284.6 376.33 T
0 11 Q
(GDB can operate in dif) 126 356.67 T
(fer) 236.99 356.67 T
(ent language modes. What this means is that it can) 250.07 356.67 T
-0.09 (interpr) 126 342.67 P
-0.09 (et compiled pr) 159.56 342.67 P
-0.09 (ogram code accor) 230.1 342.67 P
-0.09 (ding to dif) 315.4 342.67 P
-0.09 (fer) 366.14 342.67 P
-0.09 (ent sets of r) 379.22 342.67 P
-0.09 (ules for dif) 434.57 342.67 P
-0.09 (fer-) 487.06 342.67 P
(ent languages. A fundamental element of the extensions to GDB for Dylan) 126 328.67 T
(work is the addition of r) 126 314.67 T
(ules for interpr) 243.78 314.67 T
(eting data that r) 316.62 314.67 T
(epr) 393.97 314.67 T
(esents Dylan) 410 314.67 T
(objects and for printing such data in Dylan style.) 126 300.67 T
(When in the Dylan language mode, GDB will interpr) 126 280.67 T
(et data accor) 382.83 280.67 T
(ding to) 443.91 280.67 T
(Dylan r) 126 266.67 T
(ules; thus, asked to describe an object r) 162.74 266.67 T
(epr) 351.29 266.67 T
(esenting a Dylan list, it will) 367.32 266.67 T
(be able to r) 126 252.67 T
(ecognize it as one and print it out so that it looks like a list. How-) 179.39 252.67 T
(ever) 126 238.67 T
(, if GDB was in C mode at the time, it would not know what to do with) 146.28 238.67 T
(the object because it is not encoded accor) 126 224.67 T
(ding to C conventions.) 324.55 224.67 T
(Much of the time, GDB will be in the right language mode for the curr) 126 204.67 T
(ent) 466.26 204.67 T
(frame automatically) 126 190.67 T
(. However) 222.65 190.67 T
(, you can set the) 272.76 190.67 T
5 9.5 Q
(language) 353.58 190.67 T
0 11 Q
( variable to change it) 399.18 190.67 T
(if necessary) 126 176.67 T
(. See) 181.51 176.67 T
5 9.5 Q
(language) 206.07 176.67 T
0 11 Q
(,  page 46.) 251.67 176.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 40
%%Page: "41" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4.3) 389.3 695.67 T
(Using the GDB Dylan extensions) 410.68 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(41) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
4 13 Q
0 X
(4.3.3  Expressions in the deb) 108 639.33 T
(ug) 254.16 639.33 T
(g) 267.09 639.33 T
(er) 273.71 639.33 T
0 11 Q
-0.04 (When in the Dylan language mode, you can use a range of Dylan expr) 108 619.67 P
-0.04 (essions) 448.42 619.67 P
(within GDB commands such as) 108 605.67 T
5 9.5 Q
(p) 263.69 605.67 T
0 11 Q
(. The expr) 269.39 605.67 T
(ession grammar is de\336ned below:) 317.76 605.67 T
5 9 Q
(expr:) 135 585 T
(<) 198 585 T
7 F
(leaf) 203.4 585 T
5 F
(>) 218.39 585 T
(|) 180 574 T
(<) 198 574 T
7 F
(expr) 203.4 574 T
5 F
(> \050 \051) 220.4 574 T
(|) 180 563 T
(<) 198 563 T
7 F
(expr) 203.4 563 T
5 F
(> \050 <) 220.4 563 T
7 F
(ar) 247.4 563 T
(g-list) 255.74 563 T
5 F
(> \051) 277.24 563 T
(leaf:) 135 544 T
(<) 198 544 T
7 F
(debug-var) 203.4 544 T
5 F
(>) 243.75 544 T
(|) 180 533 T
(<) 198 533 T
7 F
(var) 203.4 533 T
5 F
(>) 216.91 533 T
(|) 180 522 T
(<) 198 522 T
7 F
(literal) 203.4 522 T
5 F
(>) 228.39 522 T
(literal:) 135 503 T
(#t) 198 503 T
(|) 180 492 T
(#f) 198 492 T
(|) 180 481 T
(<) 198 481 T
7 F
(keyword) 203.4 481 T
5 F
(>) 238.41 481 T
(|) 180 470 T
(<) 198 470 T
7 F
(string) 203.4 470 T
5 F
(>) 226.9 470 T
(|) 180 459 T
(<) 198 459 T
7 F
(character) 203.4 459 T
5 F
(>) 240.9 459 T
(|) 180 448 T
(<) 198 448 T
7 F
(number) 203.4 448 T
5 F
(>) 233.24 448 T
(|) 180 437 T
(<) 198 437 T
7 F
(addr) 203.4 437 T
(ess) 221.75 437 T
5 F
(>) 233.74 437 T
(debug-var:) 135 418 T
($<) 198 418 T
7 F
(integer) 208.8 418 T
5 F
(>) 236.29 418 T
(arg-list:) 135 399 T
(<) 198 399 T
7 F
(expr) 203.4 399 T
5 F
(> <) 220.4 399 T
7 F
(ar) 236.6 399 T
(gs) 244.94 399 T
5 F
(>) 253.44 399 T
(|) 180 388 T
(<) 198 388 T
7 F
(keyword) 203.4 388 T
5 F
(> <) 238.41 388 T
7 F
(expr) 254.61 388 T
5 F
(> <) 271.61 388 T
7 F
(ar) 287.81 388 T
(gs) 296.15 388 T
5 F
(>) 304.65 388 T
(args:) 135 369 T
8 F
(e) 198 369 T
5 F
(|) 180 358 T
(, <) 198 358 T
7 F
(ar) 214.2 358 T
(g-list) 222.54 358 T
5 F
(>) 244.04 358 T
0 11 Q
(An) 108 337.67 T
5 9.5 Q
(<) 125.71 337.67 T
1 11 Q
(addr) 131.41 337.67 T
(ess) 151.38 337.67 T
5 9.5 Q
(>) 164.21 337.67 T
0 11 Q
( is a hexadecimal number) 169.91 337.67 T
(.) 293.24 337.67 T
(A) 108 317.67 T
5 9.5 Q
(<) 119.31 317.67 T
1 11 Q
(debug-var) 125.01 317.67 T
5 9.5 Q
(>) 169.82 317.67 T
0 11 Q
( is a history variable. See Section 4.3.4 on page 43.) 175.52 317.67 T
(A) 108 297.67 T
5 9.5 Q
(<) 119.31 297.67 T
1 11 Q
(var) 125.01 297.67 T
5 9.5 Q
(>) 139.67 297.67 T
0 11 Q
( is one of the following:) 145.37 297.67 T
2 F
(1.) 117 277.67 T
0 F
(A local Dylan variable) 135 277.67 T
2 F
(2.) 117 257.67 T
0 F
(A global Dylan variable) 135 257.67 T
2 F
(3.) 117 237.67 T
0 F
(A variable used in the emitted C, but not part of the Dylan pr) 135 237.67 T
(ogram \321) 432.42 237.67 T
(such as temporary variables intr) 135 223.67 T
(oduced into the emitted C by the W) 291.55 223.67 T
(eb-) 464.08 223.67 T
(ster compiler) 135 209.67 T
(.) 198.03 209.67 T
(All names except the latter kind ar) 108 189.67 T
(e mangled. Local Dylan variables ar) 275.13 189.67 T
(e man-) 449.49 189.67 T
(gled by appending an underscor) 108 175.67 T
(e to them; thus, a local variable) 266.31 175.67 T
5 9.5 Q
(foo) 419.78 175.67 T
0 11 Q
( is man-) 436.88 175.67 T
(gled as) 108 161.67 T
5 9.5 Q
(foo_) 144.97 161.67 T
0 11 Q
(. Global Dylan variables ar) 167.77 161.67 T
(e mangled by including their library) 297.26 161.67 T
(and module names.) 108 147.67 T
88 294 90 305 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 41
%%Page: "42" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(42) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 11 Q
0 X
(When you use a) 126 640.67 T
5 9.5 Q
(<) 206.89 640.67 T
1 11 Q
(var) 212.59 640.67 T
5 9.5 Q
(>) 227.26 640.67 T
0 11 Q
( in a GDB expr) 232.96 640.67 T
(ession, you do not need to mangle the) 304.39 640.67 T
-0.08 (name yourself; GDB mangles the name for you if necessary) 126 626.67 P
-0.08 (. It may not be nec-) 411.72 626.67 P
(essary if:) 126 612.67 T
(\245) 135 592.67 T
(the name matches a variable of category 3 above, or) 153 592.67 T
(\245) 135 572.67 T
(you have mangled the name yourself.) 153 572.67 T
(If neither of the above applies, GDB mangles the name into the format for) 126 552.67 T
(Dylan local variables. If no matching local variable is found, GDB next man-) 126 538.67 T
(gles the name into the format for Dylan global variables.) 126 524.67 T
(T) 126 504.67 T
(o make it clear that you ar) 131.73 504.67 T
(e r) 258.3 504.67 T
(eferring to a global variable, you can supply a) 270.46 504.67 T
5 9.5 Q
(<) 126 490.67 T
1 11 Q
(var) 131.7 490.67 T
5 9.5 Q
(>) 146.36 490.67 T
0 11 Q
( that includes the module name or module and library name. Use the) 152.06 490.67 T
(colon \050:\051 as a separator) 126 476.67 T
(. The format is ther) 234.25 476.67 T
(efor) 326.5 476.67 T
(e:) 345.58 476.67 T
7 9 Q
(name:module) 153 456 T
5 F
(:) 206.25 456 T
7 F
(library) 211.65 456 T
0 11 Q
-0.17 (For convenience, the concepts of curr) 126 435.67 P
-0.17 (ent Dylan library and module have been) 305.57 435.67 P
(intr) 126 421.67 T
(oduced into the GDB extensions. This is a very simple implementation:) 143.34 421.67 T
(even though it appears to know about libraries and modules, the debugger) 126 407.67 T
(does not model Dylan namespaces. It simply concatenates the curr) 126 393.67 T
(ent library) 449.29 393.67 T
(name and curr) 126 379.67 T
(ent module name with the symbol name given.) 197.02 379.67 T
(If you leave out) 126 359.67 T
1 F
(library) 204.8 359.67 T
0 F
(, or) 233.73 359.67 T
1 F
(library) 252.34 359.67 T
0 F
( and) 282.49 359.67 T
1 F
(module) 306.61 359.67 T
0 F
(, GDB will use the curr) 339 359.67 T
(ent library) 449.74 359.67 T
(and curr) 126 345.67 T
(ent module to \336ll in the gaps for global variables. The) 167.38 345.67 T
1 F
(only) 430.1 345.67 T
0 F
( valid) 449.65 345.67 T
(forms ar) 126 331.67 T
(e:) 166.79 331.67 T
7 9 Q
(name) 153 311 T
5 F
(:) 174.5 311 T
7 F
(module) 179.9 311 T
5 F
(:) 209.4 311 T
7 F
(library) 214.8 311 T
(name) 153 292 T
5 F
(:) 174.5 292 T
7 F
(module) 179.9 292 T
(name) 153 273 T
0 11 Q
(For example:) 126 252.67 T
5 9.5 Q
(size:internal:dylan) 153 226.67 T
0 11 Q
(This means the variable) 234 208.67 T
5 9.5 Q
(size) 352.13 208.67 T
0 11 Q
( in the) 374.93 208.67 T
5 9.5 Q
(dylan) 408.04 208.67 T
0 11 Q
( library\325s) 436.54 208.67 T
5 9.5 Q
(internal) 234 194.67 T
0 11 Q
( module.) 279.6 194.67 T
5 9.5 Q
(size:internal) 153 168.67 T
0 11 Q
(This means the variable) 234 168.67 T
5 9.5 Q
(size) 352.13 168.67 T
0 11 Q
( in a module called) 374.93 168.67 T
5 9.5 Q
(internal) 234 154.67 T
0 11 Q
(. The library defaults to the curr) 279.6 154.67 T
(ent library) 434.15 154.67 T
(,) 483.73 154.67 T
5 9.5 Q
(dylan) 234 140.67 T
0 11 Q
(.) 262.5 140.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 42
%%Page: "43" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4.3) 389.3 695.67 T
(Using the GDB Dylan extensions) 410.68 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(43) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 9.5 Q
0 X
(size) 135 640.67 T
0 11 Q
(This means the variable) 216 640.67 T
5 9.5 Q
(size) 334.13 640.67 T
0 11 Q
(, with no mor) 356.93 640.67 T
(e informa-) 422.57 640.67 T
(tion given. The curr) 216 626.67 T
(ent module and library ar) 311.82 626.67 T
(e used.) 436.68 626.67 T
(This example session pr) 108 606.67 T
(ovides further illustration. The curr) 224.13 606.67 T
(ent module is) 396.14 606.67 T
5 9.5 Q
(dylan-test) 108 592.67 T
0 11 Q
( and the curr) 165 592.67 T
(ent library) 227.14 592.67 T
5 9.5 Q
(cmu-test-suite) 280.69 592.67 T
0 11 Q
(. Each time the addr) 360.49 592.67 T
(ess) 457.86 592.67 T
(r) 108 578.67 T
(eturned is the same, demonstrating that the names r) 112.15 578.67 T
(esolve to the same sym-) 364.93 578.67 T
(bol each time:) 108 564.67 T
5 9 Q
(\050gdb\051 p tautologies:dylan-test:cmu-test-suite) 135 544 T
($39 = #\050#"booleans", #"comparisons", #"numbers", #"characters",) 135 533 T
(#"symbols", #"collections", #"sequences", #"arrays", #"deques",) 135 522 T
(#"lists", #"ranges", #"stretchy vectors", #"strings", #"tables",) 135 511 T
(#"vectors"\051) 135 500 T
(\050gdb\051 p tautologies:dylan-test) 135 481 T
($40 = #\050#"booleans", #"comparisons", #"numbers", #"characters",) 135 470 T
(#"symbols", #"collections", #"sequences", #"arrays", #"deques",) 135 459 T
(#"lists", #"ranges", #"stretchy vectors", #"strings", #"tables",) 135 448 T
(#"vectors"\051) 135 437 T
(\050gdb\051 p tautologies) 135 418 T
($41 = #\050#"booleans", #"comparisons", #"numbers", #"characters",) 135 407 T
(#"symbols", #"collections", #"sequences", #"arrays", #"deques",) 135 396 T
(#"lists", #"ranges", #"stretchy vectors", #"strings", #"tables",) 135 385 T
(#"vectors"\051) 135 374 T
4 13 Q
(4.3.4  The histor) 108 342.33 T
(y mec) 189.28 342.33 T
(hanism) 219.41 342.33 T
0 11 Q
(A simple history mechanism is pr) 108 322.67 T
(ovided to help you examine collection ele-) 271.66 322.67 T
(ments. Each element printed with a call to) 108 308.67 T
5 9.5 Q
(p) 314.98 308.67 T
0 11 Q
( or) 320.68 308.67 T
5 9.5 Q
(describe) 336.53 308.67 T
0 11 Q
( \050see Section 4.4.1 on) 382.13 308.67 T
(page 44\051 is assigned a) 108 294.67 T
5 9.5 Q
(<) 215.81 294.67 T
1 11 Q
(debug-var) 221.51 294.67 T
5 9.5 Q
(>) 266.33 294.67 T
0 11 Q
( so that you can easily r) 272.02 294.67 T
(efer to it in a later) 385.91 294.67 T
(call. For example:) 108 280.67 T
5 9 Q
(\050gdb\051 describe tautologies) 135 260 T
($29 =   {class <pair>:dylan:dylan 0x3fffff07bc8}) 135 249 T
($30 =   head:dylan:dylan: #"booleans") 135 238 T
($31 =   tail:dylan:dylan: #\050#"comparisons", #"numbers",) 135 227 T
(#"characters", #"symbols", #"collections", #"sequences",) 135 216 T
(#"arrays", #"deques", #"lists", #"ranges", #"stretchy vectors",) 135 205 T
(#"strings", #"tables", #"vectors"\051) 135 194 T
(\050gdb\051 describe $30) 135 175 T
($32 = {class <symbol>:dylan:dylan 0x3004290f440}) 135 164 T
($33 = symbol-name:internal:dylan: "booleans") 135 153 T
(\050gdb\051) 135 142 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 43
%%Page: "44" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(44) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 13 Q
0 X
(4.3.5  Setting the sour) 126 639.33 T
(ce director) 236.59 639.33 T
(y f) 291.2 639.33 T
(or sour) 303.45 639.33 T
(ce-le) 339.98 639.33 T
(vel deb) 364.13 639.33 T
(ug) 400.68 639.33 T
(ging) 413.61 639.33 T
0 11 Q
-0.23 (GDB needs to know the location of the sour) 126 619.67 P
-0.23 (ces the application was built fr) 335.8 619.67 P
-0.23 (om.) 483.01 619.67 P
(Y) 126 605.67 T
(ou can add the locations of the C \336les emitted for your Dylan libraries to) 132.32 605.67 T
-0.42 (GDB\325s sour) 126 591.67 P
-0.42 (ce sear) 181.13 591.67 P
-0.42 (ch path. Do this by setting the GDB) 213.2 591.67 P
5 9.5 Q
-0.87 (dir) 384.27 591.67 P
0 11 Q
-0.42 ( command. See) 401.37 591.67 P
5 9.5 Q
-0.87 (help) 476.37 591.67 P
(dir) 126 577.67 T
0 11 Q
(. Remember that you can place such calls in your) 142.29 577.67 T
5 9.5 Q
(.gdbinit) 382.36 577.67 T
0 11 Q
(.) 427.96 577.67 T
4 16 Q
(4.4  GDB e) 126 542.33 T
(xtensions) 191.46 542.33 T
4 13 Q
(4.4.1  Ne) 126 508.33 T
(w and e) 169.12 508.33 T
(xtended deb) 208.08 508.33 T
(ug) 270.68 508.33 T
(g) 283.61 508.33 T
(er commands) 290.23 508.33 T
0 11 Q
-0.11 (In the following descriptions,) 126 488.67 P
1 F
-0.11 (expr) 271.19 488.67 P
-0.11 (ession) 290.55 488.67 P
0 F
-0.11 ( is a Dylan expr) 317.45 488.67 P
-0.11 (ession. The expr) 392.8 488.67 P
-0.11 (ession) 471.15 488.67 P
(grammar is given in Section 4.3.3 on page 41.) 126 474.67 T
5 9 Q
(p) 126 446 T
7 F
(expr) 136.8 446 T
(ession) 153.64 446 T
1 11 Q
(Command) 458.16 444.67 T
0 F
(Prints the object r) 153 422.67 T
(eferr) 237.9 422.67 T
(ed to by) 260.59 422.67 T
1 F
(expr) 302.62 422.67 T
(ession) 321.98 422.67 T
0 F
( in Dylan style. The addr) 348.88 422.67 T
(ess of) 469.05 422.67 T
(the object is printed \336rst, followed by the object. The form in which it is) 153 408.67 T
(printed depends on its type. Ther) 153 394.67 T
(e ar) 315.29 394.67 T
(e print methods for several dif) 332.96 394.67 T
(fer-) 480.35 394.67 T
-0.32 (ent types of objects \050for instance, lists\051 and a general method for printing) 153 380.67 P
(others.) 153 366.67 T
(A question mark befor) 153 346.67 T
(e a value means that it is not a Dylan object but) 262.57 346.67 T
(some raw value.) 153 332.67 T
(For example:) 153 312.67 T
5 9 Q
(\050gdb\051 p 0x140054f18) 153 292 T
($3 = {class <symbol>:dylan:dylan: 0x140054f18}) 153 281 T
(\050gdb\051) 153 270 T
0 11 Q
(In the following example, the expr) 153 249.67 T
(ession passed to) 320.04 249.67 T
5 9.5 Q
(p) 401.51 249.67 T
0 11 Q
( is a generic func-) 407.21 249.67 T
(tion call:) 153 235.67 T
5 9 Q
(\050gdb\051 p instance?\0501, <number>\051) 153 215 T
($2 = #t) 153 204 T
0 11 Q
(T) 153 183.67 T
(o evaluate the last expr) 158.73 183.67 T
(ession you would need to be in the) 270.82 183.67 T
5 9.5 Q
(dylan) 442.98 183.67 T
0 11 Q
(library\325s) 153 169.67 T
5 9.5 Q
(dylan) 196.26 169.67 T
0 11 Q
( module. Alternatively) 224.76 169.67 T
(, you could supply that scope) 333.78 169.67 T
(information in the r) 153 155.67 T
(efer) 248.28 155.67 T
(ences to) 266.63 155.67 T
5 9.5 Q
(instance?) 308.21 155.67 T
0 11 Q
( and) 359.51 155.67 T
5 9.5 Q
(<number>) 383.63 155.67 T
0 11 Q
(, as follows:) 429.23 155.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 44
%%Page: "45" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4.4) 456.08 695.67 T
(GDB extensions) 477.45 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(45) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 F
0 X
(\050gdb\051 p instance?:dylan:dylan\0501, <number>:dylan:dylan\051) 135 642 T
($5 = #t) 135 631 T
0 11 Q
(Below) 135 610.67 T
(, a non-Dylan object is printed:) 164.36 610.67 T
5 9 Q
(\050gdb\051 p allocate) 135 590 T
($1 = {void *\050unsigned long\051} 0x30000004f90 <allocate>) 135 579 T
(describe) 108 552 T
7 F
(expr) 156.6 552 T
(ession) 173.44 552 T
1 11 Q
(Command) 440.16 550.67 T
0 F
(Print contents of object r) 135 528.67 T
(eferr) 253.2 528.67 T
(ed to by) 275.89 528.67 T
1 F
(expr) 317.92 528.67 T
(ession) 337.28 528.67 T
0 F
(, starting with its) 364.17 528.67 T
(addr) 135 514.67 T
(esss, then the class name, and then each of its slots, in Dylan style.) 158.09 514.67 T
(A question mark befor) 135 494.67 T
(e a value means that it is not a Dylan object but) 244.57 494.67 T
(some raw value.) 135 480.67 T
(For example:) 135 460.67 T
5 9 Q
(\050gdb\051 describe 0x3fffff1e760) 135 440 T
($6 =    {<function-class>:internal 0x3fffff1c3a0}) 135 429 T
($7 =    debug-name:dylan-extensions: #f) 135 418 T
($8 =    function-properties:internal: 3) 135 407 T
($9 =    function-signature:internal: {<signature>:internal) 135 396 T
(0x3fffff1d430}) 135 385 T
(...) 135 374 T
($15 =   keyword-specifiers:internal: #[]) 135 363 T
(\050gdb\051 describe $12) 135 344 T
($16 =   {class <unbound>:internal 0x3fffff10248}) 135 333 T
(\050gdb\051) 135 322 T
(\050gdb\051 describe tautologies) 135 303 T
($72 =   {class <pair>:dylan:dylan 0x3fffff07bc8}) 135 292 T
($73 =   head:dylan:dylan: #"booleans") 135 281 T
($74 =   tail:dylan:dylan: #\050#"comparisons", #"numbers",) 135 270 T
(#"characters", #"collections", #"sequences", ... 0x3ffffff14f8\051) 135 259 T
(\050gdb\051) 135 248 T
0 11 Q
(Below) 135 227.67 T
(, an attempt is made to describe a non-Dylan object:) 164.36 227.67 T
5 9 Q
(\050gdb\051 up) 135 207 T
(#1  0x30000004fb8 in allocate \050size=16\051 at run-time.c:57) 135 196 T
(\050gdb\051 describe allocate) 135 177 T
(unable to describe non-dylan object allocate) 135 166 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 45
%%Page: "46" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(46) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 13 Q
0 X
(4.4.2  Ne) 126 639.33 T
(w and e) 169.12 639.33 T
(xtended GDB v) 208.08 639.33 T
(ariab) 284.3 639.33 T
(les) 309.69 639.33 T
0 11 Q
(Y) 126 619.67 T
(ou can inspect the curr) 132.32 619.67 T
(ent value of a variable by entering) 242.63 619.67 T
5 9.5 Q
(show) 411.23 619.67 T
0 11 Q
( followed by) 434.03 619.67 T
(its name. Y) 126 605.67 T
(ou can set its value by entering) 178.91 605.67 T
5 9.5 Q
(set) 332.16 605.67 T
0 11 Q
( followed by its name followed) 349.26 605.67 T
(by a new value.) 126 591.67 T
5 9 Q
(language) 126 563 T
1 11 Q
(V) 467.34 561.67 T
(ariable) 474.46 561.67 T
0 F
(The curr) 153 539.67 T
(ent sour) 194.17 539.67 T
(ce language.) 233.63 539.67 T
5 9 Q
(\050gdb\051 show language) 153 519 T
(The current source language is "c".) 153 508 T
(\050gdb\051 describe tautologies) 153 489 T
(No symbol "tautologies" in current context.) 153 478 T
(\050gdb\051 set language dylan) 153 459 T
(\050gdb\051 describe tautologies) 153 440 T
($75 =   {class <pair>:dylan:dylan 0x3fffff07bc8}) 153 429 T
($76 =   head:dylan:dylan: #"booleans") 153 418 T
($77 =   tail:dylan:dylan: #\050#"comparisons", #"numbers",) 153 407 T
(#"characters", #"collections", #"sequences", #"arrays",) 153 396 T
(#"deques", #"lists", #"ranges", #"stretchy vectors", #"strings",) 153 385 T
(#"tables", #"vectors"\051) 153 374 T
(\050gdb\051) 153 363 T
(length) 126 336 T
1 11 Q
(V) 467.34 334.67 T
(ariable) 474.46 334.67 T
0 F
-0.19 (The maximum number of collection elements printed. It must be an inte-) 153 312.67 P
(ger) 153 298.67 T
(. It is 40 by default.) 167.92 298.67 T
(Example:) 153 278.67 T
5 9 Q
(\050gdb\051 show length) 153 258 T
(Dylan Print Length is 40.) 153 247 T
(\050gdb\051 set length 3) 153 228 T
(\050gdb\051 describe <class>) 153 209 T
($62 =   {class <class> 0x3fffff0c7e8}) 153 198 T
($63 =   debug-name:dylan-extensions: #"<class>") 153 187 T
($64 =   direct-superclasses: #[{class <type> 0x3fffff0c150}]) 153 176 T
($65 =   all-superclasses: #\050{class <class> 0x3fffff0c7e8}, {class) 153 165 T
(<type> 0x3fffff0c150}, {class <object> 0x3fffff173d0}\051) 153 154 T
(\050gdb\051 set length 5) 153 135 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 46
%%Page: "47" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4.4) 456.08 695.67 T
(GDB extensions) 477.45 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(47) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 F
0 X
(\050gdb\051 describe <class>) 135 642 T
($66 =   {class <class> 0x3fffff0c7e8}) 135 631 T
($67 =   debug-name:dylan-extensions: #"<class>") 135 620 T
($68 =   direct-superclasses: #[{class <type> 0x3fffff0c150}]) 135 609 T
-0.6 ($69 =   all-superclasses: #\050{class <class> 0x3fffff0c7e8}, {class) 135 598 P
(<type> 0x3fffff0c150}, {class <object> 0x3fffff173d0}\051) 135 587 T
($70 =   direct-subclasses: #\050{class <function-class>:internal) 135 576 T
(0x3fffff1a190}, {class <value-class>:internal 0x3fffff19c80},) 135 565 T
({class <open-class>:internal 0x3fffff19240}, {class <sealed-) 135 554 T
(class>:internal 0x3fffff096d8}\051) 135 543 T
($71 =   direct-slot-descriptors:internal: #[{<instance-slot-) 135 532 T
(descriptor>:internal 0x3fffff16720}, {<instance-slot-descriptor>) 135 521 T
(:internal 0x3fffff14790}, {<instance-slot-descriptor>:internal) 135 510 T
(0x3fffff12af0}, {<instance-slot-descriptor>:internal) 135 499 T
(0x3fffff10ef8}, {<instance-slot-descriptor>:internal) 135 488 T
(0x3fffff0f3c0}, ... 0x3fffff17fa0]) 135 477 T
(\050gdb\051) 135 466 T
(depth) 108 439 T
1 11 Q
(V) 449.34 437.67 T
(ariable) 456.46 437.67 T
0 F
(The maximum depth of collection elements printed. It must be an inte-) 135 415.67 T
(ger) 135 401.67 T
(. It is 10 by default.) 149.92 401.67 T
(See Section 4.5 for an example.) 135 381.67 T
5 9 Q
(module) 108 353 T
1 11 Q
(V) 449.34 351.67 T
(ariable) 456.46 351.67 T
0 F
(The curr) 135 329.67 T
(ent Dylan module.) 176.17 329.67 T
(It must be an unmangled Dylan name. It is) 135 309.67 T
5 9.5 Q
(dylan) 345.38 309.67 T
0 11 Q
( by default. The) 373.88 309.67 T
5 9.5 Q
(set) 452.81 309.67 T
0 11 Q
(command makes no test to ensur) 135 295.67 T
(e that the module is a valid module in) 295.17 295.67 T
(the pr) 135 281.67 T
(ogram.) 163.76 281.67 T
(See Section 4.5 for an example.) 135 261.67 T
5 9 Q
(library) 108 233 T
1 11 Q
(V) 449.34 231.67 T
(ariable) 456.46 231.67 T
0 F
(The curr) 135 209.67 T
(ent Dylan library) 176.17 209.67 T
(.) 258.23 209.67 T
-0.25 (It must be an unmangled Dylan name. It is) 135 189.67 P
5 9.5 Q
-0.52 (dylan) 343.12 189.67 P
0 11 Q
-0.25 ( by default. The set pr) 371.62 189.67 P
-0.25 (o-) 476.33 189.67 P
-0.14 (gram makes no test to ensur) 135 175.67 P
-0.14 (e that the library is a valid library in the pr) 271.21 175.67 P
-0.14 (o-) 476.33 175.67 P
(gram.) 135 161.67 T
(See Section 4.5 for an example.) 135 141.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 47
%%Page: "48" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(48) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
4 16 Q
0 X
(4.5  Example session) 126 637.33 T
0 11 Q
-0.07 (T) 126 616.67 P
-0.07 (o start a session of debugging, you \336rst need to start the extended version of) 131.73 616.67 P
(GDB.) 126 602.67 T
2 F
(1.) 135 582.67 T
0 F
(Start GDB.) 153 582.67 T
(GDB is under) 153 564.67 T
5 9.5 Q
($WEBSTER_SYSTEM_BIN/webster-gdb) 222.11 564.67 T
0 11 Q
(. When GDB starts, it) 398.81 564.67 T
(brings up an intr) 153 550.67 T
(oductory message and then a pr) 234.54 550.67 T
(ompt, which looks like) 390.33 550.67 T
(this:) 153 536.67 T
5 9 Q
(\050gdb\051) 153 516 T
0 11 Q
(Y) 153 495.67 T
(ou can connect a pr) 159.32 495.67 T
(ogram to GDB on the command line by giving its) 253.44 495.67 T
(name.) 153 481.67 T
5 9 Q
(unix> $WEBSTER_SYSTEM_BIN/webster-gdb foo) 153 461 T
2 11 Q
(2.) 135 440.67 T
0 F
(Connect GDB to) 153 440.67 T
5 9.5 Q
($WEBSTER_PERSONAL_BIN/cmu-test-suite) 234.82 440.67 T
0 11 Q
(.) 440.02 440.67 T
5 9 Q
(unix> cd $WEBSTER_PERSONAL_BIN/) 153 420 T
(unix> $WEBSTER_SYSTEM_BIN/webster-gdb cmu-test-suite) 153 409 T
0 11 Q
(The CMU test suite is connected to GDB, and GDB starts up:) 153 388.67 T
5 9 Q
(GDB is free software and you are welcome to distribute copies of) 153 368 T
(it under certain conditions; type "show copying" to see the) 153 357 T
(conditions.) 153 346 T
(There is absolutely no warranty for GDB; type "show warranty" for) 153 335 T
(details.) 153 324 T
(GDB 4.16 \050alpha-dec-osf3.2\051, Copyright 1996 Free Software) 153 313 T
(Foundation, Inc...) 153 302 T
(\050gdb\051) 153 291 T
2 11 Q
(3.) 135 270.67 T
0 F
(Add the location of the) 153 270.67 T
5 9.5 Q
(cmu-test-suite) 267.72 270.67 T
0 11 Q
( sour) 347.52 270.67 T
(ces to GDB\325s sour) 371.72 270.67 T
(ce sear) 457.18 270.67 T
(ch) 489.66 270.67 T
(path:) 153 256.67 T
5 9 Q
(\050gdb\051 dir $WEBSTER_SYSTEM_ROOT/build/cmu-test-suite) 153 236 T
0 11 Q
(Y) 126 217.67 T
(ou ar) 132.32 217.67 T
(e now r) 157.36 217.67 T
(eady to start debugging work. Follow the example below) 193.86 217.67 T
(.) 470.71 217.67 T
2 F
(4.) 135 197.67 T
0 F
(Start r) 153 197.67 T
(unning the CMU test suite pr) 182.8 197.67 T
(ogram in GDB.) 324.94 197.67 T
5 9 Q
(\050gdb\051 run) 153 177 T
(Starting program: /u/andrews/dylan/platforms/alpha-osf3/bin/cmu) 153 166 T
(-test-suite) 153 155 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 48
%%Page: "49" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4.5) 456.08 695.67 T
(Example session) 477.45 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(49) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 F
0 X
(Program received signal SIGSEGV, Segmentation fault.) 135 642 T
(0x30000809504 in GC_find_limit \050\051 at os_dep.c:457) 135 631 T
(Current language:  auto; currently c) 135 620 T
0 11 Q
(The pr) 135 599.67 T
(ogram stops on a SEGV) 166.92 599.67 T
(. This is caused as the garbage collector) 280.45 599.67 T
(initially steps thr) 135 585.67 T
(ough the pr) 217.04 585.67 T
(ogram to determine the extent of the data) 273.71 585.67 T
(segment \050the call to) 135 571.67 T
5 9.5 Q
(GC_find_limit\050\051) 232.32 571.67 T
0 11 Q
(\051.) 317.82 571.67 T
(At this point, you can look at some Dylan symbols in the pr) 108 551.67 T
(ogram. For exam-) 396.96 551.67 T
-0.41 (ple, you can set br) 108 537.67 P
-0.41 (eakpoints and r) 194.48 537.67 P
-0.41 (ead statically built data. However) 269.29 537.67 P
-0.41 (, r) 430.95 537.67 P
-0.41 (ecall that) 440.19 537.67 P
(the Dylan libraries in an application must be initialized when the application) 108 523.67 T
(starts up. Until the libraries ar) 108 509.67 T
(e initialized, you cannot inspect any objects in) 253.75 509.67 T
(them that ar) 108 495.67 T
(e built dynamically) 167.19 495.67 T
(, or evaluate Dylan expr) 260 495.67 T
(essions involving) 376.71 495.67 T
(them. Also, you cannot call generic functions until the) 108 481.67 T
5 9.5 Q
(dylan) 373.18 481.67 T
0 11 Q
( library is initial-) 401.68 481.67 T
-0.04 (ized. Y) 108 467.67 P
-0.04 (ou must continue executing the application to initialize the application) 140.48 467.67 P
(libraries.) 108 453.67 T
2 F
(5.) 117 433.67 T
0 F
(Enter \324) 135 433.67 T
5 9.5 Q
(c) 167.13 433.67 T
0 11 Q
(\325 to continue execution, then, when output starts, hit Ctrl-c.) 172.83 433.67 T
5 9 Q
(\050gdb\051 c) 135 413 T
(Continuing.) 135 402 T
(Continuing.) 135 391 T
(Tautologies on booleans) 135 380 T
(Tautologies on comparisons) 135 369 T
(Tautologies on numbers) 135 358 T
(Tautologies on characters) 135 347 T
(Tautologies on symbols) 135 336 T
(Tautologies on collections) 135 325 T
(Program received signal SIGINT, Interrupt.) 135 306 T
(0x30002914b68 in tag-bits:internal:dylanI \050) 135 295 T
(    object={class <singleton>:dylan:dylan 0x30042917de0}\051 at) 135 284 T
(boot_dude.c:1675) 135 273 T
(boot_dude.c:1675: No such file or directory.) 135 262 T
(Current language:  auto; currently dylan) 135 251 T
(\050gdb\051) 135 240 T
0 11 Q
(Y) 108 219.67 T
(ou have now br) 114.32 219.67 T
(oken into the r) 190.41 219.67 T
(unning pr) 261.16 219.67 T
(ogram.) 309.83 219.67 T
(If you ar) 108 199.67 T
(e familiar with the CMU test suite, you will know that ther) 149.27 199.67 T
(e is a con-) 434.41 199.67 T
(stant) 108 185.67 T
5 9.5 Q
(tautologies) 134.49 185.67 T
0 11 Q
( and a generic function) 197.19 185.67 T
5 9.5 Q
(tautology) 311.32 185.67 T
0 11 Q
(, for which several meth-) 361.4 185.67 T
(ods exist. T) 108 171.67 T
(o examine these Dylan objects, you need to be in the) 161.77 171.67 T
5 9.5 Q
(dylan-test) 418.01 171.67 T
0 11 Q
(module of the library) 108 157.67 T
5 9.5 Q
(cmu-test-suite) 214.26 157.67 T
0 11 Q
(.) 294.06 157.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "49" 49
%%Page: "50" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(50) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
5 F
0 X
(\050gdb\051 show module) 153 642 T
(Current Dylan Module is "dylan".) 153 631 T
(\050gdb\051 show library) 153 612 T
(Current Dylan Library is "dylan".) 153 601 T
0 11 Q
(Y) 126 580.67 T
(ou can now look at the generic function) 132.32 580.67 T
5 9.5 Q
(tautology) 327.27 580.67 T
0 11 Q
(:) 378.57 580.67 T
5 9 Q
(\050gdb\051 describe tautology) 153 560 T
($12 =   {<function-class>:internal:dylan 0x3fffff0a088}) 153 549 T
($13 =   debug-name:dylan-extensions:dylan: #"tautology") 153 538 T
($14 =   function-properties:internal:dylan: 1) 153 527 T
($15 =   function-signature:internal:dylan: {<signature>) 153 516 T
(:internal:dylan 0x3ffffff0450}) 153 505 T
($16 =   xep:internal:dylan: ?0x3000000dd78) 153 494 T
($17 =   iep:internal:dylan: ?0x3ffbfe3d780) 153 483 T
($18 =   cep:internal:dylan: {<unbound>:internal:dylan) 153 472 T
(0x3fffff03138}) 153 461 T
($19 =   cache:internal:dylan: {<unbound>:internal:dylan) 153 450 T
(0x3fffff03138}) 153 439 T
($20 =   generic-function-methods:dylan:dylan: #\050{method) 153 428 T
(tautology:cmu-test-suite#cmu-test-suite#0 0x3ffffff5e38}, {method) 153 417 T
(tautology:cmu-test-suite#cmu-test-suite#1 0x3ffffff64e8}, {method) 153 406 T
(tautology:cmu-test-suite#cmu-test-suite#2 0x3ffffff1258}, {method) 153 395 T
(tautology:cmu-test-suite#cmu-test-suite#3 0x3ffffff3a88}, {method) 153 384 T
(tautology:cmu-test-suite#cmu-test-suite#4 0x3ffffff4fb8}, {method) 153 373 T
(tautology:cmu-test-suite#cmu-test-suite#5 0x3ffffff5558}, {method) 153 362 T
(tautology:cmu-test-suite#cmu-test-suite#6 0x3ffffff3e58}, {method) 153 351 T
(tautology:cmu-test-suite#cmu-test-suite#7 0x3ffffff3450}, {method) 153 340 T
(tautology:cmu-test-suite#cmu-test-suite#8 0x3ffffff1b40}, {method) 153 329 T
(tautology:cmu-test-suite#cmu-test-suite#9 0x3ffffff4570}, {method) 153 318 T
(tautology:cmu-test-suite#cmu-test-suite#10 0x3ffffff1cc0},) 153 307 T
({method tautology:cmu-test-suite#cmu-test-suite#11) 153 296 T
(0x3ffffff7188}\051) 153 285 T
($21 =   dispatch-table:internal:dylan: {<dispatch-table>) 153 274 T
(:internal:dylan 0x140088000}) 153 263 T
($22 =   generic-function-sealed?:internal:dylan: #t) 153 252 T
(\050gdb\051) 153 241 T
0 11 Q
(Y) 126 220.67 T
(ou can limit the number of collection elements printed, such as those in) 132.32 220.67 T
5 9.5 Q
($20) 480.95 220.67 T
0 11 Q
(above, by r) 126 206.67 T
(esetting) 179.67 206.67 T
5 9.5 Q
(length) 220.51 206.67 T
0 11 Q
( fr) 254.71 206.67 T
(om its default value of 40. Below) 265.27 206.67 T
(, the constant) 423.11 206.67 T
5 9.5 Q
(tautologies) 126 192.67 T
0 11 Q
( is examined, then) 188.7 192.67 T
5 9.5 Q
(length) 279.73 192.67 T
0 11 Q
( is r) 313.92 192.67 T
(eset to 5, and tautologies is exam-) 331.44 192.67 T
(ined again with the new r) 126 178.67 T
(estriction:) 250.67 178.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "50" 50
%%Page: "51" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
108 675 540 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4.5) 456.08 695.67 T
(Example session) 477.45 695.67 T
108 82.17 540 117 R
7 X
V
1 9 Q
0 X
(Edition 1.  July 10, 1996.) 108 100 T
2 F
(51) 531 100 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
108 126 486 648 R
7 X
V
5 F
0 X
(\050gdb\051 describe tautologies) 135 642 T
($23 =   {class <pair>:dylan:dylan 0x3fffff07bc8}) 135 631 T
($24 =   head:dylan:dylan: #"booleans") 135 620 T
($25 =   tail:dylan:dylan: #\050#"comparisons", #"numbers",) 135 609 T
-1.08 (#"characters", #"collections", #"sequences", #"lists", #"ranges",) 135 598 P
(#"stretchy vectors", #"strings", #"vectors"\051) 135 587 T
(\050gdb\051 set length 5) 135 568 T
(\050gdb\051 describe tautologies) 135 549 T
($26 =   {class <pair>:dylan:dylan 0x3fffff07bc8}) 135 538 T
($27 =   head:dylan:dylan: #"booleans") 135 527 T
($28 =   tail:dylan:dylan: #\050#"comparisons", #"numbers",) 135 516 T
(#"characters", #"collections", #"sequences", ... 0x3ffffff14f8\051) 135 505 T
(\050gdb\051) 135 494 T
0 11 Q
-0.17 (By r) 108 473.67 P
-0.17 (esetting) 127.56 473.67 P
5 9.5 Q
-0.36 (depth) 168.23 473.67 P
0 11 Q
-0.17 (, you can contr) 196.73 473.67 P
-0.17 (ol the depth to which collection elements ar) 267.77 473.67 P
-0.17 (e) 478.16 473.67 P
-0.09 (printed. Below) 108 459.67 P
-0.09 (,) 178.9 459.67 P
5 9.5 Q
-0.19 (depth) 184.31 459.67 P
0 11 Q
-0.09 ( is set to zer) 212.81 459.67 P
-0.09 (o, with the r) 269.35 459.67 P
-0.09 (esult that no collection elements) 327.85 459.67 P
(ar) 108 445.67 T
(e printed:) 117.65 445.67 T
5 9 Q
(\050gdb\051 set depth 0) 135 425 T
(\050gdb\051 describe tautologies) 135 406 T
(\050gdb\051 set depth 0) 135 387 T
($29 =   {class <pair>:dylan:dylan 0x3fffff07bc8}) 135 376 T
($30 =   head:dylan:dylan: #"booleans") 135 365 T
($31 =   tail:dylan:dylan: #\050... 0x3ffffff14f8\051) 135 354 T
(\050gdb\051) 135 343 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "51" 51
%%Page: "52" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
[ 0.51 0 0.18 0 0.49 1 0.82]
[ 0.6 0 0 0.3 0.1 0.7 0.7]
 9 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 675 504 702 R
7 X
0 0 0 1 0 0 0 K
V
1 9.5 Q
0 X
(4) 72 695.67 T
(Debugging Dylan Applications with GNU GDB) 86.25 695.67 T
72 81 504 118 R
7 X
V
2 9 Q
0 X
(52) 72 101 T
1 F
(Edition 1.  July 10, 1996.) 412.5 101 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
126 126 504 648 R
7 X
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "52" 52
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 52
%%DocumentFonts: Palatino-Roman
%%+ Palatino-Italic
%%+ Palatino-Bold
%%+ NewCenturySchlbk-Italic
%%+ Helvetica-Narrow-Bold
%%+ Courier-Bold
%%+ Helvetica-Bold
%%+ Palatino-BoldItalic
%%+ Symbol
%%EOF
