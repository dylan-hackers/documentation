<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_18.HTM">
<LINK REL=PREV HREF="DB_23.HTM">
<LINK REL=NEXT HREF="DB_25.HTM">
<TITLE>2.3   Variables and constants</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING24></A>

<DIV>
<P><A HREF="DB_25.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_23.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING24-0></A>
<H1>2.3   <A NAME=MARKER-9-72></A>Variables and constants</H1>
<P> We can define variables for storing values:</P>
<PRE>
<I>? <A NAME=MARKER-2-73></A></I>define variable *my-number* = 7;
<I>? </I>define variable *your-number* = 12;
</PRE>
<P> In Dylan, these variables are called <A NAME=MARKER-2-74></A><B>module variables</B>. A module variable has a name and a value. For now, you can consider module variables to be like global variables in other languages. (See <A HREF="DB_192.HTM#MARKER-9-618">Section 13.2, page 189</A>, for information about modules.) Module variables can have different values assigned to them during the execution of a program. When you define a module variable, you must <B>initialize</B> it; that is, you must provide an initial value for it. For example, the initial value of <CODE>*my-number*</CODE> is <CODE>7</CODE>.</P>
<P> </P>
<TABLE BORDER=1><TR VALIGN=TOP><TD><P> <B><A NAME=MARKER-2-35></A>Convention:</B> Module variables have names that start and end with an asterisk -- for example, <CODE>*my-number*</CODE>. The asterisks are part of the name, and do not have any special behavior.</P>
</TD></TR></TABLE><P> </P>
<P> We can ask the listener for the values of module variables:</P>
<PRE>
<I>? </I>*my-number*;
<I>7</I>
<I>? </I>*your-number*;
<I>12</I>
</PRE>
<P> We can add the values stored in these variables:</P>
<PRE>
<I>? </I>*my-number* + *your-number*;
<I>19</I>
</PRE>
<P> We can multiply the values stored in these variables:</P>
<PRE>
<I>? </I>*my-number* * *your-number*;
<I>84</I>
</PRE>
<P> We can use the <B>assignment operator</B>, <CODE>:=</CODE>, to change the values stored in a variable:</P>
<PRE>
<I>? </I>*my-number* := 100;
<I>100</I>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_25.HTM#HEADING25-0"><B>2.3.1  </B> - Assignment, initialization, and equality</A>
<DD>
<DT><A REL=BELOW HREF="DB_26.HTM#HEADING26-0"><B>2.3.2  </B> - Variables that have type constraints</A>
<DD>
<DT><A REL=BELOW HREF="DB_27.HTM#HEADING27-0"><B>2.3.3  </B> - Module constants</A>
<DD>
<DT><A REL=BELOW HREF="DB_28.HTM#HEADING28-0"><B>2.3.4  </B> - Local variables</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_25.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_23.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
