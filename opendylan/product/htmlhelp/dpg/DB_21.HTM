<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_20.HTM">
<LINK REL=PREV HREF="DB_20.HTM">
<LINK REL=NEXT HREF="DB_22.HTM">
<TITLE>2.2.1   True and false</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING21></A>

<DIV>
<P><A HREF="DB_22.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_20.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING21-0></A>
<H1>2.2.1   True and false</H1>
<P> We can compare the magnitude of two numbers:</P>
<PRE>
<I>?</I> 1 = 1;
<I>#t</I>
<I>?</I> 3 <A NAME=MARKER-2-61></A>&lt; 30;
<I>#t</I>
<I>?</I> 15 &gt; 16;
<I>#f</I>
</PRE>
<P> The functions <CODE>=</CODE>, <CODE>&lt;,</CODE> and <CODE>&gt;</CODE> are <B><A NAME=MARKER-2-62></A>predicates</B>. A predicate returns true if the condition it is testing is true; otherwise, it returns false. As you might guess, <A NAME=MARKER-2-63></A><CODE>#t</CODE> means true and <A NAME=MARKER-2-64></A><CODE>#f</CODE> means false. False is represented by the unique value <CODE>#f</CODE> only, but any object that is not <CODE>#f</CODE> is true (thus, 0 is a true value). </P>
<P> </P>
<TABLE BORDER=1><TR VALIGN=TOP><TD><P> <B>Comparison with <A NAME=MARKER-2-47></A>C and C++: Caution!</B> C and C++ use integers to represent Boolean values -- 0 represents false, and any nonzero value is considered true. Dylan has an explicit <CODE>&lt;boolean&gt;</CODE> type with two instances: <CODE>#f</CODE> represents false, and <CODE>#t</CODE> represents the <I>canonical</I> true value. However, any value other than <CODE>#f</CODE> is also considered true in a Boolean test. Thus, in Dylan, 0 is considered true.</P>
</TD></TR></TABLE><TABLE BORDER=1><TR VALIGN=TOP><TD><P> <B>Comparison with <A NAME=MARKER-2-49></A>Java</B>: Java has a separate type for Boolean values. Unlike Dylan, C, or C++, the Java <CODE>Boolean</CODE> class has only two values, <CODE>true</CODE> and <CODE>false</CODE>. This design allows the compiler to issue warnings for the common C error <CODE>if (a=b) ...</CODE>, because an assignment does not typically yield a Boolean result. An explicit conversion is required to test nonzero in Java: <CODE>if (a!=0) ...</CODE>.</P>
</TD></TR></TABLE><P> </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_22.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_20.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
