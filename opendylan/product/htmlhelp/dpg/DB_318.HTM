<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_317.HTM">
<LINK REL=PREV HREF="DB_317.HTM">
<LINK REL=NEXT HREF="DB_319.HTM">
<TITLE>20.1.1   The + method using informal exceptions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING318></A>

<DIV>
<P><A HREF="DB_319.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_317.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING318-0></A>
<H1>20.1.1   <A NAME=MARKER-9-822></A>The <CODE>+</CODE> method using informal exceptions</H1>
<P> </P>
<P> First, we redefine the method for adding <CODE>&lt;time-offset&gt;</CODE> and <CODE>&lt;time-of-day&gt;</CODE> (this method was last defined in <A HREF="DB_234.HTM#MARKER-9-668">Section 14.3.2</A>, <A HREF="DB_234.HTM#MARKER-9-663">page 228</A>). The method now returns an error string in the event that the computed sum is beyond the permitted 24-hour range: </P>
<P> </P>
<PRE>
define method \+ (offset :: &lt;time-offset&gt;, time-of-day :: &lt;time-of-day&gt;)
 =&gt; (sum :: type-union(&lt;time-of-day&gt;, &lt;string&gt;))
  let sum 
    = make(&lt;time-of-day&gt;, 
           total-seconds: offset.total-seconds + time-of-day.total-seconds);
  if (sum &gt;= $midnight &amp; sum &lt; $tomorrow) 
    sum;
  else
   &quot;time boundary violated&quot;;
  end if;
end method \+;
</PRE>
<P> </P>
<P> We have altered the <CODE>+</CODE> method in two important ways. First, we have modified the original values declaration, <CODE>(sum :: &lt;time-of-day&gt;)</CODE>, to allow the return of either a <CODE>&lt;time-of-day&gt;</CODE> instance or a string describing a problem. Second, we have added code that checks the computed time of day, and returns an error string if the sum is out of bounds.</P>
<P>To illustrate further how the informal exceptions work, we define a method that calls the <CODE>+</CODE> method defined in this section. We define a method, <CODE>correct-arrival-time</CODE>, that adds predicted weather and traffic delays to an arrival time; and we define <CODE>say-corrected-time</CODE>, which calls <CODE>correct-arrival-time</CODE> and displays the results:</P>
<P> </P>
<PRE>
define method correct-arrival-time 
    (arrival-time :: &lt;time-of-day&gt;, weather-delay :: &lt;time-offset&gt;,
     traffic-delay :: &lt;time-offset&gt;)
 =&gt; (sum :: type-union(&lt;time-of-day&gt;, &lt;string&gt;))
  let sum1 = weather-delay + arrival-time;
<I>  // Check whether the result of + was a string representing an error
</I>  if (instance?(sum1, &lt;string&gt;))
    sum1;
  else
<I>    // Otherwise, if there is no error, compute the second part of the sum
</I>    traffic-delay + sum1;
  end if;
end method correct-arrival-time;
define constant $no-time = make(&lt;time-offset&gt;, total-seconds: 0);
define method say-corrected-time
    (arrival-time :: &lt;time-of-day&gt;, 
     #key weather-delay :: &lt;time-offset&gt; = $no-time,
     traffic-delay :: &lt;time-offset&gt; = $no-time)
 =&gt; ()
  let result = correct-arrival-time(arrival-time, weather-delay, 
                                    traffic-delay);
<I>  // Check whether the result of + was a string representing an error
</I>  if (instance?(result, &lt;string&gt;))
    format-out(&quot;Error during time correction: %s&quot;, result);
  else
<I>    // Otherwise, if there is no error, display the result
</I>    say(result);
  end if;
end method say-corrected-time;
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_319.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_317.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
