<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_236.HTM">
<LINK REL=PREV HREF="DB_238.HTM">
<LINK REL=NEXT HREF="DB_240.HTM">
<TITLE>14.4.3   The position implementation file</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING239></A>

<DIV>
<P><A HREF="DB_240.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_238.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING239-0></A>
<H1>14.4.3   The <EM>position</EM> implementation file</H1>
<P> The <CODE>position</CODE> implementation file is simply a collection of the source records that we developed earlier for creating and saying absolute and relative positions.</P>
<P> </P>
<TABLE BORDER=1><TR VALIGN=TOP><TH><P> The <CODE>position</CODE> implementation file: <CODE>position.dylan</CODE>.  </P>
</TH></TR><TR VALIGN=TOP><TD><PRE>
Module: position-implementation
define abstract class &lt;position&gt; (&lt;object&gt;)
end class &lt;position&gt;; 
</TD></TR><TR VALIGN=TOP><TD>define class &lt;absolute-position&gt; (&lt;position&gt;)
  slot latitude :: &lt;latitude&gt;, required-init-keyword: latitude:;
  slot longitude :: &lt;longitude&gt;, required-init-keyword: longitude:;
end class &lt;absolute-position&gt;; 
</TD></TR><TR VALIGN=TOP><TD>define method say (position :: &lt;absolute-position&gt;) =&gt; ()
  say(position.latitude);
  say(position.longitude);
end method say; 
</TD></TR><TR VALIGN=TOP><TD>define class &lt;relative-position&gt; (&lt;position&gt;)
<I>  // Distance is in miles
</I>  slot distance :: &lt;single-float&gt;, required-init-keyword: distance:;
<I>  // Angle is in degrees
</I>  slot angle :: &lt;angle&gt;, required-init-keyword: angle:;
end class &lt;relative-position&gt;; 
</TD></TR><TR VALIGN=TOP><TD>define method say (position :: &lt;relative-position&gt;) =&gt; ()
  format-out(&quot;%s miles away at heading &quot;, position.distance);
  say(position.angle);
end method say; 
</TD></TR></TABLE></PRE>
<P> </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_240.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_238.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
