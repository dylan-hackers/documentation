<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_24.HTM">
<LINK REL=PREV HREF="DB_24.HTM">
<LINK REL=NEXT HREF="DB_26.HTM">
<TITLE>2.3.1   Assignment, initialization, and equality</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING25></A>

<DIV>
<P><A HREF="DB_26.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_24.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING25-0></A>
<H1>2.3.1   Assignment, initialization, and equality</H1>
<P> People new to Dylan may find <CODE>=</CODE> and <A NAME=MARKER-2-75></A><CODE>:= </CODE>confusing, because the names are similar, and the meanings are related but distinct.</P>
<P>The meaning of <CODE>=</CODE> depends on whether it appears an expression, or in a definition of a variable or constant. In an expression, <CODE>=</CODE> is a function that tests for equality; for example,</P>
<PRE>
<I>? </I>3 = 3;
<I>#t</I>
</PRE>
<P> In a definition of a variable or constant, <CODE>=</CODE> precedes the initial value of the variable or constant; for example, </P>
<PRE>
<I>? </I>define variable *her-number* = 3;
</PRE>
<P> After you initialize a variable with <CODE>=</CODE>, the <CODE>=</CODE> function returns true:</P>
<PRE>
<I>? </I>*her-number* = 3;
<I>#t</I>
</PRE>
<P> The assignment operator, <CODE>:=</CODE>, performs assignment, which is setting the value of an existing variable; for example,</P>
<PRE>
<I>? </I>*her-number* := 4;
<I>4</I>
</PRE>
<P> After you have assigned a value to a variable, the = function returns true:</P>
<PRE>
<I>? </I>*her-number* = 4;
<I>#t</I>
</PRE>
<P> Dylan offers an identity predicate, which we discuss in <A HREF="DB_42.HTM#MARKER-9-129">Section 3.3.1, page 35</A>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_26.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_24.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
