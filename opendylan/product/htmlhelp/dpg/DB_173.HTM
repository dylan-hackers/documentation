<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_167.HTM">
<LINK REL=PREV HREF="DB_172.HTM">
<LINK REL=NEXT HREF="DB_174.HTM">
<TITLE>12.1.6   Assignment</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING173></A>

<DIV>
<P><A HREF="DB_174.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_172.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING173-0></A>
<H1>12.1.6   <A NAME=MARKER-9-492></A>Assignment</H1>
<P> The assignment<A NAME=MARKER-2-493></A> binary operator, <CODE>:=<A NAME=MARKER-2-494></A></CODE>, also is implemented as a macro. An expression that includes this operator works in a special way.</P>
<P>The operand to the <I>right</I> of the operator is evaluated first. The result is the new value to be assigned.</P>
<P>The operand to the <I>left</I> of the operator determines the place to which the new value is assigned. This operand can have one of the following kinds of <BR>syntax:</P>
<P> Variable name The variable name is not evaluated. Dylan assigns the new value to the variable.</P>
<P> Explicit function call Dylan calls the function <I>name<CODE>-setter<A NAME=MARKER-2-495></A></CODE></I>, where <I>name</I> is the name of the function in the function call. The first argument to <I>name<CODE>-setter</CODE></I> is the new value, and the remaining arguments are the arguments to <I>name</I> in the original function call.</P>
<P> Slot reference Dylan first converts the slot reference to the corresponding function call. Dylan then calls the function <I>name<CODE>-setter<A NAME=MARKER-2-496></A></CODE></I> just as it would have if the slot reference had been an explicit function call.</P>
<P> Element reference Dylan first converts the element reference to the corresponding function call, using <CODE>element</CODE> or <CODE>aref</CODE> as the name of the function, as appropriate. Dylan then calls the function<A NAME=MARKER-2-497></A> <CODE>element-setter</CODE><A NAME=MARKER-2-498></A> or <CODE>aref-sette<A NAME=MARKER-2-499></A>r</CODE> just as it would have if the element reference had been an explicit function call.</P>
<P> Except for the order of evaluation and returned values, the following examples are equivalent:</P>
<PRE>
*my-position*.distance := 3.0;
distance(*my-position*) := 3.0;
distance-setter(3.0, *my-position*);
</PRE>
<P> The first two examples return <CODE>3.0</CODE>; the second returns whatever <CODE>distance-<BR>setter</CODE> returns. Usually, this value would be <CODE>3.0</CODE>. Note that, if <CODE>distance</CODE> is the name of a slot's getter, and if the slot is constant or has a setter with a name other than <CODE>distance-setter</CODE>, then the assignment operation results in an error.</P>
<P>Except for the order of evaluation and returned values, the following examples are equivalent:</P>
<PRE>
vertices[2] := list(3.5, 4.5);
element(vertices, 2) := list(3.5, 4.5);
element-setter(list(3.5, 4.5), vertices, 2);
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_174.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_172.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
