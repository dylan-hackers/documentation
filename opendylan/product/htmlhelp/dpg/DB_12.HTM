<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=PREV HREF="DB_11.HTM">
<LINK REL=NEXT HREF="DB_13.HTM">
<TITLE>1 Introduction</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING12></A>

<DIV>
<P><A HREF="DB_13.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_11.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Dylan Programming</P>

</DIV>
<A NAME=HEADING12-0></A>
<H1>1 <A NAME=MARKER-9-30></A>Int<A NAME=MARKER-2-31></A>roduction</H1>
<P> How many days did you spend in the past year tracking down elusive memory leaks and references to unallocated or freed memory?</P>
<P>How much time did you spend documenting which of the arguments to your functions are <B>input</B> and which are <B>output</B> arguments -- and making sure all the callers of those functions agree?</P>
<P>Do you have trouble following your own programs' control flow because so much of it is devoted to checking and returning error codes?</P>
<P>How many conditional statements in your programs are there because you need to perform the same general operation in a different way for different kinds of data? How much time do you spend updating them to handle new types of data?</P>
<P>How often have you wished that you could leave the types of certain data unspecified while you develop an application -- but later add the type information to improve error checking and performance?</P>
<P>How much time do you spend recompiling and relinking your application just to test a minor modification to the code?</P>
<P></P>
<P> Software development has progressed, but software productivity has failed to keep up with advances in hardware. Despite a proliferation of development tools and environments, programmers expend too much effort on tasks that the programming language and environment should make unnecessary.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_13.HTM#HEADING13-0"><B>1.1  </B> - Comparison of Dylan and other programming languages</A>
<DD>
<DT><A REL=BELOW HREF="DB_14.HTM#HEADING14-0"><B>1.2  </B> - Modular, reusable, component-oriented programs</A>
<DD>
<DT><A REL=BELOW HREF="DB_15.HTM#HEADING15-0"><B>1.3  </B> - Powerful and familiar procedural programming</A>
<DD>
<DT><A REL=BELOW HREF="DB_16.HTM#HEADING16-0"><B>1.4  </B> - Rapid and productive development of programs</A>
<DD>
<DT><A REL=BELOW HREF="DB_17.HTM#HEADING17-0"><B>1.5  </B> - Delivery of safe, efficient, compact applications</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_13.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_11.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
