<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=PREV HREF="DB_250.HTM">
<LINK REL=NEXT HREF="DB_252.HTM">
<TITLE>16 Definition of a New Collection</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING251></A>

<DIV>
<P><A HREF="DB_252.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_250.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Dylan Programming</P>

</DIV>
<A NAME=HEADING251-0></A>
<H1>16 <A NAME=MARKER-9-687></A>Defi<A NAME=MARKER-2-688></A>nition of a New <A NAME=MARKER-2-689></A>Collection</H1>
<P> In this chapter, we implement a data structure called a <B>sorted sequence</B>. A sorted sequence is a sequence that automatically keeps the elements of the sequence in a particular order, based on some value computed from each element. Elements are added and removed from sorted sequences; however, the sorted sequence determines the key associated with the element. Thus, it does not make sense to store an element in a sorted sequence at a specific key, because the sorted sequence will determine the correct key to satisfy the automatic-ordering constraint. </P>
<P>We use Dylan's <A NAME=MARKER-2-690></A><B>forward-iteration protocol </B>to implement the connection between our new collection class and Dylan's standard collection generic functions. Dylan's forward-iteration protocol is a well-defined interface that collection implementors and collection-iterator implementors can use to enable iterators to operate over new collections, and to enable collections to work with new iterators. Once the forward iteration protocol is defined on <A NAME=MARKER-2-691></A><CODE>&lt;sorted-sequence&gt;</CODE>, many of the standard Dylan collection generic functions that we covered in <A HREF="DB_139.HTM#MARKER-9-374">Chapter 11,  <I>Collections and Control Flow</I></A>, will work with instances of the new sequence. </P>
<P>The airport application uses a sorted sequence to keep track of aircraft transition in time order. See <A HREF="DB_260.HTM#MARKER-9-706">Chapter 17,  <I>The Airport Application</I></A>, for more details.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_252.HTM#HEADING252-0"><B>16.1  </B> - The sorted-sequence.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_257.HTM#HEADING257-0"><B>16.2  </B> - The sorted-sequence-library.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_258.HTM#HEADING258-0"><B>16.3  </B> - The sorted-sequence.lid file</A>
<DD>
<DT><A REL=BELOW HREF="DB_259.HTM#HEADING259-0"><B>16.4  </B> - Summary</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_252.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_250.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
