<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_166.HTM">
<LINK REL=PREV HREF="DB_166.HTM">
<LINK REL=NEXT HREF="DB_168.HTM">
<TITLE>12.1   Function-calling syntax</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING167></A>

<DIV>
<P><A HREF="DB_168.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_166.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING167-0></A>
<H1>12.1   Function-calling syntax</H1>
<P> This section describes the syntax<A NAME=MARKER-2-448></A> of Dylan function calls. An explicit function call consists of the operand followed by the arguments enclosed in parentheses and separated by commas. Several other syntactic structures in Dylan are also abbreviations for function calls, including the following:</P>
<UL>
<LI><P>Slot references</P>
<LI><P>References to elements of collections</P>
<LI><P>Most unary and binary operator calls</P>
<LI><P>Certain assignment operations</P>
</UL>
<P> The remainder of this section describes these syntactic forms and the equivalent function calls. Unless otherwise noted, all expressions that make up any of these function calls are evaluated<A NAME=MARKER-2-449></A> from left to right. (A notable exception is an expression containing the assignment operator, discussed in <A HREF="DB_173.HTM#MARKER-9-492">Section 12.1.6</A>.) The common left-to-right rule makes it easy to understand the order of execution of Dylan code. But it also means that certain syntactic forms that we call <I>equivalent</I> -- that is, syntactic forms that generally result in calls to the same function with the same arguments -- differ in the order of evaluation of their components. The components can appear in different orders in otherwise equivalent syntactic forms. Usually, the order of evaluation makes no difference, and you can use whichever of the equivalent syntactic forms you find most convenient.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_168.HTM#HEADING168-0"><B>12.1.1  </B> - Explicit function calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_169.HTM#HEADING169-0"><B>12.1.2  </B> - Slot references</A>
<DD>
<DT><A REL=BELOW HREF="DB_170.HTM#HEADING170-0"><B>12.1.3  </B> - Element references</A>
<DD>
<DT><A REL=BELOW HREF="DB_171.HTM#HEADING171-0"><B>12.1.4  </B> - Unary operator calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_172.HTM#HEADING172-0"><B>12.1.5  </B> - Binary-operator calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_173.HTM#HEADING173-0"><B>12.1.6  </B> - Assignment</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_168.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_166.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
