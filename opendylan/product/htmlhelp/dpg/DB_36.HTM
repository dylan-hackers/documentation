<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_35.HTM">
<LINK REL=PREV HREF="DB_35.HTM">
<LINK REL=NEXT HREF="DB_37.HTM">
<TITLE>3.1.1   A method that takes an argument</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING36></A>

<DIV>
<P><A HREF="DB_37.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_35.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING36-0></A>
<H1>3.1.1   <A NAME=MARKER-9-116></A>A method that takes an argument</H1>
<P> We can define a method similar to <CODE>say-hello</CODE>, called <CODE>say-greeting</CODE>, that takes an argument:</P>
<PRE>
define method say-greeting (greeting :: &lt;object&gt;);
  format-out(&quot;%s\n&quot;, greeting);
end;
</PRE>
<P> The <CODE>say-greeting</CODE> method has one required parameter, named <CODE>greeting</CODE>. The type constraint of the required parameter indicates the type that the argument must be. The <CODE>greeting</CODE> parameter has the type constraint <CODE>&lt;object&gt;</CODE>, which is the most general class. All objects are of the type <CODE>&lt;object&gt;</CODE>, so using this class as the type constraint allows the argument to be any object. You can omit the type constraint of a required parameter; that omission has the same effect as specifying <CODE>&lt;object&gt;</CODE> as the type constraint. </P>
<P>We can call <CODE>say-greeting</CODE> on a string:</P>
<PRE>
<I>? </I>say-greeting(&quot;hi, there&quot;);
<I>hi, there</I>
</PRE>
<P> We can call <CODE>say-greeting</CODE> on an integer, although the integer does not give a particularly friendly greeting:</P>
<PRE>
<I>?</I> define variable *my-number* :: &lt;integer&gt; = 7;
<I>? </I>say-greeting(*my-number*);
<I>7</I>
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_37.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_35.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
