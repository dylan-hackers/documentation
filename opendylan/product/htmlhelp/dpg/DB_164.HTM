<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_158.HTM">
<LINK REL=PREV HREF="DB_163.HTM">
<LINK REL=NEXT HREF="DB_165.HTM">
<TITLE>11.5.6   Search of arrays with find-key</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING164></A>

<DIV>
<P><A HREF="DB_165.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_163.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING164-0></A>
<H1>11.5.6   <A NAME=MARKER-9-434></A>Search of arrays with <A NAME=MARKER-2-435></A><EM>find-key</EM></H1>
<P> In Dylan, we can access multidimensional arrays as though they are linearized one-dimensional vectors by using the <A NAME=MARKER-2-436></A><CODE>element</CODE> generic function. Dylan provides a <CODE>find-key</CODE> generic function that uses <CODE>element</CODE> to find the index (or key) that corresponds to a desired value in a collection. Here, we rewrite <CODE>find-larger-than</CODE> to use <CODE>find-key</CODE>:</P>
<PRE>
define method find-larger-than 
    (array :: &lt;array&gt;, value :: &lt;integer&gt;)
 =&gt; (result :: type-union(singleton(#f), &lt;integer&gt;))
  let index 
    = find-key(array, method (array-element) array-element &gt; value end);
  index &amp; array[index];
end method find-larger-than;
</PRE>
<P> The <CODE>find-key</CODE> generic function searches an array, calling the function that we provided on each element. If our function ever returns true, <CODE>find-key</CODE> returns the linearized index of the array element containing the value. For a two-dimensional array, the linearized index is the index that would be the appropriate key of a one-dimensional array that we could construct by placing the rows of the two-dimensional array one after the other. Rows in a two-dimensional array are numbered with the first subscript, and the column within those rows is numbered by the second subscript.</P>
<P>If our function never returns true for any element, <CODE>find-key</CODE> returns false. In this example <CODE>&amp;</CODE> is truly used as a control structure. If <CODE>index</CODE> is false, then <CODE>&amp;</CODE> will return false without executing the array access. If <CODE>index</CODE> is true, then the array access occurs, and that is the value of the <CODE>&amp;</CODE> expression, and thus the value returned from the method.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_165.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_163.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
