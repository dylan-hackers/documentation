<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_158.HTM">
<LINK REL=PREV HREF="DB_160.HTM">
<LINK REL=NEXT HREF="DB_162.HTM">
<TITLE>11.5.3   Branching with select</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING161></A>

<DIV>
<P><A HREF="DB_162.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_160.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING161-0></A>
<H1>11.5.3   <A NAME=MARKER-9-426></A>Branching with <EM><A NAME=MARKER-2-427></A>select</EM></H1>
<P> In certain situations, you are working with a particular two-argument predicate (such as <CODE>==</CODE> or <CODE>&lt;</CODE>). The value of the first argument to the predicate will always be the same, and you would like to perform different actions based on the second value. You can use both <CODE>if</CODE> and <CODE>case</CODE> to handle this situation, but the <CODE>select</CODE> control structure is more concise. The following example interprets traffic-light colors:</P>
<PRE>
define method color-action 
    (color :: &lt;symbol&gt;) =&gt; (action :: &lt;symbol&gt;)
  select (color)
    #&quot;red&quot;    =&gt; #&quot;stop&quot;;
    #&quot;yellow&quot; =&gt; #&quot;slow&quot;;
    #&quot;green&quot;  =&gt; #&quot;go&quot;;
  end select;
end method color-action;
</PRE>
<P> The <CODE>select</CODE> control structure uses <CODE>==</CODE> for the default predicate. For example, in the preceding <CODE>select</CODE> statement, the symbol <CODE>#&quot;stop&quot;</CODE> will be returned if <CODE>color == #&quot;red&quot;</CODE>. If you require a different predicate, use the <CODE>by</CODE> clause, as shown in the following example, which interprets age from a number representing years:</P>
<PRE>
define method interpret-age 
    (age :: &lt;nonnegative-integer&gt;) =&gt; (description :: &lt;string&gt;)
  select (age by \&lt;)
    13        =&gt; &quot;youngster&quot;;
    20        =&gt; &quot;teenager&quot;;
    60        =&gt; &quot;adult&quot;;
    otherwise =&gt; &quot;senior&quot;;
  end select;
end method interpret-age;
</PRE>
<P> The preceding method returns the string <CODE>&quot;youngster&quot;</CODE> when provided an age less then 13; returns <CODE>&quot;teenager&quot;</CODE> when the age is between 13 and 20; and returns <CODE>&quot;adult&quot;</CODE> when the age is between 20 and 60. In all other cases, it returns <CODE>&quot;senior&quot;</CODE>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_162.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_160.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
