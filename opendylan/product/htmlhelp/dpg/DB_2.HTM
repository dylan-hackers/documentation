<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=PREV HREF="DB_1.HTM">
<LINK REL=NEXT HREF="DB_3.HTM">
<TITLE>Contents</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING2></A>

<DIV>
<P><A HREF="DB_3.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Dylan Programming</P>

</DIV>
<A NAME=HEADING2-0></A>
<H1>Contents</H1>
<HR>
<P>  </P>
<A NAME=LINK-frontm-lastpage></A>
</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DT><A REL=BELOW HREF="DB_2.HTM#HEADING2-0"><B></B>Contents</A>
<DD>
<DT><A REL=BELOW HREF="DB_3.HTM#HEADING3-0"><B></B>Preface</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_4.HTM#HEADING4-0"><B></B>Dylan</A>
<DD>
<DT><A REL=BELOW HREF="DB_5.HTM#HEADING5-0"><B></B>Audience</A>
<DD>
<DT><A REL=BELOW HREF="DB_6.HTM#HEADING6-0"><B></B>Goals of this book</A>
<DD>
<DT><A REL=BELOW HREF="DB_7.HTM#HEADING7-0"><B></B>Organization of this book</A>
<DD>
<DT><A REL=BELOW HREF="DB_8.HTM#HEADING8-0"><B></B>Program examples</A>
<DD>
<DT><A REL=BELOW HREF="DB_9.HTM#HEADING9-0"><B></B>An image of Dylan</A>
<DD>
<DT><A REL=BELOW HREF="DB_10.HTM#HEADING10-0"><B></B>Acknowledgments</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_11.HTM#HEADING11-0"><B>Part I.</B> - Basic Concepts</A>
<DD>
<DT><A REL=BELOW HREF="DB_12.HTM#HEADING12-0"><B>1</B> - Introduction</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_13.HTM#HEADING13-0"><B>1.1  </B> - Comparison of Dylan and other programming languages</A>
<DD>
<DT><A REL=BELOW HREF="DB_14.HTM#HEADING14-0"><B>1.2  </B> - Modular, reusable, component-oriented programs</A>
<DD>
<DT><A REL=BELOW HREF="DB_15.HTM#HEADING15-0"><B>1.3  </B> - Powerful and familiar procedural programming</A>
<DD>
<DT><A REL=BELOW HREF="DB_16.HTM#HEADING16-0"><B>1.4  </B> - Rapid and productive development of programs</A>
<DD>
<DT><A REL=BELOW HREF="DB_17.HTM#HEADING17-0"><B>1.5  </B> - Delivery of safe, efficient, compact applications</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_18.HTM#HEADING18-0"><B>2</B> - Quick Start</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_19.HTM#HEADING19-0"><B>2.1  </B> - Dialog with a Dylan listener</A>
<DD>
<DT><A REL=BELOW HREF="DB_20.HTM#HEADING20-0"><B>2.2  </B> - Simple arithmetic operations</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_21.HTM#HEADING21-0"><B>2.2.1  </B> - True and false</A>
<DD>
<DT><A REL=BELOW HREF="DB_22.HTM#HEADING22-0"><B>2.2.2  </B> - Infix syntax and function-call syntax</A>
<DD>
<DT><A REL=BELOW HREF="DB_23.HTM#HEADING23-0"><B>2.2.3  </B> - Case insensitivity</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_24.HTM#HEADING24-0"><B>2.3  </B> - Variables and constants</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_25.HTM#HEADING25-0"><B>2.3.1  </B> - Assignment, initialization, and equality</A>
<DD>
<DT><A REL=BELOW HREF="DB_26.HTM#HEADING26-0"><B>2.3.2  </B> - Variables that have type constraints</A>
<DD>
<DT><A REL=BELOW HREF="DB_27.HTM#HEADING27-0"><B>2.3.3  </B> - Module constants</A>
<DD>
<DT><A REL=BELOW HREF="DB_28.HTM#HEADING28-0"><B>2.3.4  </B> - Local variables</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_29.HTM#HEADING29-0"><B>2.4  </B> - Formatted output</A>
<DD>
<DT><A REL=BELOW HREF="DB_30.HTM#HEADING30-0"><B>2.5  </B> - A complete Dylan program</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_31.HTM#HEADING31-0"><B>2.5.1  </B> - Files of a Dylan program</A>
<DD>
<DT><A REL=BELOW HREF="DB_32.HTM#HEADING32-0"><B>2.5.2  </B> - Components of a Dylan program</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_33.HTM#HEADING33-0"><B>2.6  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_34.HTM#HEADING34-0"><B>3</B> - Methods, Classes, and Objects</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_35.HTM#HEADING35-0"><B>3.1  </B> - Method definitions</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_36.HTM#HEADING36-0"><B>3.1.1  </B> - A method that takes an argument</A>
<DD>
<DT><A REL=BELOW HREF="DB_37.HTM#HEADING37-0"><B>3.1.2  </B> - Two methods with the same name</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_38.HTM#HEADING38-0"><B>3.2  </B> - Classes</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_39.HTM#HEADING39-0"><B>3.2.1  </B> - Class inheritance</A>
<DD>
<DT><A REL=BELOW HREF="DB_40.HTM#HEADING40-0"><B>3.2.2  </B> - Relationship between classes and methods</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_41.HTM#HEADING41-0"><B>3.3  </B> - Objects</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_42.HTM#HEADING42-0"><B>3.3.1  </B> - Predicates for testing equality</A>
<DD>
<DT><A REL=BELOW HREF="DB_43.HTM#HEADING43-0"><B>3.3.2  </B> - Bindings: Mappings between objects and names</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_44.HTM#HEADING44-0"><B>3.4  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_45.HTM#HEADING45-0"><B>4</B> - User-Defined Classes and Methods</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_46.HTM#HEADING46-0"><B>4.1  </B> - Requirements of the time and position classes and methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_47.HTM#HEADING47-0"><B>4.2  </B> - User-defined classes</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_48.HTM#HEADING48-0"><B>4.2.1  </B> - The &lt;time-of-day&gt; class</A>
<DD>
<DT><A REL=BELOW HREF="DB_49.HTM#HEADING49-0"><B>4.2.2  </B> - The type constraint of a slot</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_50.HTM#HEADING50-0"><B>4.3  </B> - Use of make to create an instance</A>
<DD>
<DT><A REL=BELOW HREF="DB_51.HTM#HEADING51-0"><B>4.4  </B> - Getters and setters of slot values</A>
<DD>
<DT><A REL=BELOW HREF="DB_52.HTM#HEADING52-0"><B>4.5  </B> - Initialization of slots when instances are made</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_53.HTM#HEADING53-0"><B>4.5.1  </B> - Keyword arguments in function calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_54.HTM#HEADING54-0"><B>4.5.2  </B> - Init keywords: Keywords that initialize slots</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_55.HTM#HEADING55-0"><B>4.6  </B> - Methods for handling time</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_56.HTM#HEADING56-0"><B>4.6.1  </B> - Method for encode-total-seconds</A>
<DD>
<DT><A REL=BELOW HREF="DB_57.HTM#HEADING57-0"><B>4.6.2  </B> - Method for decode-total-seconds</A>
<DD>
<DT><A REL=BELOW HREF="DB_58.HTM#HEADING58-0"><B>4.6.3  </B> - Multiple return values</A>
<DD>
<DT><A REL=BELOW HREF="DB_59.HTM#HEADING59-0"><B>4.6.4  </B> - Use of let to declare local variables</A>
<DD>
<DT><A REL=BELOW HREF="DB_60.HTM#HEADING60-0"><B>4.6.5  </B> - Second method for decode-total-seconds</A>
<DD>
<DT><A REL=BELOW HREF="DB_61.HTM#HEADING61-0"><B>4.6.6  </B> - Method for say-time-of-day</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_62.HTM#HEADING62-0"><B>4.7  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_63.HTM#HEADING63-0"><B>5</B> - Class Inheritance</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_64.HTM#HEADING64-0"><B>5.1  </B> - The &lt;time-offset&gt; class and methods</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_65.HTM#HEADING65-0"><B>5.1.1  </B> - Reasons for defining two similar classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_66.HTM#HEADING66-0"><B>5.1.2  </B> - Creation of instances of &lt;time-offset&gt;</A>
<DD>
<DT><A REL=BELOW HREF="DB_67.HTM#HEADING67-0"><B>5.1.3  </B> - Methods on &lt;time-offset&gt;</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_68.HTM#HEADING68-0"><B>5.2  </B> - Class inheritance</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_69.HTM#HEADING69-0"><B>5.2.1  </B> - New definitions of the time classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_70.HTM#HEADING70-0"><B>5.2.2  </B> - Slot inheritance</A>
<DD>
<DT><A REL=BELOW HREF="DB_71.HTM#HEADING71-0"><B>5.2.3  </B> - Existing instances of the classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_72.HTM#HEADING72-0"><B>5.2.4  </B> - Relationships of the time classes</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_73.HTM#HEADING73-0"><B>5.3  </B> - Methods for classes that use inheritance</A>
<DD>
<DT><A REL=BELOW HREF="DB_74.HTM#HEADING74-0"><B>5.4  </B> - Redefinition of a method</A>
<DD>
<DT><A REL=BELOW HREF="DB_75.HTM#HEADING75-0"><B>5.5  </B> - Method dispatch</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_76.HTM#HEADING76-0"><B>5.5.1  </B> - Step 1: Find the applicable methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_77.HTM#HEADING77-0"><B>5.5.2  </B> - Step 2: Sort applicable methods by specificity</A>
<DD>
<DT><A REL=BELOW HREF="DB_78.HTM#HEADING78-0"><B>5.5.3  </B> - Step 3: Call the most specific method</A>
<DD>
<DT><A REL=BELOW HREF="DB_79.HTM#HEADING79-0"><B>5.5.4  </B> - Precedence in method dispatch</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_80.HTM#HEADING80-0"><B>5.6  </B> - Definition of a generic function</A>
<DD>
<DT><A REL=BELOW HREF="DB_81.HTM#HEADING81-0"><B>5.7  </B> - Use of next-method to call another method</A>
<DD>
<DT><A REL=BELOW HREF="DB_82.HTM#HEADING82-0"><B>5.8  </B> - The time library (so far)</A>
<DD>
<DT><A REL=BELOW HREF="DB_83.HTM#HEADING83-0"><B>5.9  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_84.HTM#HEADING84-0"><B>6</B> - Multimethods</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_85.HTM#HEADING85-0"><B>6.1  </B> - Methods for the + generic function</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_86.HTM#HEADING86-0"><B>6.1.1  </B> - Method for adding two time offsets</A>
<DD>
<DT><A REL=BELOW HREF="DB_87.HTM#HEADING87-0"><B>6.1.2  </B> - Methods for adding a time of day to a time offset</A>
<DD>
<DT><A REL=BELOW HREF="DB_88.HTM#HEADING88-0"><B>6.1.3  </B> - Method for adding other kinds of times</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_89.HTM#HEADING89-0"><B>6.2  </B> - Method dispatch for multimethods</A>
<DD>
<DT><A REL=BELOW HREF="DB_90.HTM#HEADING90-0"><B>6.3  </B> - Methods for comparison of times</A>
<DD>
<DT><A REL=BELOW HREF="DB_91.HTM#HEADING91-0"><B>6.4  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_92.HTM#HEADING92-0"><B>7</B> - Modularity</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_93.HTM#HEADING93-0"><B>7.1  </B> - Requirements of the position classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_94.HTM#HEADING94-0"><B>7.2  </B> - Initial class definitions</A>
<DD>
<DT><A REL=BELOW HREF="DB_95.HTM#HEADING95-0"><B>7.3  </B> - Abstract classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_96.HTM#HEADING96-0"><B>7.4  </B> - Absolute position</A>
<DD>
<DT><A REL=BELOW HREF="DB_97.HTM#HEADING97-0"><B>7.5  </B> - Relative position</A>
<DD>
<DT><A REL=BELOW HREF="DB_98.HTM#HEADING98-0"><B>7.6  </B> - Meeting of angles and times</A>
<DD>
<DT><A REL=BELOW HREF="DB_99.HTM#HEADING99-0"><B>7.7  </B> - Abstract, concrete, and instantiable classes</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_100.HTM#HEADING100-0"><B>7.7.1  </B> - Instantiable classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_101.HTM#HEADING101-0"><B>7.7.2  </B> - Design considerations for abstract classes</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_102.HTM#HEADING102-0"><B>7.8  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_103.HTM#HEADING103-0"><B>8</B> - A Simple Library</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_104.HTM#HEADING104-0"><B>8.1  </B> - The LID file</A>
<DD>
<DT><A REL=BELOW HREF="DB_105.HTM#HEADING105-0"><B>8.2  </B> - The library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_106.HTM#HEADING106-0"><B>8.3  </B> - The implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_107.HTM#HEADING107-0"><B>8.4  </B> - The test file</A>
<DD>
<DT><A REL=BELOW HREF="DB_108.HTM#HEADING108-0"><B>8.5  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_109.HTM#HEADING109-0"><B>Part II.</B> - Intermediate Topics</A>
<DD>
<DT><A REL=BELOW HREF="DB_110.HTM#HEADING110-0"><B>9</B> - Nonclass Types</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_111.HTM#HEADING111-0"><B>9.1  </B> - Functions that create nonclass types</A>
<DD>
<DT><A REL=BELOW HREF="DB_112.HTM#HEADING112-0"><B>9.2  </B> - Examples of types that are not classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_113.HTM#HEADING113-0"><B>9.3  </B> - Method dispatch and nonclass types</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_114.HTM#HEADING114-0"><B>9.3.1  </B> - Method dispatch and classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_115.HTM#HEADING115-0"><B>9.3.2  </B> - Method dispatch and singletons</A>
<DD>
<DT><A REL=BELOW HREF="DB_116.HTM#HEADING116-0"><B>9.3.3  </B> - Method dispatch and unions</A>
<DD>
<DT><A REL=BELOW HREF="DB_117.HTM#HEADING117-0"><B>9.3.4  </B> - Method dispatch and limited integers</A>
<DD>
<DT><A REL=BELOW HREF="DB_118.HTM#HEADING118-0"><B>9.3.5  </B> - Method dispatch and limited collections</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_119.HTM#HEADING119-0"><B>9.4  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_120.HTM#HEADING120-0"><B>10</B> - Slots</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_121.HTM#HEADING121-0"><B>10.1  </B> - Dot-syntax abbreviation for simple function calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_122.HTM#HEADING122-0"><B>10.2  </B> - Getters and setters for slots</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_123.HTM#HEADING123-0"><B>10.2.1  </B> - Advantages of accessing slots via generic functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_124.HTM#HEADING124-0"><B>10.2.2  </B> - Setter methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_125.HTM#HEADING125-0"><B>10.2.3  </B> - Considerations for naming slots and other objects</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_126.HTM#HEADING126-0"><B>10.3  </B> - Initialize methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_127.HTM#HEADING127-0"><B>10.4  </B> - Slot options for initialization of slots</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_128.HTM#HEADING128-0"><B>10.4.1  </B> - The init-value: slot option</A>
<DD>
<DT><A REL=BELOW HREF="DB_129.HTM#HEADING129-0"><B>10.4.2  </B> - The required-init-keyword: slot option</A>
<DD>
<DT><A REL=BELOW HREF="DB_130.HTM#HEADING130-0"><B>10.4.3  </B> - Slot options for an inherited slot</A>
<DD>
<DT><A REL=BELOW HREF="DB_131.HTM#HEADING131-0"><B>10.4.4  </B> - The init-function: slot option</A>
<DD>
<DT><A REL=BELOW HREF="DB_132.HTM#HEADING132-0"><B>10.4.5  </B> - Init expressions</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_133.HTM#HEADING133-0"><B>10.5  </B> - Allocation of slots</A>
<DD>
<DT><A REL=BELOW HREF="DB_134.HTM#HEADING134-0"><B>10.6  </B> - Virtual slots</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_135.HTM#HEADING135-0"><B>10.6.1  </B> - Symbols</A>
<DD>
<DT><A REL=BELOW HREF="DB_136.HTM#HEADING136-0"><B>10.6.2  </B> - Getter and setter methods for a virtual slot</A>
<DD>
<DT><A REL=BELOW HREF="DB_137.HTM#HEADING137-0"><B>10.6.3  </B> - Initialize method for a virtual slot</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_138.HTM#HEADING138-0"><B>10.7  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_139.HTM#HEADING139-0"><B>11</B> - Collections and Control Flow</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_140.HTM#HEADING140-0"><B>11.1  </B> - Built-in collection classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_141.HTM#HEADING141-0"><B>11.2  </B> - Basic use of collections</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_142.HTM#HEADING142-0"><B>11.2.1  </B> - Creation of strings and access to elements</A>
<DD>
<DT><A REL=BELOW HREF="DB_143.HTM#HEADING143-0"><B>11.2.2  </B> - Creation of vectors and access to elements</A>
<DD>
<DT><A REL=BELOW HREF="DB_144.HTM#HEADING144-0"><B>11.2.3  </B> - Creation of lists and access to elements</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_145.HTM#HEADING145-0"><B>11.3  </B> - Iteration over a sequence</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_146.HTM#HEADING146-0"><B>11.3.1  </B> - Building our own copy-sequence</A>
<DD>
<DT><A REL=BELOW HREF="DB_147.HTM#HEADING147-0"><B>11.3.2  </B> - Iteration with for</A>
<DD>
<DT><A REL=BELOW HREF="DB_148.HTM#HEADING148-0"><B>11.3.3  </B> - Lists and efficiency</A>
<DD>
<DT><A REL=BELOW HREF="DB_149.HTM#HEADING149-0"><B>11.3.4  </B> - Polymorphism</A>
<DD>
<DT><A REL=BELOW HREF="DB_150.HTM#HEADING150-0"><B>11.3.5  </B> - Mapping functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_151.HTM#HEADING151-0"><B>11.3.6  </B> - A recursive list copier</A>
<DD>
<DT><A REL=BELOW HREF="DB_152.HTM#HEADING152-0"><B>11.3.7  </B> - Using map and curry</A>
<DD>
<DT><A REL=BELOW HREF="DB_153.HTM#HEADING153-0"><B>11.3.8  </B> - A sequence copier that can copy a portion of a sequence</A>
<DD>
<DT><A REL=BELOW HREF="DB_154.HTM#HEADING154-0"><B>11.3.9  </B> - Changes to a generic function's signature</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_155.HTM#HEADING155-0"><B>11.4  </B> - Manipulation of collections</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_156.HTM#HEADING156-0"><B>11.4.1  </B> - Reversal of sequences</A>
<DD>
<DT><A REL=BELOW HREF="DB_157.HTM#HEADING157-0"><B>11.4.2  </B> - Destructive operations and shared structure</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_158.HTM#HEADING158-0"><B>11.5  </B> - Conditional execution</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_159.HTM#HEADING159-0"><B>11.5.1  </B> - if, else, and elseif</A>
<DD>
<DT><A REL=BELOW HREF="DB_160.HTM#HEADING160-0"><B>11.5.2  </B> - Branching with case</A>
<DD>
<DT><A REL=BELOW HREF="DB_161.HTM#HEADING161-0"><B>11.5.3  </B> - Branching with select</A>
<DD>
<DT><A REL=BELOW HREF="DB_162.HTM#HEADING162-0"><B>11.5.4  </B> - Tables: Dynamic associations</A>
<DD>
<DT><A REL=BELOW HREF="DB_163.HTM#HEADING163-0"><B>11.5.5  </B> - Search of arrays with for and block</A>
<DD>
<DT><A REL=BELOW HREF="DB_164.HTM#HEADING164-0"><B>11.5.6  </B> - Search of arrays with find-key</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_165.HTM#HEADING165-0"><B>11.6  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_166.HTM#HEADING166-0"><B>12</B> - Functions</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_167.HTM#HEADING167-0"><B>12.1  </B> - Function-calling syntax</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_168.HTM#HEADING168-0"><B>12.1.1  </B> - Explicit function calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_169.HTM#HEADING169-0"><B>12.1.2  </B> - Slot references</A>
<DD>
<DT><A REL=BELOW HREF="DB_170.HTM#HEADING170-0"><B>12.1.3  </B> - Element references</A>
<DD>
<DT><A REL=BELOW HREF="DB_171.HTM#HEADING171-0"><B>12.1.4  </B> - Unary operator calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_172.HTM#HEADING172-0"><B>12.1.5  </B> - Binary-operator calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_173.HTM#HEADING173-0"><B>12.1.6  </B> - Assignment</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_174.HTM#HEADING174-0"><B>12.2  </B> - The function-calling protocol</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_175.HTM#HEADING175-0"><B>12.2.1  </B> - Parameters, arguments, and return values</A>
<DD>
<DT><A REL=BELOW HREF="DB_176.HTM#HEADING176-0"><B>12.2.2  </B> - Return and reception of multiple values</A>
<DD>
<DT><A REL=BELOW HREF="DB_177.HTM#HEADING177-0"><B>12.2.3  </B> - Parameter lists</A>
<DD>
<DT><A REL=BELOW HREF="DB_178.HTM#HEADING178-0"><B>12.2.4  </B> - Value declarations</A>
<DD>
<DT><A REL=BELOW HREF="DB_179.HTM#HEADING179-0"><B>12.2.5  </B> - Parameter-list congruence</A>
<DD>
<DT><A REL=BELOW HREF="DB_180.HTM#HEADING180-0"><B>12.2.6  </B> - Return-value congruence</A>
<DD>
<DT><A REL=BELOW HREF="DB_181.HTM#HEADING181-0"><B>12.2.7  </B> - Keyword-argument checking</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_182.HTM#HEADING182-0"><B>12.3  </B> - Functions as objects</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_183.HTM#HEADING183-0"><B>12.3.1  </B> - Types of functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_184.HTM#HEADING184-0"><B>12.3.2  </B> - Creation of generic functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_185.HTM#HEADING185-0"><B>12.3.3  </B> - Creation of methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_186.HTM#HEADING186-0"><B>12.3.4  </B> - Application of a function to arguments</A>
<DD>
<DT><A REL=BELOW HREF="DB_187.HTM#HEADING187-0"><B>12.3.5  </B> - Operations on functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_188.HTM#HEADING188-0"><B>12.3.6  </B> - Closures</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_189.HTM#HEADING189-0"><B>12.4  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_190.HTM#HEADING190-0"><B>13</B> - Libraries and Modules</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_191.HTM#HEADING191-0"><B>13.1  </B> - Libraries</A>
<DD>
<DT><A REL=BELOW HREF="DB_192.HTM#HEADING192-0"><B>13.2  </B> - Modules</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_193.HTM#HEADING193-0"><B>13.2.1  </B> - Namespaces</A>
<DD>
<DT><A REL=BELOW HREF="DB_194.HTM#HEADING194-0"><B>13.2.2  </B> - Definitions</A>
<DD>
<DT><A REL=BELOW HREF="DB_195.HTM#HEADING195-0"><B>13.2.3  </B> - Export and import of names by modules</A>
<DD>
<DT><A REL=BELOW HREF="DB_196.HTM#HEADING196-0"><B>13.2.4  </B> - Export and import of modules by libraries</A>
<DD>
<DT><A REL=BELOW HREF="DB_197.HTM#HEADING197-0"><B>13.2.5  </B> - Simple example of libraries and modules</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_198.HTM#HEADING198-0"><B>13.3  </B> - Source code, modules, and libraries</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_199.HTM#HEADING199-0"><B>13.3.1  </B> - Source records and modules</A>
<DD>
<DT><A REL=BELOW HREF="DB_200.HTM#HEADING200-0"><B>13.3.2  </B> - Modules and libraries</A>
<DD>
<DT><A REL=BELOW HREF="DB_201.HTM#HEADING201-0"><B>13.3.3  </B> - Libraries and programs</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_202.HTM#HEADING202-0"><B>13.4  </B> - Module definition</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_203.HTM#HEADING203-0"><B>13.4.1  </B> - Roles of modules</A>
<DD>
<DT><A REL=BELOW HREF="DB_204.HTM#HEADING204-0"><B>13.4.2  </B> - The interface module</A>
<DD>
<DT><A REL=BELOW HREF="DB_205.HTM#HEADING205-0"><B>13.4.3  </B> - The implementation module</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_206.HTM#HEADING206-0"><B>13.5  </B> - Library definition</A>
<DD>
<DT><A REL=BELOW HREF="DB_207.HTM#HEADING207-0"><B>13.6  </B> - Interchange files</A>
<DD>
<DT><A REL=BELOW HREF="DB_208.HTM#HEADING208-0"><B>13.7  </B> - The time-library file</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_209.HTM#HEADING209-0"><B>13.7.1  </B> - The sixty-unit implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_210.HTM#HEADING210-0"><B>13.7.2  </B> - The time implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_211.HTM#HEADING211-0"><B>13.7.3  </B> - The library-interchange definition (LID)</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_212.HTM#HEADING212-0"><B>13.8  </B> - Component library</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_213.HTM#HEADING213-0"><B>13.8.1  </B> - The sixty-unit-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_214.HTM#HEADING214-0"><B>13.8.2  </B> - The updated time-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_215.HTM#HEADING215-0"><B>13.8.3  </B> - The updated sixty-unit implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_216.HTM#HEADING216-0"><B>13.8.4  </B> - Two LID files</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_217.HTM#HEADING217-0"><B>13.9  </B> - Protocol design</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_218.HTM#HEADING218-0"><B>13.9.1  </B> - The say-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_219.HTM#HEADING219-0"><B>13.9.2  </B> - The say implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_220.HTM#HEADING220-0"><B>13.9.3  </B> - The updated time-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_221.HTM#HEADING221-0"><B>13.9.4  </B> - The angle library</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_222.HTM#HEADING222-0"><B>13.10  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_223.HTM#HEADING223-0"><B>14</B> - Four Complete Libraries</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_224.HTM#HEADING224-0"><B>14.1  </B> - The sixty-unit library</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_225.HTM#HEADING225-0"><B>14.1.1  </B> - The sixty-unit-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_226.HTM#HEADING226-0"><B>14.1.2  </B> - The sixty-unit implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_227.HTM#HEADING227-0"><B>14.1.3  </B> - The sixty-unit LID file</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_228.HTM#HEADING228-0"><B>14.2  </B> - The say library</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_229.HTM#HEADING229-0"><B>14.2.1  </B> - The say-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_230.HTM#HEADING230-0"><B>14.2.2  </B> - The say implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_231.HTM#HEADING231-0"><B>14.2.3  </B> - The say LID file</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_232.HTM#HEADING232-0"><B>14.3  </B> - The time library</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_233.HTM#HEADING233-0"><B>14.3.1  </B> - The time-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_234.HTM#HEADING234-0"><B>14.3.2  </B> - The time implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_235.HTM#HEADING235-0"><B>14.3.3  </B> - The time LID file</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_236.HTM#HEADING236-0"><B>14.4  </B> - The angle library</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_237.HTM#HEADING237-0"><B>14.4.1  </B> - The angle-library file</A>
<DD>
<DT><A REL=BELOW HREF="DB_238.HTM#HEADING238-0"><B>14.4.2  </B> - The angle implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_239.HTM#HEADING239-0"><B>14.4.3  </B> - The position implementation file</A>
<DD>
<DT><A REL=BELOW HREF="DB_240.HTM#HEADING240-0"><B>14.4.4  </B> - The angle LID file</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_241.HTM#HEADING241-0"><B>14.5  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_242.HTM#HEADING242-0"><B>Part III.</B> - Sample Application</A>
<DD>
<DT><A REL=BELOW HREF="DB_243.HTM#HEADING243-0"><B>15</B> - Design of the Airport Application</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_244.HTM#HEADING244-0"><B>15.1  </B> - Goals of the airport application</A>
<DD>
<DT><A REL=BELOW HREF="DB_245.HTM#HEADING245-0"><B>15.2  </B> - Objects that model an airport</A>
<DD>
<DT><A REL=BELOW HREF="DB_246.HTM#HEADING246-0"><B>15.3  </B> - Behaviors of the objects</A>
<DD>
<DT><A REL=BELOW HREF="DB_247.HTM#HEADING247-0"><B>15.4  </B> - The vehicle-container protocol</A>
<DD>
<DT><A REL=BELOW HREF="DB_248.HTM#HEADING248-0"><B>15.5  </B> - Sorted sequences</A>
<DD>
<DT><A REL=BELOW HREF="DB_249.HTM#HEADING249-0"><B>15.6  </B> - Testing</A>
<DD>
<DT><A REL=BELOW HREF="DB_250.HTM#HEADING250-0"><B>15.7  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_251.HTM#HEADING251-0"><B>16</B> - Definition of a New Collection</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_252.HTM#HEADING252-0"><B>16.1  </B> - The sorted-sequence.dylan file</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_253.HTM#HEADING253-0"><B>16.1.1  </B> - A new collection class</A>
<DD>
<DT><A REL=BELOW HREF="DB_254.HTM#HEADING254-0"><B>16.1.2  </B> - Basic collection methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_255.HTM#HEADING255-0"><B>16.1.3  </B> - Adding and removing elements</A>
<DD>
<DT><A REL=BELOW HREF="DB_256.HTM#HEADING256-0"><B>16.1.4  </B> - The forward-iteration protocol</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_257.HTM#HEADING257-0"><B>16.2  </B> - The sorted-sequence-library.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_258.HTM#HEADING258-0"><B>16.3  </B> - The sorted-sequence.lid file</A>
<DD>
<DT><A REL=BELOW HREF="DB_259.HTM#HEADING259-0"><B>16.4  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_260.HTM#HEADING260-0"><B>17</B> - The Airport Application</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_261.HTM#HEADING261-0"><B>17.1  </B> - The definitions.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_262.HTM#HEADING262-0"><B>17.2  </B> - The airport-classes.dylan file</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_263.HTM#HEADING263-0"><B>17.2.1  </B> - Physical objects</A>
<DD>
<DT><A REL=BELOW HREF="DB_264.HTM#HEADING264-0"><B>17.2.2  </B> - Vehicle containers</A>
<DD>
<DT><A REL=BELOW HREF="DB_265.HTM#HEADING265-0"><B>17.2.3  </B> - Vehicles</A>
<DD>
<DT><A REL=BELOW HREF="DB_266.HTM#HEADING266-0"><B>17.2.4  </B> - Airports</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_267.HTM#HEADING267-0"><B>17.3  </B> - The vehicle-dynamics.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_268.HTM#HEADING268-0"><B>17.4  </B> - The schedule.dylan file</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_269.HTM#HEADING269-0"><B>17.4.1  </B> - The container protocol and implementation</A>
<DD>
<DT><A REL=BELOW HREF="DB_270.HTM#HEADING270-0"><B>17.4.2  </B> - The scheduling algorithm</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_271.HTM#HEADING271-0"><B>17.5  </B> - The airport-test.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_272.HTM#HEADING272-0"><B>17.6  </B> - The definitions-library.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_273.HTM#HEADING273-0"><B>17.7  </B> - The definitions.lid file</A>
<DD>
<DT><A REL=BELOW HREF="DB_274.HTM#HEADING274-0"><B>17.8  </B> - The airport-library.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_275.HTM#HEADING275-0"><B>17.9  </B> - The airport.lid file</A>
<DD>
<DT><A REL=BELOW HREF="DB_276.HTM#HEADING276-0"><B>17.10  </B> - The airport-test-library.dylan file</A>
<DD>
<DT><A REL=BELOW HREF="DB_277.HTM#HEADING277-0"><B>17.11  </B> - The airport-test.lid file</A>
<DD>
<DT><A REL=BELOW HREF="DB_278.HTM#HEADING278-0"><B>17.12  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_279.HTM#HEADING279-0"><B>Part IV.</B> - Advanced Topics</A>
<DD>
<DT><A REL=BELOW HREF="DB_280.HTM#HEADING280-0"><B>18</B> - Multiple Inheritance</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_281.HTM#HEADING281-0"><B>18.1  </B> - Example of multiple inheritance</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_282.HTM#HEADING282-0"><B>18.1.1  </B> - Modeling of ground vehicles</A>
<DD>
<DT><A REL=BELOW HREF="DB_283.HTM#HEADING283-0"><B>18.1.2  </B> - Aircraft classes and multiple inheritance</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_284.HTM#HEADING284-0"><B>18.2  </B> - Multiple inheritance and slots</A>
<DD>
<DT><A REL=BELOW HREF="DB_285.HTM#HEADING285-0"><B>18.3  </B> - The class precedence list</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_286.HTM#HEADING286-0"><B>18.3.1  </B> - Construction of the class precedence list</A>
<DD>
<DT><A REL=BELOW HREF="DB_287.HTM#HEADING287-0"><B>18.3.2  </B> - More complicated class precedence lists</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_288.HTM#HEADING288-0"><B>18.4  </B> - Multiple inheritance and method dispatch</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_289.HTM#HEADING289-0"><B>18.4.1  </B> - Class precedence and method dispatch</A>
<DD>
<DT><A REL=BELOW HREF="DB_290.HTM#HEADING290-0"><B>18.4.2  </B> - Refined rules for method dispatch</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_291.HTM#HEADING291-0"><B>18.5  </B> - Use of multiple inheritance</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_292.HTM#HEADING292-0"><B>18.5.1  </B> - Use of a mix-in class</A>
<DD>
<DT><A REL=BELOW HREF="DB_293.HTM#HEADING293-0"><B>18.5.2  </B> - Pros and cons of multiple inheritance</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_294.HTM#HEADING294-0"><B>18.6  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_295.HTM#HEADING295-0"><B>19</B> - Performance and Flexibility</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_296.HTM#HEADING296-0"><B>19.1  </B> - Execution model</A>
<DD>
<DT><A REL=BELOW HREF="DB_297.HTM#HEADING297-0"><B>19.2  </B> - Efficiency model</A>
<DD>
<DT><A REL=BELOW HREF="DB_298.HTM#HEADING298-0"><B>19.3  </B> - Type constraints</A>
<DD>
<DT><A REL=BELOW HREF="DB_299.HTM#HEADING299-0"><B>19.4  </B> - Limited types</A>
<DD>
<DT><A REL=BELOW HREF="DB_300.HTM#HEADING300-0"><B>19.5  </B> - Enumerations</A>
<DD>
<DT><A REL=BELOW HREF="DB_301.HTM#HEADING301-0"><B>19.6  </B> - Direct methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_302.HTM#HEADING302-0"><B>19.7  </B> - Tail calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_303.HTM#HEADING303-0"><B>19.8  </B> - Typed generic functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_304.HTM#HEADING304-0"><B>19.9  </B> - Open generic functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_305.HTM#HEADING305-0"><B>19.10  </B> - Open classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_306.HTM#HEADING306-0"><B>19.11  </B> - Sealed domains</A>
<DD>
<DT><A REL=BELOW HREF="DB_307.HTM#HEADING307-0"><B>19.12  </B> - Slot accessors</A>
<DD>
<DT><A REL=BELOW HREF="DB_308.HTM#HEADING308-0"><B>19.13  </B> - Primary classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_309.HTM#HEADING309-0"><B>19.14  </B> - Additional efficiency information</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_310.HTM#HEADING310-0"><B>19.14.1  </B> - Efficiency of generic function calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_311.HTM#HEADING311-0"><B>19.14.2  </B> - Efficiency of keyword arguments and of multiple values</A>
<DD>
<DT><A REL=BELOW HREF="DB_312.HTM#HEADING312-0"><B>19.14.3  </B> - Memory usage</A>
<DD>
<DT><A REL=BELOW HREF="DB_313.HTM#HEADING313-0"><B>19.14.4  </B> - Inlining, constant folding, and partial evaluation</A>
<DD>
<DT><A REL=BELOW HREF="DB_314.HTM#HEADING314-0"><B>19.14.5  </B> - Type inference</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_315.HTM#HEADING315-0"><B>19.15  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_316.HTM#HEADING316-0"><B>20</B> - Exceptions</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_317.HTM#HEADING317-0"><B>20.1  </B> - An informal exception protocol</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_318.HTM#HEADING318-0"><B>20.1.1  </B> - The + method using informal exceptions</A>
<DD>
<DT><A REL=BELOW HREF="DB_319.HTM#HEADING319-0"><B>20.1.2  </B> - Problems with the informal exception protocol</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_320.HTM#HEADING320-0"><B>20.2  </B> - A simple Dylan exception protocol</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_321.HTM#HEADING321-0"><B>20.2.1  </B> - Signaling conditions</A>
<DD>
<DT><A REL=BELOW HREF="DB_322.HTM#HEADING322-0"><B>20.2.2  </B> - Simple condition handling</A>
<DD>
<DT><A REL=BELOW HREF="DB_323.HTM#HEADING323-0"><B>20.2.3  </B> - Definition of a recovery protocol</A>
<DD>
<DT><A REL=BELOW HREF="DB_324.HTM#HEADING324-0"><B>20.2.4  </B> - Continuation from errors</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_325.HTM#HEADING325-0"><B>20.3  </B> - Additional exception mechanisms</A>
<DD>
<DT><A REL=BELOW HREF="DB_326.HTM#HEADING326-0"><B>20.4  </B> - Protected operations and the block construct</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_327.HTM#HEADING327-0"><B>20.4.1  </B> - Protected objects</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_328.HTM#HEADING328-0"><B>20.5  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_329.HTM#HEADING329-0"><B>21</B> - Macros</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_330.HTM#HEADING330-0"><B>21.1  </B> - Patterns and templates</A>
<DD>
<DT><A REL=BELOW HREF="DB_331.HTM#HEADING331-0"><B>21.2  </B> - Macro hygiene</A>
<DD>
<DT><A REL=BELOW HREF="DB_332.HTM#HEADING332-0"><B>21.3  </B> - Evaluation in macros</A>
<DD>
<DT><A REL=BELOW HREF="DB_333.HTM#HEADING333-0"><B>21.4  </B> - Constraints</A>
<DD>
<DT><A REL=BELOW HREF="DB_334.HTM#HEADING334-0"><B>21.5  </B> - More complex rules</A>
<DD>
<DT><A REL=BELOW HREF="DB_335.HTM#HEADING335-0"><B>21.6  </B> - More hygiene</A>
<DD>
<DT><A REL=BELOW HREF="DB_336.HTM#HEADING336-0"><B>21.7  </B> - Auxiliary macros</A>
<DD>
<DT><A REL=BELOW HREF="DB_337.HTM#HEADING337-0"><B>21.8  </B> - Summary</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_338.HTM#HEADING338-0"><B></B>Source Code of Program Examples</A>
<DD>
<DT><A REL=BELOW HREF="DB_339.HTM#HEADING339-0"><B>A</B> - Resources on Dylan</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_340.HTM#HEADING340-0"><B>A.1  </B> - World Wide Web pages for this book and its examples</A>
<DD>
<DT><A REL=BELOW HREF="DB_341.HTM#HEADING341-0"><B>A.2  </B> - Newsgroup</A>
<DD>
<DT><A REL=BELOW HREF="DB_342.HTM#HEADING342-0"><B>A.3  </B> - Harlequin</A>
<DD>
<DT><A REL=BELOW HREF="DB_343.HTM#HEADING343-0"><B>A.4  </B> - Carnegie Mellon University</A>
<DD>
<DT><A REL=BELOW HREF="DB_344.HTM#HEADING344-0"><B>A.5  </B> - Marlais</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_345.HTM#HEADING345-0"><B>B</B> - Dylan Object Model for C and C++ Programmers</A>
<DD>
<DL>
<DT><A REL=BELOW HREF="DB_346.HTM#HEADING346-0"><B>B.1  </B> - The concept of pointers</A>
<DD>
<DT><A REL=BELOW HREF="DB_347.HTM#HEADING347-0"><B>B.2  </B> - The concept of classes</A>
<DD>
</DL>
<DT><A REL=BELOW HREF="DB_348.HTM#HEADING348-0"><B>Glossary</B> - </A>
<DD>
<DT><A REL=BELOW HREF="DB_349.HTM#HEADING349-0"><B></B>Index</A>
<DD>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_3.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
