<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_141.HTM">
<LINK REL=PREV HREF="DB_141.HTM">
<LINK REL=NEXT HREF="DB_143.HTM">
<TITLE>11.2.1   Creation of strings and access to elements</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING142></A>

<DIV>
<P><A HREF="DB_143.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_141.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING142-0></A>
<H1>11.2.1   <A NAME=MARKER-9-376></A>Creation of <A NAME=MARKER-2-377></A>strings and access to elements</H1>
<P> First, we define a variable, initializing it with a string: </P>
<PRE>
<I>? </I>define variable *greeting* = &quot;Hello, world.&quot;;
<I>? </I>*greeting*;
<I>&quot;Hello, world.&quot;</I>
</PRE>
<P> We can access elements of the string:</P>
<PRE>
<I>? </I>*greeting*[0];
<I>'H'</I>
<I>? </I>*greeting*[1];
<I>'e'</I>
</PRE>
<P> The syntax <CODE>*greeting*[<I>n]</I></CODE> refers to the <I>n</I>th element of the string in <CODE>*greeting*</CODE>.<CODE> </CODE>You can use this syntax to access any element of any collection.<CODE> </CODE>In Dylan, double quotes are used to enclose literal strings, and single quotes are used to enclose characters.</P>
<P>We can use the assignment operator to change an element of a string:</P>
<PRE>
<I>? </I>*greeting* := copy-sequence(*greeting*);
<I>&quot;Hello, world.&quot;</I>
<I>? </I>*greeting*[0] := <I>'</I>j<I>'</I>;
<I>'j'</I>
<I>? </I>*greeting*;
<I>&quot;jello, world.&quot;</I>
</PRE>
<P> We copied the greeting before modifying it, because modifying a literal constant is an error. A<B> <A NAME=MARKER-2-378></A>literal constant</B> is an object whose contents are known completely at compile time. Dylan has a special syntax for each class of literal constant, so that they can be identified easily. The literal constant <CODE>&quot;Hello, world.&quot;</CODE>, which is used to initialize the <CODE>*greeting*</CODE> variable, is part of the program executable, and is allocated when you compile the program. </P>
<P>The <A NAME=MARKER-2-379></A><CODE>copy-sequence</CODE> generic function returns a new collection with the same elements as its argument. The <CODE>copy-sequence</CODE> function creates the copy at run time, so modification of its results is permitted, because such changes do not alter the program itself. Note that, although the listener presents all objects in literal-constant syntax, not everything displayed by the listener is a literal constant.</P>
<P>The square-bracket syntax is an abbreviation for calling the generic function <A NAME=MARKER-2-380></A><CODE>element</CODE>. The following examples are equivalent:</P>
<PRE>
<I>? </I>*greeting*[0];
<I>'j'</I>
<I>? </I>element(*greeting*, 0);
<I>'j'</I>
</PRE>
<P> You can use either the square-bracket syntax or the <CODE>element</CODE> generic function on any collection. You must be careful if you use <CODE>element</CODE> as a local variable, however, because doing so will interfere with its use as a generic function, including the use of the square-bracket abbreviation.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_143.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_141.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
