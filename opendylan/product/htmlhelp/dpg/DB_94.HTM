<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_92.HTM">
<LINK REL=PREV HREF="DB_93.HTM">
<LINK REL=NEXT HREF="DB_95.HTM">
<TITLE>7.2   Initial class definitions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING94></A>

<DIV>
<P><A HREF="DB_95.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_93.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING94-0></A>
<H1>7.2   Initial class definitions</H1>
<P> We start with these simple, initial class definitions: </P>
<PRE>
<I>// Superclass of all position classes
</I>define class &lt;position&gt; (&lt;object&gt;)
end class &lt;position&gt;; 
define class &lt;absolute-position&gt; (&lt;position&gt;)
  slot latitude;
  slot longitude;
end class &lt;absolute-position&gt;;
define class &lt;relative-position&gt; (&lt;position&gt;) 
  slot distance;
  slot angle;
end class &lt;relative-position&gt;; 
</PRE>
<P> These initial definitions show the inheritance relationships among the classes, <BR>and the names of the slots show the information that the classes must provide. At this point, we omit the type declarations of the slots, which is equivalent to <BR>specifying the type <CODE>&lt;object&gt;</CODE>. We will fill in the implementation later, by deciding on the types of the slots, and providing the <CODE>say</CODE> methods.</P>
<P>Our requirements mention only <CODE>&lt;absolute-position&gt;</CODE> and <CODE>&lt;relative-position&gt;</CODE>, but we choose to define a superclass of both of them, named <BR><CODE>&lt;position&gt;</CODE>. </P>
<P> </P>
<TABLE BORDER=1><TR VALIGN=TOP><TD><P> <B>Modularity note:</B> The benefits of defining the <CODE>&lt;position&gt;</CODE> class are these:</P>
<UL>
<LI><P>The <CODE>&lt;position&gt;</CODE> class creates an explicit relationship between the other position classes, which are related <BR>conceptually. </P>
<LI><P>We can use the <CODE>&lt;position&gt;</CODE> class as the type of a slot or other object, in cases where either an absolute or relative position is appropriate.</P>
</TD></TR></TABLE></UL>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_95.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_93.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
