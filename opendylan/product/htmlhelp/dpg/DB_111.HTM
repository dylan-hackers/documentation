<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_110.HTM">
<LINK REL=PREV HREF="DB_110.HTM">
<LINK REL=NEXT HREF="DB_112.HTM">
<TITLE>9.1   Functions that create nonclass types</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING111></A>

<DIV>
<P><A HREF="DB_112.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_110.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING111-0></A>
<H1>9.1   Functions that create nonclass <A NAME=MARKER-9-290></A>types<A NAME=MARKER-2-291></A></H1>
<P> There are three functions that create types that are not classes: <CODE>singleton</CODE>, <CODE>type-union</CODE>, and <CODE>limited</CODE>. </P>
<DL>
<DT><CODE><A NAME=MARKER-2-292></A>singleton</CODE><DD><P> Takes any instance, and creates a type whose only member is that instance. You can define a singleton type to be used as the parameter specializer of a method that should be chosen for a particular instance. </P>
<DT><CODE><A NAME=MARKER-2-293></A>type-union</CODE><DD><P> Takes one or more classes or types, and creates a new type whose members include all the members of the types that are its arguments. </P>
<DT><CODE><A NAME=MARKER-2-294></A>limited</CODE><DD><P> Takes a type and creates a new type, which is a more restricted version of the type that is its argument (the <B>base type</B>). For example, you can define a new type that is based on <CODE>&lt;integer&gt;</CODE>, but has a given minimum or maximum value. Another example is to define a new collection type that specifies the type of elements, such as a type that is a vector of integers. The main reasons for defining types with <CODE>limited</CODE> are to perform type checking and to increase efficiency. For information about the performance of limited types, <A HREF="DB_299.HTM#MARKER-9-771">Section 19.4, page 315</A>.</P>
</DL>
<P> </P>
<TABLE BORDER=1><TR VALIGN=TOP><TD><P> <B><A NAME=MARKER-2-285></A>Convention: </B>Type names, like class names, are surrounded with angle brackets -- for example, <CODE>&lt;nonnegative-integer&gt;</CODE>. </P>
</TD></TR></TABLE>
</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_112.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_110.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
