<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_63.HTM">
<LINK REL=PREV HREF="DB_80.HTM">
<LINK REL=NEXT HREF="DB_82.HTM">
<TITLE>5.7   Use of next-method to call another method</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING81></A>

<DIV>
<P><A HREF="DB_82.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_80.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING81-0></A>
<H1>5.7   Use of <A NAME=MARKER-2-233></A><CODE>next-method</CODE> to call another method</H1>
<P> Notice that there is duplication of code in the two methods for <CODE>say</CODE>, as shown in <A HREF="DB_80.HTM#MARKER-9-197">Figure 5.5</A>. Both methods call <CODE>decode-total-seconds</CODE> to get the hours and minutes, and call <CODE>format-out</CODE> to print the hours and minutes. Both methods print a leading zero for the minutes, if appropriate. These two tasks are all that the method on <CODE>&lt;time-of-day&gt;</CODE> does. The method on <CODE>&lt;time-offset&gt;</CODE> does a bit more; it prints either <CODE>minus</CODE> or <CODE>plus</CODE>, depending on the value of the <CODE>past?</CODE> slot.</P>
<P> We can eliminate this duplication by defining another method that does the shared work. This method will be on the <CODE>&lt;time&gt;</CODE> class, so it will be applicable to instances of <CODE>&lt;time-of-day&gt;</CODE> and <CODE>&lt;time-offset&gt;</CODE>. The method for <CODE>&lt;time-of-day&gt;</CODE> is no longer needed, because the new method does the same work. However, a revised method for <CODE>&lt;time-offset&gt;</CODE> is needed, to do the extra work of printing <CODE>minus</CODE> or <CODE>plus</CODE>, and to call the method on <CODE>&lt;time&gt;</CODE>, which is the next most specific method. </P>
<P>You can use the <CODE>next-method</CODE> function to call the next most specific method. Recall that the result of Dylan's method dispatch procedure is a list of applicable methods, sorted by specificity. When one method calls the <CODE>next-method</CODE> function, Dylan consults the list of sorted methods and invokes the next most specific method on the list. (It is an error to call <CODE>next-method</CODE> from the least specific method.) </P>
<P>We remove the definitions of the existing <CODE>say</CODE> methods, and define these new methods:</P>
<PRE>
define method say (time :: &lt;time&gt;) =&gt; ()
  let (hours, minutes) = decode-total-seconds(time); 
  format-out
    (&quot;%d:%s%d&quot;, hours, if (minutes &lt; 10) &quot;0&quot; else &quot;&quot; end, minutes);
end method say;
define method say (time :: &lt;time-offset&gt;)
  format-out(&quot;%s &quot;, if (past?(time)) &quot;minus&quot; else &quot;plus&quot; end);
  next-method();
end method say;
</PRE>
<P> We can call <CODE>say</CODE>:</P>
<PRE>
<I>? </I>say(*my-time-of-day*);
<I>0:02</I>
</PRE>
<P> In the preceding call, the argument is of the type <CODE>&lt;time-of-day&gt;</CODE>, so the method on <CODE>&lt;time&gt;</CODE> is the only applicable method. That method is invoked. </P>
<PRE>
<I>? </I>say(*my-time-offset*);
<I>plus 15:20</I>
</PRE>
<P> In the preceding call, the argument is of the type <CODE>&lt;time-offset&gt;</CODE>, so two methods are applicable. The method on <CODE>&lt;time-offset&gt;</CODE> is more specific than is the method on <CODE>&lt;time&gt;</CODE>, so the method on <CODE>&lt;time-offset&gt;</CODE> is called. That method on <CODE>&lt;time-offset&gt;</CODE> prints <CODE>minus</CODE> or <CODE>plus</CODE>, and calls <CODE>next-method</CODE>. The <CODE>next-method</CODE> function calls the method on <CODE>&lt;time&gt;</CODE>, which prints the hours and minutes. </P>
<P>Using <CODE>next-method</CODE> is convenient in cases such as this, where a method on a superclass can do most of the work, but a method on a subclass needs to do additional work.</P>
<P>When <CODE>next-method</CODE> is called with no arguments, as it is in the method on <CODE>&lt;time-offset&gt;</CODE>, Dylan calls the next most specific method with the same arguments provided to the method that calls <CODE>next-method</CODE>. </P>
<P>You can provide arguments to <CODE>next-method</CODE>. For example, you could provide a keyword argument with a value that each method can manipulate (such as adding a value to a number, or appending an element to a list). If you provide arguments to <CODE>next-method</CODE>, the arguments must be compatible with the generic function, as described in <A HREF="DB_179.HTM#MARKER-9-529">Section 12.2.5, page 176</A>. In addition, you cannot supply required arguments that have classes different from those of the original required arguments to the generic function, if doing so would have changed the method dispatch in any way. Providing arguments to <CODE>next-method</CODE> is an advanced technique; see <A HREF="DB_177.HTM#MARKER-9-514">Section 12.2.3, page 172</A>, and <A HREF="DB_264.HTM#MARKER-9-710">Section 17.2.2</A>, page <A HREF="DB_264.HTM#MARKER-9-702">260</A>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_82.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_80.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
