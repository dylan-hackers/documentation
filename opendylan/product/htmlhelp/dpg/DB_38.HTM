<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_34.HTM">
<LINK REL=PREV HREF="DB_37.HTM">
<LINK REL=NEXT HREF="DB_39.HTM">
<TITLE>3.2   Classes</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING38></A>

<DIV>
<P><A HREF="DB_39.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_37.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING38-0></A>
<H1>3.2   Classes</H1>
<P> We have already seen examples of classes in Dylan: <CODE>&lt;integer&gt;</CODE>, <CODE>&lt;single-float&gt;</CODE>, <CODE>&lt;string&gt;</CODE>, and <CODE>&lt;object&gt;</CODE>. </P>
<P>Individual values are called <A NAME=MARKER-2-118></A><B>objects</B>. Each object is a <B>direct <A NAME=MARKER-2-119></A>instance</B> of one particular class. You can use the <CODE>object-class</CODE> function to determine the direct class of an object. For example, in certain implementations, <CODE>7</CODE>, <CODE>12</CODE>, and <CODE>1000</CODE> are direct instances of the class <CODE>&lt;integer&gt;</CODE>: </P>
<PRE>
<I>?</I> <A NAME=MARKER-2-120></A>object-class(1000);
<I>{class &lt;integer&gt;}</I>
</PRE>
<P> The value returned by <CODE>object-class</CODE> is the <CODE>&lt;integer&gt;</CODE> class itself. The appearance of a class, method, or generic function in a listener depends on the Dylan environment. We have chosen a simple appearance of classes for this book.</P>
<P>All the classes that we have seen so far are built-in classes, provided by Dylan. In <A HREF="DB_45.HTM#MARKER-9-156">Chapter 4,  <I>User-Defined Classes and Methods</I></A>, we show how to define new classes.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_39.HTM#HEADING39-0"><B>3.2.1  </B> - Class inheritance</A>
<DD>
<DT><A REL=BELOW HREF="DB_40.HTM#HEADING40-0"><B>3.2.2  </B> - Relationship between classes and methods</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_39.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_37.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
