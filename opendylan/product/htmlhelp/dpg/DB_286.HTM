<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_285.HTM">
<LINK REL=PREV HREF="DB_285.HTM">
<LINK REL=NEXT HREF="DB_287.HTM">
<TITLE>18.3.1   Construction of the class precedence list</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING286></A>

<DIV>
<P><A HREF="DB_287.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_285.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING286-0></A>
<H1>18.3.1   Construction of the class precedence list</H1>
<P> To understand how Dylan determines the class precedence list, recall that the <CODE>define class</CODE> form for a class includes a list of superclasses. Remember that we defined <CODE>&lt;aircraft&gt;</CODE> as follows:</P>
<PRE>
define abstract class &lt;aircraft&gt; (&lt;flying-vehicle&gt;, &lt;ground-vehicle&gt;)
  ...
end class &lt;aircraft&gt;;
</PRE>
<P> Here, we have listed the superclasses as <CODE>&lt;flying-vehicle&gt;</CODE> and <CODE>&lt;ground-vehicle&gt;</CODE>, in that order.</P>
<P>In creating the class precedence list for a class, Dylan uses the ordering of the list of direct superclasses in the <CODE>define class</CODE> form for that class. Dylan relies on the following rules:</P>
<P>1.  The class being defined takes precedence over all its direct superclasses.</P>
<P>2.  Each direct superclass in the list takes precedence over all direct superclasses that appear later in the list.</P>
<P> These rules establish an ordering of a class and its direct superclasses, called the <B>local precedence order</B>.</P>
<P>We listed <CODE>&lt;flying-vehicle&gt;</CODE> before <CODE>&lt;ground-vehicle&gt;</CODE> in the list of superclasses of <CODE>&lt;aircraft&gt;</CODE>, so, when we apply these rules, we see that, for the <CODE>&lt;aircraft&gt;</CODE> class, <CODE>&lt;flying-vehicle&gt;</CODE> must have precedence higher than that of <CODE>&lt;ground-vehicle&gt;</CODE>. The local precedence order for <CODE>&lt;aircraft&gt;</CODE> is as follows:</P>
<PRE>
&lt;aircraft&gt;, &lt;flying-vehicle&gt;, &lt;ground-vehicle&gt;
</PRE>
<P> The local precedence order for a class establishes an ordering of a class and its <I>direct</I> superclasses. But our goal is to produce an overall class precedence list, which establishes an ordering of the class and <I>all</I> its superclasses, direct and indirect. In constructing the class precedence list for a class, Dylan follows two steps:</P>
<P>1.  Construct the local precedence order for the class and its direct superclasses, based on the order in which the direct superclasses appear in the <CODE>define class</CODE> form for the class.</P>
<P>2.  Construct the overall class precedence list for the class by merging the class's local precedence order with the class precedence lists of the class's direct superclasses.</P>
<P> Notice that this procedure is recursive! But it is guaranteed to terminate, because no class can be its own superclass.</P>
<P>The resulting class precedence list must be consistent with the local precedence order of the class, and with the class precedence list of each direct superclass. If class <CODE>&lt;a&gt;</CODE> precedes class <CODE>&lt;b&gt;</CODE> in the class precedence list, then <CODE>&lt;b&gt;</CODE> cannot precede <CODE>&lt;a&gt;</CODE> in either the local precedence order or the class precedence list for any direct superclass. Because of the recursive procedure for constructing it, the class precedence list must be consistent with the local precedence orders and class precedence lists of <I>all</I> the class's superclasses, rather than just with those of the direct superclasses.</P>
<P>We can now see how Dylan computes the class precedence list for the <CODE>&lt;B707&gt;</CODE> class:</P>
<P>1.  Construct the local precedence order for <CODE>&lt;B707&gt;</CODE> and its only direct superclass, <CODE>&lt;commercial-aircraft&gt;</CODE>. The result is as follows: <CODE>&lt;B707&gt;</CODE>, <CODE>&lt;commercial-aircraft&gt;</CODE>.</P>
<P>2.  Merge the local precedence order with the class precedence list of the only direct superclass, <CODE>&lt;commercial-aircraft&gt;</CODE>.</P>
<P> Dylan must now use these rules, recursively, to compute the class precedence list of <CODE>&lt;commercial-aircraft&gt;</CODE>. In doing so, Dylan must compute recursively the class precedence list of the only direct superclass of <CODE>&lt;commercial-aircraft&gt;</CODE>: <CODE>&lt;aircraft&gt;</CODE>. This process continues until Dylan has recursively computed the class precedence lists for all superclasses of <CODE>&lt;B707&gt;</CODE>. Finally, Dylan finishes constructing the class precedence list for <CODE>&lt;B707&gt;</CODE> itself. <A HREF="#MARKER-9-718">Table 18.1</A> shows the results.</P>
<P>One implication of this procedure is that, if a class inherits a superclass via two different paths, the superclass in common must have precedence lower than that of any of its subclasses. For example, the <CODE>&lt;object&gt;</CODE> class is a superclass of</P>
<TABLE BORDER=1><CAPTION><P>Table 18.1   <A NAME=MARKER-9-718></A>Class precedence lists for <CODE>&lt;B707&gt;</CODE> and its superclasses.</P>
</CAPTION><TR VALIGN=TOP><TH><P>Class</P>
</TH><TH><P>Local precedence order</P>
</TH><TH><P>Class precedence list</P>
</TH></TR><TR VALIGN=TOP><TD><PRE>
&lt;object&gt;
</TD><TD>&lt;object&gt;
</TD><TD>&lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;physical-object&gt;
</TD><TD>&lt;physical-object&gt;, &lt;object&gt;
</TD><TD>&lt;physical-object&gt;, &lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;vehicle&gt;
</TD><TD>&lt;vehicle&gt;, &lt;physical-object&gt;
</TD><TD>&lt;vehicle&gt;, &lt;physical-object&gt;, &lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;ground-vehicle&gt;
</TD><TD>&lt;ground-vehicle&gt;, &lt;vehicle&gt;
</TD><TD>&lt;ground-vehicle&gt;, &lt;vehicle&gt;, &lt;physical-object&gt;, &lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;flying-vehicle&gt;
</TD><TD>&lt;flying-vehicle&gt;, &lt;vehicle&gt;
</TD><TD>&lt;flying-vehicle&gt;, &lt;vehicle&gt;, &lt;physical-object&gt;, &lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;aircraft&gt;
</TD><TD>&lt;aircraft&gt;, &lt;flying-vehicle&gt;, &lt;ground-vehicle&gt;
</TD><TD>&lt;aircraft&gt;, &lt;flying-vehicle&gt;, &lt;ground-vehicle&gt;, &lt;vehicle&gt;, &lt;physical-object&gt;, &lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;commercial-aircraft&gt;
</TD><TD>&lt;commercial-aircraft&gt;, &lt;aircraft&gt;
</TD><TD>&lt;commercial-aircraft&gt;, &lt;aircraft&gt;, &lt;flying-vehicle&gt;, &lt;ground-vehicle&gt;, &lt;vehicle&gt;, &lt;physical-object&gt;, &lt;object&gt;
</TD></TR><TR VALIGN=TOP><TD>&lt;B707&gt;
</TD><TD>&lt;B707&gt;, &lt;commercial-aircraft&gt;
</TD><TD>&lt;B707&gt;, &lt;commercial-aircraft&gt;, &lt;aircraft&gt;, &lt;flying-vehicle&gt;, &lt;ground-vehicle&gt;, &lt;vehicle&gt;, &lt;physical-object&gt;, &lt;object&gt;
</TD></TR></TABLE></PRE>
<P> every class (except itself). This class must have lower precedence than any of its subclasses, so it appears last in every class precedence list. The class precedence list is consistent with the rule that a subclass is more specific than are any of its superclasses.</P>
<P> </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_287.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_285.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
