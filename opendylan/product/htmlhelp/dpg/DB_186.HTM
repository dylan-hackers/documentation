<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_182.HTM">
<LINK REL=PREV HREF="DB_185.HTM">
<LINK REL=NEXT HREF="DB_187.HTM">
<TITLE>12.3.4   Application of a function to arguments</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING186></A>

<DIV>
<P><A HREF="DB_187.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_185.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING186-0></A>
<H1>12.3.4   Application of a function to arguments</H1>
<P> The Dylan function <CODE>apply<A NAME=MARKER-2-563></A></CODE> takes as arguments a functio<A NAME=MARKER-2-564></A>n and one or more additional arguments, the final one of which must be a sequence. The <CODE>apply</CODE> function calls its first argument -- the function -- and passes that function the remaining arguments to <CODE>apply</CODE>. But instead of passing its final argument as a sequence, it passes each element of the sequence as an individual argument.</P>
<P>The <CODE>apply</CODE> function is perhaps most useful in the body of a function that receives a variable number of arguments and must pass those arguments to another function that also takes a variable number of arguments. For example, we can use <CODE>apply</CODE> to write a recursive version of the <CODE>sum</CODE> function that we defined iteratively in <A HREF="DB_177.HTM#MARKER-9-514">Section 12.2.3, page 172</A>:</P>
<PRE>
<I>// Sum one or more values
</I>define method sum (value, #rest more-values)
<I>  // If only one value, that is the answer
</I>  if (empty?(more-values))
    value;
<I>  // Otherwise, add the first value to the sum of the rest
</I>  else
    value + apply(sum, more-values);
  end if;
end method sum;
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_187.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_185.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
