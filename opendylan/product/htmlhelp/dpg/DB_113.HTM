<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_110.HTM">
<LINK REL=PREV HREF="DB_112.HTM">
<LINK REL=NEXT HREF="DB_114.HTM">
<TITLE>9.3   Method dispatch and nonclass types</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING113></A>

<DIV>
<P><A HREF="DB_114.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_112.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING113-0></A>
<H1>9.3   <A NAME=MARKER-9-297></A>Method <A NAME=MARKER-2-298></A>dispatch and nonclass types</H1>
<P> In this section, we describe the implications for method dispatch of using nonclass types as parameter specializers. This advanced topic is included as reference material; you can skip it safely if you prefer. The description that we give here is meant to provide a general understanding, and does not cover all cases. For exact details, you should consult <I>The Dylan Reference Manual</I>.</P>
<P>Recall that, when a generic function is called, Dylan determines which method to invoke by comparing the required <B>arguments</B> passed to the generic function with the types of the corresponding <B>parameters</B> of the generic function's methods. Dylan uses the following procedure, assuming that there is only one required argument:</P>
<P>1.  Find all the applicable methods. A method is applicable if the required argument is an instance of the type of the specialized parameter.</P>
<P>2.  Sort the applicable methods in order of specificity. One method is more specific than another if the type of its specialized parameter is a <A NAME=MARKER-2-299></A><B>proper subtype</B> of the type of the other method's specialized parameter. For definitions of "proper subtype" in various situations, see Sections <A HREF="DB_114.HTM#MARKER-9-300">9.3.1</A> through <A HREF="DB_118.HTM#MARKER-9-309">9.3.5</A>.</P>
<P>(In the presence of multiple inheritance, the specificity rule is more complex. For more information, see <A HREF="DB_288.HTM#MARKER-9-739">Section 18.4, page 300</A>.)</P>
<P>3.  Call the most specific method.</P>
<P> (If there is more than one required argument, Dylan constructs the sorted list of methods by combining separate sorted lists for all required arguments.)</P>
<P>For any given argument and any given set of parameter types, Dylan has to answer two questions:</P>
<P>1.  Is the argument an instance of a given type? The answer determines method applicability.</P>
<P>2.  Is one type a proper subtype of another type? The answer determines method specificity.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_114.HTM#HEADING114-0"><B>9.3.1  </B> - Method dispatch and classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_115.HTM#HEADING115-0"><B>9.3.2  </B> - Method dispatch and singletons</A>
<DD>
<DT><A REL=BELOW HREF="DB_116.HTM#HEADING116-0"><B>9.3.3  </B> - Method dispatch and unions</A>
<DD>
<DT><A REL=BELOW HREF="DB_117.HTM#HEADING117-0"><B>9.3.4  </B> - Method dispatch and limited integers</A>
<DD>
<DT><A REL=BELOW HREF="DB_118.HTM#HEADING118-0"><B>9.3.5  </B> - Method dispatch and limited collections</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_114.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_112.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
