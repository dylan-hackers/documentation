<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_174.HTM">
<LINK REL=PREV HREF="DB_177.HTM">
<LINK REL=NEXT HREF="DB_179.HTM">
<TITLE>12.2.4   Value declarations</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING178></A>

<DIV>
<P><A HREF="DB_179.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_177.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING178-0></A>
<H1>12.2.4   <A NAME=MARKER-9-526></A>Value declarations</H1>
<P> A function definition's value declaration<A NAME=MARKER-2-527></A> follows the parameter list and is preceded by <CODE>=&gt;</CODE>. The syntax of a value declaration is similar to that of a parameter list. If the function returns no values, the value declaration is an empty set of parentheses. Otherwise, the declaration can contain separate declarations for all returned values, separated by commas. Each of these individual declarations consists of a name and, optionally, <CODE>::</CODE> followed by a type. The name does not specify a variable and has no use other than documentation. But the returned value that corresponds to the declaration must be of the declared type, or Dylan signals an error. The default return value type is <CODE>&lt;object&gt;</CODE>.</P>
<P>A value declaration can also end with <CODE>#re<A NAME=MARKER-2-528></A>st</CODE> followed by a name and, optionally, <CODE>::</CODE> and a type. This declaration indicates that the function can return any number of additional arguments, each of which must be of the specified type.</P>
<P>If a function has no explicit value declaration, the default declaration is <CODE>(#rest x :: &lt;object&gt;)</CODE>. This declaration indicates that the function can return any number of arguments of any type.</P>
<P>The value declaration determines the number and types of values that the function returns, even if the last expression in the function's body returns a <BR>different number of values. If the function's body returns fewer values than are declared, the function defaults the remaining values to <CODE>#f</CODE> and returns them. (But if the value declaration specifies a type for any of these values, and if <CODE>#f</CODE> is not an instance of that type, Dylan signals an error.) If the function's body returns more values than are declared, the function returns the additional values if the declaration contains <CODE>#rest</CODE>; otherwise, the function discards the additional values.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_179.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_177.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
