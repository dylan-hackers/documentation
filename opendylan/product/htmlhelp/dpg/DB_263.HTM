<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_262.HTM">
<LINK REL=PREV HREF="DB_262.HTM">
<LINK REL=NEXT HREF="DB_264.HTM">
<TITLE>17.2.1   Physical objects</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING263></A>

<DIV>
<P><A HREF="DB_264.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_262.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING263-0></A>
<H1>17.2.1   Physical objects</H1>
<P> The classes that follow describe fundamental attributes of tangible objects.</P>
<P> </P>
<TABLE BORDER=1><TR VALIGN=TOP><TH><P> The <CODE>airport-classes.dylan</CODE> file. </P>
</TH></TR><TR VALIGN=TOP><TD><PRE>
module: airport
<I>// PHYSICAL OBJECTS AND SIZE</I>
<I>// Used to keep track of object dimensions and object capacities
// All dimensions are in feet
</I>define class &lt;size&gt; (&lt;object&gt;)
  slot length :: &lt;positive-integer&gt;, init-keyword: length:;
  slot width :: &lt;positive-integer&gt;, init-keyword: width:;
  slot height :: &lt;positive-integer&gt;, init-keyword: height:;
end class &lt;size&gt;; 
</TD></TR><TR VALIGN=TOP><TD>define abstract class &lt;physical-object&gt; (&lt;object&gt;)
  slot current-position :: &lt;position&gt;, init-keyword: current-position:;
  slot physical-size :: &lt;size&gt;, init-keyword: physical-size:;
end class &lt;physical-object&gt;; 
</TD></TR><TR VALIGN=TOP><TD>define method say (physical-object :: &lt;physical-object&gt;) =&gt; ()
  format-out(&quot;object at &quot;);
  say(physical-object.current-position);
end method say; 
</TD></TR></TABLE></PRE>
<P> In the preceding portion of the <CODE>airport-classes.dylan</CODE> file, we define the class <CODE>&lt;size&gt;</CODE>, which allows us to specify the external dimensions and container volume of various objects. For example, we might want to specify that certain gate areas might be too small to hold the large aircraft. We also define the base class for all tangible objects, <CODE>&lt;physical-object&gt;</CODE>.</P>
<P>Next, we define the classes where aircraft are normally located.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_264.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_262.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
