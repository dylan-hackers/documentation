<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_45.HTM">
<LINK REL=PREV HREF="DB_45.HTM">
<LINK REL=NEXT HREF="DB_47.HTM">
<TITLE>4.1   Requirements of the time and position classes and methods</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING46></A>

<DIV>
<P><A HREF="DB_47.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_45.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING46-0></A>
<H1>4.1   Requirements of the time and position classes and methods</H1>
<P> Our eventual goal in this book is to develop a sample application based on an airport theme. The sample application handles the scheduling of aircraft that are arriving into and departing from an airport. For more information, see <A HREF="DB_243.HTM#MARKER-9-678">Chapter 15,  <I>Design of the Airport Application</I></A>. </P>
<P>We know that, for our airport application, we need to represent time. There are several ways to represent time. We could say that an event happened 2 hours ago (a time offset). We could say that an event happened at 21:30 (a time of day). We must represent both kinds of time in our time library, and we must provide a way to print representations of both. In this chapter, we define a class named <CODE>&lt;time-of-day&gt;</CODE>, and we define a method that prints a representation of <CODE>&lt;time-of-day&gt;</CODE>. In <A HREF="DB_63.HTM#MARKER-9-201">Chapter 5,  <I>Class Inheritance</I></A>, we define the <CODE>&lt;time-offset&gt;</CODE> class, and a method that prints a representation of <CODE>&lt;time-offset&gt;</CODE>.</P>
<P>The airport application also requires us to represent physical objects (such as aircraft), and the positions (locations) of physical objects. In <A HREF="DB_92.HTM#MARKER-9-264">Chapter 7</A>,<BR><A HREF="DB_92.HTM#MARKER-9-264"><I>Modularity</I></A>, we define classes that represent physical objects and positions. </P>
<P>Eventually, we need to be able to add times, to compare times for similarity, and to determine which of two times is greater than the other. We implement those operations in <A HREF="DB_84.HTM#MARKER-9-241">Chapter 6,  <I>Multimethods</I></A>.</P>
<P>We package the result of all our work into a complete and working library, in <A HREF="DB_103.HTM#MARKER-9-278">Chapter 8,  <I>A Simple Library</I></A>. Later, we refine this library to achieve greater modularity and extensibility. The final result is given in <A HREF="DB_223.HTM#MARKER-9-666">Chapter 14,  <I>Four Complete Libraries</I></A>.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_47.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_45.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
