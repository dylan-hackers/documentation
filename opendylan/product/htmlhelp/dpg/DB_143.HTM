<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_141.HTM">
<LINK REL=PREV HREF="DB_142.HTM">
<LINK REL=NEXT HREF="DB_144.HTM">
<TITLE>11.2.2   Creation of vectors and access to elements</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING143></A>

<DIV>
<P><A HREF="DB_144.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_142.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING143-0></A>
<H1>11.2.2   <A NAME=MARKER-9-381></A>Creation of <A NAME=MARKER-2-382></A>vectors and access to elements</H1>
<P> There are several ways to create collections. One way is to create a collection by using <CODE>make</CODE>. For example, here we create a vector that contains two elements:</P>
<PRE>
<I>? </I>define variable *my-vector* = make(&lt;vector&gt;, size: 2);
</PRE>
<P> We can change the first and second elements: </P>
<PRE>
<I>? </I>*my-vector*[0] := 5;
<I>5</I>
<I>? </I>*my-vector*[1] := 3;
<I>3</I>
<I>? </I>*my-vector*;
<I>#[5, 3]</I>
</PRE>
<P> If you want to create a sequence of a certain size, with every element having the same value, you can specify a <CODE>fill</CODE> keyword argument to <CODE>make</CODE>. The default value for the <CODE>fill</CODE> keyword parameter is <CODE>#f</CODE>. Thus, if you had read an element of <CODE>*my-vector*</CODE> before you wrote numbers into it, you would have received <CODE>#f</CODE>.</P>
<P>We can create and initialize a vector to different values all at once by using a built-in constructor. A <A NAME=MARKER-2-383></A><B>constructor</B> is a function that creates an instance; using it is a shorthand for calling <CODE>make</CODE>. Here, we use the <A NAME=MARKER-2-384></A><CODE>vector</CODE> constructor function to create a vector and to initialize it with data.</P>
<PRE>
<I>?</I> define variable *my-vector* = vector(5, 3);
<I>?</I> *my-vector*;
<I>#[5, 3]</I>
</PRE>
<P> As we saw in <A HREF="DB_142.HTM#MARKER-9-376">Section 11.2.1</A>, certain collections have a literal syntax that enables you to specify a particular data structure as part of the program: </P>
<PRE>
<I>? </I>define variable *my-vector* = #[5, 3];
<I>? </I>*my-vector*;
<I>#[5, 3]</I>
</PRE>
<P> <A HREF="#MARKER-9-368">Figure 11.2</A> shows how you can picture the vector that we just created.</P>
<TABLE BORDER=1><CAPTION><P>Figure 11.2   <A NAME=MARKER-9-368></A>Diagram of the vector <CODE>#[5, 3]</CODE>.</P>
</CAPTION><TR VALIGN=TOP><TD><P> <IMG ALIGN=TOP SRC=DB14IM17.GIF></P>
</TD></TR></TABLE><P> You might think that <CODE>*my-vector*</CODE> is a direct instance of <CODE>&lt;vector&gt;</CODE>, but it is not: The <CODE>&lt;vector&gt;</CODE> class is abstract, but instantiable. When you use the <CODE>vector</CODE> function, or use <CODE>make</CODE> with <CODE>&lt;vector&gt;</CODE>, the result is a general instance of <A NAME=MARKER-2-385></A><CODE>&lt;simple-object-vector&gt;</CODE>. You specify the size of a <CODE>&lt;simple-object-vector&gt;</CODE> when you create one, and you cannot change that size later. If you need a vector that can change size, use the <A NAME=MARKER-2-386></A><CODE>&lt;stretchy-vector&gt;</CODE> class. See <A HREF="DB_253.HTM#MARKER-9-692">Section 16.1.1, page 246</A>, for an example that uses stretchy vectors. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_144.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_142.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
