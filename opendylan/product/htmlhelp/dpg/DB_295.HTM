<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=PREV HREF="DB_294.HTM">
<LINK REL=NEXT HREF="DB_296.HTM">
<TITLE>19 Performance and Flexibility</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING295></A>

<DIV>
<P><A HREF="DB_296.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_294.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Dylan Programming</P>

</DIV>
<A NAME=HEADING295-0></A>
<H1>19 <A NAME=MARKER-9-761></A>Perfo<A NAME=MARKER-2-762></A>rmance and Flexibility</H1>
<P> This chapter covers the advanced topic of balancing performance and flexibility in a Dylan program. If you are writing a stand-alone program and are comfortable with using type constraints as you would in a static language, you do not need to read this chapter carefully. You may want to skim the chapter, so that you have an idea of what options are available to you in the future for larger or more complex projects.</P>
<P>We start out by describing what Dylan's execution model is, and what we mean by an <I>efficiency model</I>. The efficiency model can help a programmer to choose the appropriate language features for a particular problem. We also explore advanced features of Dylan that will let the programmer negotiate with the compiler to trade away part of the flexibility of the execution model for enhanced performance.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_296.HTM#HEADING296-0"><B>19.1  </B> - Execution model</A>
<DD>
<DT><A REL=BELOW HREF="DB_297.HTM#HEADING297-0"><B>19.2  </B> - Efficiency model</A>
<DD>
<DT><A REL=BELOW HREF="DB_298.HTM#HEADING298-0"><B>19.3  </B> - Type constraints</A>
<DD>
<DT><A REL=BELOW HREF="DB_299.HTM#HEADING299-0"><B>19.4  </B> - Limited types</A>
<DD>
<DT><A REL=BELOW HREF="DB_300.HTM#HEADING300-0"><B>19.5  </B> - Enumerations</A>
<DD>
<DT><A REL=BELOW HREF="DB_301.HTM#HEADING301-0"><B>19.6  </B> - Direct methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_302.HTM#HEADING302-0"><B>19.7  </B> - Tail calls</A>
<DD>
<DT><A REL=BELOW HREF="DB_303.HTM#HEADING303-0"><B>19.8  </B> - Typed generic functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_304.HTM#HEADING304-0"><B>19.9  </B> - Open generic functions</A>
<DD>
<DT><A REL=BELOW HREF="DB_305.HTM#HEADING305-0"><B>19.10  </B> - Open classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_306.HTM#HEADING306-0"><B>19.11  </B> - Sealed domains</A>
<DD>
<DT><A REL=BELOW HREF="DB_307.HTM#HEADING307-0"><B>19.12  </B> - Slot accessors</A>
<DD>
<DT><A REL=BELOW HREF="DB_308.HTM#HEADING308-0"><B>19.13  </B> - Primary classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_309.HTM#HEADING309-0"><B>19.14  </B> - Additional efficiency information</A>
<DD>
<DT><A REL=BELOW HREF="DB_315.HTM#HEADING315-0"><B>19.15  </B> - Summary</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_296.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_294.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
