<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_34.HTM">
<LINK REL=PREV HREF="DB_34.HTM">
<LINK REL=NEXT HREF="DB_36.HTM">
<TITLE>3.1   Method definitions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING35></A>

<DIV>
<P><A HREF="DB_36.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_34.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING35-0></A>
<H1>3.1   <A NAME=MARKER-9-113></A>Method definitions</H1>
<P> In Dylan, we define <A NAME=MARKER-2-114></A><A NAME=MARKER-2-115></A>methods -- a <B>method</B> is a kind of function. We define a <BR>simple method, <CODE>say-hello</CODE>, as follows:</P>
<PRE>
define method say-hello ()
  format-out(&quot;hello, world\n&quot;);
end;
</PRE>
<P> We call <CODE>say-hello</CODE> as follows:</P>
<PRE>
<I>? </I>say-hello();
<I>hello, world</I>
</PRE>
<P> We use <CODE>define method</CODE> to define a method named <CODE>say-hello</CODE>. Just after the <BR>name <CODE>say-hello</CODE>, we specify the method's <B>parameter list</B>, <CODE>()</CODE>. The parameter list of this method is empty, meaning that this method takes no arguments. The call <BR>to <CODE>say-hello</CODE> provides an empty argument list, meaning that there are no arguments in the call. </P>
<P>The body of the <CODE>say-hello</CODE> method has one expression -- a call to <BR><CODE>format-out</CODE>. A method returns whatever is returned by the expression executed last in its body. In general, a method can return a single value, multiple values, <BR>or no value at all. The <CODE>say-hello</CODE> method returns what <CODE>format-out</CODE> returns -- no value at all. In the call to <CODE>say-hello</CODE>, we see the output of <CODE>format-out</CODE> in the <BR>listener; we see output and not a returned value (because no value is returned).</P>
<P>  </P>
<TABLE BORDER=1><TR VALIGN=TOP><TD><P> <B>Usage note: </B>In this chapter, we define methods that call the <CODE>format-out</CODE> function. Because <CODE>format-out</CODE> is in the <CODE>format-out</CODE> module, we need to make that module available. There are two ways to do so. The first way is to work in files, as described in <A HREF="DB_30.HTM#MARKER-9-88">Section 2.5</A>. The second way is to use a gesture or command in your Dylan environment to make the <CODE>format-out</CODE> module accessible. Then, you can simply enter the method definitions into the <BR>listener.</P>
</TD></TR></TABLE><P> </P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_36.HTM#HEADING36-0"><B>3.1.1  </B> - A method that takes an argument</A>
<DD>
<DT><A REL=BELOW HREF="DB_37.HTM#HEADING37-0"><B>3.1.2  </B> - Two methods with the same name</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_36.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_34.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
