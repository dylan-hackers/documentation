<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=PREV HREF="DB_44.HTM">
<LINK REL=NEXT HREF="DB_46.HTM">
<TITLE>4 User-Defined Classes and Methods</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING45></A>

<DIV>
<P><A HREF="DB_46.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_44.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Dylan Programming</P>

</DIV>
<A NAME=HEADING45-0></A>
<H1>4 <A NAME=MARKER-9-156></A>User-De<A NAME=MARKER-2-157></A>fined Classes and Methods</H1>
<P> In this chapter, we show the most basic techniques for writing object-oriented code in Dylan. We define a class, make instances of the class, initialize slots of the instances, and get and set the values of slots. We define methods, and call them on the instances. One method returns multiple values -- and that is an extremely useful technique. Another method uses local variables. </P>
<P>In this chapter, we start to develop an example of a library that represents different kinds of time. A library is a complete unit of code that can be used by many different clients, where a client can be another library or an application program. In Chapters <A HREF="DB_63.HTM#MARKER-9-201">5</A> and <A HREF="DB_84.HTM#MARKER-9-241">6</A>, we expand and refine the example that we begin in this chapter. <A HREF="DB_103.HTM#MARKER-9-278">Chapter 8,  <I>A Simple Library</I></A>, shows the result: a complete and working library.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_46.HTM#HEADING46-0"><B>4.1  </B> - Requirements of the time and position classes and methods</A>
<DD>
<DT><A REL=BELOW HREF="DB_47.HTM#HEADING47-0"><B>4.2  </B> - User-defined classes</A>
<DD>
<DT><A REL=BELOW HREF="DB_50.HTM#HEADING50-0"><B>4.3  </B> - Use of make to create an instance</A>
<DD>
<DT><A REL=BELOW HREF="DB_51.HTM#HEADING51-0"><B>4.4  </B> - Getters and setters of slot values</A>
<DD>
<DT><A REL=BELOW HREF="DB_52.HTM#HEADING52-0"><B>4.5  </B> - Initialization of slots when instances are made</A>
<DD>
<DT><A REL=BELOW HREF="DB_55.HTM#HEADING55-0"><B>4.6  </B> - Methods for handling time</A>
<DD>
<DT><A REL=BELOW HREF="DB_62.HTM#HEADING62-0"><B>4.7  </B> - Summary</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_46.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_44.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
