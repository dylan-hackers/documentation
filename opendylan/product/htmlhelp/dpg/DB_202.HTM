<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="DB_1.HTM">
<LINK REL=UP HREF="DB_190.HTM">
<LINK REL=PREV HREF="DB_201.HTM">
<LINK REL=NEXT HREF="DB_203.HTM">
<TITLE>13.4   Module definition</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING202></A>

<DIV>
<P><A HREF="DB_203.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_201.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>

</DIV>
<A NAME=HEADING202-0></A>
<H1>13.4   <A NAME=MARKER-9-634></A>Module definition</H1>
<P> Enough theory. Let's see how modules and libraries can be used in practice by considering the classes and methods for representing and manipulating times that we defined in <A HREF="DB_103.HTM#MARKER-9-278">Chapter 8,  <I>A Simple Library</I></A>, and showing how they might be packaged into a reusable software component.</P>
<P>First, let's examine what the external protocol of our time library might be. We have defined two kinds of time that can be created: <CODE>&lt;time-of-day&gt;</CODE> and <CODE>&lt;time-offset&gt;</CODE>. We have a generic function for printing times, <CODE>say</CODE>, and one, perhaps not so obvious, utility function for creating new times, <CODE>encode-total-<BR>seconds</CODE>.</P>
<P>We define a method, <CODE>\+</CODE>, for adding times, but a method is not a protocol. The protocol for the generic function <CODE>\+</CODE> is defined by the Dylan library, which already exports it, for any Dylan program. When we define our method for adding times, we are extending that protocol; we are not creating a new one.</P>
<P>The <CODE>decode-total-seconds</CODE> function, the <CODE>&lt;sixty-unit&gt;</CODE> class, and several other functions are used internally only, so they are not part of the external <BR>protocol. </P>
<P>Although <CODE>&lt;time&gt;</CODE> is used internally only within our library, it is good practice to make abstract superclasses such as <CODE>&lt;time&gt;</CODE> part of a library interface. When we do so, a client of the library that does not care which specific kind of time is being manipulated can simply use <CODE>&lt;time&gt;</CODE>.</P>
<P>Thus, five items (<CODE>&lt;time&gt;</CODE>, <CODE>&lt;time-of-day&gt;</CODE>, <CODE>&lt;time-offset&gt;</CODE>, <CODE>say</CODE>, and <CODE>encode-total-seconds</CODE>) define the external protocol of the time library.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DL>
<DT><A REL=BELOW HREF="DB_203.HTM#HEADING203-0"><B>13.4.1  </B> - Roles of modules</A>
<DD>
<DT><A REL=BELOW HREF="DB_204.HTM#HEADING204-0"><B>13.4.2  </B> - The interface module</A>
<DD>
<DT><A REL=BELOW HREF="DB_205.HTM#HEADING205-0"><B>13.4.3  </B> - The implementation module</A>
<DD>
</DL>
</DL>


</DIV>

<HR>
<ADDRESS>Dylan Programming - 9 Apr 1999</ADDRESS>
<P><A HREF="DB_203.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="DB_201.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="DB_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="DB_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="DB_349.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>N Feinberg/S E Keene/R Mathews/P Tucker Withington, DYLAN PROGRAMMING, (c) 1997 Harlequin Inc. Reproduced by permission of Addison-Wesley Longman Publishing Company, Inc.  All rights reserved. No further copying, downloading or transmitting of this material is allowed without the prior written permission of the publisher.</P>

</DIV>
</BODY>
</HTML>
