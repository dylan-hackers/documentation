<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="drm_1.htm">
<LINK REL=UP HREF="drm_87.htm">
<LINK REL=PREV HREF="drm_92.htm">
<LINK REL=NEXT HREF="drm_94.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=drm.css TYPE="text/css">
<TITLE> Collections</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV CLASS=WM-DIV-BODY>
<A NAME=HEADING93></A>

<DIV CLASS=WM-DIV-HEADERS>
<P CLASS=HEADER><A HREF="drm_94.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_92.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_87.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=HEADER>11 The Built-In Classes</P>

</DIV>
<A NAME=HEADING93-0></A>
<A NAME="UID-Built-In_Classes-9369"></A>
<H1 CLASS=H1.Heading1> <A NAME=MARKER-9-1398></A><A NAME=MARKER-2-1399></A>Collections</H1>
<P CLASS=T1.Text1>This section describes the built-in collections, Dylan's aggregate data structures.</P>
<P CLASS=T1.Text1>Collections are used to hold groups of objects. Collections support iteration as well as random access through collection keys. An overview of collections is given in <A HREF="drm_58.htm#MARKER-9-963" CLASS=T1.Text1>Chapter 8, "Collections."</A></P>
<P CLASS=T1.Text1><A HREF="#MARKER-9-1400" CLASS=T1.Text1>Figure 11-4</A> shows the built-in collection classes and some of their characteristics.</P>
<P CLASS=Fg.Figure>Figure 11-4  <A NAME=MARKER-9-1400></A>The Collection Classes<IMG ALIGN=TOP SRC=dr93ima5.gif></P>
<A NAME=HEADING93-5></A>
<A NAME="UID-Built-In_Classes-416"></A>
<H2 CLASS=H2.Heading2> General Collections</H2>
<A NAME=HEADING93-6></A>
<H3 CLASS=H4.Heading4> <A NAME=MARKER-2-1401></A>&lt;collection&gt; [Open Abstract  Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of collections, aggregate data structures.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;object&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of collections.</P>
<P CLASS=T1.Text1><CODE CLASS="cv T1.Text1">&lt;collection&gt;</CODE> is the root class of the collection class hierarchy. It provides a set of basic operations on all collections.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;collection&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;collection&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-16  Functions on &lt;collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>do</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1810" CLASS=TbT.TblText>Iterates over one or more collections for side effect.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1810" CLASS=TbT.TblText>327</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1812" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in a freshly allocated collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1812" CLASS=TbT.TblText>328</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map-as</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1814" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in a freshly allocated collection of a specified type.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1814" CLASS=TbT.TblText>328</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map-into</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1816" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in an existing mutable collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1816" CLASS=TbT.TblText>329</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>any?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1818" CLASS=TbT.TblText>Returns the first true value obtained by iterating over one or more collections.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1818" CLASS=TbT.TblText>330</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>every?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1821" CLASS=TbT.TblText>Returns true if a predicate returns true when applied to all corresponding elements of a set of collections.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1821" CLASS=TbT.TblText>331</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-17  Generic Functions on &lt;collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>Returns the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>300</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>key-sequence</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1716" CLASS=TbT.TblText>Returns a sequence containing the keys of its collection argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1716" CLASS=TbT.TblText>299</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reduce</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1824" CLASS=TbT.TblText>Combines the elements of a collection and a seed value into a single value by repeatedly applying a binary function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1824" CLASS=TbT.TblText>331</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reduce1</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1826" CLASS=TbT.TblText>Combines the elements of a collection into a single value by repeatedly applying a binary function, using the first element of the collection as the seed value.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1826" CLASS=TbT.TblText>332</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>member?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1834" CLASS=TbT.TblText>Returns true if a collection contains a particular value.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1834" CLASS=TbT.TblText>334</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>find-key</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1837" CLASS=TbT.TblText>Returns the key in a collection such that the corresponding collection element satisfies a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1837" CLASS=TbT.TblText>335</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>key-test</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1714" CLASS=TbT.TblText>Returns the function used by its collection argument to compare keys.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1714" CLASS=TbT.TblText>298</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>forward-<BR>iteration-<BR>protocol</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-2-1540" CLASS=TbT.TblText>Returns a group of functions used to iterate over the elements of a collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-2-1540" CLASS=TbT.TblText>337</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>backward-<BR>iteration-<BR>protocol</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1850" CLASS=TbT.TblText>Returns a group of functions used to iterate over the elements of a collection in reverse order.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1850" CLASS=TbT.TblText>339</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-18  Methods on &lt;collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>=</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>Compares two objects for equality.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>269</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>empty?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1700" CLASS=TbT.TblText>Returns true if its argument is empty.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1700" CLASS=TbT.TblText>294</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>size</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>Returns the size of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>295</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>shallow-copy</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1692" CLASS=TbT.TblText>Returns a copy of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1692" CLASS=TbT.TblText>292</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-19  Methods on singleton(&lt;collection&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-374></A>
<H2 CLASS=H2.Heading2> Explicit Key Collections</H2>
<A NAME=HEADING93-375></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1402></A>&lt;explicit-key-collection&gt;</CODE> [Open Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of all collections that are not sequences. </P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of all collections that are not sequences.</P>
<P CLASS=T1.Text1>This class is disjoint from <CODE CLASS="cv T1.Text1">&lt;sequence&gt;</CODE> because <CODE CLASS="cv T1.Text1">key-test</CODE> is sealed over the domain <CODE CLASS="cv T1.Text1">&lt;sequence&gt;</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;explicit-key-collection&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;explicit-key-collection&gt;</CODE> provides the following operation:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-20  Methods on singleton(&lt;explicit-key-collection&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-417></A>
<A NAME="UID-Built-In_Classes-1533"></A>
<H2 CLASS=H2.Heading2> Sequences</H2>
<A NAME=HEADING93-418></A>
<H3 CLASS=H4.Heading4> <A NAME=MARKER-2-1403></A>&lt;sequence&gt; [Open Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of collections whose keys are consecutive integers starting from zero.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of collections whose keys are consecutive integers starting from zero.</P>
<P CLASS=T1.Text1><A NAME=MARKER-2-1404></A>Sequences must be stable under iteration, and the iteration order must match the order of keys. Thus, the key associated with a sequence's iteration state can be determined by keeping a counter in parallel with the iteration state.</P>
<P CLASS=T1.Text1><CODE CLASS=T1.Text1><A NAME=MARKER-2-1405></A><A NAME=MARKER-2-1406></A><A NAME=MARKER-2-1407></A><A NAME=MARKER-2-1408></A><A NAME=MARKER-2-1409></A><A NAME=MARKER-2-1410></A><A NAME=MARKER-2-1411></A><A NAME=MARKER-2-1412></A><A NAME=MARKER-2-1413></A><A NAME=MARKER-2-1414></A><A NAME=MARKER-2-1415></A><A NAME=MARKER-2-1416></A></CODE>The default methods for <CODE CLASS=T1.Text1>add</CODE>, <CODE CLASS=T1.Text1>add-new</CODE>, <CODE CLASS=T1.Text1>remove</CODE>, <CODE CLASS=T1.Text1>choose</CODE>, <CODE CLASS=T1.Text1>choose-by</CODE>, <CODE CLASS=T1.Text1>intersection</CODE>, <CODE CLASS=T1.Text1>union</CODE>, <CODE CLASS=T1.Text1>remove-duplicates</CODE>, <CODE CLASS=T1.Text1>copy-sequence</CODE>, <CODE CLASS=T1.Text1>concatenate</CODE>, <CODE CLASS=T1.Text1>reverse</CODE>, and <CODE CLASS=T1.Text1>sort</CODE> all return new sequences that are instances of the <CODE CLASS=T1.Text1><A NAME=MARKER-2-1417></A>type-for-copy</CODE> of their primary sequence argument. However, more specialized methods are permitted to choose a more appropriate result class; for example, <CODE CLASS=T1.Text1>copy-sequence</CODE> of a range returns another range, even though the <CODE CLASS=T1.Text1>type-for-copy</CODE> value of a range is the <CODE CLASS=T1.Text1>&lt;list&gt;</CODE> class.</P>
<P CLASS=T1.Text1><CODE CLASS="cv T1.Text1">&lt;sequence&gt;</CODE> is disjoint from <CODE CLASS="cv T1.Text1">&lt;explicit-key-collection&gt;</CODE> because of the sealed domain over the function <CODE CLASS="cv T1.Text1">key-test</CODE> for <CODE CLASS="cv T1.Text1">&lt;sequence&gt;</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;sequence&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;sequence&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-21  Functions on &lt;sequence&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>concatenate</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1800" CLASS=TbT.TblText>Returns the concatenation of one or more sequences in a sequence of a type determined by the <CODE CLASS=TbT.TblText>type-for-copy</CODE> of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1800" CLASS=TbT.TblText>323</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>concatenate-as</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1802" CLASS=TbT.TblText>Returns the concatenation of one or more sequences in a sequence of a specified type.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1802" CLASS=TbT.TblText>324</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>first</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1728" CLASS=TbT.TblText>Returns the first element of a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1728" CLASS=TbT.TblText>303</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>second</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1730" CLASS=TbT.TblText>Returns the second element of a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1730" CLASS=TbT.TblText>304</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>third</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1732" CLASS=TbT.TblText>Returns the third element of a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1732" CLASS=TbT.TblText>304</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-22  Generic Functions on &lt;sequence&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>Adds an element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>309</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1756" CLASS=TbT.TblText>Adds an element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1756" CLASS=TbT.TblText>310</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add-new</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1758" CLASS=TbT.TblText>Adds a new element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1758" CLASS=TbT.TblText>311</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add-new!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1760" CLASS=TbT.TblText>Adds a new element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1760" CLASS=TbT.TblText>312</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1763" CLASS=TbT.TblText>Removes an element from a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1763" CLASS=TbT.TblText>312</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1765" CLASS=TbT.TblText>Removes an element from a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1765" CLASS=TbT.TblText>313</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>choose</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1828" CLASS=TbT.TblText>Returns those elements of a sequence that satisfy a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1828" CLASS=TbT.TblText>333</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>choose-by</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1831" CLASS=TbT.TblText>Returns those elements of a sequence that correspond to those in another sequence that satisfy a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1831" CLASS=TbT.TblText>333</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>intersection</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1788" CLASS=TbT.TblText>Returns the intersection of two sequences.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1788" CLASS=TbT.TblText>319</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>union</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1790" CLASS=TbT.TblText>Returns the union of two sequences.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1790" CLASS=TbT.TblText>320</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove-duplicates</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1792" CLASS=TbT.TblText>Returns a sequence without duplicates.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1792" CLASS=TbT.TblText>321</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove-<BR>duplicates!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1794" CLASS=TbT.TblText>Returns a sequence without duplicates.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1794" CLASS=TbT.TblText>322</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>copy-sequence</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1797" CLASS=TbT.TblText>Returns a freshly allocated copy of some subsequence of a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1797" CLASS=TbT.TblText>323</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>replace-<BR>subsequence!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1804" CLASS=TbT.TblText>Replaces a portion of a sequence with the elements of another sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1804" CLASS=TbT.TblText>325</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reverse</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1778" CLASS=TbT.TblText>Returns a sequence with elements in the reverse order of its argument sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1778" CLASS=TbT.TblText>316</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reverse!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1780" CLASS=TbT.TblText>Returns a sequence with elements in the reverse order of its argument sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1780" CLASS=TbT.TblText>317</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>sort</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1782" CLASS=TbT.TblText>Returns a sequence containing the elements of its argument sequence, sorted.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1782" CLASS=TbT.TblText>318</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>sort!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1784" CLASS=TbT.TblText>Returns a sequence containing the elements of its argument sequence, sorted.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1784" CLASS=TbT.TblText>318</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>last</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1740" CLASS=TbT.TblText>Returns the last element of a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1740" CLASS=TbT.TblText>306</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>subsequence-<BR>position</CODE></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1806" CLASS=TbT.TblText>Returns the position where a pattern appears in a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1806" CLASS=TbT.TblText>326</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-23  Methods on &lt;sequence&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>=</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>Compares two objects for equality.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>269</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>key-test</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1714" CLASS=TbT.TblText>Returns the function used by its collection argument to compare keys.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1714" CLASS=TbT.TblText>298</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-24  Methods on singleton(&lt;sequence&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-837></A>
<A NAME="UID-Built-In_Classes-2739"></A>
<H2 CLASS=H2.Heading2> Mutable Collections</H2>
<A NAME=HEADING93-838></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1418></A>&lt;mutable-collection&gt;</CODE> [Open Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of collections that may be modified.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of collections that may be modified.</P>
<P CLASS=T1.Text1>Every mutable collection is required to allow modification by implementing <CODE CLASS=T1.Text1><A NAME=MARKER-2-1419></A>element-setter</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;mutable-collection&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;mutable-collection&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-25  Functions on &lt;mutable-collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map-into</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1816" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in an existing mutable collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1816" CLASS=TbT.TblText>329</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-26  Generic Functions on &lt;mutable-collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>Sets the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>301</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-27  Methods on &lt;mutable-collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>type-for-copy</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1694" CLASS=TbT.TblText>Returns an appropriate type for creating mutable copies of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1694" CLASS=TbT.TblText>292</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-28  Methods on singleton(&lt;mutable-collection&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-982></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1420></A>&lt;mutable-explicit-key-collection&gt;</CODE> [Open Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of explicit-key-collections that can have elements replaced.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;explicit-key-collection&gt; &lt;mutable-collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of explicit-key-collections that can have elements replaced. </P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;mutable-explicit-key-collection&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;mutable-explicit-key-collection&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-29  Generic Functions on &lt;mutable-explicit-key-collection&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove-key!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1840" CLASS=TbT.TblText>Modifies an explicit key collection so it no longer has a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1840" CLASS=TbT.TblText>335</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-30  Methods on singleton(&lt;mutable-explicit-key-collection&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1057></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1421></A>&lt;mutable-sequence&gt;</CODE> [Open Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of sequences that may be modified.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;sequence&gt; &lt;mutable-collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of sequences that may be modified.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;mutable-sequence&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS="cv Cliche">&lt;mutable-sequence&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-31  Functions on &lt;mutable-sequence&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>first-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1734" CLASS=TbT.TblText>Sets the first element of a mutable sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1734" CLASS=TbT.TblText>304</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>second-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1736" CLASS=TbT.TblText>Sets the second element of a mutable sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1736" CLASS=TbT.TblText>305</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>third-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1738" CLASS=TbT.TblText>Sets the third element of a mutable sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1738" CLASS=TbT.TblText>305</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-32  Generic Functions on &lt;mutable-sequence&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>last-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1742" CLASS=TbT.TblText>Sets the last element of a mutable sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1742" CLASS=TbT.TblText>306</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-33  Methods on singleton(&lt;mutable-sequence&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1194></A>
<A NAME="UID-Built-In_Classes-419"></A>
<H2 CLASS=H2.Heading2> Stretchy Collections</H2>
<A NAME=HEADING93-1195></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1422></A>&lt;stretchy-collection&gt;</CODE> [Open Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of collections that may grow or shrink to accommodate adding or removing elements.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of collections that may grow or shrink to accommodate adding or removing elements.</P>
<P CLASS=T1.Text1><A NAME=MARKER-2-1423></A>Stretchy collections allow <CODE CLASS=T1.Text1><A NAME=MARKER-2-1424></A>element-setter </CODE>to be called with a key that is not present in the collection, expanding the collection as necessary to add a new element in that case. Each concrete subclass of <CODE CLASS=T1.Text1>&lt;stretchy-collection&gt;</CODE> must provide or inherit a method for <CODE CLASS=T1.Text1>element-setter </CODE>that behaves as follows when there is not already an element present for the indicated key:</P>
</DL>
<UL CLASS=B1.Bullet1>
<LI CLASS=B1.Bullet1> If the class is a subclass of <CODE CLASS=B1.Bullet1>&lt;explicit-key-collection&gt;,</CODE> adds a new element to the collection with the indicated key.
<LI CLASS=B1.Bullet1>If the class is a subclass of <CODE CLASS=B1.Bullet1>&lt;sequence&gt;,</CODE> first calls <CODE CLASS=B1.Bullet1>size-setter</CODE> on the key + 1 and the collection to expand the sequence. The key must be a non-negative integer.
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;stretchy-collection&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
</UL>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS="cv Cliche">&lt;stretchy-collection&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-34  Methods on singleton(&lt;stretchy-collection&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1239></A>
<A NAME="UID-Built-In_Classes-420"></A>
<H2 CLASS=H2.Heading2> Arrays</H2>
<A NAME=HEADING93-1240></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1425></A><A NAME=MARKER-9-1426></A><A NAME=MARKER-2-1427></A>&lt;array&gt;</CODE> [Open Abstract Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of sequences whose elements are arranged according to a Cartesian coordinate system.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;mutable-sequence&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The make method on <CODE CLASS=Cliche>singleton(&lt;array&gt;)</CODE> accepts the following keyword arguments. Note that these are not inherited by subclasses of <CODE CLASS="cv Cliche">&lt;array&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>dimensions:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;sequence&gt;</CODE> with elements that are instances of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE>. This argument specifies the dimensions of the array. The size of the sequence specifies the rank (number of dimensions) of the array, and each integer in the sequence specifies the size of a dimension. This argument is required. </P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying an initial value for each element of the array. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of collections whose elements are arranged according to a Cartesian coordinate system.</P>
<P CLASS=T1.Text1>An array element is referred to by a (possibly empty) series of indices. The length of the series must equal the rank of the array. Each index must be a non-negative integer less than the corresponding dimension. An array element may alternatively be referred to by an integer, which is interpreted as a row-major index.</P>
<P CLASS=T1.Text1>Arrays typically use space efficient representations, and the average time required to access a randomly chosen element is typically sublinear to the number of elements.</P>
<P CLASS=T1.Text1>Whe a multi-dimensional array is created, the concrete class that is actually instantiated cannot be any of the specified subclasses of <CODE CLASS="cv T1.Text1">&lt;array&gt;</CODE>, which are all one-dimensional. Every implementation must have one or more concrete subclasses of <CODE CLASS="cv T1.Text1">&lt;array&gt;</CODE> that are used for this purpose. These concrete subclasses have no specified names, and their names are not exported by the Dylan module.</P>
<P CLASS=T1.Text1><A NAME=MARKER-2-1428></A>When a single-dimensional array is created, the array created will be an instance of <CODE CLASS="cv T1.Text1">&lt;vector&gt;</CODE>.</P>
<P CLASS=T1.Text1>Each concrete subclass of <CODE CLASS="cv T1.Text1">&lt;array&gt;</CODE> must either provide or inherit implementations of the functions <CODE CLASS="cv T1.Text1"><A NAME=MARKER-2-1429></A>element</CODE>, <CODE CLASS="cv T1.Text1">element-setter</CODE>, and <CODE CLASS="cv T1.Text1">dimensions</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;array&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;array&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-35  Generic Functions on &lt;array&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>rank</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1706" CLASS=TbT.TblText>Returns the number of dimensions of an array.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1706" CLASS=TbT.TblText>296</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>row-major-index</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1708" CLASS=TbT.TblText>Returns the row-major-index position of an array element.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1708" CLASS=TbT.TblText>297</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>aref</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1724" CLASS=TbT.TblText>Returns the array element indicated by a set of indices.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1724" CLASS=TbT.TblText>302</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>aref-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1726" CLASS=TbT.TblText>Sets the array element indicated by a set of indices.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1726" CLASS=TbT.TblText>302</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>dimensions</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1710" CLASS=TbT.TblText>Returns the dimensions of an array.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1710" CLASS=TbT.TblText>297</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>dimension</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1712" CLASS=TbT.TblText>Returns the size of a specified dimension of an array.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1712" CLASS=TbT.TblText>298</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-36  Methods on &lt;array&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>size</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>Returns the size of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>295</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>rank</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1706" CLASS=TbT.TblText>Returns the number of dimensions of an array.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1706" CLASS=TbT.TblText>296</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>row-major-index</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1708" CLASS=TbT.TblText>Returns the row-major-index position of an array element.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1708" CLASS=TbT.TblText>297</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>aref</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1724" CLASS=TbT.TblText>Returns the array element indicated by a set of indices.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1724" CLASS=TbT.TblText>302</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>aref-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1726" CLASS=TbT.TblText>Sets the array element indicated by a set of indices.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1726" CLASS=TbT.TblText>302</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>dimension</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1712" CLASS=TbT.TblText>Returns the size of a specified dimension of an array.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1712" CLASS=TbT.TblText>298</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-37  Methods on singleton(&lt;array&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1510></A>
<A NAME="UID-Built-In_Classes-16948"></A>
<H2 CLASS=H2.Heading2> Vectors</H2>
<A NAME=HEADING93-1511></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1430></A><A NAME=MARKER-2-1431></A><A NAME=MARKER-9-1432></A>&lt;vector&gt;</CODE> [Open Abstract Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of arrays of rank one (i.e., exactly one dimension).</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;array&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The make method on <CODE CLASS=Cliche>singleton(&lt;vector&gt;)</CODE> accepts the following keyword arguments. Note that these are not inherited by subclasses of <CODE CLASS="cv Cliche">&lt;vector&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the vector. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying an initial value for each element of the vector. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of one-dimensional arrays.</P>
<P CLASS=T1.Text1><CODE CLASS=T1.Text1>&lt;vector&gt;</CODE> has no direct instances; calling <CODE CLASS=T1.Text1>make</CODE> on <CODE CLASS=T1.Text1>&lt;vector&gt;</CODE> returns an instance of <CODE CLASS=T1.Text1>&lt;simple-object-vector&gt;</CODE>.</P>
<P CLASS=T1.Text1>Each concrete subclass of <CODE CLASS=T1.Text1>&lt;vector&gt;</CODE> must either provide or inherit an implementation of <A NAME=MARKER-2-1433></A><CODE CLASS=T1.Text1>size</CODE> that shadows the method provided by <CODE CLASS=T1.Text1>&lt;array&gt;</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;vector&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;vector&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-38  Constructors for &lt;vector&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>vector</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1567" CLASS=TbT.TblText>Creates and returns a freshly allocated vector.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1567" CLASS=TbT.TblText>267</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-39  Methods on &lt;vector&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>dimensions</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1710" CLASS=TbT.TblText>Returns the dimensions of an array.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1710" CLASS=TbT.TblText>297</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>Returns the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>300</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-40  Methods on singleton(&lt;vector&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1652></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1434></A><A NAME=MARKER-9-1435></A>&lt;simple-vector&gt;</CODE> [Sealed Abstract Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>A predefined subclass of <CODE CLASS="cv T1.Text1">&lt;vector&gt;</CODE> that provides an efficient implementation of fixed-length vectors.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;vector&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The make method on <CODE CLASS=Cliche>singleton(&lt;simple-vector&gt;)</CODE> accepts the following keyword arguments. Note that these are not inherited by subclasses of <CODE CLASS="cv Cliche">&lt;simple-vector&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the vector. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying an initial value for each element of the vector. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of simple and efficient vectors.</P>
<P CLASS=T1.Text1><A NAME=MARKER-2-1436></A>The class <CODE CLASS=T1.Text1>&lt;simple-vector&gt;</CODE> provides a constant time implementation for the <CODE CLASS=T1.Text1>element</CODE>  and <CODE CLASS=T1.Text1>element-setter </CODE>functions. This property is shared by all subtypes of <CODE CLASS="cv T1.Text1">&lt;simple-vector&gt;</CODE>.</P>
<P CLASS=T1.Text1>Calling <CODE CLASS="cv T1.Text1">make</CODE> on a <CODE CLASS="cv T1.Text1">&lt;simple-vector&gt;</CODE> returns an instance of <CODE CLASS="cv T1.Text1">&lt;simple-object-vector&gt;</CODE>. The size of a simple vector cannot be changed after the simple vector has been created.</P>
<P CLASS=T1.Text1><A NAME=MARKER-2-1437></A>Vector literals (created with the <CODE CLASS="cv T1.Text1">#[</CODE>...<CODE CLASS="cv T1.Text1">]</CODE> syntax) are general instances of <CODE CLASS="cv T1.Text1">&lt;simple-vector&gt;</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;simple-vector&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<P CLASS=T1.Text1>The class <CODE CLASS="cv T1.Text1">&lt;simple-object-vector&gt;</CODE> and the type <CODE CLASS="cv T1.Text1">limited(&lt;simple-vector&gt;, of: &lt;object&gt;)</CODE> have exactly the same instances, but neither is a subtype of the other. The relationship between them is simply that the <CODE CLASS="cv T1.Text1">make</CODE> method for the type returns an instance of the class.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;simple-vector&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-41  Methods on &lt;simple-vector&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>Returns the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>300</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>Sets the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>301</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-42  Methods on singleton(&lt;simple-vector&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1761></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1438></A>&lt;simple-object-vector&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of simple vectors that may have elements of any type.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;simple-vector&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;simple-object-vector&gt;</CODE> supports the following init-keywords: </P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the vector. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;simple-object-vector&gt;</CODE> represents vectors that may have elements of any type. It provides a constant time implementation for the <CODE CLASS=Cliche>element</CODE>  and <CODE CLASS=Cliche>element-setter </CODE>functions.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;simple-object-vector&gt;</CODE> is<CODE CLASS="cv T1.Text1"> &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
</DL>
<A NAME=HEADING93-1770></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1439></A>&lt;stretchy-vector&gt;</CODE> [Open Abstract Instantiable Primary Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of vectors that are stretchy. </P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;vector&gt; &lt;stretchy-collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;stretchy-vector&gt;</CODE> supports the following init-keywords:</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the initial size of the stretchy vector. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of vectors that are stretchy.</P>
<P CLASS=T1.Text1>Because <CODE CLASS="cv T1.Text1">&lt;stretchy-vector&gt;</CODE> is abstract and instantiable but has no specified subclasses, every implementation must provide one or more concrete subclass to instantiate. These concrete subclasses have no specified names, and their names are not exported by the Dylan module.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;simple-vector&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;stretchy-vector&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-43  Methods on &lt;stretchy-vector&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>Adds an element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>309</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1763" CLASS=TbT.TblText>Removes an element from a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1765" CLASS=TbT.TblText>313</A></P>
</TD></TR></TABLE><P CLASS=Anchor> <A NAME=MARKER-2-1440></A></P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-44  Methods on singleton(&lt;stretchy-vector&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-1862></A>
<A NAME="UID-Built-In_Classes-25928"></A>
<H2 CLASS=H2.Heading2> Deques</H2>
<A NAME=HEADING93-1863></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1441></A><A NAME=MARKER-9-1442></A>&lt;deque&gt;</CODE> [Open Abstract Instantiable Primary Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of double-ended queues.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;mutable-sequence&gt; &lt;stretchy-collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;deque&gt;</CODE> supports the following init-keywords: </P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the initial size of the deque. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> A subclass of sequence that supports efficient forward and backward iteration, and efficient addition and removal of elements from the beginning or end of the sequence.</P>
<P CLASS=T1.Text1>Because <CODE CLASS="cv T1.Text1">&lt;deque&gt;</CODE> is abstract and instantiable but has no specified subclasses, every implementation must provide one or more concrete subclasses to instantiate. These concrete subclasses have no specified names, and their names are not exported by the Dylan module.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;deque&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;deque&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-45  Generic Functions on &lt;deque&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>push</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1767" CLASS=TbT.TblText>Adds an element to the front of a deque.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1767" CLASS=TbT.TblText>314</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>pop</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1769" CLASS=TbT.TblText>Removes and returns the first element of a deque.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1769" CLASS=TbT.TblText>315</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>push-last</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1771" CLASS=TbT.TblText>Adds an element to the end of a deque.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1771" CLASS=TbT.TblText>315</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>pop-last</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1773" CLASS=TbT.TblText>Removes and returns an element from the end of a deque.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1773" CLASS=TbT.TblText>315</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-46  Methods on &lt;deque&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>Adds an element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>309</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1763" CLASS=TbT.TblText>Removes an element from a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1765" CLASS=TbT.TblText>313</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-47  Methods on singleton(&lt;deque&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR></TABLE><A NAME=HEADING93-2045></A>
<A NAME="UID-Built-In_Classes-423"></A>
<H2 CLASS=H2.Heading2> <A NAME=MARKER-2-1443></A>Lists</H2>
<P CLASS=T1.Text1>Lists are constructed by linking together instances of <CODE CLASS="cv T1.Text1">&lt;pair&gt;</CODE>. The <A NAME=MARKER-2-1444></A>head of a list contains an element, and the <A NAME=MARKER-2-1445></A>tail of the list contains a pointer to the next pair in the list. The list ends when the tail of a pair contains something besides another pair.</P>
<P CLASS=T1.Text1>A <B CLASS="bold T1.Text1"><A NAME=MARKER-2-1446></A>proper list</B> has a final pair with a tail containing the empty list.</P>
<P CLASS=T1.Text1>An <B CLASS=T1.Text1><A NAME=MARKER-2-1447></A>improper list</B> does not have a final pair with a tail containing the empty list, either because the tail of its final pair is not the empty list, or because the list is circular and thus does not have a final pair. Except when their behavior on improper lists is documented explicitly, collection or sequence functions are not guaranteed to return an answer when an improper list is used as a collection or a sequence. At the implementation's option, these functions may return the correct result, signal a <CODE CLASS=T1.Text1>&lt;type-error&gt;</CODE>, or  (in the case of a circular list) fail to return.</P>
<P CLASS=T1.Text1>When treated as a collection, the elements of a list are the heads of successive pairs in the list.</P>
<A NAME=HEADING93-2050></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1448></A><A NAME=MARKER-9-1449></A>&lt;list&gt;</CODE> [Sealed Instantiable Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of linked lists. </P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;mutable-sequence&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The make method on <CODE CLASS=Cliche>singleton(&lt;list&gt;)</CODE> accepts the following keyword arguments. Note that these are not inherited by subclasses of <CODE CLASS="cv Cliche">&lt;list&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the list. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of linked lists.</P>
<P CLASS=T1.Text1>The <CODE CLASS=T1.Text1>&lt;list&gt;</CODE> class is partitioned into two concrete subclasses, <CODE CLASS=T1.Text1>&lt;pair&gt;</CODE> and <CODE CLASS=T1.Text1>&lt;empty-list&gt;</CODE>. Calling make on <CODE CLASS="cv T1.Text1">&lt;list&gt;</CODE> will return a linked list made from pairs and terminated with the empty list. </P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;list&gt;</CODE> is <CODE CLASS="cv T1.Text1">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;list&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-48  Constructors for &lt;list&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>list</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1550" CLASS=TbT.TblText>Creates and returns a freshly allocated list.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1550" CLASS=TbT.TblText>261</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>pair</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1552" CLASS=TbT.TblText>Creates and returns a freshly allocated pair.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1552" CLASS=TbT.TblText>262</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-49  Functions on &lt;list&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>head</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1744" CLASS=TbT.TblText>Returns the head of a list.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1744" CLASS=TbT.TblText>307</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>tail</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1746" CLASS=TbT.TblText>Returns the tail of a list.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1746" CLASS=TbT.TblText>307</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-50  Methods on &lt;list&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>size</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>Returns the size of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>295</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>=</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>Compares two objects for equality.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>269</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>Adds an element to a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1754" CLASS=TbT.TblText>309</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1763" CLASS=TbT.TblText>Removes an element from a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1765" CLASS=TbT.TblText>313</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-51  Methods on singleton(&lt;list&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR></TABLE><A NAME=HEADING93-2266></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1450></A>&lt;pair&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T0.Text0>The class of lists that can have new values assigned to their heads and tails.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;list&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of lists that can have new values assigned to their heads and tails.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;pair&gt;</CODE> is <CODE CLASS="cv T1.Text1">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The following operations are provided on <CODE CLASS="cv Cliche">&lt;pair&gt;</CODE>:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-52  Functions on &lt;pair&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>head-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1748" CLASS=TbT.TblText>Sets the head of a pair.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1748" CLASS=TbT.TblText>308</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>tail-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1750" CLASS=TbT.TblText>Sets the tail of a pair.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1750" CLASS=TbT.TblText>308</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-53  Constructors for &lt;pair&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>pair</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1552" CLASS=TbT.TblText>Creates and returns a freshly allocated pair.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1552" CLASS=TbT.TblText>262</A></P>
</TD></TR></TABLE><DL CLASS=Cliche>
<DT CLASS=Cliche><DD CLASS=Cliche><P CLASS=Cliche></P>
</DL>
<A NAME=HEADING93-2356></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="cv H4.Heading4"><A NAME=MARKER-2-1451></A>&lt;empty-list&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class with only one instance, the empty list.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;list&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;empty-list&gt;</CODE> has only one instance, the empty list. The empty list is a direct instance of <CODE CLASS=Cliche>&lt;empty-list&gt;</CODE> and an indirect instance of <CODE CLASS=Cliche>&lt;list&gt;</CODE>. Note that <CODE CLASS=Cliche>&lt;empty-list&gt;</CODE> is not <CODE CLASS=Cliche>==</CODE> to <CODE CLASS=Cliche>singleton (#())</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;empty-list&gt;</CODE> is <CODE CLASS="cv T1.Text1">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> None.<A NAME=MARKER-2-1452></A></P>
</DL>
<A NAME=HEADING93-2363></A>
<A NAME="UID-Built-In_Classes-427"></A>
<H2 CLASS=H2.Heading2> Ranges</H2>
<A NAME=HEADING93-2364></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1453></A><A NAME=MARKER-9-1454></A>&lt;range&gt;</CODE> [Open Abstract Instantiable Primary Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of arithmetic sequences.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;sequence&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;range&gt;</CODE> supports the following init-keywords:</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>from:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE> specifying the first value in the range. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS="cv RP.RoutineParam">by:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE> specifying the step between consecutive elements of the range. The default value is <CODE CLASS="cv RP.RoutineParam">1</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS="cv RP.RoutineParam">to: </CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE> specifying an inclusive bound for the range. If <CODE CLASS="cv RP.RoutineParam">by:</CODE> is positive, the range will include numbers up to and including this value. If <CODE CLASS="cv RP.RoutineParam">by:</CODE> is negative, the range will include numbers down to to and including this value. <BR><CODE CLASS="cv RP.RoutineParam">to:</CODE> cannot be specified with <CODE CLASS="cv RP.RoutineParam">above:</CODE> or <CODE CLASS="cv RP.RoutineParam">below:</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS="cv RP.RoutineParam">above: </CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE> specifying an exclusive lower bound for the range. The range will only include numbers above this value, regardless of the sign of <CODE CLASS="cv RP.RoutineParam">by:</CODE>.<BR><CODE CLASS="cv RP.RoutineParam">above:</CODE> cannot be specified with <CODE CLASS="cv RP.RoutineParam">to:</CODE> or <CODE CLASS="cv RP.RoutineParam">below:</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>below: </CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE> specifying an exclusive upper bound for the range. The range will only include numbers below this value, regardless of the sign of <CODE CLASS="cv RP.RoutineParam">by:</CODE>.<BR><CODE CLASS="cv RP.RoutineParam">below:</CODE> cannot be specified with <CODE CLASS="cv RP.RoutineParam">to:</CODE> or <CODE CLASS="cv RP.RoutineParam">above:</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the range.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS="cv Cliche">&lt;range&gt;</CODE> is used for creating sequences of numbers. Ranges may be infinite in size, and may run from higher numbers to lower numbers.</P>
<P CLASS=T1.Text1>If <CODE CLASS="cv T1.Text1">size:</CODE> is specified and none of <CODE CLASS="cv T1.Text1">to:</CODE>, <CODE CLASS="cv T1.Text1">above:</CODE> or <CODE CLASS="cv T1.Text1">below:</CODE> is specified, then the  <CODE CLASS="cv T1.Text1">size:</CODE> argument determines the size of the range.</P>
<P CLASS=T1.Text1>If <CODE CLASS="cv T1.Text1">size:</CODE> is specified and one of <CODE CLASS="cv T1.Text1">to:</CODE>, <CODE CLASS="cv T1.Text1">above:</CODE> or <CODE CLASS="cv T1.Text1">below:</CODE> is specified, than it is an error if the number of elements implied by the <CODE CLASS="cv T1.Text1">to:</CODE>, <CODE CLASS="cv T1.Text1">above:</CODE> or <CODE CLASS="cv T1.Text1">below:</CODE> argument (and the <CODE CLASS="cv T1.Text1">by:</CODE> argument, if present) does not agree with the number of elements specified by the <CODE CLASS="cv T1.Text1">size:</CODE> argument.</P>
<P CLASS=T1.Text1>Because <CODE CLASS="cv T1.Text1">&lt;range&gt;</CODE> in abstract and instantiable but has no specified subclasses, every implementation must provide one or more concrete subclass to instantiate. These concrete subclasses have no specified names, and their names are not exported by the Dylan module.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;range&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;range&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor>   </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-54  Methods on &lt;range&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>member?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1834" CLASS=TbT.TblText>Returns true if a collection contains a particular value.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1834" CLASS=TbT.TblText>334</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>size</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>Returns the size of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>295</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>copy-sequence</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1797" CLASS=TbT.TblText>Returns a freshly allocated copy of some subsequence of a sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1797" CLASS=TbT.TblText>323</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>=</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>Compares two objects for equality.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1584" CLASS=TbT.TblText>269</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reverse</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1778" CLASS=TbT.TblText>Returns a sequence with elements in the reverse order of its argument sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1778" CLASS=TbT.TblText>316</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reverse!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1780" CLASS=TbT.TblText>Returns a sequence with elements in the reverse order of its argument sequence.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1780" CLASS=TbT.TblText>317</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>intersection</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1788" CLASS=TbT.TblText>Returns the intersection of two sequences.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1788" CLASS=TbT.TblText>319</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>type-for-copy</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1694" CLASS=TbT.TblText>Returns an appropriate type for creating mutable copies of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1694" CLASS=TbT.TblText>292</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-55  Methods on singleton(&lt;range&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR></TABLE><A NAME=HEADING93-2560></A>
<A NAME="UID-Built-In_Classes-428"></A>
<H2 CLASS=H2.Heading2> Strings</H2>
<A NAME=HEADING93-2561></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1455></A><A NAME=MARKER-2-1456></A>&lt;string&gt;</CODE> [Open Abstract Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of sequences with elements that are characters.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;mutable-sequence&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;string&gt;</CODE> supports the following init-keywords: </P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the string. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;character&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">' ' </CODE>(space).</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS="cv Cliche">&lt;string&gt;</CODE> is used for holding sequences of characters.</P>
<P CLASS=T1.Text1><CODE CLASS=T1.Text1>&lt;string&gt;</CODE> has no direct instances; calling <CODE CLASS=T1.Text1>make</CODE> on <CODE CLASS=T1.Text1>&lt;string&gt;</CODE> will return an instance of a concrete subclass of <CODE CLASS=T1.Text1>&lt;string&gt;</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;string&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;character&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;string&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-56  Methods on &lt;string&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>&lt;</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1589" CLASS=TbT.TblText>Returns true if its first operand is less than its second operand.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_99.htm#MARKER-9-1589" CLASS=TbT.TblText>271</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>as-lowercase</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1687" CLASS=TbT.TblText>Coerces an object to lowercase.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1687" CLASS=TbT.TblText>291</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>as-lowercase!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_100.htm#MARKER-2-1671" CLASS=TbT.TblText>Coerces an object to lowercase in place.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_100.htm#MARKER-2-1671" CLASS=TbT.TblText>291</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>as-uppercase</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1683" CLASS=TbT.TblText>Coerces an object to uppercase.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1683" CLASS=TbT.TblText>290</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>as-uppercase!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1685" CLASS=TbT.TblText>Coerces an object to uppercase in place.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_101.htm#MARKER-9-1685" CLASS=TbT.TblText>290</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-57  Methods on singleton(&lt;string&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><A NAME=HEADING93-2695></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1457></A>&lt;byte-string&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of vectors with elements that are eight-bit characters.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;string&gt;</CODE>  <CODE CLASS="cv Cliche">&lt;vector&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;byte-string&gt;</CODE> supports the following init-keywords: </P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the byte string. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;character&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">' ' </CODE>(space).</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;byte-string&gt;</CODE> represents strings with elements that are eight bit characters. It provides constant time <CODE CLASS="cv Cliche">element</CODE> and <CODE CLASS="cv Cliche">element-setter</CODE> methods.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;byte-string&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; <I CLASS="Parameter cv T1.Text1">K<EM CLASS="Subscript Parameter cv T1.Text1">2</EM></I></CODE> (where <I CLASS="Parameter T1.Text1">K<EM CLASS="Subscript Parameter T1.Text1">2</EM></I> is a subtype of <CODE CLASS="cv T1.Text1">&lt;character&gt;</CODE>).</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;byte-string&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-58  Methods on &lt;byte-string&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>Returns the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>300</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>Sets the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>301</A></P>
</TD></TR></TABLE><A NAME=HEADING93-2752></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1458></A>&lt;unicode-string&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of vectors with elements that are sixteen-bit Unicode characters.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;string&gt;</CODE>  <CODE CLASS="cv Cliche">&lt;vector&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;unicode-string&gt;</CODE> supports the following init-keywords: </P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE> specifying the size of the unicode string. The default value is <CODE CLASS="cv RP.RoutineParam">0</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>fill:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;character&gt;</CODE> specifying the initial value for each element. The default value is <CODE CLASS="cv RP.RoutineParam">' ' </CODE>(space).</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;unicode-string&gt;</CODE> represents strings with elements that are sixteen bit Unicode characters. It provides constant time <CODE CLASS="cv Cliche">element</CODE> and <CODE CLASS="cv Cliche">element-setter</CODE> methods.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;unicode-string&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; <I CLASS="Parameter cv T1.Text1">K<EM CLASS="Subscript Parameter cv T1.Text1">1</EM></I></CODE> (where <I CLASS="Parameter T1.Text1">K<EM CLASS="Subscript Parameter T1.Text1">1</EM></I> is a subtype of <CODE CLASS="cv T1.Text1">&lt;character&gt;</CODE>).</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;unicode-string&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> <A NAME=MARKER-2-1459></A></P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-59  Methods on &lt;unicode-string&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>Returns the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>300</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>Sets the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>301</A></P>
</TD></TR></TABLE><A NAME=HEADING93-2809></A>
<A NAME="UID-Built-In_Classes-429"></A>
<H2 CLASS=H2.Heading2> Tables</H2>
<P CLASS=T1.Text1><A NAME=MARKER-2-1460></A>Also called a hash table, a table is an unordered mapping between arbitrary keys and elements. Tables are the only predefined collections that are unstable under iteration.</P>
<P CLASS=T1.Text1>Tables are stretchy in that they allow the addition and removal of keys. <CODE CLASS=T1.Text1>&lt;table&gt;</CODE> and its subclasses are the only predefined classes that are stretchy but are not stretchy sequences.</P>
<P CLASS=T1.Text1>For a complete description of tables, see <A HREF="drm_67.htm#MARKER-9-1036" CLASS=T1.Text1>"Tables" on page 122</A>.</P>
<A NAME=HEADING93-2813></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1461></A><A NAME=MARKER-9-1462></A>&lt;table&gt;</CODE> [Open Abstract Instantiable Primary Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of tables (also known as hash tables).</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;mutable-explicit-key-collection&gt; &lt;stretchy-collection&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;table&gt;</CODE> supports the following init-keyword: </P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>size:</CODE> <DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of &lt;integer&gt;. If specified, this value provides a hint to the implementation as to the expected number of elements to be stored in the table, which might be used to control how much space to initially allocate for the table. The default value is unspecified.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS="cv Cliche">&lt;table&gt;</CODE> is the only predefined instantiable subclass of <CODE CLASS="cv Cliche">&lt;explicit-key-collection&gt;</CODE>.</P>
<P CLASS=T1.Text1>Every concrete subclass of <CODE CLASS=T1.Text1>&lt;table&gt;</CODE> must provide or inherit a method for <CODE CLASS=T1.Text1>table-protocol</CODE>. For details, see <A HREF="drm_67.htm#MARKER-9-1036" CLASS=T1.Text1>"Tables" on page 122</A>.</P>
<P CLASS=T1.Text1><CODE CLASS=T1.Text1>&lt;table&gt;</CODE> has no direct instances; calling <CODE CLASS=T1.Text1>make</CODE> on <CODE CLASS=T1.Text1>&lt;table&gt;</CODE> will return an instance of <CODE CLASS=T1.Text1>&lt;object-table&gt;</CODE>.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;table&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;table&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-60  Generic Functions on &lt;table&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>table-protocol</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1852" CLASS=TbT.TblText>Returns functions used to implement the iteration protocol for tables.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1852" CLASS=TbT.TblText>340</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-61  Methods on &lt;table&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>forward-iteration-protocol</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-2-1540" CLASS=TbT.TblText>Returns a group of functions used to iterate over the elements of a collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-2-1540" CLASS=TbT.TblText>337</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>table-protocol</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1852" CLASS=TbT.TblText>Returns functions used to implement the iteration protocol for tables.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1852" CLASS=TbT.TblText>340</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove-key!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1840" CLASS=TbT.TblText>Modifies an explicit key collection so it no longer has a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1840" CLASS=TbT.TblText>335</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>Returns the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1720" CLASS=TbT.TblText>300</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>element-setter</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>Sets the collection element associated with a particular key.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1722" CLASS=TbT.TblText>301</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>size</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>Returns the size of its argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1702" CLASS=TbT.TblText>295</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>key-test</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1714" CLASS=TbT.TblText>Returns the function used by its collection argument to compare keys.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1714" CLASS=TbT.TblText>298</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-62  Methods on singleton(&lt;table&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR></TABLE><A NAME=HEADING93-3023></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1463></A>&lt;object-table&gt;</CODE> [Open Abstract Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of tables that compare keys using <CODE CLASS=T1.Text1>==.</CODE></P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;table&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Calling <CODE CLASS=Cliche>make</CODE> on <CODE CLASS=Cliche>&lt;table&gt;</CODE> will return a general instance of <CODE CLASS=Cliche>&lt;object-table&gt;</CODE>. Because <CODE CLASS="cv Cliche">&lt;object-table&gt;</CODE> is abstract and instantiable but has no specified subclasses, every implementation must provide one or more concrete subclasses to instantiate. These concrete subclasses have no specified names, and their names are not exported by the Dylan module.</P>
<P CLASS=T1.Text1>The element type of <CODE CLASS="cv T1.Text1">&lt;object-table&gt;</CODE> is <CODE CLASS="cv T1.Text1">indefinite &lt; &lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;object-table&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-63  Methods on &lt;object-table&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>table-protocol</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1852" CLASS=TbT.TblText>Returns functions used to implement the iteration protocol for tables.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1852" CLASS=TbT.TblText>340</A></P>
</TD></TR></TABLE><P CLASS=Anchor> <A NAME=MARKER-2-1464></A><A NAME=MARKER-2-1465></A></P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-64  Methods on singleton(&lt;object-table&gt;) (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE>
</DIV>

<DIV CLASS=WM-DIV-FOOTERS>

<DIV CLASS=WM-DIV-TOC>

<!-- TOC --><DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-5" CLASS=FOOTER><B CLASS=FOOTER></B>General Collections</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-6" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;collection&gt; [Open Abstract  Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-374" CLASS=FOOTER><B CLASS=FOOTER></B>Explicit Key Collections</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-375" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;explicit-key-collection&gt; [Open Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-417" CLASS=FOOTER><B CLASS=FOOTER></B>Sequences</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-418" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;sequence&gt; [Open Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-837" CLASS=FOOTER><B CLASS=FOOTER></B>Mutable Collections</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-838" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;mutable-collection&gt; [Open Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-982" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;mutable-explicit-key-collection&gt; [Open Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1057" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;mutable-sequence&gt; [Open Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1194" CLASS=FOOTER><B CLASS=FOOTER></B>Stretchy Collections</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1195" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;stretchy-collection&gt; [Open Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1239" CLASS=FOOTER><B CLASS=FOOTER></B>Arrays</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1240" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;array&gt; [Open Abstract Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1510" CLASS=FOOTER><B CLASS=FOOTER></B>Vectors</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1511" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;vector&gt; [Open Abstract Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1652" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;simple-vector&gt; [Sealed Abstract Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1761" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;simple-object-vector&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1770" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;stretchy-vector&gt; [Open Abstract Instantiable Primary Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1862" CLASS=FOOTER><B CLASS=FOOTER></B>Deques</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-1863" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;deque&gt; [Open Abstract Instantiable Primary Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2045" CLASS=FOOTER><B CLASS=FOOTER></B>Lists</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2050" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;list&gt; [Sealed Instantiable Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2266" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;pair&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2356" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;empty-list&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2363" CLASS=FOOTER><B CLASS=FOOTER></B>Ranges</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2364" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;range&gt; [Open Abstract Instantiable Primary Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2560" CLASS=FOOTER><B CLASS=FOOTER></B>Strings</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2561" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;string&gt; [Open Abstract Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2695" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;byte-string&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2752" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;unicode-string&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2809" CLASS=FOOTER><B CLASS=FOOTER></B>Tables</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-2813" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;table&gt; [Open Abstract Instantiable Primary Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_93.htm#HEADING93-3023" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;object-table&gt; [Open Abstract Instantiable Class]</A>
<DD CLASS=FOOTER>
</DL>


</DIV>

<HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>The Dylan Reference Manual - 7 Apr 1998</ADDRESS>
<P CLASS=FOOTER><A HREF="drm_94.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_92.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_87.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=FOOTER>Copyright Apple Computer, Inc. 1996. Apple&#174; and the Apple logo are registered trademarks of Apple Computer, Inc. Used with permission. All Rights Reserved.</P>
<P CLASS=FOOTER>You can order a <A HREF="http://www.harlequin.com/products/ads/dylan/purchase.shtml" CLASS=FOOTER>bound copy</A> of this book from Harlequin.</P>
<P CLASS=FOOTER>Generated with <A HREF="http://www.harlequin.com/webmaker" CLASS=FOOTER>Harlequin WebMaker&#174;</A></P>

</DIV>
</BODY>
</HTML>
