<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="drm_1.htm">
<LINK REL=UP HREF="drm_76.htm">
<LINK REL=PREV HREF="drm_81.htm">
<LINK REL=NEXT HREF="drm_83.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=drm.css TYPE="text/css">
<TITLE> Pattern Variable Constraints</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV CLASS=WM-DIV-BODY>
<A NAME=HEADING82></A>

<DIV CLASS=WM-DIV-HEADERS>
<P CLASS=HEADER><A HREF="drm_83.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_81.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_76.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=HEADER>10 Macros</P>

</DIV>
<A NAME=HEADING82-0></A>
<A NAME=UID-Macros-6305></A>
<H1 CLASS=H1.Heading1> <A NAME=MARKER-9-1256></A>Pattern Variable Constraints</H1>
<P CLASS=T1.Text1><A NAME=MARKER-2-1257></A>Each <I CLASS="Parameter T1.Text1">pattern-variable</I>  in the left-hand side of a rule in a macro definition has a constraint associated with it. This prevents the pattern from matching unless the fragment matched to the pattern-variable satisfies the constraint. In most cases it also controls how the matching fragment is parsed.</P>
<P CLASS=T1.Text1>You specify a constraint in a <I CLASS="Parameter T1.Text1">pattern-variable</I>  by suffixing a colon and the constraint name to the pattern variable name. Intervening whitespace is not allowed. As an abbreviation, if a pattern variable has the same name as its constraint, the <I CLASS="Parameter T1.Text1">pattern-variable</I>  can be written <CODE CLASS="cv T1.Text1">?:<I CLASS="Parameter cv T1.Text1">the-name</I></CODE>  instead of <CODE CLASS="cv T1.Text1">?<I CLASS="Parameter cv T1.Text1">the-name:the-name</I></CODE>.</P>
<P CLASS=T1.Text1>The available constraints are listed in <A HREF="#MARKER-9-1173" CLASS=T1.Text1>Table 10-1</A>.</P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 10-1  <A NAME=MARKER-9-1173></A>Available constraints (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Constraint name</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Grammar accepted</P>
</TH><TH><P CLASS=TbH.TblHd> Binds pattern variable to</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>expression</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <I CLASS=TbT.TblText>expression</I></P>
</TD><TD><P CLASS=TbT.TblText> parsed expression fragment(1)</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>variable</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <I CLASS=TbT.TblText>variable</I></P>
</TD><TD><P CLASS=TbT.TblText> fragment(2)</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>name</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <EM CLASS=TbT.TblText>name</EM></P>
</TD><TD><P CLASS=TbT.TblText> one-token fragment</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>token</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <EM CLASS=TbT.TblText>token</EM></P>
</TD><TD><P CLASS=TbT.TblText> one-token fragment</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>body</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <I CLASS="Parameter TbT.TblText">body<EM CLASS="Subscript Parameter TbT.TblText">opt   </EM></I>(3)</P>
</TD><TD><P CLASS=TbT.TblText> parsed expression fragment (4)</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>case-body</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <I CLASS="Parameter TbT.TblText">case-body<EM CLASS="Subscript Parameter TbT.TblText">opt   </EM></I>(3)</P>
</TD><TD><P CLASS=TbT.TblText> fragment(2)</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>macro</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <I CLASS=TbT.TblText>macro</I></P>
</TD><TD><P CLASS=TbT.TblText> fragment(5)</P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>*</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <I CLASS=TbT.TblText>(wildcard)</I></P>
</TD><TD><P CLASS=TbT.TblText> fragment</P>
</TD></TR></TABLE><P CLASS=T1.Text1>Notes:</P>
<P CLASS="N/.NList=1">Parsed expression fragments are described on <A HREF="drm_77.htm#MARKER-9-1199" CLASS="N/.NList=1">page 146</A>.</P>
<P CLASS=N.NList>Where <I CLASS="Parameter N.NList">expression, operand,</I> <I CLASS="Parameter N.NList">constituents</I> or <I CLASS="Parameter N.NList">body</I>  appears in the grammar that this constraint accepts, the bound fragment contains a parsed expression fragment, not the original elementary fragments.</P>
<P CLASS=N.NList>Parsing stops at an intermediate word.</P>
<P CLASS=N.NList>The body is wrapped in <CODE CLASS="cv N.NList">begin ... end</CODE> to make it an expression, using the standard binding of <CODE CLASS="cv N.NList">begin</CODE> in the Dylan module. An empty body defaults to <CODE CLASS="cv N.NList">#f</CODE>.</P>
<P CLASS=N.NList>A pattern-variable with a <CODE CLASS="cv N.NList">macro</CODE> constraint accepts exactly one elementary fragment, which must be a macro call fragment. It binds the pattern variable to the expansion of the macro.</P>
<P CLASS=T1.Text1>Some implementations and a future version of the Dylan language specification might add more constraint choices to this table.</P>
<P CLASS=T1.Text1>When a pattern variable has the same name as an auxiliary rule-set, its constraint defaults to <A NAME=MARKER-2-1258></A>wildcard and can be omitted. Otherwise a constraint must be specified in every <I CLASS="Parameter T1.Text1">pattern-variable</I> and <I CLASS="Parameter T1.Text1">pattern-keyword</I>.</P>
<P CLASS=T1.Text1>A constraint applies only to the specific pattern variable occurrence to which it is attached. It does not constrain other pattern variable occurrences with the same name. </P>
<A NAME=HEADING82-144></A>
<A NAME=UID-Macros-5860></A>
<H2 CLASS=H2.Heading2> Intermediate Words</H2>
<P CLASS=T1.Text1><A NAME=MARKER-2-1259></A>When a <I CLASS="Parameter T1.Text1">pattern-variable </I> has a constraint of <CODE CLASS="cv T1.Text1">body</CODE> or <CODE CLASS="cv T1.Text1">case-body</CODE>, its parsing of the fragment stops before any token that is an intermediate word. This allows intermediate words to delimit clauses that have separate bodies, like <CODE CLASS="cv T1.Text1">else</CODE> and <CODE CLASS="cv T1.Text1">elseif</CODE> in an <CODE CLASS="cv T1.Text1">if</CODE> statement. The intermediate words of a macro are identified as follows:</P>
<UL CLASS=B1.Bullet1>
<LI CLASS=B1.Bullet1>Define a body-variable to be a pattern variable that either has a constraint of <CODE CLASS="cv B1.Bullet1">body</CODE> or <CODE CLASS="cv B1.Bullet1">case-body</CODE>, or  names an auxiliary rule-set where some left-hand side in that rule-set ends in a body-variable. This is a least fixed point<I CLASS=B1.Bullet1>, </I> so a recursive auxiliary rule-set does not automatically make its name into a body-variable.  Note that an ellipsis that stands for a pattern variable is a body-variable when that pattern variable is one.
<LI CLASS=B1.Bullet1>Define an intermediate-variable to be a pattern variable that either immediately follows a body-variable in a left-hand side, or appears at the beginning of a left-hand side in an auxiliary rule-set named by an intermediate-variable. 
<LI CLASS=B1.Bullet1>An intermediate word is a <EM CLASS=B1.Bullet1>name</EM> that either immediately follows a body-variable in a left-hand side, or occurs at the beginning of a left-hand side in an auxiliary rule-set named by an intermediate-variable. Intermediate words are not reserved, they are just used as delimiters during the parsing for a <I CLASS="Parameter B1.Bullet1">pattern-variable</I>  with a <CODE CLASS="cv B1.Bullet1">body</CODE> or <CODE CLASS="cv B1.Bullet1">case-body</CODE> constraint.<A NAME=MARKER-2-1260></A><A NAME=MARKER-2-1261></A>
</UL>

</DIV>

<DIV CLASS=WM-DIV-FOOTERS>

<DIV CLASS=WM-DIV-TOC>

<!-- TOC --><DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_82.htm#HEADING82-144" CLASS=FOOTER><B CLASS=FOOTER></B>Intermediate Words</A>
<DD CLASS=FOOTER>
</DL>


</DIV>

<HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>The Dylan Reference Manual - 7 Apr 1998</ADDRESS>
<P CLASS=FOOTER><A HREF="drm_83.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_81.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_76.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=FOOTER>Copyright Apple Computer, Inc. 1996. Apple&#174; and the Apple logo are registered trademarks of Apple Computer, Inc. Used with permission. All Rights Reserved.</P>
<P CLASS=FOOTER>You can order a <A HREF="http://www.harlequin.com/products/ads/dylan/purchase.shtml" CLASS=FOOTER>bound copy</A> of this book from Harlequin.</P>
<P CLASS=FOOTER>Generated with <A HREF="http://www.harlequin.com/webmaker" CLASS=FOOTER>Harlequin WebMaker&#174;</A></P>

</DIV>
</BODY>
</HTML>
