<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="drm_1.htm">
<LINK REL=UP HREF="drm_96.htm">
<LINK REL=PREV HREF="drm_99.htm">
<LINK REL=NEXT HREF="drm_101.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=drm.css TYPE="text/css">
<TITLE> Arithmetic Operations</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV CLASS=WM-DIV-BODY>
<A NAME=HEADING100></A>

<DIV CLASS=WM-DIV-HEADERS>
<P CLASS=HEADER><A HREF="drm_101.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_99.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_96.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=HEADER>12 The Built-In Functions</P>

</DIV>
<A NAME=HEADING100-0></A>
<A NAME="UID-Built-In_Functions-410"></A>
<H1 CLASS=H1.Heading1> Arithmetic Operations</H1>
<P CLASS=T0.Text0><A NAME=MARKER-2-1602></A><A NAME=MARKER-2-1603></A>When instances of <CODE CLASS="cv T0.Text0">&lt;rational&gt;</CODE> and instances of <CODE CLASS="cv T0.Text0">&lt;float&gt;</CODE> are combined by a numerical function, the instance of <CODE CLASS="cv T0.Text0">&lt;rational&gt;</CODE> is first converted to an instance of <CODE CLASS="cv T0.Text0">&lt;float&gt;</CODE> of the same format as the original instance of <CODE CLASS="cv T0.Text0">&lt;float&gt;</CODE>.</P>
<A NAME=HEADING100-2></A>
<A NAME="UID-Built-In_Functions-6229"></A>
<H2 CLASS=H2.Heading2> <A NAME=MARKER-2-1604></A>Properties</H2>
<A NAME=HEADING100-3></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1605></A>odd? </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1606></A>Tests for the property of being an odd number.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">odd?<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">integer   =>  boolean</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if its argument is an odd number.</P>
</DL>
<A NAME=HEADING100-9></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1607></A>even? </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1608></A>Tests for the property of being an even number.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">even?<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">integer  =>  boolean</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if its argument is an even number.</P>
</DL>
<A NAME=HEADING100-15></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1609></A>zero?</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1610></A>Tests for the property of being equal to zero.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">zero?<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">object  =>  boolean</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if its argument is equal to zero.</P>
</DL>
<A NAME=HEADING100-21></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>zero?</CODE>   complex =>  boolean [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A method is defined for the class <CODE CLASS="cv T1.Text1">&lt;complex&gt;</CODE>.</P>
<A NAME=HEADING100-23></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1611></A>positive?</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1612></A>Tests for the property of being positive.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">positive?<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">object  =>  boolean</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if its argument is positive.</P>
</DL>
<A NAME=HEADING100-29></A>
<H4 CLASS=H5.Heading5> <CODE CLASS="cv H5.Heading5">positive?</CODE>   real =>  boolean [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A method is defined for the class <CODE CLASS="cv T1.Text1">&lt;real&gt;</CODE>.</P>
<A NAME=HEADING100-31></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1613></A>negative?</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1614></A>Tests for the property of being negative.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">negative?<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">object  =>  boolean</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if its argument is negative.</P>
</DL>
<A NAME=HEADING100-37></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>negative?</CODE>   real =>  boolean [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A method is defined for the class <CODE CLASS="cv T1.Text1">&lt;real&gt;</CODE>.</P>
<A NAME=HEADING100-39></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1615></A>integral?</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1616></A>Tests for the property of being integral.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">integral?<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">object  =>  boolean</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if its argument is an integer.</P>
</DL>
<A NAME=HEADING100-45></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>integral?</CODE>   object =>  false [G.F. Method]</H4>
<P CLASS=T1.Text1>A method is defined for the class <CODE CLASS="cv T1.Text1">&lt;object&gt;</CODE> that returns <CODE CLASS="cv T1.Text1">#f</CODE>.</P>
<A NAME=HEADING100-47></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>integral?</CODE>   real =>  boolean [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A method is defined for real numbers that is equivalent to <I CLASS="Parameter T1.Text1">real<CODE CLASS="cv Parameter T1.Text1"> = round(real)</CODE></I>.<A NAME=MARKER-2-1617></A></P>
<A NAME=HEADING100-49></A>
<A NAME="UID-Built-In_Functions-1800"></A>
<H2 CLASS=H2.Heading2> Arithmetic Operations</H2>
<A NAME=HEADING100-50></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1618></A>+</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1619></A>Returns the sum of its arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1<CODE CLASS="cv Parameter Cliche"> + object2<B CLASS="cv Parameter Cliche">  =>  #rest objects</B></CODE></I></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Adds two objects and returns the sum.</P>
</DL>
<A NAME=HEADING100-57></A>
<H4 CLASS=H5.Heading5> complex1  <CODE CLASS="cv H5.Heading5">+</CODE> complex2 =>  complex [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the sum of two complex numbers.</P>
<A NAME=HEADING100-59></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1620></A>*</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1621></A>Returns the product of its arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1<CODE CLASS="cv Parameter Cliche"> *<B CLASS="cv Parameter Cliche"> object2  => #rest objects</B></CODE></I></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Multiplies two objects and returns the product.</P>
</DL>
<A NAME=HEADING100-66></A>
<H4 CLASS=H5.Heading5> complex1  <CODE CLASS="cv H5.Heading5">*</CODE> complex2 =>  complex [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the product of two complex numbers.</P>
<A NAME=HEADING100-68></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1622></A>-</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1623></A>Returns the difference of its arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1<CODE CLASS="cv Parameter Cliche"> - object2<B CLASS="cv Parameter Cliche">  =>  #rest objects</B></CODE></I></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Subtracts <I CLASS="Parameter Cliche">object2</I> from <I CLASS="Parameter Cliche">object1</I> and returns the difference.</P>
</DL>
<A NAME=HEADING100-75></A>
<H4 CLASS=H5.Heading5> complex1  <CODE CLASS="cv H5.Heading5">-</CODE> complex2 =>  complex [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the difference of two complex numbers.</P>
<A NAME=HEADING100-77></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1624></A>/</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1625></A>Returns the quotient of its arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1<CODE CLASS="cv Parameter Cliche"> /<B CLASS="cv Parameter Cliche"> object2  =>  #rest objects</B></CODE></I></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Divides <I CLASS="Parameter Cliche">object2</I> into <I CLASS="Parameter Cliche">object1</I> and returns the quotient.</P>
</DL>
<A NAME=HEADING100-84></A>
<H4 CLASS=H5.Heading5> complex1  <CODE CLASS="cv H5.Heading5">/</CODE> complex2 =>  complex [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the quotient of two complex numbers.</P>
<P CLASS=T1.Text1><A NAME=MARKER-2-1626></A><A NAME=MARKER-2-1627></A>Division by zero signals an error.</P>
<P CLASS=T1.Text1>The result of dividing two integers with / is implementation defined. Portable programs should use <CODE CLASS="Code T1.Text1">floor/</CODE>, <CODE CLASS="Code T1.Text1">ceiling/</CODE>, <CODE CLASS="Code T1.Text1">round/</CODE>, or <CODE CLASS="Code T1.Text1">truncate/</CODE> to divide two integers.</P>
<A NAME=HEADING100-88></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1628></A>negative</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1629></A>Returns the negation of an object.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">negative <B CLASS="cv Cliche"> <I CLASS="Parameter cv Cliche">object1  =>  #rest objects</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the negation of its argument. The unary minus operator is equivalent to a call to the <CODE CLASS=Cliche>negative</CODE> in the current binding environment.</P>
</DL>
<A NAME=HEADING100-94></A>
<H4 CLASS=H5.Heading5> <CODE CLASS="cv H5.Heading5">negative real1<I CLASS="Parameter cv H5.Heading5">  fi</I></CODE>  real2 [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the additive inverse of a real number.</P>
<A NAME=HEADING100-96></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1630></A>floor</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1631></A>Truncates a real number toward negative infinity.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">floor<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">real1  =>  integer real2</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Truncates <I CLASS="Parameter Cliche">real1</I> toward negative infinity. The integer part is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real2</I>.</P>
</DL>
<A NAME=HEADING100-103></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1632></A>ceiling</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1633></A>Truncates a real number toward positive infinity.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">ceiling<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">real1 =>  integer real2</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Truncates <I CLASS="Parameter Cliche">real1</I> toward positive infinity. The integer part is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real2</I>.</P>
</DL>
<A NAME=HEADING100-110></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1634></A>round</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1635></A>Rounds a real number toward the nearest mathematical integer.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">round<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">real1 =>  integer real2</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Rounds <I CLASS="Parameter Cliche">real1</I> toward the nearest mathematical integer. The integer part is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real2</I>. If <I CLASS="Parameter Cliche">real1</I> is exactly between two integers, then the result <I CLASS="Parameter Cliche">integer</I> will be a multiple of two.</P>
</DL>
<A NAME=HEADING100-117></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1636></A>truncate</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1637></A>Truncates a real number toward zero.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">truncate<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">real1 =>  integer real2</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Truncates <I CLASS="Parameter Cliche">real1</I> toward zero. The integer part is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real2</I>.</P>
</DL>
<A NAME=HEADING100-124></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1638></A>floor/</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1639></A>Returns the floor of the quotient of two numbers.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">floor/<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">real1 real2 =>  integer real3</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real3</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Divides <I CLASS="Parameter Cliche">real2</I> into <I CLASS="Parameter Cliche">real1</I> and truncates the result toward negative infinity. The integer part of the result is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real3</I>.</P>
</DL>
<A NAME=HEADING100-132></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1640></A>ceiling/</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1641></A>Returns the ceiling of the quotient of two numbers.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">ceiling/ <I CLASS="Parameter cv Cliche">real1 real2<B CLASS="Parameter cv Cliche"> =>  integer real3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real3</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Divides <I CLASS="Parameter Cliche">real2</I> into <I CLASS="Parameter Cliche">real1</I> and truncates the result toward positive infinity. The integer part of the result is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real3</I>.</P>
</DL>
<A NAME=HEADING100-140></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1642></A>round/</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1643></A>Rounds off the quotient of two numbers.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">round/ <I CLASS="Parameter cv Cliche">real1 real2<B CLASS="Parameter cv Cliche"> =>  integer real3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real3</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Divides <I CLASS="Parameter Cliche">real2</I> into <I CLASS="Parameter Cliche">real1</I> and rounds the result toward the nearest mathematical integer. The integer part of the result is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real3</I>. If the result of the division is exactly between two integers, then the result <I CLASS="Parameter Cliche">integer</I> will be a multiple of two.</P>
</DL>
<A NAME=HEADING100-148></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1644></A>truncate/</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1645></A>Returns the truncated quotient of two numbers.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">truncate/ <I CLASS="Parameter cv Cliche">real1 real2<B CLASS="Parameter cv Cliche"> =>  integer real3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real3</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Divides <I CLASS="Parameter Cliche">real2</I> into <I CLASS="Parameter Cliche">real1</I> and truncates the result toward zero. The integer part of the result is returned as <I CLASS="Parameter Cliche">integer</I>, the remainder is returned as <I CLASS="Parameter Cliche">real3</I>.</P>
</DL>
<A NAME=HEADING100-156></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1646></A>modulo</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1647></A>Returns the second value of <CODE CLASS="cv SD.ShortDescription">floor/</CODE>.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">modulo <I CLASS="Parameter cv Cliche">real1 real2<B CLASS="Parameter cv Cliche">  =>  real3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real3</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the second value of <CODE CLASS=Cliche>floor/(<I CLASS=Cliche>real1, real2)</I></CODE>.</P>
</DL>
<A NAME=HEADING100-163></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1648></A>remainder</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1649></A>Returns the second value of <CODE CLASS="cv SD.ShortDescription">truncate/</CODE>.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">remainder <I CLASS="Parameter cv Cliche">real1 real2<B CLASS="Parameter cv Cliche">  =>  real3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real1</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">real2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;real&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">real3</I> An instance of <CODE CLASS="cv Cliche">&lt;real&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the second value of <CODE CLASS=Cliche>truncate/(<I CLASS=Cliche>real1, real2)</I></CODE>.</P>
</DL>
<A NAME=HEADING100-170></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1650></A>^</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1651></A><A NAME=MARKER-2-1652></A>Raises an object to a specified power.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1<CODE CLASS="cv Parameter Cliche"> ^ object2 <B CLASS="cv Parameter Cliche"> => #rest objects</B></CODE></I></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns <I CLASS=Cliche>object1 </I> raised to the power <I CLASS=Cliche>object2</I>. An error is signaled if both arguments are zero.</P>
</DL>
<A NAME=HEADING100-177></A>
<H4 CLASS=H5.Heading5> complex  ^ integer =>  number [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method raises a complex number to an integral power and returns the result.</P>
<A NAME=HEADING100-179></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1653></A>abs</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1654></A>Returns the absolute value of its argument.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">abs <I CLASS="Parameter cv Cliche">object1<B CLASS="Parameter cv Cliche"> => #rest objects</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">objects</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the absolute value of <I CLASS="Parameter Cliche">object1</I>.</P>
</DL>
<A NAME=HEADING100-185></A>
<H4 CLASS=H5.Heading5> <CODE CLASS="cv H5.Heading5">abs</CODE> complex =>  real [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the absolute value of a complex number.</P>
<A NAME=HEADING100-187></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1655></A>logior</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1656></A><A NAME=MARKER-2-1657></A>Returns the bitwise inclusive or of its integer arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">logior #rest <I CLASS="Parameter cv Cliche">integers<B CLASS="Parameter cv Cliche"> =>  integer</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integers</I> Zero or more instances of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the bitwise inclusive or of the <I CLASS="Parameter Cliche">integers</I>.</P>
</DL>
<A NAME=HEADING100-193></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1658></A>logxor</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1659></A>Returns the bitwise exclusive or of its integer arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">logxor #rest <I CLASS="Parameter cv Cliche">integers <B CLASS="Parameter cv Cliche"> =>  integer</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integers</I> Zero or more instances of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the bitwise exclusive or of the <I CLASS="Parameter Cliche">integers</I>.</P>
</DL>
<A NAME=HEADING100-199></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1660></A>logand</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1661></A>Returns the bitwise and of its integer arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">logand #rest <I CLASS="Parameter cv Cliche">integers<B CLASS="Parameter cv Cliche"> =>  integer</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integers</I> Zero or more instances of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the bitwise and of the <I CLASS="Parameter Cliche">integers</I>.</P>
</DL>
<A NAME=HEADING100-205></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1662></A>lognot</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1663></A>Returns the bitwise not of its integer argument.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">lognot <I CLASS="Parameter cv Cliche">integer1<B CLASS="Parameter cv Cliche"> =>  integer2</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer1</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer2</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the bitwise not of the <I CLASS="Parameter Cliche">integer1</I>.</P>
</DL>
<A NAME=HEADING100-211></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1664></A>logbit?</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1665></A>Tests the value of a particular bit in its integer argument.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">logbit? <I CLASS="Parameter cv Cliche">index integer<B CLASS="Parameter cv Cliche"> =>  boolean</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">index</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">integer</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns true if the <I CLASS="Parameter Cliche">index</I>th bit in <I CLASS="Parameter Cliche">integer</I>  is a one-bit; otherwise it returns false.</P>
<P CLASS=T1.Text1>Negative <I CLASS="Parameter T1.Text1">integers</I> are treated as if they were in two's-complement notation.</P>
</DL>
<A NAME=HEADING100-219></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1666></A>ash</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1667></A>Performs an arithmetic shift on its first argument.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">ash <I CLASS="Parameter cv Cliche">integer1 count<B CLASS="Parameter cv Cliche"> =>  integer2</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer1</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;.</CODE></P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">count</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;integer&gt;.</CODE></P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">integer2</I> An instance of <CODE CLASS="cv Cliche">&lt;integer&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Performs an arithmetic shift on the binary representation of <I CLASS="Parameter Cliche">integer1</I>.</P>
<P CLASS=T1.Text1><CODE CLASS="cv T1.Text1">ash</CODE> shifts <I CLASS="Parameter T1.Text1">integer1</I> arithmetically left by <I CLASS="Parameter T1.Text1">count</I> bit positions if <I CLASS="Parameter T1.Text1">count</I> is positive, or right <I CLASS="Parameter T1.Text1">count</I> bit positions if <I CLASS="Parameter T1.Text1">count</I> is negative. The shifted value of the same sign as <I CLASS="Parameter T1.Text1">integer1</I> is returned.</P>
<P CLASS=T1.Text1>When <CODE CLASS="cv T1.Text1">ash</CODE> moves bits to the left, it adds zero-bits at the right. When it moves them to the right, it discards bits. </P>
<P CLASS=T1.Text1><CODE CLASS="cv T1.Text1">ash</CODE> is defined to behave as if <I CLASS="Parameter T1.Text1">integer1</I> were represented in two's complement form, regardless of how integers are represented by the implementation.</P>
</DL>
<PRE CLASS=Cv.Code>
ash(8, 1)
  =>  16
ash(32, -1)
  =>  16<A NAME=MARKER-2-1668></A>
</PRE>
<A NAME=HEADING100-230></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1669></A>lcm</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1670></A>Returns the least common multiple of its two arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">lcm <I CLASS="Parameter cv Cliche">object1 object2<B CLASS="Parameter cv Cliche">  =>  object3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object3</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the least common multiple of <I CLASS="Parameter Cliche">object1</I> and <I CLASS="Parameter Cliche">object2.</I></P>
</DL>
<A NAME=HEADING100-237></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>lcm</CODE>  integer1 integer2   =>  integer3 [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the least common multiple of two integers.</P>
<A NAME=HEADING100-239></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1671></A>gcd</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1672></A>Returns the greatest common divisor of its two arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">gcd <I CLASS="Parameter cv Cliche">object1 object2<B CLASS="Parameter cv Cliche">  =>  object3</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object1</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">object2</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object3</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the greatest common divisor of <I CLASS="Parameter Cliche">object1</I> and <I CLASS="Parameter Cliche">object2.</I></P>
</DL>
<A NAME=HEADING100-246></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>gcd</CODE>  integer1 integer2   =>  integer3 [Sealed G.F. Method]</H4>
<P CLASS=T1.Text1>A predefined method returns the greatest common divisor of two integers.<A NAME=MARKER-2-1673></A><I CLASS=T1.Text1></I></P>

</DIV>

<DIV CLASS=WM-DIV-FOOTERS>

<DIV CLASS=WM-DIV-TOC>

<!-- TOC --><DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-2" CLASS=FOOTER><B CLASS=FOOTER></B>Properties</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-3" CLASS=FOOTER><B CLASS=FOOTER></B>odd? [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-9" CLASS=FOOTER><B CLASS=FOOTER></B>even? [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-15" CLASS=FOOTER><B CLASS=FOOTER></B>zero? [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-21" CLASS=FOOTER><B CLASS=FOOTER></B>zero?   complex =>  boolean [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-23" CLASS=FOOTER><B CLASS=FOOTER></B>positive? [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-29" CLASS=FOOTER><B CLASS=FOOTER></B>positive?   real =>  boolean [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-31" CLASS=FOOTER><B CLASS=FOOTER></B>negative? [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-37" CLASS=FOOTER><B CLASS=FOOTER></B>negative?   real =>  boolean [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-39" CLASS=FOOTER><B CLASS=FOOTER></B>integral? [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-45" CLASS=FOOTER><B CLASS=FOOTER></B>integral?   object =>  false [G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-47" CLASS=FOOTER><B CLASS=FOOTER></B>integral?   real =>  boolean [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-49" CLASS=FOOTER><B CLASS=FOOTER></B>Arithmetic Operations</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-50" CLASS=FOOTER><B CLASS=FOOTER></B>+ [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-57" CLASS=FOOTER><B CLASS=FOOTER></B>complex1  + complex2 =>  complex [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-59" CLASS=FOOTER><B CLASS=FOOTER></B>* [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-66" CLASS=FOOTER><B CLASS=FOOTER></B>complex1  * complex2 =>  complex [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-68" CLASS=FOOTER><B CLASS=FOOTER></B>- [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-75" CLASS=FOOTER><B CLASS=FOOTER></B>complex1  - complex2 =>  complex [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-77" CLASS=FOOTER><B CLASS=FOOTER></B>/ [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-84" CLASS=FOOTER><B CLASS=FOOTER></B>complex1  / complex2 =>  complex [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-88" CLASS=FOOTER><B CLASS=FOOTER></B>negative [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-94" CLASS=FOOTER><B CLASS=FOOTER></B>negative real1  =>  real2 [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-96" CLASS=FOOTER><B CLASS=FOOTER></B>floor [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-103" CLASS=FOOTER><B CLASS=FOOTER></B>ceiling [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-110" CLASS=FOOTER><B CLASS=FOOTER></B>round [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-117" CLASS=FOOTER><B CLASS=FOOTER></B>truncate [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-124" CLASS=FOOTER><B CLASS=FOOTER></B>floor/ [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-132" CLASS=FOOTER><B CLASS=FOOTER></B>ceiling/ [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-140" CLASS=FOOTER><B CLASS=FOOTER></B>round/ [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-148" CLASS=FOOTER><B CLASS=FOOTER></B>truncate/ [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-156" CLASS=FOOTER><B CLASS=FOOTER></B>modulo [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-163" CLASS=FOOTER><B CLASS=FOOTER></B>remainder [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-170" CLASS=FOOTER><B CLASS=FOOTER></B>^ [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-177" CLASS=FOOTER><B CLASS=FOOTER></B>complex  ^ integer =>  number [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-179" CLASS=FOOTER><B CLASS=FOOTER></B>abs [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-185" CLASS=FOOTER><B CLASS=FOOTER></B>abs complex =>  real [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-187" CLASS=FOOTER><B CLASS=FOOTER></B>logior [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-193" CLASS=FOOTER><B CLASS=FOOTER></B>logxor [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-199" CLASS=FOOTER><B CLASS=FOOTER></B>logand [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-205" CLASS=FOOTER><B CLASS=FOOTER></B>lognot [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-211" CLASS=FOOTER><B CLASS=FOOTER></B>logbit? [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-219" CLASS=FOOTER><B CLASS=FOOTER></B>ash [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-230" CLASS=FOOTER><B CLASS=FOOTER></B>lcm [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-237" CLASS=FOOTER><B CLASS=FOOTER></B>lcm  integer1 integer2   =>  integer3 [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-239" CLASS=FOOTER><B CLASS=FOOTER></B>gcd [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_100.htm#HEADING100-246" CLASS=FOOTER><B CLASS=FOOTER></B>gcd  integer1 integer2   =>  integer3 [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
</DL>


</DIV>

<HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>The Dylan Reference Manual - 7 Apr 1998</ADDRESS>
<P CLASS=FOOTER><A HREF="drm_101.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_99.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_96.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=FOOTER>Copyright Apple Computer, Inc. 1996. Apple&#174; and the Apple logo are registered trademarks of Apple Computer, Inc. Used with permission. All Rights Reserved.</P>
<P CLASS=FOOTER>You can order a <A HREF="http://www.harlequin.com/products/ads/dylan/purchase.shtml" CLASS=FOOTER>bound copy</A> of this book from Harlequin.</P>
<P CLASS=FOOTER>Generated with <A HREF="http://www.harlequin.com/webmaker" CLASS=FOOTER>Harlequin WebMaker&#174;</A></P>

</DIV>
</BODY>
</HTML>
