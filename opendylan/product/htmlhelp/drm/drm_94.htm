<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="drm_1.htm">
<LINK REL=UP HREF="drm_87.htm">
<LINK REL=PREV HREF="drm_93.htm">
<LINK REL=NEXT HREF="drm_95.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=drm.css TYPE="text/css">
<TITLE> Functions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV CLASS=WM-DIV-BODY>
<A NAME=HEADING94></A>

<DIV CLASS=WM-DIV-HEADERS>
<P CLASS=HEADER><A HREF="drm_95.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_93.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_87.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=HEADER>11 The Built-In Classes</P>

</DIV>
<A NAME=HEADING94-0></A>
<A NAME="UID-Built-In_Classes-15102"></A>
<H1 CLASS=H1.Heading1> <A NAME=MARKER-2-1466></A>Functions</H1>
<P CLASS=T0.Text0>Functions are the objects that accept arguments, perform computations, and return values.</P>
<P CLASS=T1.Text1><A HREF="#MARKER-9-1467" CLASS=T1.Text1>Figure 11-5</A> shows the built-in function classes and some of their characteristics.</P>
<P CLASS=Fg.Figure>Figure 11-5  <A NAME=MARKER-9-1467></A>The Function Classes<IMG ALIGN=TOP SRC=dr94ima6.gif></P>
<A NAME=HEADING94-4></A>
<A NAME="UID-Built-In_Classes-436"></A>
<H2 CLASS=H2.Heading2> General Functions</H2>
<A NAME=HEADING94-5></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1468></A>&lt;function&gt;</CODE> [Sealed Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of objects that can be applied to arguments.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;object&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> All functions are instances of <CODE CLASS="cv Cliche">&lt;function&gt;</CODE>. Functions are described in <A HREF="drm_46.htm#MARKER-9-723" CLASS=Cliche>Chapter 6, "Functions."</A></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;function&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-65  Functions on &lt;function&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>compose</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-2-1755" CLASS=TbT.TblText>Returns the composition of one or more functions.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-2-1755" CLASS=TbT.TblText>346</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>complement</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1878" CLASS=TbT.TblText>Returns a function that expresses the complement of a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1878" CLASS=TbT.TblText>346</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>disjoin</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1880" CLASS=TbT.TblText>Returns a function that expresses the disjunction of one or more predicates.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1880" CLASS=TbT.TblText>347</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>conjoin</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1882" CLASS=TbT.TblText>Returns a function that expresses the conjunction of one or more predicates.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1882" CLASS=TbT.TblText>347</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>curry</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1884" CLASS=TbT.TblText>Returns a function based on an existing function and a number of default initial arguments.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1884" CLASS=TbT.TblText>348</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>rcurry</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1886" CLASS=TbT.TblText>Returns a function based on an existing function and a number of default final arguments.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_104.htm#MARKER-9-1886" CLASS=TbT.TblText>349</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>function-<BR>specializers</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1901" CLASS=TbT.TblText>Returns the specializers of a function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1901" CLASS=TbT.TblText>353</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>function-<BR>arguments</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1903" CLASS=TbT.TblText>Returns information about the arguments accepted by a function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1903" CLASS=TbT.TblText>354</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>function-return-<BR>values</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1905" CLASS=TbT.TblText>Returns information about the values returned by a function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1905" CLASS=TbT.TblText>354</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>applicable-<BR>method?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1907" CLASS=TbT.TblText>Tests if a function is applicable to sample arguments.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1907" CLASS=TbT.TblText>355</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>apply</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_105.htm#MARKER-9-1891" CLASS=TbT.TblText>Applies a function to arguments.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_105.htm#MARKER-9-1891" CLASS=TbT.TblText>350</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>do</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1810" CLASS=TbT.TblText>Iterates over one or more collections for side effect.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1810" CLASS=TbT.TblText>327</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1812" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in a freshly allocated collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1812" CLASS=TbT.TblText>328</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map-as</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1814" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in a freshly allocated collection of a specified type.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1814" CLASS=TbT.TblText>328</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>map-into</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1816" CLASS=TbT.TblText>Iterates over one or more collections and collects the results in an existing mutable collection.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1816" CLASS=TbT.TblText>329</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>any?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1818" CLASS=TbT.TblText>Returns the first true value obtained by iterating over one or more collections.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1818" CLASS=TbT.TblText>330</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>every?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1821" CLASS=TbT.TblText>Returns true if a predicate returns true when applied to all corresponding elements of a set of collections.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1821" CLASS=TbT.TblText>331</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reduce</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1824" CLASS=TbT.TblText>Combines the elements of a collection and a seed value into a single value by repeatedly applying a binary function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1824" CLASS=TbT.TblText>331</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>reduce1</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1826" CLASS=TbT.TblText>Combines the elements of a collection into a single value by repeatedly applying a binary function, using the first element of the collection as the seed value.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1826" CLASS=TbT.TblText>332</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>find-key</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1837" CLASS=TbT.TblText>Returns the key in a collection such that the corresponding collection element satisfies a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1837" CLASS=TbT.TblText>335</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>replace-elements!</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1842" CLASS=TbT.TblText>Replaces those collection elements that satisfy a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1842" CLASS=TbT.TblText>336</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>choose</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1828" CLASS=TbT.TblText>Returns those elements of a sequence that satisfy a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1828" CLASS=TbT.TblText>333</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>choose-by</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1831" CLASS=TbT.TblText>Returns those elements of a sequence that correspond to those in another sequence that satisfy a predicate.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_102.htm#MARKER-9-1831" CLASS=TbT.TblText>333</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>do-handlers</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_107.htm#MARKER-9-1937" CLASS=TbT.TblText>Applies a function to all dynamically active handlers.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_107.htm#MARKER-9-1937" CLASS=TbT.TblText>362</A></P>
</TD></TR></TABLE><A NAME=HEADING94-367></A>
<A NAME="UID-Built-In_Classes-15434"></A>
<H2 CLASS=H2.Heading2> Generic Functions</H2>
<A NAME=HEADING94-368></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1469></A>&lt;generic-function&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of functions that are made up of a number of individual methods.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;function&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;generic-function&gt;</CODE> supports the following init-keywords:</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>required:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;number&gt;</CODE> or <CODE CLASS="cv RP.RoutineParam">&lt;sequence&gt;</CODE>.</P>
<DT CLASS=RP.RoutineParam><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> This argument represents the required arguments that the generic function accepts. If a sequence is supplied, the size of the sequence is the number of required arguments, and the elements of the sequence are the specializers. If a number is supplied, it is the number of required arguments, and the specializers default to <CODE CLASS=RP.RoutineParam>&lt;object&gt;</CODE>. If the argument is not supplied, or the supplied argument is neither a sequence nor a non-negative integer, an error is signaled.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>rest?:</CODE> <I CLASS=RP.RoutineParam></I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;boolean&gt;</CODE>. </P>
<DT CLASS=RP.RoutineParam><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> A true value indicates that the generic function accepts a variable number of arguments. The default value is <CODE CLASS=RP.RoutineParam>#f</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>key:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> <CODE CLASS="cv RP.RoutineParam">#f</CODE> or an instance of <CODE CLASS="cv RP.RoutineParam">&lt;collection&gt;</CODE> whose elements are keywords.</P>
<DT CLASS=RP.RoutineParam><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> If the value is a collection, then the generic function accepts keyword arguments, and the collection specifies the set of mandatory keywords for the generic function. A value of <CODE CLASS=RP.RoutineParam>#f</CODE> indicates that the generic function does not accept keyword arguments. The default value is <CODE CLASS=RP.RoutineParam>#f</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>all-keys?:<I CLASS=RP.RoutineParam></I></CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;boolean&gt;</CODE>. </P>
<DT CLASS=RP.RoutineParam><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> A true value indicates that the generic function accepts all keyword arguments. The default value is <CODE CLASS=RP.RoutineParam>#f.</CODE></P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of generic functions. Generic functions are described in <A HREF="drm_46.htm#MARKER-9-723" CLASS=Cliche>Chapter 6, "Functions."</A></P>
<P CLASS=T1.Text1>The arguments describe the shape of the generic function's parameter list, and thereby control which methods can be added to the generic function. See the section <A HREF="drm_49.htm#MARKER-9-800" CLASS=T1.Text1>"Kinds of Parameter Lists" on page 86</A> and the section <A HREF="drm_49.htm#MARKER-9-837" CLASS=T1.Text1>"Parameter List Congruency" on page 93</A> for the implications of these choices.</P>
<P CLASS=T1.Text1>An error is signaled if the value of <CODE CLASS=T1.Text1>rest?:</CODE> is true and the value of <CODE CLASS=T1.Text1>key:</CODE> is a collection. While a method parameter list may specify both <CODE CLASS="cv T1.Text1">#rest</CODE> and <CODE CLASS="cv T1.Text1">#key</CODE>, a generic function parameter list cannot.</P>
<P CLASS=T1.Text1>An error is signaled if the value of <CODE CLASS=T1.Text1>all-keys?:</CODE> is true and the value of <CODE CLASS=T1.Text1>key:</CODE> is <CODE CLASS=T1.Text1>#f</CODE>. </P>
<P CLASS=T1.Text1>A new generic function initially has no methods. An error will be signaled if a generic function is called before methods are added to it. Once a generic function is created, you can give it behavior by adding methods to it with <CODE CLASS=T1.Text1>add-method</CODE> or <CODE CLASS=T1.Text1>define method</CODE>.</P>
<P CLASS=T1.Text1>Generic functions are not usually created by calling <CODE CLASS="cv T1.Text1">make</CODE> directly. Most often they are created by <CODE CLASS=T1.Text1>define generic</CODE> or implicitly by <CODE CLASS=T1.Text1>define method</CODE>.</P>
</DL>
<P CLASS=Anchor> <B CLASS="IMPORTANT Anchor">Operations:</B> The class <CODE CLASS=Anchor>&lt;generic-function&gt;</CODE> provides the following operations:</P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-66  Functions on &lt;generic-function&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>generic-function-<BR>methods</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1895" CLASS=TbT.TblText>Returns the methods of a generic function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1895" CLASS=TbT.TblText>351</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add-method</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1897" CLASS=TbT.TblText>Adds a method to a generic function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1897" CLASS=TbT.TblText>352</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>generic-function-<BR>mandatory-<BR>keywords</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1899" CLASS=TbT.TblText>Returns the mandatory keywords of a generic function, if any.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1899" CLASS=TbT.TblText>353</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>sorted-applicable-methods</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1909" CLASS=TbT.TblText>Returns all the methods in a generic function that are applicable to sample arguments, sorted in order of specificity.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1909" CLASS=TbT.TblText>356</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>find-method</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1911" CLASS=TbT.TblText>Returns the method in a generic function that has particular specializers.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1911" CLASS=TbT.TblText>356</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove-method</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1913" CLASS=TbT.TblText>Removes a method from a generic function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1913" CLASS=TbT.TblText>357</A></P>
</TD></TR></TABLE><A NAME=HEADING94-490></A>
<A NAME="UID-Built-In_Classes-3217"></A>
<H2 CLASS=H2.Heading2> Methods</H2>
<A NAME=HEADING94-491></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1470></A>&lt;method&gt;</CODE> [Sealed Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of functions that are applicable to arguments of a specified type.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;function&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of methods. Methods are described in <A HREF="drm_46.htm#MARKER-9-723" CLASS=Cliche>Chapter 6, "Functions."</A></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;method&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> <A NAME=MARKER-2-1471></A></P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-67  Functions on &lt;method&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>add-method</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1897" CLASS=TbT.TblText>Adds a method to a generic function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1897" CLASS=TbT.TblText>352</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>remove-method</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1913" CLASS=TbT.TblText>Removes a method from a generic function.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_106.htm#MARKER-9-1913" CLASS=TbT.TblText>357</A></P>
</TD></TR></TABLE>
</DIV>

<DIV CLASS=WM-DIV-FOOTERS>

<DIV CLASS=WM-DIV-TOC>

<!-- TOC --><DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_94.htm#HEADING94-4" CLASS=FOOTER><B CLASS=FOOTER></B>General Functions</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_94.htm#HEADING94-5" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;function&gt; [Sealed Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_94.htm#HEADING94-367" CLASS=FOOTER><B CLASS=FOOTER></B>Generic Functions</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_94.htm#HEADING94-368" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;generic-function&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_94.htm#HEADING94-490" CLASS=FOOTER><B CLASS=FOOTER></B>Methods</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_94.htm#HEADING94-491" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;method&gt; [Sealed Class]</A>
<DD CLASS=FOOTER>
</DL>


</DIV>

<HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>The Dylan Reference Manual - 7 Apr 1998</ADDRESS>
<P CLASS=FOOTER><A HREF="drm_95.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_93.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_87.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=FOOTER>Copyright Apple Computer, Inc. 1996. Apple&#174; and the Apple logo are registered trademarks of Apple Computer, Inc. Used with permission. All Rights Reserved.</P>
<P CLASS=FOOTER>You can order a <A HREF="http://www.harlequin.com/products/ads/dylan/purchase.shtml" CLASS=FOOTER>bound copy</A> of this book from Harlequin.</P>
<P CLASS=FOOTER>Generated with <A HREF="http://www.harlequin.com/webmaker" CLASS=FOOTER>Harlequin WebMaker&#174;</A></P>

</DIV>
</BODY>
</HTML>
