<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="drm_1.htm">
<LINK REL=UP HREF="drm_96.htm">
<LINK REL=PREV HREF="drm_106.htm">
<LINK REL=NEXT HREF="drm_108.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=drm.css TYPE="text/css">
<TITLE> Operations on Conditions</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV CLASS=WM-DIV-BODY>
<A NAME=HEADING107></A>

<DIV CLASS=WM-DIV-HEADERS>
<P CLASS=HEADER><A HREF="drm_108.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_106.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_96.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=HEADER>12 The Built-In Functions</P>

</DIV>
<A NAME=HEADING107-0></A>
<A NAME="UID-Built-In_Functions-1613"></A>
<H1 CLASS=H1.Heading1> Operations on Conditions</H1>
<P CLASS=T0.Text0>The following functions are used to create, signal, handle, and examine conditions.</P>
<A NAME=HEADING107-2></A>
<A NAME="UID-Built-In_Functions-23522"></A>
<H2 CLASS=H2.Heading2> <A NAME=MARKER-2-1916></A><A NAME=MARKER-9-1917></A>Signaling Conditions</H2>
<A NAME=HEADING107-3></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1918></A>signal</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1919></A>Signals a condition.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signatures:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">signal<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">condition   => #rest  values<BR>signal   string #rest arguments   => #rest values</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (1):</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (2):</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">string</I> An instance of <CODE CLASS="cv Cliche">&lt;string&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">arguments</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> Instances of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">values</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Signals the <I CLASS=Cliche>condition</I>, trying each active dynamic handler, the most recent first. If all dynamic handlers decline, <CODE CLASS=Cliche>signal</CODE> calls <CODE CLASS=Cliche>default-handler(<I CLASS=Cliche>condition)</I></CODE>. If a handler returns, all the values that it returned are returned from <CODE CLASS=Cliche>signal</CODE>. If <CODE CLASS=Cliche>signal</CODE> returns when <I CLASS=Cliche>condition</I>'s recovery protocol does not allow returning, some handler has violated protocol; <CODE CLASS=Cliche>signal</CODE> does not check for this error. If <I CLASS=Cliche>condition</I> is a restart, the caller of <CODE CLASS=Cliche>signal</CODE> should always assume that it might return.</P>
<P CLASS=T1.Text1>The second form signals a condition of type <CODE CLASS=T1.Text1>&lt;simple-warning&gt;</CODE>. </P>
</DL>
<A NAME=HEADING107-12></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1920></A>error </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1921></A>Signals a nonrecoverable error.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signatures:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">error</CODE>   <I CLASS="Parameter Cliche">condition<B CLASS="Parameter Cliche">   =>  {will never return}<BR><CODE CLASS="cv Parameter Cliche">error</CODE></B></I>  <I CLASS="Parameter Cliche">string</I> <CODE CLASS="cv Cliche">#rest<B CLASS="cv Cliche"> <I CLASS="Parameter cv Cliche">arguments   =>  {will never return}</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (1):</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (2):</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">string</I> An instance of <CODE CLASS="cv Cliche">&lt;string&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">arguments</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> Instances of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> None. <CODE CLASS="Code Cliche">error</CODE> will never return.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS=Cliche>error</CODE> is similar to <CODE CLASS=Cliche>signal</CODE> but never returns; if a handler returns, <CODE CLASS=Cliche>error</CODE> invokes the debugger immediately. <CODE CLASS=Cliche>error</CODE> is used to make it clear that a program does not expect to receive control again after signaling a condition and might enable the compiler to generate slightly more compact code.</P>
<P CLASS=T1.Text1>The second form signals a condition of type <CODE CLASS=T1.Text1>&lt;simple-error&gt;</CODE>.</P>
</DL>
<A NAME=HEADING107-21></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1922></A>cerror </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1923></A>Signals a correctable error.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signatures:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">cerror<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">restart-description condition   =>  false<BR>cerror   restart-description string #rest arguments  =>  false</I></B></CODE></P>
<DT CLASS=Cliche2><B CLASS="IMPORTANT Cliche2">Arguments (1):</B><DD CLASS=Cliche2><P CLASS=Cliche2> <I CLASS="Parameter Cliche2">restart-description</I>  An instance of <CODE CLASS="cv Cliche2">&lt;string&gt;</CODE>, interpreted as a format string.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">condition</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;condition&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche2><B CLASS="IMPORTANT Cliche2">Arguments (2):</B><DD CLASS=Cliche2><P CLASS=Cliche2> <I CLASS="Parameter Cliche2">restart-description </I>An instance of <CODE CLASS="cv Cliche2">&lt;string&gt;</CODE>, interpreted as a format string.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">string</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;string&gt;</CODE>.</P>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">arguments</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> Instances of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">false</I> <CODE CLASS="cv Cliche">#f</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">cerror</CODE> is the same as <CODE CLASS="cv Cliche">error</CODE> but first establishes a handler for<CODE CLASS=Cliche> &lt;simple-restart&gt;</CODE>, with a format string of <I CLASS="Parameter Cliche">restart-description</I> and format arguments of a sequence containing the <I CLASS="Parameter Cliche">arguments</I>.</P>
<P CLASS=T1.Text1>If the restart handler is invoked, <CODE CLASS="cv T1.Text1">cerror</CODE> returns <CODE CLASS="cv T1.Text1">#f</CODE>; otherwise, <CODE CLASS="cv T1.Text1">cerror</CODE> never returns. If <CODE CLASS="cv T1.Text1">cerror</CODE> returns, the program should take the corrective actions promised in the <I CLASS="Parameter T1.Text1">restart-description</I>. <CODE CLASS="cv T1.Text1">cerror</CODE> is the standard way to signal correctable errors when no special class of restart condition is required.</P>
</DL>
<A NAME=HEADING107-32></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1924></A>break </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription>Invokes the debugger<A NAME=MARKER-9-1925></A>.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signatures:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">break<B CLASS="cv Cliche">   <I CLASS="Parameter cv Cliche">condition  =>  false<BR>break   string #rest arguments   =>  false<BR>break  =>  false</I></B></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (1):</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (2):</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">string</I> An instance of <CODE CLASS="cv Cliche">&lt;string&gt;</CODE>, interpreted as a format string.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">arguments</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> Instances of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>, interpreted as format arguments.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments (3):</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">false</I> <CODE CLASS="Code Cliche">#f</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Obtains a condition in the same way as <CODE CLASS=Cliche>signal</CODE> but then invokes the debugger immediately without signaling first. <CODE CLASS=Cliche>break</CODE> establishes a <CODE CLASS=Cliche>&lt;simple-restart&gt;</CODE> so the debugger can continue execution. This is useful for breakpoints. <CODE CLASS=Cliche>break</CODE> always returns <CODE CLASS=Cliche>#f</CODE>. With no arguments, a default message string is used.</P>
<P CLASS=T1.Text1>The behavior of the debugger is implementation-defined.</P>
</DL>
<A NAME=HEADING107-42></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1926></A>check-type </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription>Checks an object to ensure that it is an instance of a specified type.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">check-type <I CLASS="Parameter cv Cliche">value type<B CLASS="Parameter cv Cliche">   =>  value</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">value</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><I CLASS="Parameter RP.RoutineParam">type</I><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;type&gt;</CODE>.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">value</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Checks <I CLASS="Parameter Cliche">value</I> to ensure that it is an instance of <I CLASS="Parameter Cliche">type</I>, and signal an error of type <CODE CLASS="cv Cliche">&lt;type-error&gt;</CODE> if it is not.</P>
</DL>
<A NAME=HEADING107-49></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1927></A>abort</CODE> [Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription>Aborts and never returns.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">abort</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> None. <CODE CLASS=Cliche>abort</CODE> will never return.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Performs <CODE CLASS=Cliche>error(make (&lt;abort&gt;))</CODE>.</P>
<P CLASS=T1.Text1>This function is provided as a convenient shortcut. The call is to <CODE CLASS=T1.Text1>error</CODE>, rather than to <CODE CLASS=T1.Text1>signal</CODE>, to guarantee that <CODE CLASS=T1.Text1>abort</CODE> will never return.</P>
</DL>
<A NAME=HEADING107-56></A>
<A NAME="UID-Built-In_Functions-423"></A>
<H2 CLASS=H2.Heading2> Handling Conditions</H2>
<A NAME=HEADING107-57></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1928></A>default-handler</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1929></A>Called if no dynamic handler handles a condition.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">default-handler <I CLASS="Parameter cv Cliche">condition<B CLASS="Parameter cv Cliche">   => #rest  values</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">values</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Called if no dynamic handler handles a condition.</P>
</DL>
<A NAME=HEADING107-63></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>default-handler</CODE> condition<CODE CLASS=H5.Heading5> =>  false</CODE> [G.F. Method]</H4>
<P CLASS=SD.ShortDescription>A predefined method on <CODE CLASS="cv SD.ShortDescription">&lt;condition&gt;</CODE> simply returns <CODE CLASS="cv SD.ShortDescription">#f</CODE>.</P>
<A NAME=HEADING107-65></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>default-handler</CODE> serious-condition<CODE CLASS=H5.Heading5> =>  </CODE>{does not return} [G.F. Method]</H4>
<P CLASS=SD.ShortDescription>A predefined method on <CODE CLASS="cv SD.ShortDescription">&lt;serious-condition&gt;</CODE> invokes an implementation-defined debugger.</P>
<A NAME=HEADING107-67></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>default-handler</CODE> warning<CODE CLASS=H5.Heading5> =>  false</CODE> [G.F. Method]</H4>
<P CLASS=SD.ShortDescription>A predefined method on <CODE CLASS="cv SD.ShortDescription">&lt;warning&gt;</CODE> prints the warning's message in an implementation-defined way and then returns <CODE CLASS="cv SD.ShortDescription">#f</CODE>.</P>
<A NAME=HEADING107-69></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>default-handler</CODE> restart<CODE CLASS=H5.Heading5> =>  </CODE>{does not return} [Sealed G.F. Method]</H4>
<P CLASS=SD.ShortDescription>A predefined method on <CODE CLASS="cv SD.ShortDescription">&lt;restart&gt;</CODE> signals an error.</P>
<A NAME=HEADING107-71></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1930></A>restart-query</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1637></A>Called to query the user and restart.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">restart-query <I CLASS="Parameter cv Cliche">restart<B CLASS="Parameter cv Cliche">   => #rest  values</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">restart</I> An instance of <CODE CLASS="cv Cliche">&lt;restart&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">values</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Engages the interactive user in a dialog and stores the results in slots of <I CLASS="Parameter Cliche">restart</I>.</P>
<P CLASS=T1.Text1>This function is designed to be called from a handler, after making a restart and before signaling it. The debugger uses <CODE CLASS=T1.Text1>restart-query</CODE>, for example. </P>
</DL>
<A NAME=HEADING107-78></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>restart-query</CODE> restart => object [G.F. Method]</H4>
<P CLASS=T1.Text1>There is a default method for <CODE CLASS=T1.Text1>&lt;restart&gt;</CODE> that does nothing.</P>
<A NAME=HEADING107-80></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1932></A>return-query</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1933></A>Queries the user for values to return.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">return-query <I CLASS="Parameter cv Cliche">condition<B CLASS="Parameter cv Cliche">   => #rest  values</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">values</I> Instances of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> If the recovery protocol of <I CLASS=Cliche>condition</I> allows returning values, this engages the program user in a dialog and returns the results as any number of values, which the handler should return.</P>
<P CLASS=T1.Text1><CODE CLASS=T1.Text1>return-query</CODE> should not be called if <CODE CLASS=T1.Text1>return-allowed?</CODE> returns <CODE CLASS=T1.Text1>#f</CODE>. Programs that define condition classes whose recovery protocol allows returning values should ensure that there is an appropriate method for this function defined on or inherited by the condition class.</P>
</DL>
<A NAME=HEADING107-87></A>
<A NAME="UID-Built-In_Functions-1650"></A>
<H2 CLASS=H2.Heading2> <A NAME=MARKER-9-1934></A>Introspection on Conditions</H2>
<A NAME=HEADING107-88></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1935></A><A NAME=MARKER-2-1936></A>do-handlers </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1937></A>Applies a function to all dynamically active handlers.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">do-handlers <I CLASS="Parameter cv Cliche">function<B CLASS="Parameter cv Cliche">   =>  false</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">function</I> An instance of <CODE CLASS="cv Cliche">&lt;function&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">false</I> <CODE CLASS="cv Cliche">#f</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Applies<I CLASS=Cliche> function</I> to all dynamically active handlers, the most recently established first. <I CLASS=Cliche>function</I> receives four arguments: <I CLASS=Cliche>type</I>, <I CLASS=Cliche>test</I>, <I CLASS=Cliche>function</I>, and <I CLASS=Cliche>init-arguments</I>. The arguments describe a dynamically active handler. All arguments have dynamic extent and must not be modified. <I CLASS=Cliche>test</I> defaults to a function that always returns <CODE CLASS=Cliche>#t</CODE>. <I CLASS=Cliche>init-arguments</I> will be an empty sequence if it was not supplied by the handler.</P>
</DL>
<A NAME=HEADING107-94></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1938></A>return-allowed?</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1939></A>Returns true if a condition's recovery protocol allows returning values.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">return-allowed? <I CLASS="Parameter cv Cliche">condition<B CLASS="Parameter cv Cliche">   =>  boolean</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">boolean</I> An instance of <CODE CLASS="cv Cliche">&lt;boolean&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns <CODE CLASS=Cliche>#t</CODE> if the recovery protocol of <I CLASS=Cliche>condition</I> allows returning values, or <CODE CLASS=Cliche>#f</CODE> if it does not.</P>
<P CLASS=T1.Text1>There is a default method for <CODE CLASS=T1.Text1>&lt;condition&gt;</CODE> that returns <CODE CLASS=T1.Text1>#f</CODE>. Programs which define condition classes whose recovery protocol allows returning values should ensure that there is an appropriate method for this function defined on or inherited by the condition class.</P>
</DL>
<A NAME=HEADING107-101></A>
<H4 CLASS=H5.Heading5> <CODE CLASS=H5.Heading5>return-allowed?</CODE> condition => false [G.F. Method]</H4>
<P CLASS=T1.Text1>There is a default method for <CODE CLASS=T1.Text1>&lt;condition&gt;</CODE> that returns <CODE CLASS=T1.Text1>#f</CODE>.</P>
<A NAME=HEADING107-103></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1940></A>return-description</CODE> [Open Generic Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1941></A>Returns a description of a condition's returned values.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">return-description <I CLASS="Parameter cv Cliche">condition<B CLASS="Parameter cv Cliche">  =>  description</B></I></CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Arguments:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">condition</I> An instance of <CODE CLASS="cv Cliche">&lt;condition&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">description</I> <CODE CLASS="Code Cliche">#f</CODE> or an instance of <CODE CLASS="cv Cliche">&lt;string&gt;</CODE> or an instance of <CODE CLASS="cv Cliche">&lt;restart&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> If the recovery protocol of this condition allows returning values, <CODE CLASS=Cliche>return-description</CODE> returns a description of the meaning of returning values.</P>
<P CLASS=T1.Text1>This <I CLASS=T1.Text1>description</I> can be a restart, a string, or <CODE CLASS=T1.Text1>#f</CODE>. <CODE CLASS=T1.Text1>return-description</CODE> should not be called if <CODE CLASS=T1.Text1>return-allowed?</CODE> returns <CODE CLASS=T1.Text1>#f</CODE>. If you define your own condition class whose recovery protocol allows returning values, you need to define a method for <CODE CLASS=T1.Text1>return-description</CODE> unless the inherited method is suitable.</P>
</DL>
<A NAME=HEADING107-110></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1942></A>condition-format-string </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-2-1681></A>Returns the format string of a simple condition.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">condition-format-string <I CLASS="Parameter cv Cliche">simple-condition<B CLASS="Parameter cv Cliche">   => format-string</B></I></CODE></P>
<DT CLASS=Cliche2><B CLASS="IMPORTANT Cliche2">Arguments:</B><DD CLASS=Cliche2><P CLASS=Cliche2> <I CLASS="Parameter Cliche2">simple-condition </I>An instance of <CODE CLASS="cv Cliche2">&lt;simple-error&gt;</CODE>, <CODE CLASS="cv Cliche2">&lt;simple-warning&gt;</CODE>, or <CODE CLASS="cv Cliche2">&lt;simple-restart&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">format-string</I> An instance of <CODE CLASS="cv Cliche">&lt;string&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the format string that was supplied as an initialization argument when the <I CLASS="Parameter Cliche">simple-condition</I> was created.</P>
</DL>
<A NAME=HEADING107-116></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1944></A>condition-format-arguments </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1945></A>Returns the format arguments of a simple condition.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">condition-format-arguments <I CLASS="Parameter cv Cliche">simple-condition<B CLASS="Parameter cv Cliche">   =>  format-args</B></I></CODE></P>
<DT CLASS=Cliche2><B CLASS="IMPORTANT Cliche2">Arguments:</B><DD CLASS=Cliche2><P CLASS=Cliche2> <I CLASS="Parameter Cliche2">simple-condition </I>An instance of <CODE CLASS="cv Cliche2">&lt;simple-error&gt;</CODE>, <CODE CLASS="cv Cliche2">&lt;simple-warning&gt;</CODE>, or <CODE CLASS="cv Cliche2">&lt;simple-restart&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">format-args</I> An instance of <CODE CLASS="cv Cliche">&lt;sequence&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the sequence of format arguments that was supplied as an initialization argument when the <I CLASS="Parameter Cliche">simple-condition</I> was created.</P>
</DL>
<A NAME=HEADING107-122></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1946></A>type-error-value </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1947></A>Returns the value that was not of the expected type.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">type-error-value <I CLASS="Parameter cv Cliche">type-error<B CLASS="Parameter cv Cliche">   => object</B></I></CODE></P>
<DT CLASS=Cliche2><B CLASS="IMPORTANT Cliche2">Arguments:</B><DD CLASS=Cliche2><P CLASS=Cliche2> <I CLASS="Parameter Cliche2">type-error</I> An instance of <CODE CLASS="cv Cliche2">&lt;type-error&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">object</I> An instance of <CODE CLASS="cv Cliche">&lt;object&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the value that was not of the expected type, and thereby led to the type error.</P>
</DL>
<A NAME=HEADING107-128></A>
<H3 CLASS=H4.Heading4> <CODE CLASS="Code H4.Heading4"><A NAME=MARKER-2-1948></A>type-error-expected-type </CODE>[Function]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=SD.ShortDescription><A NAME=MARKER-9-1949></A>Returns the expected type of the type check that led to the type error.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Signature:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">type-error-expected-type <I CLASS="Parameter cv Cliche">type-error<B CLASS="Parameter cv Cliche">   => type</B></I></CODE></P>
<DT CLASS=Cliche2><B CLASS="IMPORTANT Cliche2">Arguments:</B><DD CLASS=Cliche2><P CLASS=Cliche2> <I CLASS="Parameter Cliche2">type-error</I> An instance of <CODE CLASS="cv Cliche2">&lt;type-error&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Values:</B><DD CLASS=Cliche><P CLASS=Cliche> <I CLASS="Parameter Cliche">type</I> An instance of <CODE CLASS="cv Cliche">&lt;type&gt;</CODE>.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> Returns the expected type of the type check that led to the type error.<A NAME=MARKER-2-1950></A><A NAME=MARKER-2-1951></A><A NAME=MARKER-2-1952></A></P>
<P CLASS=T1.Text1></P>
<A NAME="LINK-Built-In_Functions-lastpage"></A><A NAME="LINK-Built-In_ObjectsTOC-firstpage"></A></DL>
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<A NAME="UID-Built-In_ObjectsTOC-217"></A>
<!-- FM pgf ignored -->
<!-- FM pgf ignored -->
<A NAME="LINK-Built-In_ObjectsTOC-lastpage"></A>
</DIV>

<DIV CLASS=WM-DIV-FOOTERS>

<DIV CLASS=WM-DIV-TOC>

<!-- TOC --><DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-2" CLASS=FOOTER><B CLASS=FOOTER></B>Signaling Conditions</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-3" CLASS=FOOTER><B CLASS=FOOTER></B>signal [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-12" CLASS=FOOTER><B CLASS=FOOTER></B>error [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-21" CLASS=FOOTER><B CLASS=FOOTER></B>cerror [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-32" CLASS=FOOTER><B CLASS=FOOTER></B>break [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-42" CLASS=FOOTER><B CLASS=FOOTER></B>check-type [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-49" CLASS=FOOTER><B CLASS=FOOTER></B>abort [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-56" CLASS=FOOTER><B CLASS=FOOTER></B>Handling Conditions</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-57" CLASS=FOOTER><B CLASS=FOOTER></B>default-handler [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-63" CLASS=FOOTER><B CLASS=FOOTER></B>default-handler condition =>  false [G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-65" CLASS=FOOTER><B CLASS=FOOTER></B>default-handler serious-condition =>  {does not return} [G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-67" CLASS=FOOTER><B CLASS=FOOTER></B>default-handler warning =>  false [G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-69" CLASS=FOOTER><B CLASS=FOOTER></B>default-handler restart =>  {does not return} [Sealed G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-71" CLASS=FOOTER><B CLASS=FOOTER></B>restart-query [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-78" CLASS=FOOTER><B CLASS=FOOTER></B>restart-query restart => object [G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-80" CLASS=FOOTER><B CLASS=FOOTER></B>return-query [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-87" CLASS=FOOTER><B CLASS=FOOTER></B>Introspection on Conditions</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-88" CLASS=FOOTER><B CLASS=FOOTER></B>do-handlers [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-94" CLASS=FOOTER><B CLASS=FOOTER></B>return-allowed? [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-101" CLASS=FOOTER><B CLASS=FOOTER></B>return-allowed? condition => false [G.F. Method]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-103" CLASS=FOOTER><B CLASS=FOOTER></B>return-description [Open Generic Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-110" CLASS=FOOTER><B CLASS=FOOTER></B>condition-format-string [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-116" CLASS=FOOTER><B CLASS=FOOTER></B>condition-format-arguments [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-122" CLASS=FOOTER><B CLASS=FOOTER></B>type-error-value [Function]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_107.htm#HEADING107-128" CLASS=FOOTER><B CLASS=FOOTER></B>type-error-expected-type [Function]</A>
<DD CLASS=FOOTER>
</DL>


</DIV>

<HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>The Dylan Reference Manual - 7 Apr 1998</ADDRESS>
<P CLASS=FOOTER><A HREF="drm_108.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_106.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_96.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=FOOTER>Copyright Apple Computer, Inc. 1996. Apple&#174; and the Apple logo are registered trademarks of Apple Computer, Inc. Used with permission. All Rights Reserved.</P>
<P CLASS=FOOTER>You can order a <A HREF="http://www.harlequin.com/products/ads/dylan/purchase.shtml" CLASS=FOOTER>bound copy</A> of this book from Harlequin.</P>
<P CLASS=FOOTER>Generated with <A HREF="http://www.harlequin.com/webmaker" CLASS=FOOTER>Harlequin WebMaker&#174;</A></P>

</DIV>
</BODY>
</HTML>
