<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML Experimental 19960712//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental) -->
<HEAD>
<LINK REL=TOP HREF="drm_1.htm">
<LINK REL=UP HREF="drm_87.htm">
<LINK REL=PREV HREF="drm_89.htm">
<LINK REL=NEXT HREF="drm_91.htm">
<LINK TITLE="WebMaker generated style" REL=stylesheet HREF=drm.css TYPE="text/css">
<TITLE> Types</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1997 experimental)">
</HEAD>
<BODY BGCOLOR="#FEFEF2" TEXT="#000000" LINK="#0000FF" VLINK="#800080" ALINK="#FF0000">

<DIV CLASS=WM-DIV-BODY>
<A NAME=HEADING90></A>

<DIV CLASS=WM-DIV-HEADERS>
<P CLASS=HEADER><A HREF="drm_91.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_89.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_87.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=HEADER>11 The Built-In Classes</P>

</DIV>
<A NAME=HEADING90-0></A>
<A NAME="UID-Built-In_Classes-20036"></A>
<H1 CLASS=H1.Heading1> <A NAME=MARKER-2-1368></A>Types</H1>
<P CLASS=T0.Text0>Types are used to categorize objects. <A HREF="#MARKER-9-1369" CLASS=T0.Text0>Figure 11-1</A> shows the built-in classes of types and some of their characteristics.</P>
<P CLASS=Fg.Figure>Figure 11-1  <A NAME=MARKER-9-1369></A>The Type Classes<IMG ALIGN=TOP SRC=dr90ima2.gif></P>
<A NAME=HEADING90-3></A>
<A NAME="UID-Built-In_Classes-7027"></A>
<H2 CLASS=H2.Heading2> General Types</H2>
<A NAME=HEADING90-4></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1370></A>&lt;type&gt;</CODE> [Sealed Abstract Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of all types, including classes and other types.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;object&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> None.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of all types. All types (including <CODE CLASS=Cliche>&lt;type&gt;</CODE> and <CODE CLASS=Cliche>&lt;class&gt;</CODE>) are instances of <CODE CLASS=Cliche>&lt;type&gt;</CODE>. </P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;type&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-4  Functions on &lt;type&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>instance?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1861" CLASS=TbT.TblText>Tests whether an object is an instance of a type.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1861" CLASS=TbT.TblText>343</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>subtype?</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1863" CLASS=TbT.TblText>Tests whether a type is a subtype of another type.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1863" CLASS=TbT.TblText>343</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>type-union</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1564" CLASS=TbT.TblText>Returns the union of two or more types.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1564" CLASS=TbT.TblText>266</A></P>
</TD></TR></TABLE><P CLASS=Anchor>  </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-5  Generic Functions on &lt;type&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>258</A></P>
</TD></TR></TABLE><A NAME=HEADING90-106></A>
<A NAME="UID-Built-In_Classes-8996"></A>
<H2 CLASS=H2.Heading2> Classes</H2>
<A NAME=HEADING90-107></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1371></A><A NAME=MARKER-9-1372></A>&lt;class&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T1.Text1>The class of all Dylan classes.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;type&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;class&gt;</CODE> supports the following init-keywords:</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>superclasses:<BR></CODE>An instance of <CODE CLASS="cv RP.RoutineParam">&lt;class&gt;</CODE> or <CODE CLASS="cv RP.RoutineParam">&lt;sequence&gt;</CODE> specifying the direct superclasses of the class. If it is a sequence, the elements of the sequence must be instances of <CODE CLASS="cv RP.RoutineParam">&lt;class&gt;</CODE>. The default value is <CODE CLASS=RP.RoutineParam>&lt;object&gt;</CODE>. The meaning of the order of the superclasses is the same as in <CODE CLASS=RP.RoutineParam>define class</CODE>.<DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam></P>
<DT CLASS=RP.RoutineParam><CODE CLASS="cv RP.RoutineParam">abstract?:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;boolean&gt;</CODE> specifying whether the class is abstract or concrete. The default value is <CODE CLASS="cv RP.RoutineParam">#f</CODE>.</P>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>slots:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;sequence&gt;</CODE> containing slot specs, where each slot-spec is a sequence of keyword/value pairs.</P>
<DT CLASS=RP.RoutineParam><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> The following keywords and corresponding values  are accepted by all implementations. Implementations may also define additional keywords and values for use within slot specs.</P>
<DL CLASS=RP2.RoutineParam2>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>getter:</CODE><DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2> A generic function of one argument. Unless the allocation of the slot is virtual, the getter method for the slot will be added to this generic function. This option is required.</P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>setter:</CODE><DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2> A generic function of two arguments, or <CODE CLASS="cv RP2.RoutineParam2">#f</CODE> indicating "no setter."  Unless the allocation of the slot is virtual, the setter method for the slot will be added to this generic function. The default value is <CODE CLASS="cv RP2.RoutineParam2">#f</CODE>.</P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>type:</CODE><DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2> A type. Values stored in the slot are restricted to be of this type. The default value is <CODE CLASS=RP2.RoutineParam2>&lt;object&gt;</CODE>.</P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>deferred-type:<BR></CODE>A function of no arguments, which returns a type, and is called once to compute the type of the slot, within the call to <CODE CLASS=RP2.RoutineParam2>make</CODE> that constructs the first instance of that class. For a given slot spec, either <CODE CLASS="cv RP2.RoutineParam2">type:</CODE> or <CODE CLASS="cv RP2.RoutineParam2">deferred-type:</CODE> may be specified, but not both.<DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2></P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>init-value:</CODE><DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2> A default initial value for the slot. This option cannot be specified along with <CODE CLASS=RP2.RoutineParam2>init-function:</CODE> or <CODE CLASS=RP2.RoutineParam2>required-init-keyword:</CODE> and it cannot be specified for a virtual slot. There is no default.</P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>init-function:<BR></CODE>A function of no arguments. This function will be called to generate an initial value for the slot when a new instances is created. This option cannot be specified along with <CODE CLASS=RP2.RoutineParam2>init-value:</CODE> or <CODE CLASS=RP2.RoutineParam2>required-init-keyword:</CODE> and it cannot be specified for a virtual slot. There is no default<DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2></P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>init-keyword:<BR></CODE>A keyword. This option permits an initial value for the slot to be passed to <CODE CLASS="cv RP2.RoutineParam2">make</CODE>, as a keyword argument using this keyword. This option cannot be specified for a virtual slot. There is no default. This option cannot be specified along with <CODE CLASS=RP2.RoutineParam2>required-init-keyword:</CODE>.<DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2></P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>required-init-keyword:<BR></CODE>A keyword. This option is like <CODE CLASS=RP2.RoutineParam2>init-keyword:</CODE>, except it indicates an init-keyword that must be provided when the class is instantiated. If <CODE CLASS=RP2.RoutineParam2>make</CODE> is called on the class and a required init-keyword is not provided in the defaulted initialization arguments, an error is signaled. There is no default. This option cannot be specified if <CODE CLASS=RP2.RoutineParam2>init-keyword:</CODE>, <CODE CLASS=RP2.RoutineParam2>init-value:</CODE>, or <CODE CLASS=RP2.RoutineParam2>init-function:</CODE> is specified, or for a virtual slot.<DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2></P>
<DT CLASS=RP2.RoutineParam2><CODE CLASS=RP2.RoutineParam2>allocation:</CODE><DD CLASS=RP2.RoutineParam2><P CLASS=RP2.RoutineParam2> One of the keywords <CODE CLASS=RP2.RoutineParam2>instance:</CODE>, <CODE CLASS=RP2.RoutineParam2>class:</CODE>, <CODE CLASS=RP2.RoutineParam2>each-subclass:</CODE>, or <CODE CLASS=RP2.RoutineParam2>virtual:</CODE>, or an implementation defined keyword. The meaning of this option is the same as adding the corresponding adjective to a <CODE CLASS=RP2.RoutineParam2>define class</CODE> form.</P>
</DL>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of all classes. All classes (including <CODE CLASS=Cliche>&lt;class&gt;</CODE>) are general instances of <CODE CLASS=Cliche>&lt;class&gt;</CODE>.</P>
<P CLASS=T1.Text1>In most programs the majority of classes are created with <CODE CLASS=T1.Text1>define class</CODE>. However, there is nothing to prevent programmers from creating classes by calling <CODE CLASS=T1.Text1>make</CODE>, for example, if they want to create a class without storing it in a module binding, or if they want to create new classes at runtime.</P>
<P CLASS=T1.Text1>If <CODE CLASS=T1.Text1>make</CODE> is used to create a new class and creating the new class would violate any restrictions specified by sealing directives, then an error of type <CODE CLASS=T1.Text1>&lt;sealed-object-error&gt;</CODE> is signaled.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS="cv Cliche">&lt;class&gt;</CODE> provides the following operations:</P>
</DL>
<P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-6  Functions on &lt;class&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>all-superclasses</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1867" CLASS=TbT.TblText>Returns the class precedence list a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1867" CLASS=TbT.TblText>344</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>direct-<BR>superclasses</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1869" CLASS=TbT.TblText>Returns the direct superclasses of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1869" CLASS=TbT.TblText>345</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>direct-subclasses</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1871" CLASS=TbT.TblText>Returns the direct subclasses of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_103.htm#MARKER-9-1871" CLASS=TbT.TblText>345</A></P>
</TD></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>limited</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>Returns a limited subtype of a class.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1559" CLASS=TbT.TblText>263</A></P>
</TD></TR></TABLE><P CLASS=Anchor> </P>
<TABLE BORDER=1><CAPTION><P CLASS=Tb.Table>Table 11-7  Methods on &lt;class&gt; (continued)</P>
</CAPTION><TR VALIGN=TOP><TH><P CLASS=TbH.TblHd> Function</P>
</TH><TH><P CLASS=TbH.TblHd> </P>
</TH><TH><P CLASS=TbH.TblHd> Description</P>
</TH><TH><P CLASS=TbH.TblHd> Page</P>
</TH></TR><TR VALIGN=TOP><TD><P CLASS=TbT.TblText> <CODE CLASS=TbT.TblText>make</CODE></P>
</TD><TD><P CLASS=TbT.TblText> </P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1539" CLASS=TbT.TblText>Returns a general instance of its first argument.</A></P>
</TD><TD><P CLASS=TbT.TblText> <A HREF="drm_98.htm#MARKER-9-1541" CLASS=TbT.TblText>259</A></P>
</TD></TR></TABLE><A NAME=HEADING90-238></A>
<A NAME="UID-Built-In_Classes-14542"></A>
<H2 CLASS=H2.Heading2> Singletons</H2>
<A NAME=HEADING90-239></A>
<H3 CLASS=H4.Heading4> <CODE CLASS=H4.Heading4><A NAME=MARKER-2-1373></A>&lt;singleton&gt;</CODE> [Sealed Instantiable Class]</H3>
<HR CLASS=H4.Heading4>
<P CLASS=T0.Text0>The class of types that indicate a single object.</P>
<DL CLASS=Cliche>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Superclasses:</B><DD CLASS=Cliche><P CLASS=Cliche> <CODE CLASS="cv Cliche">&lt;type&gt;</CODE></P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Init-keywords:</B><DD CLASS=Cliche><P CLASS=Cliche> The class <CODE CLASS=Cliche>&lt;singleton&gt;</CODE> supports the following init-keyword:</P>
<DL CLASS=RP.RoutineParam>
<DT CLASS=RP.RoutineParam><CODE CLASS=RP.RoutineParam>object:</CODE><DD CLASS=RP.RoutineParam><P CLASS=RP.RoutineParam> An instance of <CODE CLASS="cv RP.RoutineParam">&lt;object&gt;</CODE>. The object that the singleton indicates. There is no default for this argument. If it is not supplied, an error will be signaled.</P>
</DL>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Description:</B><DD CLASS=Cliche><P CLASS=Cliche> The class of singletons.</P>
<P CLASS=T1.Text1>If a singleton for the specified object already exists, implementations may return it rather than allocating a new singleton.</P>
<DT CLASS=Cliche><B CLASS="IMPORTANT Cliche">Operations:</B><DD CLASS=Cliche><P CLASS=Cliche> None.<A NAME=MARKER-2-1374></A></P>
</DL>

</DIV>

<DIV CLASS=WM-DIV-FOOTERS>

<DIV CLASS=WM-DIV-TOC>

<!-- TOC --><DL CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_90.htm#HEADING90-3" CLASS=FOOTER><B CLASS=FOOTER></B>General Types</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_90.htm#HEADING90-4" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;type&gt; [Sealed Abstract Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_90.htm#HEADING90-106" CLASS=FOOTER><B CLASS=FOOTER></B>Classes</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_90.htm#HEADING90-107" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;class&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_90.htm#HEADING90-238" CLASS=FOOTER><B CLASS=FOOTER></B>Singletons</A>
<DD CLASS=FOOTER>
<DT CLASS=FOOTER><A REL=BELOW HREF="drm_90.htm#HEADING90-239" CLASS=FOOTER><B CLASS=FOOTER></B>&lt;singleton&gt; [Sealed Instantiable Class]</A>
<DD CLASS=FOOTER>
</DL>


</DIV>

<HR CLASS=FOOTER>
<ADDRESS CLASS=FOOTER>The Dylan Reference Manual - 7 Apr 1998</ADDRESS>
<P CLASS=FOOTER><A HREF="drm_91.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=next.gif CLASS=HEADER></A> <A HREF="drm_89.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=prev.gif CLASS=HEADER></A> <A HREF="drm_87.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=up.gif CLASS=HEADER></A> <A HREF="drm_1.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=top.gif CLASS=HEADER></A> <A HREF="drm_2.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=content.gif CLASS=HEADER></A> <A HREF="drm_127.htm" CLASS=HEADER><IMG ALIGN=BOTTOM BORDER=0 SRC=index.gif CLASS=HEADER></A></P>
<P CLASS=FOOTER>Copyright Apple Computer, Inc. 1996. Apple&#174; and the Apple logo are registered trademarks of Apple Computer, Inc. Used with permission. All Rights Reserved.</P>
<P CLASS=FOOTER>You can order a <A HREF="http://www.harlequin.com/products/ads/dylan/purchase.shtml" CLASS=FOOTER>bound copy</A> of this book from Harlequin.</P>
<P CLASS=FOOTER>Generated with <A HREF="http://www.harlequin.com/webmaker" CLASS=FOOTER>Harlequin WebMaker&#174;</A></P>

</DIV>
</BODY>
</HTML>
