Ref:	Dylan Notebook
Topic:	DylanWorks\Libraries\TestWorks-Plus
Title:	TestWorks-Plus User's Documentation
Author:	Shri Amit <amit>
Date:	Tuesday 17th September 1996, 03:32:59 PM
Categories:	Tests, QA
Status:	released
Readership:	Everybody
Next review:	 

Testworks-Plus User's Documentation
Synopsis: A detailed overview and a description of all exported objects.
Overview:
	Testworks-Plus has been designed and implemented with the 
intention of providing 
user's the ability to create test applications that run as executables. It 
has been 
built on top of the Testworks library which it uses and exports as well. 
Hence, test libraries may enjoy 
testworks visibility without having to use both testworks and 
testworks-plus. The only other object 
exported from Testworks-plus is the method run-test-application which can 
be thought of as a startup 
function for a defined test library. But as everything in dylan must be 
defined in a module and library, 
this startup function needs to be defined in a library of its own which by 
convention is the test-suite- 
name followed by -app. For example, say we have defined a test-suite 
called test-foo which 
contains the definitions of all its constituent suites and tests.Then the 
corresponding application library 
would contain a minimum of three files which could be as follows:
1. The file test-foo-lib.dylan which must use at least 2 things: the 
library being tested and testworks-plus:
			Module:    dylan-user
			Synopsis:  An application library for test-foo
			define library test-foo-app
  			    use test-foo;
  			    use testworks-plus;
			end;
		   	define module test-foo-app
  			     use test-foo;
  			     use testworks-plus;
			end;

2. The file test-foo.dylan which simply contains a call to the method 
run-test-application with the suite-name as an argument:
			Module:    test-foo-app
			Synopsis:  An application library for test-suite 
test-foo

			run-test-application(test-foo-suite);

3. The file test-foo.lid which specifies the names of the source files:
			Library:   test-foo-app
			Synopsis:  An application library for test-suite 
test-foo
			Files: test-foo-app-lib
       			 test-foo-app

	Once a library has been defined in this fashion it can be compiled 
into an executable using a compiler 
like the dfm. Such an application would enjoy the following command line 
arguments that are defined in testworks-plus:

	1. -help: This causes the display of the list of arguments available:
			Application: APPNAME
			 Arguments: [-trap -notrap]
				        [-progress -noprogress]
				        [-report [none full failures 
summary diff]]
				        [-suite <name1> <name2> ... ...]
				        [-test <name1> <name2> ... ...]
			                      [-ignore-suite <name1> 
<name2> ... ...]
				        [-ignore-test <name1> <name2> ... 
...]

	2. -trap or -notrap: This enables the user to initialize the 
*trap-errors?* variable in testworks. The 
			default is -trap. For more information see Control Objects: in 
TestWorks documentation

	3. -progress or -noprogress: This enables or disables a progress function 
which outputs the progress of 
			the suite as the checks are processed. The default 
is -progress. For more details on the 
			progress function - see Progress Functions: in TestWorks documentation.

	4. -report: After executing the suite, testworks outputs a report 
describing the operation. Testworks also 
		`	provides the user with a choice 3 different 
functions, full, failures and summary. This 
			option enables the user to either disable (by 
passing -report none) or make a choice of a 
			report function preferred. The default is the failures report function. 
For more information -
			see Report Functions: in the TestWorks documentation.

	5. -suite: This option enables the user to run specific sub-suites 
instead of the entire suite.

	6. -test: This option enables the user to run specific tests instead of 
the entire suite.

	7. -ignore-suite : This option enables the user to ignore any suites 
desired to be ignored during execution. 
	8. -ignore-test : Similarly, any tests to be ignored can be specified 
here. 

	Notice that the these options provide a large amount of 
flexibility and choice to the user as to what suites or 
tests to run and what not to. They are extremely useful when testing large 
suites that are composed of numerous sub-suites 
and tests etc. If no arguments are specified, the entire suite is executed 
with the mentioned defaults.

Report Functions:
	1. diff-report-function: This report function was added to the set of 
report functions already provided by testworks for
				a very specific purpose of being able to 
compare different test-suite run results. The dylan
				application test-diff has been specially designed to parse the output 
of this report function
				for two given runs and then make some 
"smart" comparisons on those.
Test-diff:
	This application is under construction right now. It shall be out by the 
end of October for sure.

Supporting scripts:
	To assist the user in the task of library creation and checking it 
into HOPE, there are a couple of perl 
scripts provided with Testworks-plus which are easy to use and can save a 
significant amount of work:

1. create-app-lib: This script accepts 3 arguments - test-suite-name 
(required) , personal-dylan-root (optional) and 
	personal-dylan-registry (optional). The default for the 
personal-dylan-root is userhome/dylan and the default 
	for the personal-dylan-registry is the  
personal-dylan-root/registry/generic. This script will automatically 
generate 
	the application library under 
personal-dylan-root/qa/test-apps/test-suite-name and shall make a registry 
entry 
	test-suite-name-app in personal-dylan-registry.

2. checkin-app-lib: This script takes the same arguments as the previous 
one and works in the exact same way, except 
	that its main task is to check the application library and the 
registry entry into HOPE.

Created by:	Shri Amit <amit>, Tuesday 17th September 1996, 03:32:59 PM
Last edited by:	Shri Amit <amit>, Monday 28th October 1996, 05:55:00 PM
Other editors:	
Contacts:	Shri Amit <amit>

Change log:
--- Shri Amit, 1996-10-31, 06:10:50 PM ---
Update for the diff function
--- Shri Amit, 1996-10-13, 06:53:23 PM ---
Update new additions and reorganization
--- Shri Amit, 1996-09-19, 11:19:36 AM ---
Minor editing
--- Shri Amit, 1996-09-17, 06:12:52 PM ---
Testworks-Plus User's Documentation
