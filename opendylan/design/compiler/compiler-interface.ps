%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.1
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%-
%- Frame ps_prolog 5.0, for use with Frame 5.0 products
%- This ps_prolog file is Copyright (c) 1986-1996 Adobe Systems, Incoporated.
%- All rights reserved.  This ps_prolog file may be freely copied and 
%- distributed in conjunction with documents created using FrameMaker, 
%- FrameMaker/SGML FrameReader and FrameViewer as long as this 
%- copyright notice is preserved.
%-
%- FrameMaker users specify the proper paper size for each print job in the
%- "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
%- printer that the PS file is sent to does not support the requested paper
%- size, or if there is no paper tray of the proper size currently installed, 
%- then the job will not be printed.  The following flag, if set to true, will
%- cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            true def
%-
%- Frame products normally print colors as their true color on a color printer
%- or as shades of gray, based on luminance, on a black-and white printer. The
%- following flag, if set to true, forces all non-white colors to print as pure
%- black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%-
%- Frame products can either set their own line screens or use a printer's 
%- default settings. Three flags below control this separately for no 
%- separations, spot separations and process separations. If a flag
%- is true, then the default printer settings will not be changed. If it is
%- false, Frame products will use their own settings from a table based on
%- the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%-
%- For any given PostScript printer resolution, Frame products have two sets of 
%- screen angles and frequencies for printing process separations, which are 
%- recomended by Adobe. The following variable chooses the higher frequencies
%- when set to true or the lower frequencies when set to false. This is only
%- effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%-
%- The following is a set of predefined optimal frequencies and angles for various
%- common dpi settings. This is taken from "Advances in Color Separation Using
%- PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
%- and corrolated with information which is in various PPD (4.0) files.
%-
%- The "dpiranges" figure is the minimum dots per inch device resolution which
%- can support this setting. The "low" and "high" values are controlled by the
%- setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
%- the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
%- three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%-
%- PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
%- to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
%- (too badly) against the screen frequencies of any separations for that DPI.
% This is computed by taking dpi/9 as the ideal pixels per repetition, and then
% computing a tiling size in printer pixels for each of the four separations as 
% (dpi/screenFreq)*(cos(screenAngle)+sin(screenAngle)) Actually, this is the same 
% for Cyan and Magenta). Then, we take a "nice" LCM of the tile sizes close to
% the desired pattern tile where the beat factor is not more than 2 or 3.
%
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def

/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def

/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%-
%- PostScript Level 2 printers contain an "Accurate Screens" feature which can
%- improve process separation rendering at the expense of compute time. This 
%- flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%-
%- The following PostScript procedure defines the spot function that Frame
%- products will use for process separations. You may un-comment-out one of
%- the alternative functions below, or use your own.
%-
%- Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%-
%- Line function
%- /FMSpotFunction { pop } def
%-
%- Elipse function
%- /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%-		sqrt 1 exch sub } def
%-
%-

/FMversion (5.0) def % matches PS_VERSION in fmprintdriver

% PostScript Level 1 = true, 2 = false
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def

% Set up Color vs. Black-and-White
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
%		statusdict /processcolors known {
%			statusdict /processcolors get exec
%		} {1} ifelse
%		1 gt
		true
	} ifelse
def

/FrameDict 400 dict def % should check this value each time changes made

%
% For NeWS we add a fake errordict, so we can psh files
%
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if

%- The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put % save old rangecheck
errordict /rangecheck {FrameDict /bug true put} put % will flag bug found
FrameDict /bug false put % flag bug not found
mark % since we're not sure what will happen next
%- Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark % junk from readline and rangecheck
errordict /rangecheck FrameDict /tmprangecheck get put % restore rangecheck
FrameDict /bug get { % redefine readline if last one got a rangecheck
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop % get a char
			dup 10 eq {exit} if % exit if LF
			dup 13 eq {exit} if % exit if CR
			gstring exch gindex exch put % store it away
			/gindex gindex 1 add def % bump index
		} loop
		pop % eol character
		gstring 0 gindex getinterval true % simulate real readline
		} bind def
	} if

% outer-world defs

/FMshowpage /showpage load def
/FMquit /quit load def

/FMFAILURE { % enter with two error strings on the stack
	dup = flush % send a copy of the message to the console
	FMshowpage % msg on a page by itself, so it can't be, say, black on black
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage % we might be in the middle of some EPS, where "showpage"
%	FMquit % and "quit" are redefined % Uncomment this line for traditional Frame failure behaviour
	} def % only used once at most, so no bind

/FMVERSION {
	FMversion ne {
		(Adobe Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def % only used at startup, so no bind

/FMBADEPSF { % Call with bad operator name on stack (as a string)
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length % parmstr errstr errstr indx
	5 -1 roll % errstr errstr index parmstr
	putinterval % errstr
	FMFAILURE
	} def

% standard concatprocs routine
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def

% Put all local variables here in alphabetical order.
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall

% Start of PDF/Acrobat support

% Bind def
/FmBD {bind def} bind def

systemdict /pdfmark known {
	/fMAcrobat true def

	% FmPD is a conditional PDFMark
	/FmPD /pdfmark load def
	
	% FmPT is a show text operator which only show up when distiller is active
	/FmPT /show load def
	
	% FmPD2 and FmPA are Acrobat 2.0-specific
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		% FmPD2 is like FmPD but for Acrobat 2.0-specific PDF
		/FmPD2 /pdfmark load def
		
		% x y/name FmPA
		% 	is equivalent to
		% [/Dest/name/View[/FitH x y FmDC exch pop]/DEST FmPD
		% It is a shortcut for pagragraph Uinique ID designators whic occurr commonly.
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		% These are No-Ops for Distiller 1.0
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	% these are the No-Ops for regular PostScript
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse

% This convert a set of X Y coordinates from the current user space to the default
% PostScript coordinates needed by some pdfmark variants. We also convert to 
% integer because the distiller doesn't always like floats!
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD

% This converts four numbers into a bounding box making sure the first two are maller than the last two
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD

% End of PDF/Acrobat support

%
% Color separation code
%

% Constants.

/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def

/fMNegative false def % we are inverting the page

% Variables.

/FrameSepIs FMnone def % separation we are printing
% If FrameSepIs is FMcustom, this is the custom color
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def

/FrameCurColors [ 0 0 0 1 0 0 0 ] def % c m y k r g b

% Utility routines

/FrameColorEpsilon .001 def	% epsilon by which values can differ and sill be equal
/eqepsilon {		% v1 v2 eqeps bool
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def

% are the cmyk and cmykrgb arrays on the stack the same color?
/FrameCmpColorsCMYK { % [ c1 m1 y1 k1 ] [ c2 m2 y2 k2 r2 g2 b2] -> bool
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
% are the rgb and cmykrgb arrays on the stack the same color?
/FrameCmpColorsRGB { % [ r1 g1 b1 ] [ c2 m2 y2 k2 r2 g2 b2] -> bool
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def

% convert r g b to c m y k
/RGBtoCMYK { % r g b
	1 exch sub % r g y
	3 1 roll % y r g
	1 exch sub % y r m
	3 1 roll % m y r
	1 exch sub % m y c
	3 1 roll % c m y
	3 copy % c m y c m y
	2 copy % c m y c m y m y
	le { pop } { exch pop } ifelse % c m y c min(m,y)
	2 copy % c m y c min(m,y) c min(m,y)
	le { pop } { exch pop } ifelse % c m y min(c, min(m,y))
	dup dup dup % c m y k k k k
	6 1 roll % c k m y k k k
	4 1 roll % c k m k y k k
	7 1 roll % k c k m k y k
	sub % k c k m k y
	6 1 roll % y k c k m k
	sub % y k c k m
	5 1 roll % m y k c k
	sub % m y k c
	4 1 roll % c m y k 
} bind def
/CMYKtoRGB { % c m y k CMYKtoRGB r g b
	dup dup 4 -1 roll add 						  % c m k k y+k
	5 1 roll 3 -1 roll add 						  % y+k c k m+k
	4 1 roll add 								  % m+k y+k c+k
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  % r m+k y+k
	1 exch sub dup 0 lt {pop 0} if exch 	      % r b m+k
	1 exch sub dup 0 lt {pop 0} if exch	  		  % r g b
} bind def

% Public routines


% Happens at the top of each page that is a separation
/FrameSepInit {
	1.0 RealSetgray
} bind def
% Tell the separation code that this separation is for a custom color
/FrameSetSepColor { % c m y k r g b
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
% Tell the separation code that this separation is Cyan
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
% Tell the separation code that this separation is Magenta
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
% Tell the separation code that this separation is Yellow
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
% Tell the separation code that this separation is Black
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
% Tell the separation code we are not doing a separation
/FrameNoSep { %
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def

% Initialize the separation code with all the custom colors we are
% separating (not process colors)
/FrameSetSepColors { % list of arrays of [c m y k r g b] count 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  % array of arrays of colors we are separating
	exch def end
	} bind def

% is this color array in the array of custom color separations?
/FrameColorInSepListCMYK { % [ c m y k ] -> bool
	FrameSepColors {  % color elem-of-array
       		exch dup 3 -1 roll % color color elem
       		FrameCmpColorsCMYK % color bool
       		{ pop true exit } if
    	} forall % exits with either [color] or true
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { % [ r g b ] -> bool
	FrameSepColors {  % color elem-of-array
       		exch dup 3 -1 roll % color color elem
       		FrameCmpColorsRGB % color bool
       		{ pop true exit } if
    	} forall % exits with either [color] or true
	dup true ne {pop false} if
	} bind def

% Level 1 color operators saved and redefined
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 

% Setgray patch
/setgray { % num
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ % go to white unless the current sep color is black
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { % r g b
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] % r g b [ r g b ]
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor % safe since we will overwrite the color state
		currentrgbcolor  % r g b - Let PostsCript to the conversion.
		setrgbcolor % call our version
	} 
	ifelse
	end
} bind def
FrameDict begin

/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { % c m y k
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put

% Set up a prototype pattern for PostScript Level 2
fMLevel1 { 
	% set up screen functions for the patterns in PS level 1
	% each entry contains an angle, spot function, flipped spot function,
	% gray level and frequency multiplier.
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { % prototype level 2 pattern dictionary
	% define some PostScript procedures for known jaggy patterns.
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		% Always 1 for PS Level 2
		/PaintType 2 def		% Uncolored pattern
		/TilingType 3 def		% constant spacing and faster tiling
		/BBox [ 0 0 8 8 ] def 	% bounding box
		/XStep 8 def			% X offset
		/YStep 8 def			% Y offset
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse

%combineColor puts together the current gray value (which could also be
%a fraction of on bits for a fill pattern and the current color and calls
%the appropriate function
%
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			% Level 2 pattern
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { % separation case
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			% Level 2 pattern
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				% Level 1 patterns are either all there or not there at all
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def

/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
% freq and sangle are used for ps Level 1 pattern building.
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def

%
% screen index depending on dpi
%	- screenIndex smallint
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def

%
% These routines get the standard Adobe frequencies, angles, and spot functions
% depending on the DPI
%
% - getCyanScreen freq angle spotfunction
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def

%
% - getMagentaScreen freq angle spotFunction
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def

%
% - getYellowScreen freq angle spotFunction
% note that some of these use a "tripple dot" function at 1/3 the frequency
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def

%
% - getBlackScreen freq angle spotFunction
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def

%
% - getSpotScreen freq angle spotFunction
/getSpotScreen {
	getBlackScreen
} bind def

%
% - getCompositeScreen freq angle spotFunction
/getCompositeScreen {
	getBlackScreen
} bind def

% FmSetScreen sets the screen for either PostScript Level 1 or Level 2 and optionally
% sets the accuratescreens flag in the latter case
% freq angle spotfunction FMSetScreen -
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def

% This sets the default screen as was set at the beginning of the job
% - setDefaultScreen -
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def

% This sets the current screen depending on FrameSepIs
% - setCurrentScreen -
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def


end

% End of Color separation code
%
	
/FMDOCUMENT { % xscale yscale edown negative paperwidth paperheight manfeed numcopies numfonts
	array /FMfonts exch def % Why isn't this in FrameDict???
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def % invert page
	0 ne /edown exch def % flip page along y axis
	/yscale exch def
	/xscale exch def

	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def % some PS's leave junk on dict ...
		/FMoptop count def % ...or on operand stack...
		setpapername % This stuff may alter the transfer/screen/angle
		manualfeed {true} {papersize} ifelse % true->more work to do
		{manualpapersize} {false} ifelse % true->more work to do
		{desperatepapersize} {false} ifelse % true->failed completely
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for %...if tray not installed
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse % fMLevel1
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def

			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse

	end % FrameDict
} def % only used at startup, so no bind

/FMBEGINPAGE { % pagewidth pageheight landscape color-arrays count
	FrameDict begin % for the whole page...
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { % check for landscape
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
% paint the whole page in "white".  If the page is inverted, then
% this will actually paint our black background
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave % for CLIP
} def % only used infrequently, so no bind

/FMENDPAGE {
	grestore % for CLIP
	pagesave restore
	end % FrameDict
	showpage
	} def % only used infrequently, so no bind

/FMFONTDEFINE { % fontindex nonstd_encoding fontname -- 
	FrameDict begin
	findfont % fontindex nonstd_encoding font
	ReEncode % fontindex font'
	1 index exch % fontindex fontindex font'
	definefont % fontindex font"
	FMfonts 3 1 roll %  FMfonts fontindex font"
	put
	end % FrameDict
	} def % only used infrequently, so no bind

/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end % framedict
	} def % Only called once, so no bind

/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end % FrameDict
	} def % only used infrequently, so no bind

% Set things to a known, quiescent state, for when we switch to another writer
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray % Not FMsetgray; only called outside of our environment!
	} bind def

/FMBEGINEPSF { % <theta> llx lly urx ury fw fh fx fy
	end % FrameDict
	/FMEPSF save def % in userdict
	/showpage {} def % this def is in userdict
%- See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
%- "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def % FMBADEPSF knows this is the longest!
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
%	/initmatrix {(initmatrix) FMBADEPSF} def	% Aldus Freehand 4.0 epsf uses this harmlessly <Gus 4/26/95>
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS % in case we're in a strange state
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall % neat trick
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale % then scale
	llx neg lly neg translate % then compensate for LL offset 
	/FMdicttop countdictstack 1 add def % high-water mark of dict stack
	/FMoptop count def % tricky! "/FMoptop" on stack
	} bind def

/FMENDEPSF {
	count -1 FMoptop {pop pop} for % clear EPS junk from operand stack
	countdictstack -1 FMdicttop {pop end} for % ditto for dict stack
	FMEPSF restore
	FrameDict begin % for the whole page...
	} bind def

FrameDict begin % put most defs here

/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def

/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def

/pagedimen { % name width height
	paperheight sub abs 16 lt exch % 16pt is an arbitrary slop amount
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def

/setpapername { % Already set up: paperwidth paperheight and manualfeed
	/papersizedict 14 dict def % one for /papername, one for /unknown
	papersizedict begin
	/papername /unknown def % in case no match
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def

/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end % return true if more work to do
	} bind def

/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped % return true if more work to do
	} bind def

/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped % return true iff failed
		end
		} {true} ifelse % return true iff failed
	} bind def

/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def

%
% Font re-encoding to include diacritics
% 
/DiacriticEncoding [

/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron

] def

/ReEncode { % nonstd_encoding font -- reencodedfont
	dup % nonstd_encoding font font
	length % nonstd_encoding font dictlength
	dict begin % nonstd_encoding font % currentdict = newdict
	{% forall % forall is over font to be copied
	1 index /FID ne % skip FID
		{def} % defs go into newfontdict which is currentdict
		{pop pop} ifelse % copy all keys including /Encoding
	} forall % nonstd_encoding
	0 eq {/Encoding DiacriticEncoding def} if % --
	currentdict % push a copy of the copied font dict onto operand stack
	end % font' % before popping it off dictionary stack
	} bind def

FMPColor 
	% setup procs for color printing
	{

	/BEGINBITMAPCOLOR { % iw, ih, width, height, theta, x y 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { % iw, ih, width, height, theta, x y 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	% setup procs for B&W printing
	{
	/BEGINBITMAPCOLOR { % iw, ih, width, height, theta, x y 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { % iw, ih, width, height, theta, x y 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse

/K { % c m y k r g b SEPARATION
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
%
% graymode is true if we are just doing gray fills, this way do not keep calling
% setscreen. I don't know what the cost is on calling setscreen with defaults, but
% this is easy to keep track of, and we know for sure we aren't wasting cycles.
% if graymode is false and fMLevel1 is false, then we are using Level 2 patterns.
%
/graymode true def

% used by level 1 patterns
% defaultflip matrixentry fmGetFlit -> eith -1 or 1
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if

/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop % angle spot fspot gray mult
			freq 								% freq
			mul									% times multiplier
			5 2 roll							% angle spot fspot gray mult freq -> gray freq angle spot fspot
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		% landscape
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								% portrait     
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		% take regular or flipped spot function
			fMNegative { 
				{neg} fmConcatProcs 			% invert spot function
			} if
			bind
			% we need to bypass any screen filter and go directly to systemdict
			% to avoid problems with Kodak Precision calibration software
			% <Gus 9/13/93>
			systemdict /setscreen get exec		% leave graylevel on stack
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { % Level 2 version
		pop pop
		dup patCache exch known {
			patCache exch get
		} { % not in cache
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
%			9 orgfreq 
%				organgle sin abs organgle cos abs add div
%				dup 16 div round dup 0 le {pop 1} if  % Unix pattern size
%			    dup  9 div round dup 0 le {pop 1} if  % Mac larger (WYSIWYG) size
%					div div dup matrix scale % This gives Unix pattern size.
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def

/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def

/normalize {
	transform round exch round exch itransform
	} bind def

/dnormalize {
	dtransform round exch round exch idtransform
	} bind def

/lnormalize { % line widths are always odd so that arrow heads work
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def

/H { % THICK
	lnormalize setlinewidth
	} bind def

/Z {
	setlinecap
	} bind def
	
% This is used to fill or stroke white behind a Level 2 pattern
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def

/X { % TEXTURE
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} % Silly to pass parameters here
	{setGrayScaleMode}
	ifelse
	} bind def

/V { % FILL
	PFill gsave eofill grestore
	} bind def

/Vclip {
	clip
	} bind def

/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/N { % PEN
	PStroke
	} bind def

/Nclip {
	strokepath clip newpath
	} bind def

/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def

/L { % POLYLINE
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def

/Y { % POLYGON !!!
	L % POLYLINE
	closepath
	} bind def

/R { % RECT x1 y1 x2 y2
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y % POLYGON
	} bind def

/rarc % Leaves all sorts of junk on the operand stack for caller to clear off
	{rad % arcto might fail if we're scaled way down
	 arcto
	} bind def

/RR { % ROUNDRECT x1 y1 x2 y2 r
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if % in case rarc failed for degenerate arcs
	cleartomark
	} bind def

/RRR { % ROUNDRECT ROTATED xs ys x1 y1 x2 y2 x3 y3 x4 y4 r
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto % eats xs ys
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def

/C { % CLIP
	grestore
	gsave
	R % RECT
	clip
	setCurrentScreen
} bind def

/CP { % CLIPPOLY p1x p1y p2x p2y ... n 
	grestore
	gsave
	Y % POLYGON
	clip
	setCurrentScreen
} bind def

/F { % FONT
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def

/Q { % POINTSIZE (& font)
	/FMpointsize exch def
	F % could be slightly optimized here
	} bind def

/T { % TEXT <string> <x> <y>
	moveto show
	} bind def

% Callers of RF (rotate/flip) must gsave (or save) first; (g)restore when done
/RF { % <flip> <theta>
	rotate
	0 ne {-1 1 scale} if
	} bind def

/TF { % TEXTFLIPROTATE <string> <flip> <theta> <x> <y>
	gsave
	moveto 
	RF
	show
	grestore
	} bind def

/P { % PADTEXT <pad> <string> <x> <y>
	moveto
	0 32 3 2 roll widthshow
	} bind def

/PF { % PADTEXTFLIPROTATE <pad> <string> <flip> <theta> <x> <y>
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def

/S { % SPREADTEXT <spread> <string> <x> <y>
	moveto
	0 exch ashow
	} bind def

/SF { % SPREADTEXTFLIPROTATE <spread> <string> <flip> <theta> <x> <y>
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def

/B { % PADSPREADTEXT <pad> <spread> <string> <x> <y>
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def

/BF { % PADSPREADTEXTFLIPROTATE <pad> <spread> <string> <flip> <theta> <x> <y>
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def

/G { % ARCFILL theta1 theta2 width height x y
	gsave
	newpath
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	PFill fill
	grestore
	} bind def

/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch % theta1 theta2 width height x y
    normalize 2 index 2 div sub exch 3 index 2 div add exch % theta1 theta2 width height x y
    translate
    scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def

/Gclip { % ARCFILL theta1 theta2 width height x y swid
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	clip newpath
	restorematrix
	} bind def

/GG { % ARCFILL ROTATED theta1 theta2 width height angle x y
	gsave
	newpath
	normalize translate 0.0 0.0 moveto % eats x y
	rotate % eats angle
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath
	PFill
	fill
	grestore
	} bind def

/GGclip { % ARCFILL ROTATED theta1 theta2 width height angle x y
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath
	clip newpath
	restorematrix
	} bind def

/GGstrk { % ARCFILL ROTATED swid theta1 theta2 width height angle x y
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def

/A { % ARCPEN theta1 theta2 width height x y
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch % theta1 theta2 width height x y
	normalize 2 index 2 div sub exch 3 index 2 div add exch % theta1 theta2 width height x y
	translate 
	scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	restorematrix
	PStroke
	grestore
	} bind def

/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto % eats x y
	dnormalize scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	closepath 
	strokepath clip newpath
	restorematrix
} bind def

/Astrk {
	Gstrk
} bind def

/AA { % ARCPEN ROTATED theta1 theta2 width height angle x y
	gsave
	savematrix
	newpath
	% theta1 theta2 width height angle x y
	3 index 2 div add exch 4 index 2 div sub exch 
	% theta1 theta2 width height angle x y
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate % eats x y
	rotate % eats angle
	scale % eats width height
	0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
	restorematrix
	PStroke
	grestore
	} bind def

/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto % eats x y
    rotate % eats angle
    dnormalize scale % eats width height
    0.0 0.0 1.0 5 3 roll arc % eats theta1 theta2
    closepath
	strokepath clip newpath
	restorematrix
} bind def

/AAstrk {
	GGstrk
} bind def

/BEGINPRINTCODE { % -x -y width height
	/FMdicttop countdictstack 1 add def % high-water mark of dict stack
	/FMoptop count 7 sub def % tricky! 7 params on stack, plus "/FMoptop"
	/FMsaveobject save def
	userdict begin % insulate user from FrameDict; not in /FMdicttop count
	/showpage {} def % this def is in userdict
	FMNORMALIZEGRAPHICS % in case we're in a strange state
	3 index neg 3 index neg translate
	} bind def

/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for % clear user junk from operand stack
	countdictstack -1 FMdicttop {pop end} for % ditto for dict stack
	FMsaveobject restore % this is now safe, unless user very malicious
	} bind def

/gn { % get a number in a funny encoding scheme
	0 % result on stack
	{	46 mul % shift old digits
		cf read pop % get next character
		32 sub % zero is the space character
		dup 46 lt {exit} if % quit if we're the last digit
		46 sub add % add in this digit and loop around for next
		} loop
	add % result on stack
	} bind def

/cfs { % create a string of length "sl" filled with "val"s
	/str sl string def % create string as "str"
	0 1 sl 1 sub {str exch val put} for % fill array
	str def % define real array name, too; name is on stack from caller
	} bind def

/ic [ % "case" stmt list of procedures that the image commands should call
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def

/ms { % make all the strings
	/sl exch def % remember length of currently existing strings
	/val 255 def % that's white
	/ws cfs % make "ws" a string filled with white
	/im cfs % and "im" is a complete image scanline
	/val 0 def % that's black
	/bs cfs % make "bs" a string filled with black
	/cs cfs % here's where we'll put complete command lines
	} bind def

400 ms % make strings that will be plenty long for most applications

/ip { % image procedure; reads and executes commands to make scanlines
	is % leave image string and...
	0 % ...image position on stack all through this procedure
	cf cs readline pop % get a string of commands
	{	ic exch get exec % execute next command
		add % all commands leave a length on the stack; update pos
		} forall % step through all commands
	pop % get rid of image position pointer
	% image string left on stack, so it's returned to image primitive
	} bind def
/rip { % this is similar to ip above, except for 24 bit images
	   % this takes an extra argument, the width of the image
	  % do red
	  bis ris copy pop % copy blue to red
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop % remove is and position from stack
	  ris gis copy pop % copy red to green
	  dup is exch % position of green is width bytes into is
	  % do green
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop % copy green to blue
	  dup add is exch % position of blue is 2*width bytes into is
	  % do blue
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def

/rip4 { % this is similar to ip above, except for 32 bit images
	   % this takes an extra argument, the width of the image
	  % do cyan
	  kis cis copy pop % copy black to cyan
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop % remove is and position from stack
	  cis mis copy pop % copy cyan to magenta
	  dup is exch % position of magenta is width bytes into is
	  % do magenta
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop % copy magenta to yellow
	  dup dup add is exch % position of yellow is 2*width bytes into is
	  % do yellow
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop % copy yellow to black
	  3 mul is exch % position of black is 3*width bytes into is
	  % do black
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def


/wh { % fill a number of bytes with "white"
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	ws 0 len getinterval im pos len getinterval copy pop
	pos len % remember where we got to
	} bind def

/bl { % fill a number of bytes with "black"
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	bs 0 len getinterval im pos len getinterval copy pop
	pos len % remember where we got to
	} bind def

/s1 1 string def

/fl { % fill a number of bytes with a specific hex value
	/len exch def % number of bytes to fill
	/pos exch def % position to put them at
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len % remember where we got to
	} bind def

/hx { % read hex bytes directly; on entry, stack has <str> <pos> <len>
	3 copy getinterval % stack has <str> <pos> <len> <substr>
	cf exch readhexstring pop pop % stack back to <str> <pos> <len>
	} bind def

/wbytes { % width depth -> wb      find width in bytes  given 1, 2, 8 or 24 or 32
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { % iw, ih, width, height, theta, x y 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { % iw, ih, width, height, theta, x y 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { % iw, ih, width, height, theta, x y 
	2 {} COMMONBITMAPc
	} bind def
%
% Common routine for imaging compressed images
%
/COMMONBITMAPc { % iw, ih, width, height, theta, x y depth proc
		 % (x,y) is the lower left corner of the image
	/cvtProc exch def
	/depth exch def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def % LW+ has a buggy memory leak!
	cvtProc                % run the desired proc after save has occurred
	/is im 0 lb getinterval def % image substring
	ws 0 lb getinterval is copy pop % whiten it
	/cf currentfile def % evaluate "currentfile" only once
	width height depth [width 0 0 height neg 0 height] % top to bottom
	{ip} image % zap!
	bitmapsave restore % avoid occasional disaster on the LW+
	grestore
	} bind def
/BEGINBITMAPBW { % iw, ih, width, height, theta, x y 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { % iw, ih, width, height, theta, x y 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { % iw, ih, width, height, theta, x y 
	2 {} COMMONBITMAP
	} bind def
%
% Common routine for uncompressed images
%
/COMMONBITMAP { % iw, ih, width, height, theta, x y depth proc
	/cvtProc exch def
	/depth exch def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/bitmapsave save def % LW+ has a buggy memory leak!
	cvtProc              % run the desired proc after save has occurred
	/is width depth wbytes string def
	/cf currentfile def % evaluate "currentfile" only once
	width height depth [width 0 0 height neg 0 height] % top to bottom
	{cf is readhexstring pop} image
	bitmapsave restore % avoid occasional disaster on the LW+
	grestore
	} bind def

%
% All this hairy color setup stuff gus wrote on the mac, I just copied and
% changed the variable names to be humanly readable.

/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def

fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
% The HP PaintJet XL300 ignores the gray transfer curve but still sets its
% default black generation and undercolor removal functions as if it is
% used. This causes black colors not to work. Bug#56844 <Gus 2/22/93>
% - We go back to the old (correct?) way of doing this since this code
% is now bypassed for PS Level 2 printers in favor of colorSetup2 which
% uses PS Level 2 indexed color, which is much cleaner. <Gus 3/3/93>
		/u kk currentundercolorremoval exec def
%-		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
% Here, we set up indexed color for imaging on PS Level 2 without mucking around
% with the transfer functions.

/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse

%
% Setup a transfer function to convert psuedo color values into grayscale
% values based on the color lookup tables.
%
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
%
% image a color image
%
/BITMAPCOLOR { % iw, ih, width, height, theta, x y 
	/depth 8 def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def % evaluate "currentfile" only once
		width height depth [width 0 0 height neg 0 height] % top to bottom
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def % evaluate "currentfile" only once
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
%
% Compressed color image rendering
%
/BITMAPCOLORc { % iw, ih, width, height, theta, x y 
	/depth 8 def
	gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def % image substring
		ws 0 lb getinterval is copy pop % whiten it
		/cf currentfile def % evaluate "currentfile" only once
		width height depth [width 0 0 height neg 0 height] % top to bottom
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def % image substring
		ws 0 lb getinterval is copy pop % whiten it
		/cf currentfile def % evaluate "currentfile" only once
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/ris im 0 width getinterval def	% red part of im
	/gis im width width getinterval def	% green part of im
	/bis im width 2 mul width getinterval def % blue part of im
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/cis im 0 width getinterval def	% cyan part of im
	/mis im width width getinterval def	% magenta part of im
	/yis im width 2 mul width getinterval def % yellow part of im
	/kis im width 3 mul width getinterval def % black part of im
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
%
% image a color image to a b&width device
%
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/ris im 0 width getinterval def	% red part of im
	/gis im width width getinterval def	% green part of im
	/bis im width 2 mul width getinterval def % blue part of im
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	% rotate about center of image
	3 index 2 div add exch	% iw ih width height theta y+(height/2) x
	4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
	translate		% iw ih width height theta
	rotate			% iw ih width height
	1 index 2 div neg	% iw ih width height -(width/2)
	1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
	translate		% iw ih width height
	scale			% iw ih
	/height exch def /width exch def
	/lb width depth wbytes def % so "lb" has width in bytes
	sl lb lt {lb ms} if % maybe make bigger strings
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	% Whole scanline
	/cis im 0 width getinterval def	% cyan part of im
	/mis im width width getinterval def	% magenta part of im
	/yis im width 2 mul width getinterval def % yellow part of im
	/kis im width 3 mul width getinterval def % black part of im
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { % c m y k width
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { % r g b width
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		% rotate about center of image
		3 index 2 div add exch	% iw ih width height theta y+(height/2) x
		4 index 2 div add exch	% iw ih width height theta x+(width/2) y+(height/2)
		translate		% iw ih width height theta
		rotate			% iw ih width height
		1 index 2 div neg	% iw ih width height -(width/2)
		1 index 2 div neg	% iw ih width height -(width/2) -(height/2)
		translate		% iw ih width height
		scale			% iw ih
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { % iw, ih, width, height, theta, x y 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { % iw, ih, width, height, theta, x y 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end % of FrameDict definitions

% OPI stuff
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def

% Dashed lines stuff
/I { setdash } bind def
/J { [] 0 setdash } bind def

%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 10 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 1 /Symbol FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "25" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(25) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 1
%%Page: "24" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(24) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(\245) 85.5 712 T
0 F
(Remove dylan-variable) 99 712 T
1 F
(\245) 85.5 697.32 T
0 F
(Change used-library-project-interface-location to used-library-compilation-context) 99 697.32 T
1 F
(\245) 85.5 682.65 T
0 F
(Change compiler module names) 99 682.65 T
1 F
(\245) 85.5 667.97 T
0 F
(Replace target: compiler setting with processor: and operating-system:) 99 667.97 T
1 F
(\245) 85.5 653.29 T
0 F
(Split compile-project-sources into parse-project-sources and compile-project-definitions) 99 653.29 T
1 F
(\245) 85.5 638.61 T
0 F
(Add dynamic-context arg to execute-source) 99 638.61 T
1 F
(\245) 85.5 623.94 T
0 F
(Remove source-record-id-source-record from Source Manager imports and add project-) 99 623.94 T
(record-id-source-record to Project Manager imports.) 99 609.94 T
1 F
(\245) 85.5 595.26 T
0 F
(Add STATUS NOTE\325s with current implementation status.) 99 595.26 T
(v7, October 2, 1996:) 72 568.58 T
1 F
(\245) 85.5 547.9 T
0 F
(Document mode: #\323default-open\323) 99 547.9 T
1 F
(\245) 85.5 533.23 T
0 F
(New compiler setting build-location:) 99 533.23 T
1 F
(\245) 85.5 518.55 T
0 F
(Remove references to database-location being misused to store linker files, since that\325s no) 99 518.55 T
(longer the case.) 99 504.55 T
(v8, October 10, 1996:) 72 477.87 T
1 F
(\245) 85.5 457.19 T
0 F
(added interface-location: arg to open-compilation-context) 99 457.19 T
1 F
(\245) 85.5 442.52 T
0 F
(removed support for producing statically linkable object files from build-component) 99 442.52 T
1 F
(\245) 85.5 427.84 T
0 F
(remove the execute-project-changes function, and remove the reinitialize-constants?: arg) 99 427.84 T
(\050and related commentary\051 from execute-source.) 99 413.84 T
1 F
(\245) 85.5 399.16 T
0 F
(Made execute-source return a transaction id rather than returning values.) 99 399.16 T
1 F
(\245) 85.5 384.48 T
0 F
(Add requirement for active-lexical-variables function from Runtime Manager.) 99 384.48 T
(v9, January 29, 1997:) 72 357.81 T
1 F
(\245) 85.5 337.13 T
0 F
(By popular demand, added source-form-context.) 99 337.13 T
1 F
(\245) 85.5 322.45 T
0 F
(Added STATUS NOTE\325s to note source-form-referenced-macros, source-form-referenced-) 99 322.45 T
(variables, and variable-referencing-forms are not implemented yet, and their potential) 99 308.45 T
(restrictions.) 99 294.45 T
1 F
(\245) 85.5 279.78 T
0 F
(Changed used-library-compilation-context to take a context not a project.) 99 279.78 T
(v10, February 12, 1997:) 72 253.1 T
1 F
(\245) 85.5 232.42 T
0 F
(Added variable-exported? and module-exported?.) 99 232.42 T
(v11, February 27, 1997:) 72 205.74 T
1 F
(\245) 85.5 185.07 T
0 F
(Added <primitive-definition>.) 99 185.07 T
1 F
(\245) 85.5 170.39 T
0 F
(Clarified description of do-modue-variables.) 99 170.39 T
(v12, May 31, 1997:) 72 143.71 T
1 F
(\245) 85.5 123.03 T
0 F
(Clarify class-definition-init-keywords) 99 123.03 T
1 F
(\245) 85.5 108.36 T
0 F
(No #\323constant\323 value from slot-definition-allocation.) 99 108.36 T
1 F
(\245) 85.5 93.68 T
0 F
(Add warnings API) 99 93.68 T
52 63 54 151.71 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 2
%%Page: "23" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(23) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.25 (library database information. In an) 90 712 P
-0.25 (y case, it should return a compilation conte) 255.1 712 P
-0.25 (xt whose library) 459.78 712 P
(will be treated as the) 90 698 T
2 F
(libr) 192.31 698 T
(ary-name) 209.47 698 T
0 F
( library by the using project. Note that the used library\325) 255.46 698 T
(s) 519.76 698 T
-0.21 (de\336ned name need not be) 90 684 P
2 F
-0.21 (libr) 214.6 684 P
-0.21 (ary-name) 231.76 684 P
0 F
-0.21 (, i.e. \322rename on import\323 is allo) 277.75 684 P
-0.21 (wed. If the) 427.85 684 P
2 F
-0.21 (ver) 481.88 684 P
-0.21 (sion) 497.08 684 P
0 F
-0.21 ( and) 517.09 684 P
2 F
-0.34 (min-ver) 90 670 P
-0.34 (sion) 127.2 670 P
0 F
-0.34 ( are gi) 147.2 670 P
-0.34 (v) 176.22 670 P
-0.34 (en, this means that the compiler w) 182.04 670 P
-0.34 (ants a v) 344.23 670 P
-0.34 (ersion of that project in the range) 380.04 670 P
-0.2 (between those tw) 90 656 P
-0.2 (o v) 172.79 656 P
-0.2 (alues. It\325) 187.29 656 P
-0.2 (s ok for the returned project v) 228.41 656 P
-0.2 (ersion to be outside the range if the) 369.65 656 P
(project manager cannot \336nd an) 90 642 T
(ything in range, b) 238.45 642 T
(ut it does mean that the) 322.87 642 T
2 F
(using-conte) 437.53 642 T
(xt) 493.28 642 T
0 F
( will) 501.95 642 T
(probably get completely recompiled, since it w) 90 628 T
(as compiled using an incompatible v) 315.52 628 T
(ersion of) 490.99 628 T
2 F
(libr) 90 614 T
(ary-name) 107.16 614 T
0 F
(\325) 153.14 614 T
(s project.) 156.48 614 T
1 F
(STATUS NOTE:) 72 587.73 T
0 F
( The k) 159.68 587.73 T
(e) 190.22 587.73 T
(yw) 195.37 587.73 T
(ord ar) 209.92 587.73 T
(guments are not currently used.) 238.02 587.73 T
1 16 Q
(7.  Edit history) 72 546.79 T
0 12 Q
(v1, January 29, 1996:) 72 519.19 T
1 F
(\245) 85.5 498.92 T
0 F
(New document containing project compilation API) 99 498.92 T
(v2, February 6, 1996:) 72 472.65 T
1 F
(\245) 85.5 452.39 T
0 F
(Correct typos, clarify some exposition) 99 452.39 T
1 F
(\245) 85.5 438.11 T
0 F
(Remove the \050unintentional\051 implication that Kansas will be DOSS-based.) 99 438.11 T
1 F
(\245) 85.5 423.85 T
0 F
(Add a terminology section) 99 423.85 T
1 F
(\245) 85.5 409.58 T
0 F
(Add interactive execution API) 99 409.58 T
1 F
(\245) 85.5 395.31 T
0 F
(Add edit history) 99 395.31 T
(v3, March 8, 1996:) 72 369.04 T
1 F
(\245) 85.5 348.77 T
0 F
(Add first part of derived information API, and placeholders for the rest.) 99 348.77 T
1 F
(\245) 85.5 334.5 T
0 F
(Correct typos, clarify some exposition) 99 334.5 T
1 F
(\245) 85.5 320.23 T
0 F
(Add mode: to compiler settings) 99 320.23 T
1 F
(\245) 85.5 305.96 T
0 F
(Change project compilation to take sources sorted into libraries, other corresponding) 99 305.96 T
(changes.) 99 291.96 T
1 F
(\245) 85.5 277.69 T
0 F
(Add component-type arg to build-component, and native interface output file.) 99 277.69 T
(v4, April 2, 1996:) 72 251.42 T
1 F
(\245) 85.5 231.15 T
0 F
(Put the namespace API in a separate section \050no actual changes from previous version, just) 99 231.15 T
(moved text around\051.) 99 217.15 T
1 F
(\245) 85.5 202.89 T
0 F
(Added the program derived info section.) 99 202.89 T
(v5, May 6, 1996:) 72 176.61 T
1 F
(\245) 85.5 156.35 T
0 F
(Change <variable> to a type, add make-variable, same-variable-name?) 99 156.35 T
1 F
(\245) 85.5 142.08 T
0 F
(Allow but don\325t require dylan-variable to return home name.) 99 142.08 T
1 F
(\245) 85.5 127.81 T
0 F
(Indicate that in some cases may default a setting rather than returning #f.) 99 127.81 T
(v6, September 12, 1996:) 72 101.54 T
1 F
(\245) 85.5 81.27 T
0 F
(Remove support for multi-library compilation contexts) 99 81.27 T
1 F
(\245) 85.5 67 T
0 F
(Note that execute-project-changes will not be implemented for Kansas) 99 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 3
%%Page: "22" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(22) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(sour) 72 712 T
(ce-r) 94.45 712 T
(ecord-module) 114.22 712 T
2 F
(sour) 187.87 712 T
(ce-r) 208.76 712 T
(ecor) 227.64 712 T
(d) 248.52 712 T
3 F
(\336) 257.52 712 T
2 F
(module-name) 272.36 712 T
0 F
([Function]) 489.34 712 T
(Returns the name of the module associated with the source-record, as a symbol.) 90 685.82 T
1 14 Q
(6.2  Runtime Manager imports) 72 652.31 T
0 12 Q
(I assume there will be a Runtime Manager component char) 72 625.47 T
(ged with pro) 355.39 625.47 T
(viding an interf) 415.87 625.47 T
(ace to the) 489.74 625.47 T
(runtime en) 72 611.47 T
(vironment, encompassing subcomponents such as the access-path, do) 123.18 611.47 T
(wnloader) 455.83 611.47 T
(, proxy) 500 611.47 T
-0.19 (object management, etc. It needs to pro) 72 597.47 P
-0.19 (vide the follo) 259.3 597.47 P
-0.19 (wing functionality to the compilation system:) 322.61 597.47 P
1 F
(acti) 72 565.29 T
(v) 90.54 565.29 T
(e-lexical-v) 96.42 565.29 T
(ariables) 148.28 565.29 T
2 F
(dynamic-conte) 191.95 565.29 T
(xt) 262.36 565.29 T
3 F
(\336) 274.02 565.29 T
2 F
(variables-and-values) 288.86 565.29 T
0 F
([Function]) 489.34 565.29 T
(Gi) 90 539.12 T
(v) 101.7 539.12 T
(en a) 107.52 539.12 T
2 F
(dynamic-conte) 130.18 539.12 T
(xt) 200.58 539.12 T
0 F
( object passed into) 209.24 539.12 T
1 F
(execute-sour) 301.24 539.12 T
(ce) 365.66 539.12 T
0 F
(, returns an alternating sequence) 376.32 539.12 T
-0.31 (of v) 90 525.12 P
-0.31 (ariables and v) 108.39 525.12 P
-0.31 (alues. Free references to these v) 174.11 525.12 P
-0.31 (ariables in the sources to be e) 325.54 525.12 P
-0.31 (x) 464.79 525.12 P
-0.31 (ecuted will be) 470.61 525.12 P
(replaced by references to the corresponding v) 90 511.12 T
(alue. A v) 308.29 511.12 T
(alue can be either a compiler model) 351.65 511.12 T
(object or an object \050which must not look lik) 90 497.12 T
(e a compiler model object\051 which will be passed) 299.87 497.12 T
(through unharmed to the do) 90 483.12 T
(wnloader) 223.02 483.12 T
(. In the latter case, the v) 267.01 483.12 T
(alue is assumed to not be a ra) 381.35 483.12 T
(w) 522.14 483.12 T
(v) 90 469.12 T
(alue.) 95.7 469.12 T
(<Interf) 72 442.94 T
(ace to do) 105.3 442.94 T
(wnloader not documented here>) 148.32 442.94 T
1 14 Q
(6.3  Pr) 72 409.43 T
(oject Manager imports) 111.02 409.43 T
0 12 Q
-0.14 (I assume there will be a Project Manager component char) 72 382.59 P
-0.14 (ged with managing project information.) 346.74 382.59 P
(It needs to pro) 72 368.59 T
(vide the follo) 140.81 368.59 T
(wing functionality to the compilation system:) 204.5 368.59 T
1 F
(pr) 72 336.41 T
(oject-r) 83.78 336.41 T
(ecord-id-sour) 117.54 336.41 T
(ce-r) 186.65 336.41 T
(ecord) 206.41 336.41 T
2 F
(pr) 238.07 336.41 T
(oject sour) 248.2 336.41 T
(ce-r) 295.42 336.41 T
(ecor) 314.29 336.41 T
(d-id) 335.17 336.41 T
3 F
(\336) 357.5 336.41 T
2 F
(sour) 372.35 336.41 T
(ce-r) 393.24 336.41 T
(ecor) 412.12 336.41 T
(d) 433 336.41 T
0 F
([Function]) 489.34 336.41 T
(Returns the source record named by) 90 310.24 T
2 F
(sour) 265.96 310.24 T
(ce-r) 286.85 310.24 T
(ecor) 305.72 310.24 T
(d-id) 326.6 310.24 T
0 F
( in project) 345.94 310.24 T
2 F
(pr) 397.6 310.24 T
(oject) 407.72 310.24 T
0 F
(.) 431.05 310.24 T
1 F
(pr) 72 284.06 T
(oject-component-v) 83.78 284.06 T
(ersion) 178.97 284.06 T
2 F
(pr) 213.3 284.06 T
(oject) 223.43 284.06 T
3 F
(\336) 171 269.88 T
2 F
(ver) 185.84 269.88 T
(sion) 201.05 269.88 T
(min-compatible-ver) 224.05 269.88 T
(sion) 318.58 269.88 T
(min-implementation-ver) 341.58 269.88 T
(sion) 457.44 269.88 T
0 F
([Function]) 489.34 269.88 T
-0.2 (This function represents the interf) 90 243.71 P
-0.2 (ace to whate) 251.7 243.71 P
-0.2 (v) 310.96 243.71 P
-0.2 (er v) 316.78 243.71 P
-0.2 (ersioning f) 334.72 243.71 P
-0.2 (acility the project manager may) 386.06 243.71 P
(pro) 90 229.71 T
(vide.) 105.82 229.71 T
2 F
(ver) 132.48 229.71 T
(sion) 147.68 229.71 T
0 F
( w) 167.69 229.71 T
(ould be the v) 179.23 229.71 T
(ersion which should be gi) 241.38 229.71 T
(v) 364.4 229.71 T
(en to the DLL produced from the) 370.22 229.71 T
-0.33 (project.) 90 215.71 P
2 F
-0.33 (min-compatible-ver) 128.99 215.71 P
-0.33 (sion) 223.51 215.71 P
0 F
-0.33 ( is the minimum v) 243.52 215.71 P
-0.33 (ersion which this project is compatible with) 329.35 215.71 P
-0.13 (\050i.e. the current v) 90 201.71 P
-0.13 (ersion can be used by components compiled ag) 171.74 201.71 P
-0.13 (ainst) 397.06 201.71 P
2 F
-0.13 (min-compatible-ver) 422.6 201.71 P
-0.13 (sion) 517.13 201.71 P
0 F
(of this DLL\051, and) 90 187.71 T
2 F
(min-implementation-ver) 176.99 187.71 T
(sion) 292.85 187.71 T
0 F
( is the minimum v) 312.85 187.71 T
(ersion which can be used by) 400.02 187.71 T
(components compiled ag) 90 173.71 T
(ainst the current v) 209.93 173.71 T
(ersion.) 296.06 173.71 T
1 F
(STATUS NOTE:) 72 147.53 T
0 F
( This function is not currently used.) 159.68 147.53 T
1 F
(used-library-compilation-context) 72 121.35 T
2 F
(using-conte) 244.32 121.35 T
(xt) 300.07 121.35 T
(libr) 311.74 121.35 T
(ary-name) 328.9 121.35 T
0 F
( #k) 171 107.18 T
(e) 185.88 107.18 T
(y) 191.03 107.18 T
2 F
(ver) 200.03 107.18 T
(sion min-ver) 215.23 107.18 T
(sion) 275.44 107.18 T
3 F
(\336) 298.44 107.18 T
2 F
(conte) 313.28 107.18 T
(xt) 339.04 107.18 T
0 F
([Function]) 489.34 107.18 T
(Used by the compiler to locate the interf) 90 81 T
(ace information for a library used by) 283.51 81 T
2 F
(using-conte) 462.47 81 T
(xt) 518.22 81 T
0 F
(.) 526.88 81 T
-0.07 (It\325) 90 67 P
-0.07 (s also used when the project compilation database is being loaded from disk, to locate inter) 100.67 67 P
-0.07 (-) 536 67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 4
%%Page: "21" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(21) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(6.1  Sour) 72 710.67 T
(ce Manager imports) 125.03 710.67 T
0 12 Q
(I assume there will be a Source Manager component char) 72 681.55 T
(ged with pro) 347.38 681.55 T
(viding an interf) 407.86 681.55 T
(ace to) 481.73 681.55 T
(sources and presenting the) 72 667.55 T
2 F
(sour) 201.97 667.55 T
(ce-r) 222.86 667.55 T
(ecor) 241.74 667.55 T
(d) 262.62 667.55 T
0 F
( abstraction to the rest of the system.) 268.62 667.55 T
(The compiler mak) 72 639.09 T
(es the follo) 159.86 639.09 T
(wing assumptions about the semantics of source record objects:) 212.89 639.09 T
1 F
(\245) 85.5 616.64 T
0 F
(Source records are immutable. That is, the contents of a source record never changes for as) 99 616.64 T
(long as the compiler \322knows\323 about the source record. The compiler \322knows\323 about source) 99 602.64 T
(records presented to) 99 588.64 T
1 F
(parse-pr) 198.64 588.64 T
(oject-sour) 242.41 588.64 T
(ces) 293.51 588.64 T
0 F
( until the next call to) 308.83 588.64 T
1 F
(parse-pr) 410.83 588.64 T
(oject-sour) 454.61 588.64 T
(ces) 505.7 588.64 T
0 F
(returns \050the calls may be in different development environment sessions\051. The compiler) 99 574.64 T
(\322knows\323 about source records presented to) 99 560.64 T
1 F
(dfmc-interacti) 307.61 560.64 T
(v) 380.8 560.64 T
(e-execution) 386.68 560.64 T
0 F
( functions until the) 444.66 560.64 T
(interactive execution path is closed.) 99 546.64 T
1 F
(\245) 85.5 524.18 T
0 F
(Source records known to the compiler are never deleted and their contents is always avail-) 99 524.18 T
(able. There is no interface provided for informing the compiler of deleted source records,) 99 510.18 T
-0.35 (because there is nothing the compiler could do about it. Of course in real life, source records) 99 496.18 P
(do get deleted, but it is up to the source and project manager components to define a proto-) 99 482.18 T
(col for handling such an event without involving the compilation system. For example) 99 468.18 T
(source manager functions could signal a <missing-source-record> error, and the project) 99 454.18 T
(manager could establish a handler for this error when invoking the compiler. The handler) 99 440.18 T
-0.35 (could submit a new source record sequence to the compiler not including the missing source) 99 426.18 P
(record, or it could simply report failure to the user.) 99 412.18 T
1 F
(\245) 85.5 389.73 T
0 F
(There is only one source record object for each conceptual source record. I.e. the compiler) 99 389.73 T
-0.43 (uses) 99 375.73 P
1 F
-0.43 (==) 122.23 375.73 P
0 F
-0.43 ( to compare source records. This means that the source manager might need to intern) 135.91 375.73 P
(source record objects.) 99 361.73 T
(The Source Manager needs to pro) 72 333.27 T
(vide the follo) 234.11 333.27 T
(wing functionality to the compilation system:) 297.8 333.27 T
1 F
(sour) 72 298.82 T
(ce-r) 94.45 298.82 T
(ecord-id) 114.22 298.82 T
2 F
(sour) 159.88 298.82 T
(ce-r) 180.77 298.82 T
(ecor) 199.64 298.82 T
(d) 220.52 298.82 T
3 F
(\336) 229.52 298.82 T
2 F
(sour) 244.37 298.82 T
(ce-r) 265.26 298.82 T
(ecor) 284.14 298.82 T
(d-id) 305.02 298.82 T
0 F
([Function]) 489.34 298.82 T
(Source record id\325) 90 270.36 T
(s are used to store references to source records in the compiler database.) 172.64 270.36 T
-0.45 (Their structure must be suf) 90 256.36 P
-0.45 (\336ciently documented so that the compiler can sa) 217.21 256.36 P
-0.45 (v) 445.44 256.36 P
-0.45 (e them to disk and) 451.26 256.36 P
(then reconstruct them in a dif) 90 242.36 T
(ferent de) 230.68 242.36 T
(v) 272.69 242.36 T
(elopment en) 278.51 242.36 T
(vironment session. An e) 337.02 242.36 T
(xample of what) 452.83 242.36 T
-0.21 (w) 90 228.36 P
-0.21 (ould w) 98.54 228.36 P
-0.21 (ork as a source record id de\336nition is \322a list of strings and inte) 131.21 228.36 P
-0.21 (gers\323 \050e.g. it could be a) 426.62 228.36 P
(list of a \336lename, modi\336cation date, and section start and end of) 90 214.36 T
(fsets - b) 397.33 214.36 T
(ut the compiler) 435.08 214.36 T
(doesn\325) 90 200.36 T
(t care about that le) 121.78 200.36 T
(v) 210.12 200.36 T
(el of detail\051.) 215.94 200.36 T
1 F
-0.01 (STATUS NOTE:) 72 171.91 P
0 F
-0.01 (F) 162.67 171.91 P
-0.01 (or the time being, the compiler requires a source record id to be a string with) 169.16 171.91 P
(no embedded ne) 72 157.91 T
(wlines. This restriction will be relax) 150.35 157.91 T
(ed once we get a binary database.) 323.48 157.91 T
1 F
(with-input-fr) 72 123.46 T
(om-sour) 139.12 123.46 T
(ce-r) 181.56 123.46 T
(ecord) 201.32 123.46 T
0 F
( \050) 229.98 123.46 T
2 F
(variable) 236.98 123.46 T
0 F
( =) 276.97 123.46 T
2 F
(sour) 289.74 123.46 T
(ce-r) 310.63 123.46 T
(ecor) 329.51 123.46 T
(d-e) 350.39 123.46 T
(xpr) 365.47 123.46 T
(ession) 381.02 123.46 T
0 F
(\051) 411.02 123.46 T
2 F
(body) 418.02 123.46 T
0 F
( end) 441.35 123.46 T
([Macro]) 500.69 123.46 T
(Ex) 90 95 T
(ecutes) 103.15 95 T
2 F
(body) 136.14 95 T
0 F
( with) 159.47 95 T
2 F
(variable) 186.8 95 T
0 F
( bound to an input stream which returns the characters in the) 226.8 95 T
(source record. Note that a \336le header is not considered part of the source record contents for) 90 81 T
(the purposes of this macro and should not be included in the character stream.) 90 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 5
%%Page: "20" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(20) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(5.5  Compiler W) 72 710.67 T
(ar) 169.86 710.67 T
(nings) 182.87 710.67 T
1 12 Q
(<pr) 72 676.69 T
(ogram-note>) 90.62 676.69 T
0 F
([Class]) 506 676.69 T
(A compiler message stored in the compiler database.) 72 643.38 T
1 F
(pr) 72 610.06 T
(ogram-note-message) 83.78 610.06 T
2 F
(pr) 192.08 610.06 T
(o) 202.21 610.06 T
(gr) 208.09 610.06 T
(am-note) 218.58 610.06 T
3 F
(\336) 260.9 610.06 T
2 F
( string) 272.75 610.06 T
0 F
([Function]) 489.34 610.06 T
(Returns the message associated with the note.) 72 582.75 T
1 F
(pr) 72 549.44 T
(ogram-note-location) 83.78 549.44 T
2 F
(pr) 190.76 549.44 T
(o) 200.89 549.44 T
(gr) 206.77 549.44 T
(am-note) 217.26 549.44 T
3 F
(\336) 259.58 549.44 T
2 F
( sour) 271.43 549.44 T
(ce-locator) 295.32 549.44 T
(-or) 344.4 549.44 T
(-false) 358.82 549.44 T
0 F
([Function]) 489.34 549.44 T
(Returns the location, if kno) 72 522.12 T
(wn, of the source code referenced by the note.) 202.69 522.12 T
1 F
(compilation-context-notes) 72 488.81 T
2 F
(conte) 207.65 488.81 T
(xt) 233.4 488.81 T
3 F
(\336) 245.06 488.81 T
2 F
( sequence) 256.91 488.81 T
0 F
([Function]) 489.34 488.81 T
(Returns the program notes generated in compiling the) 72 461.5 T
2 F
(conte) 333.3 461.5 T
(xt) 359.05 461.5 T
0 F
( library) 367.72 461.5 T
(. Includes all source record) 401.93 461.5 T
(notes \050see belo) 72 447.5 T
(w\051 as well as notes generated while not processing an) 143.02 447.5 T
(y particular source record) 399.78 447.5 T
(\050e.g. a w) 72 433.5 T
(arning about a missing library de\336nition might f) 113.2 433.5 T
(all in this cate) 344.08 433.5 T
(gory\051. The general notes) 410.89 433.5 T
(are \336rst, follo) 72 419.5 T
(wed by an) 136.69 419.5 T
(y source record notes in source order) 185.83 419.5 T
(.) 362.45 419.5 T
1 F
(sour) 72 386.19 T
(ce-r) 94.45 386.19 T
(ecord-notes) 114.22 386.19 T
2 F
(conte) 176.53 386.19 T
(x) 202.28 386.19 T
0 F
(t) 207.61 386.19 T
2 F
(sour) 213.95 386.19 T
(ce-r) 234.84 386.19 T
(ecor) 253.72 386.19 T
(d) 274.6 386.19 T
3 F
(\336) 283.6 386.19 T
2 F
( sequence) 295.44 386.19 T
0 F
([Function]) 489.34 386.19 T
(Returns the program notes generated in compiling) 72 358.88 T
2 F
(sour) 315.64 358.88 T
(ce-r) 336.53 358.88 T
(ecor) 355.4 358.88 T
(d) 376.28 358.88 T
0 F
(. Includes all source form notes) 382.28 358.88 T
(\050see belo) 72 344.88 T
(w\051 as well as notes generated while not processing an) 114.68 344.88 T
(y particular source form \050e.g. a) 371.45 344.88 T
(w) 72 330.88 T
(arning about a top-le) 80.54 330.88 T
(v) 179.89 330.88 T
(el parse error might f) 185.71 330.88 T
(all in this cate) 286.9 330.88 T
(gory\051. The general notes are \336rst, fol-) 353.71 330.88 T
(lo) 72 316.88 T
(wed by an) 81.04 316.88 T
(y source form notes in source order) 130.18 316.88 T
(.) 299.47 316.88 T
1 F
(sour) 72 283.56 T
(ce-f) 94.45 283.56 T
(orm-notes) 112.8 283.56 T
2 F
(conte) 167.78 283.56 T
(x) 193.54 283.56 T
0 F
(t) 198.86 283.56 T
2 F
(sour) 205.2 283.56 T
(ce-form) 226.09 283.56 T
3 F
(\336) 266.41 283.56 T
2 F
( collection) 278.26 283.56 T
0 F
([Function]) 489.34 283.56 T
(Returns the program notes generated in compiling) 72 256.25 T
2 F
(sour) 315.64 256.25 T
(ce-form) 336.53 256.25 T
0 F
(.) 373.85 256.25 T
1 14 Q
(5.6  Deb) 72 221.6 T
(ug Inf) 120.33 221.6 T
(o) 156.15 221.6 T
0 12 Q
(<Under construction>) 72 193.62 T
1 16 Q
(6.  Compilation System Requir) 72 151.65 T
(ements) 281.94 151.65 T
0 12 Q
(In the future, this section should be replaced by a list of the modules/v) 72 123 T
(ariables that the compila-) 409 123 T
(tion system imports from other major components, as described in those components\325 interf) 72 109 T
(ace) 512.17 109 T
-0.39 (design documents. But until these other interf) 72 95 P
-0.39 (ace design documents e) 288.52 95 P
-0.39 (xists, I will attempt to sk) 400.8 95 P
-0.39 (etch) 517.4 95 P
(out an artist\325) 72 81 T
(s conception of the functionality the compilation system e) 132 81 T
(xpects to see in the inter-) 409.8 81 T
(f) 72 67 T
(ace of those other components.) 75.88 67 T
52 252.25 54 684.69 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 6
%%Page: "19" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(19) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(class-dir) 72 712 T
(ect-method-de\336nitions) 115.12 712 T
2 F
(conte) 232.78 712 T
(xt) 258.53 712 T
(de\336nition) 270.19 712 T
3 F
(\336) 318.53 712 T
2 F
(method-de\336nitions) 333.37 712 T
0 F
([Function]) 489.34 712 T
(Returns the collection of all v) 90 684.73 T
(alid method de\336nitions which were kno) 232.02 684.73 T
(wn at compile-time to) 422.04 684.73 T
(specialize on the class de\336ned by) 90 670.73 T
2 F
(de\336nition) 252.64 670.73 T
0 F
(. Returns) 297.97 670.73 T
1 F
(#f) 344.3 670.73 T
0 F
( if the de\336nition did not de\336ne a class.) 354.3 670.73 T
1 F
(sour) 72 637.47 T
(ce-f) 94.45 637.47 T
(orm-r) 112.8 637.47 T
(efer) 143.23 637.47 T
(enced-macr) 163 637.47 T
(os) 222.76 637.47 T
2 F
(conte) 236.42 637.47 T
(xt) 262.18 637.47 T
(sour) 273.84 637.47 T
(ce-form) 294.73 637.47 T
3 F
(\336) 335.05 637.47 T
2 F
( variables) 346.9 637.47 T
0 F
([Function]) 489.34 637.47 T
(Returns the collection of v) 90 610.2 T
(ariables naming macros referenced directly from) 217.02 610.2 T
2 F
(sour) 453.61 610.2 T
(ce-form) 474.5 610.2 T
0 F
( \050i.e.) 511.82 610.2 T
-0.16 (not from macroe) 90 596.2 P
-0.16 (xpansion of another macro\051. May return) 169.48 596.2 P
1 F
-0.16 (#f) 363.46 596.2 P
0 F
-0.16 ( if the source form w) 373.45 596.2 P
-0.16 (as ignored by) 472.83 596.2 P
(the compiler \050e.g. a duplicate de\336nition\051.) 90 582.2 T
1 F
(STATUS NOTE) 72 554.93 T
0 F
(: Not implemented. When it gets implemented for Kansas, it probably will not) 155.69 554.93 T
(be able to distinguish direct and macroe) 72 540.93 T
(xpansion references.) 263.12 540.93 T
1 F
(sour) 72 507.67 T
(ce-f) 94.45 507.67 T
(orm-r) 112.8 507.67 T
(efer) 143.23 507.67 T
(enced-v) 163 507.67 T
(ariables) 202.2 507.67 T
2 F
(conte) 245.87 507.67 T
(xt) 271.62 507.67 T
(sour) 283.28 507.67 T
(ce-form) 304.18 507.67 T
0 F
( #key) 341.5 507.67 T
2 F
(kind) 370.82 507.67 T
3 F
(\336) 394.49 507.67 T
2 F
( variables) 406.33 507.67 T
0 F
([Function]) 489.34 507.67 T
(Returns the collection of v) 90 480.4 T
(ariables referenced from) 217.02 480.4 T
2 F
(sour) 337.3 480.4 T
(ce-form) 358.19 480.4 T
0 F
( after complete macroe) 395.51 480.4 T
(xpan-) 505.62 480.4 T
(sion b) 90 466.4 T
(ut before an) 118.76 466.4 T
(y optimizations. May return) 175.9 466.4 T
1 F
(#f) 312.89 466.4 T
0 F
( if the source form w) 322.88 466.4 T
(as ignored by the com-) 423.07 466.4 T
(piler \050e.g. a duplicate de\336nition\051.) 90 452.4 T
2 F
(kind) 90 425.13 T
0 F
( speci\336es which kind of references to include. F) 110.66 425.13 T
(or no) 340.1 425.13 T
(w) 364.8 425.13 T
(, the only supported kinds are) 372.68 425.13 T
1 F
(#f) 517.67 425.13 T
0 F
(\050the def) 90 411.13 T
(ault\051 meaning all v) 126.86 411.13 T
(ariables; and) 216.89 411.13 T
1 F
(#"write") 280.87 411.13 T
0 F
( meaning references which set the v) 326.84 411.13 T
(ariable.) 498.49 411.13 T
(Note that) 90 383.87 T
1 F
(sour) 137.33 383.87 T
(ce-f) 159.78 383.87 T
(orm-de\336ned-v) 178.13 383.87 T
(ariables) 250.67 383.87 T
0 F
( are not considered to be referenced by the form as) 291.34 383.87 T
(f) 90 369.87 T
(ar as this function is concerned, unless the) 93.88 369.87 T
(y are also referenced from the body of the de\336ni-) 296.33 369.87 T
(tion.) 90 355.87 T
1 F
(STATUS NOTE) 72 328.6 T
0 F
(: Not implemented. When it gets implemented for Kansas, it probably will not) 155.69 328.6 T
-0.12 (be able to distinguish direct, macroe) 72 314.6 P
-0.12 (xpansion and optimization references. W) 245.2 314.6 P
-0.12 (e may not be able to) 440.73 314.6 P
(support) 72 300.6 T
2 F
(kind) 111 300.6 T
0 F
( other than) 131.66 300.6 T
1 F
(#f) 185.99 300.6 T
0 F
(.) 195.98 300.6 T
1 F
(v) 72 267.33 T
(ariable-r) 77.88 267.33 T
(efer) 122.99 267.33 T
(encing-f) 142.75 267.33 T
(orms) 183.78 267.33 T
2 F
(conte) 212.77 267.33 T
(xt) 238.52 267.33 T
(variable) 250.19 267.33 T
0 F
( #key) 290.18 267.33 T
2 F
(kind) 319.51 267.33 T
3 F
(\336) 343.18 267.33 T
2 F
( sour) 355.02 267.33 T
(ce-forms) 378.91 267.33 T
0 F
([Function]) 489.34 267.33 T
(Returns the collection of all source forms which contain references to) 90 240.07 T
2 F
(variable) 426.92 240.07 T
0 F
(, as de\336ned by) 466.92 240.07 T
(either of) 90 226.07 T
1 F
(sour) 133.32 226.07 T
(ce-f) 155.77 226.07 T
(orm-r) 174.12 226.07 T
(efer) 204.55 226.07 T
(enced-macr) 224.32 226.07 T
(os) 284.08 226.07 T
0 F
( and) 294.74 226.07 T
1 F
(sour) 318.07 226.07 T
(ce-f) 340.52 226.07 T
(orm-r) 358.87 226.07 T
(efer) 389.3 226.07 T
(enced-v) 409.07 226.07 T
(ariables) 448.27 226.07 T
0 F
(. Refer-) 488.94 226.07 T
(ences to the same v) 90 212.07 T
(ariable under another name are included.) 183.01 212.07 T
2 F
(kind) 90 184.8 T
0 F
( speci\336es which kind of references to include. F) 110.66 184.8 T
(or no) 340.1 184.8 T
(w) 364.8 184.8 T
(, the only supported kinds are) 372.68 184.8 T
1 F
(#f) 517.67 184.8 T
0 F
(\050the def) 90 170.8 T
(ault\051 meaning all references, or) 126.86 170.8 T
1 F
(#"write") 279.48 170.8 T
0 F
( meaning references which set the v) 325.45 170.8 T
(ariable.) 497.1 170.8 T
1 F
(STATUS NOTE) 72 143.53 T
0 F
(: Not implemented. When it gets implemented for Kansas, it may not be able to) 155.69 143.53 T
(support) 72 129.53 T
2 F
(kind) 111 129.53 T
0 F
( other than) 131.66 129.53 T
1 F
(#f) 185.99 129.53 T
0 F
(.) 195.98 129.53 T
1 14 Q
(5.4  Change Noti\336cation) 72 94.93 T
0 12 Q
(<Under construction>) 72 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 7
%%Page: "18" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(18) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(5.3  Deri) 72 710.67 T
(v) 122.79 710.67 T
(ed inf) 129.65 710.67 T
(ormation) 163.14 710.67 T
1 12 Q
(v) 72 678 T
(ariable-all-de\336nitions) 77.88 678 T
2 F
(conte) 190.9 678 T
(xt) 216.65 678 T
(variable) 228.31 678 T
3 F
(\336) 271.31 678 T
2 F
(de\336nitions) 286.15 678 T
0 F
([Function]) 489.34 678 T
-0.11 (Returns the collection of all de\336nitions in the conte) 90 652 P
-0.11 (xt sources which apply to the v) 334.91 652 P
-0.11 (ariable. I.e.) 483.25 652 P
(it returns all de\336nitions for which) 90 638 T
4 F
(member?\050) 90 612 T
2 F
(variable) 147.6 612 T
4 F
(, source-form-defined-variables\050) 187.6 612 T
2 F
(de\336nition) 418 612 T
4 F
(\051,) 463.33 612 T
( test: curry\050same-variable?,) 144 598 T
2 F
(conte) 352.8 598 T
(xt) 378.55 598 T
4 F
(\051\051) 387.22 598 T
0 F
(is true. It will returns all such de\336nitions, including duplicate and otherwise erroneous ones) 90 572 T
(which ended up being ignored by the compiler) 90 558 T
(. Use) 312.97 558 T
1 F
(v) 340.63 558 T
(ariable-acti) 346.51 558 T
(v) 405.05 558 T
(e-de\336nition) 410.93 558 T
0 F
( and) 468.94 558 T
1 F
(v) 492.26 558 T
(ariable-) 498.14 558 T
-0.08 (acti) 90 544 P
-0.08 (v) 108.54 544 P
-0.08 (e-method-de\336nitions) 114.42 544 P
0 F
-0.08 ( to \336nd the de\336nitions which were actually used for the v) 219.76 544 P
-0.08 (ariable in) 492.18 544 P
(compiling the project.) 90 530 T
1 F
(v) 72 498 T
(ariable-acti) 77.88 498 T
(v) 136.42 498 T
(e-de\336nition) 142.3 498 T
2 F
(conte) 203.3 498 T
(xt) 229.06 498 T
(variable) 240.72 498 T
3 F
(\336) 283.72 498 T
2 F
(de\336nition) 298.56 498 T
0 F
([Function]) 489.34 498 T
(Returns the de\336nition which w) 90 472 T
(as used by the compiler to de\336ne the v) 237.88 472 T
(ariable, or) 422.22 472 T
1 F
(#t) 473.87 472 T
0 F
( if the v) 483.86 472 T
(ari-) 520.56 472 T
(able is an implicitly de\336ned generic function, or) 90 458 T
1 F
(#f) 323.64 458 T
0 F
( if the v) 333.64 458 T
(ariable had no v) 370.33 458 T
(alid de\336nitions in) 447.01 458 T
(this) 90 444 T
2 F
(conte) 110.34 444 T
(xt) 136.09 444 T
0 F
(.) 144.76 444 T
1 F
(v) 72 412 T
(ariable-acti) 77.88 412 T
(v) 136.42 412 T
(e-method-de\336nitions) 142.3 412 T
2 F
(conte) 250.63 412 T
(xt) 276.38 412 T
(variable) 288.05 412 T
3 F
(\336) 331.04 412 T
2 F
( method-de\336nitions) 342.89 412 T
0 F
([Function]) 489.34 412 T
-0.39 (Returns the collection of all v) 90 386 P
-0.39 (alid method de\336nitions for the v) 230.09 386 P
-0.39 (ariable in the conte) 382.19 386 P
-0.39 (xt. Returns) 472.49 386 P
1 F
-0.39 (#f) 527.39 386 P
0 F
(if the v) 90 372 T
(ariable is not an implicitly or e) 123.7 372 T
(xplicitly de\336ned generic function.) 270.84 372 T
1 F
(class-dir) 72 340 T
(ect-subclass-de\336nitions) 115.12 340 T
2 F
(conte) 236.12 340 T
(xt) 261.88 340 T
(de\336nition) 273.54 340 T
3 F
(\336) 321.88 340 T
2 F
(de\336nitions) 336.72 340 T
0 F
([Function]) 489.34 340 T
(Returns the collection of all v) 90 314 T
(alid class de\336nitions which were kno) 232.02 314 T
(wn at compile-time to) 409.37 314 T
(include the class de\336ned by) 90 300 T
2 F
(de\336nition) 225.65 300 T
0 F
( in their superclass list. Returns) 270.98 300 T
1 F
(#f) 424.64 300 T
0 F
( if the de\336nition did) 434.64 300 T
(not de\336ne a class.) 90 286 T
1 F
(class-all-super) 72 254 T
(class-de\336nitions) 145.12 254 T
2 F
(conte) 229.46 254 T
(xt) 255.22 254 T
(de\336nition) 266.88 254 T
3 F
(\336) 315.22 254 T
2 F
(de\336nition-sequence) 330.06 254 T
0 F
([Function]) 489.34 254 T
(Returns the sequence of class de\336nitions for all superclasses, in their class precedence order) 90 228 T
(,) 530.75 228 T
(of the class de\336ned by) 90 214 T
2 F
(de\336nition) 200.32 214 T
0 F
(. Returns) 245.65 214 T
1 F
(#f) 291.98 214 T
0 F
( if some superclass \050direct or indirect\051 w) 301.98 214 T
(as not) 495.48 214 T
(speci\336ed by a compile-time-computed e) 90 200 T
(xpression, or if the de\336nition did not de\336ne a class.) 282.46 200 T
1 F
(class-all-slot-de\336nitions) 72 168 T
2 F
(conte) 195.01 168 T
(xt) 220.76 168 T
(de\336nition) 232.43 168 T
3 F
(\336) 280.76 168 T
2 F
(slot-de\336nitions) 295.61 168 T
0 F
([Function]) 489.34 168 T
-0.23 (Returns the sequence of all slot de\336nitions for the class de\336ned by) 90 142 P
2 F
-0.23 (de\336nition) 408.5 142 P
0 F
-0.23 (. Returns) 453.84 142 P
1 F
-0.23 (#f) 499.71 142 P
0 F
-0.23 ( if the) 509.7 142 P
(slots weren\325) 90 128 T
(t kno) 148.1 128 T
(wn at compile-time, or if the de\336nition did not de\336ne a class.) 172.14 128 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 8
%%Page: "17" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(17) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(<function-de\336nition>) 72 712 T
0 F
( \050) 181.03 712 T
1 F
(<functional-de\336nition>) 188.03 712 T
0 F
(\051) 306.4 712 T
([Class]) 506 712 T
(The class of) 90 686 T
1 F
(de\336ne) 150.98 686 T
(function) 184.66 686 T
0 F
( forms.) 227.33 686 T
1 F
(<primiti) 72 654 T
(v) 114.72 654 T
(e-de\336nition>) 120.6 654 T
0 F
( \050) 185.45 654 T
1 F
(<functional-de\336nition>) 192.44 654 T
0 F
(\051) 310.81 654 T
([Class]) 506 654 T
(The class of b) 90 628 T
(uilt-in primiti) 156.74 628 T
(v) 221.46 628 T
(e internal functions. These forms can only be de\336ned in the) 227.28 628 T
1 F
(Dylan) 90 614 T
0 F
( library) 120.67 614 T
(.) 154.88 614 T
1 F
(<method-de\336nition>) 72 582 T
0 F
( \050) 177.02 582 T
1 F
(<functional-de\336nition>) 184.02 582 T
0 F
(\051) 302.39 582 T
([Class]) 506 582 T
(The class of) 90 556 T
1 F
(de\336ne) 150.98 556 T
(method) 184.66 556 T
0 F
( forms.) 223.32 556 T
1 F
(<constant-method-de\336nition>) 72 524 T
0 F
( \050) 224.35 524 T
1 F
(<constant-de\336nition>) 231.35 524 T
(<functional-de\336nition>) 344.04 524 T
0 F
(\051) 462.41 524 T
([Class]) 506 524 T
(The class of) 90 498 T
1 F
(de\336ne) 150.98 498 T
(constant) 184.66 498 T
0 F
( ...) 227.99 498 T
1 F
(=) 242.99 498 T
(method) 252.83 498 T
0 F
( ... forms.) 291.49 498 T
1 F
(<module-de\336nition>) 72 466 T
0 F
( \050) 176.36 466 T
1 F
(<sour) 183.36 466 T
(ce-f) 212.65 466 T
(orm>) 231 466 T
0 F
(\051) 259.16 466 T
([Class]) 506 466 T
(The class of) 90 440 T
1 F
(de\336ne) 150.98 440 T
(module) 184.66 440 T
0 F
( forms.) 222.66 440 T
1 F
(module-de\336nition-name) 72 408 T
2 F
(module-de\336nition) 197.68 408 T
3 F
(\336) 285.34 408 T
2 F
(module-name) 300.18 408 T
0 F
([Function]) 489.34 408 T
(Returns the name of the module being de\336ned, as a symbol.) 90 382 T
1 F
(module-de\336nition-used-modules) 72 350 T
2 F
(module-de\336nition) 239.69 350 T
3 F
(\336) 327.35 350 T
2 F
(modules) 342.19 350 T
0 F
([Function]) 489.34 350 T
(Returns the names of the modules used by) 90 324 T
2 F
(module-de\336nition) 295.98 324 T
0 F
(, as symbols.) 380.64 324 T
1 F
(<library-de\336nition>) 72 292 T
0 F
( \050) 174.36 292 T
1 F
(<sour) 181.36 292 T
(ce-f) 210.65 292 T
(orm>) 229 292 T
0 F
(\051) 257.16 292 T
([Class]) 506 292 T
(The class of) 90 266 T
1 F
(de\336ne) 150.98 266 T
(library) 184.66 266 T
0 F
( forms.) 220.66 266 T
1 F
(library-de\336nition-name) 72 234 T
2 F
(libr) 195.67 234 T
(ary-de\336nition) 212.83 234 T
3 F
(\336) 281.16 234 T
2 F
(libr) 296 234 T
(ary-name) 313.16 234 T
0 F
([Function]) 489.34 234 T
(Returns the name of the library being de\336ned, as a symbol.) 90 208 T
1 F
(library-de\336nition-used-libraries) 72 176 T
2 F
(libr) 238.34 176 T
(ary-de\336nition) 255.5 176 T
3 F
(\336) 323.83 176 T
2 F
(libr) 338.68 176 T
(aries) 355.84 176 T
0 F
([Function]) 489.34 176 T
(Returns the names of the libraries used by) 90 150 T
2 F
(libr) 294.64 150 T
(ary-de\336nition) 311.8 150 T
0 F
(, as symbols.) 377.12 150 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 9
%%Page: "16" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(16) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(<functional-de\336nition>) 72 712 T
0 F
( \050) 190.37 712 T
1 F
(<sour) 197.36 712 T
(ce-f) 226.66 712 T
(orm>) 245 712 T
0 F
(\051) 273.17 712 T
([Abstract Class]) 462.35 712 T
(A de\336nition which contains a function parameter list.) 90 685.38 T
1 F
(functional-parameters) 72 652.76 T
2 F
(functional-de\336nition) 189.65 652.76 T
0 F
([Function]) 489.34 652.76 T
3 F
(\336) 171 638.14 T
2 F
(r) 185.84 638.14 T
(eq-var) 190.07 638.14 T
(s) 221.27 638.14 T
(r) 228.94 638.14 T
(est-var) 233.16 638.14 T
(ne) 269.48 638.14 T
(xt-var) 280.57 638.14 T
(k) 312.23 638.14 T
(e) 317.44 638.14 T
(y-var) 322.4 638.14 T
(s) 347.6 638.14 T
(value-var) 355.27 638.14 T
(s) 401.14 638.14 T
(r) 408.8 638.14 T
(est-value-var) 413.03 638.14 T
0 F
-0.14 (Returns the v) 90 611.52 P
-0.14 (ariables used to name the v) 153.41 611.52 P
-0.14 (arious parameters of the function.) 282.7 611.52 P
1 F
-0.14 (#f) 446.6 611.52 P
0 F
-0.14 ( may be returned) 456.6 611.52 P
-0.44 (whene) 90 597.52 P
-0.44 (v) 121.02 597.52 P
-0.44 (er the corresponding construct w) 126.84 597.52 P
-0.44 (as not speci\336ed \050e.g.) 282.27 597.52 P
2 F
-0.44 (r) 381.85 597.52 P
-0.44 (est-var) 386.07 597.52 P
0 F
-0.44 ( is) 419.4 597.52 P
1 F
-0.44 (#f) 432.53 597.52 P
0 F
-0.44 ( if the parameter list) 442.53 597.52 P
(doesn\325) 90 583.52 T
(t contain) 121.78 583.52 T
1 F
(#r) 166.44 583.52 T
(est) 177.55 583.52 T
0 F
(, etc.\051.) 191.54 583.52 T
1 F
(functional-k) 72 550.91 T
(eys) 134.56 550.91 T
2 F
(functional-de\336nition) 153.55 550.91 T
3 F
(\336) 254.56 550.91 T
2 F
(k) 269.4 550.91 T
(e) 274.61 550.91 T
(ys) 279.58 550.91 T
(all-k) 292.57 550.91 T
(e) 314.45 550.91 T
(ys?) 319.42 550.91 T
0 F
([Function]) 489.34 550.91 T
(Returns the sequence of k) 90 524.29 T
(e) 213.85 524.29 T
(yw) 219 524.29 T
(ords corresponding the k) 233.54 524.29 T
(e) 352.4 524.29 T
(yw) 357.55 524.29 T
(ord parameters, or) 372.1 524.29 T
1 F
(#f) 462.73 524.29 T
0 F
( if the param-) 472.73 524.29 T
(eter list didn\325) 90 510.29 T
(t include) 153.78 510.29 T
1 F
(#k) 198.44 510.29 T
(ey) 211 510.29 T
0 F
(.  The second v) 221.54 510.29 T
(alue is true if) 294.23 510.29 T
1 F
(#all-k) 360.22 510.29 T
(eys) 389.44 510.29 T
0 F
( w) 405.43 510.29 T
(as speci\336ed.) 416.98 510.29 T
1 F
(functional-parameter) 72 477.67 T
(-types) 181.54 477.67 T
2 F
(functional-de\336nition) 215.2 477.67 T
0 F
([Function]) 489.34 477.67 T
3 F
(\336) 171 463.05 T
2 F
(r) 185.84 463.05 T
(eq-types) 190.07 463.05 T
(r) 233.05 463.05 T
(est-type) 237.28 463.05 T
(ne) 277.6 463.05 T
(xt-type) 288.68 463.05 T
(k) 324.34 463.05 T
(e) 329.54 463.05 T
(y-types value-types r) 334.51 463.05 T
(est-value-type) 433.37 463.05 T
0 F
(Returns the types of the parameters, as type e) 90 436.43 T
(xpressions.) 307.44 436.43 T
1 F
(#f) 367.1 436.43 T
0 F
( is returned whene) 377.1 436.43 T
(v) 465.11 436.43 T
(er the corre-) 470.93 436.43 T
(sponding construct didn\325) 90 422.43 T
(t include a type speci\336cation.) 209.11 422.43 T
1 F
(<generic-de\336nition>) 72 389.81 T
0 F
( \050) 175.68 389.81 T
1 F
(<functional-de\336nition>) 182.68 389.81 T
0 F
(\051) 301.04 389.81 T
([Class]) 506 389.81 T
(The class of) 90 363.19 T
1 F
(de\336ne) 150.98 363.19 T
(generic) 184.66 363.19 T
0 F
( forms.) 221.98 363.19 T
1 F
(generic-de\336nition-options) 72 330.57 T
2 F
(g) 206.34 330.57 T
(eneric-de\336nition) 212.22 330.57 T
3 F
(\336) 294.54 330.57 T
2 F
(options) 309.38 330.57 T
0 F
([Function]) 489.34 330.57 T
(Returns the sequence of k) 90 303.95 T
(e) 213.85 303.95 T
(yw) 219 303.95 T
(ords speci\336ed as options in the de\336nition.) 233.54 303.95 T
1 F
(<domain-de\336nition>) 72 271.33 T
0 F
( \050) 177.04 271.33 T
1 F
(<sour) 184.03 271.33 T
(ce-f) 213.32 271.33 T
(orm>) 231.67 271.33 T
0 F
(\051) 259.84 271.33 T
([Class]) 506 271.33 T
(The class of) 90 244.72 T
1 F
(de\336ne) 150.98 244.72 T
(domain) 184.66 244.72 T
0 F
( forms.) 223.33 244.72 T
1 F
(domain-de\336nition-domain-types) 72 212.1 T
2 F
(domain-de\336nition) 239.69 212.1 T
3 F
(\336) 328.02 212.1 T
2 F
(types) 342.86 212.1 T
0 F
([Function]) 489.34 212.1 T
(Returns the sequence of type e) 90 185.48 T
(xpressions speci\336ed in the de\336nition) 236.78 185.48 T
1 F
(<constant-de\336nition>) 72 152.86 T
0 F
( \050) 181.69 152.86 T
1 F
(<sour) 188.69 152.86 T
(ce-f) 217.98 152.86 T
(orm>) 236.33 152.86 T
0 F
(\051) 264.49 152.86 T
([Class]) 506 152.86 T
(The class of) 90 126.24 T
1 F
(de\336ne) 150.98 126.24 T
(constant) 184.66 126.24 T
0 F
( forms.) 227.99 126.24 T
1 F
(<v) 72 93.62 T
(ariable-de\336nition>) 84.72 93.62 T
0 F
( \050) 180.24 93.62 T
1 F
(<sour) 187.24 93.62 T
(ce-f) 216.53 93.62 T
(orm>) 234.88 93.62 T
0 F
(\051) 263.04 93.62 T
([Class]) 506 93.62 T
(The class of) 90 67 T
1 F
(de\336ne) 150.98 67 T
(v) 184.66 67 T
(ariable) 190.54 67 T
0 F
( forms.) 226.54 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 10
%%Page: "15" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(15) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(slot-de\336nition-type) 72 712 T
2 F
(slot-de\336nition) 171.67 712 T
3 F
(\336) 241.34 712 T
2 F
(type) 256.19 712 T
0 F
([Function]) 489.34 712 T
(Returns the type of the slot, as a type e) 90 685.32 T
(xpression, or) 275.8 685.32 T
1 F
(#f) 340.79 685.32 T
0 F
( if no slot type w) 350.78 685.32 T
(as speci\336ed.) 431.66 685.32 T
1 F
(<class-de\336nition>) 72 652.63 T
0 F
( \050) 162.36 652.63 T
1 F
(<sour) 169.36 652.63 T
(ce-f) 198.65 652.63 T
(orm>) 217 652.63 T
0 F
(\051) 245.16 652.63 T
([Class]) 506 652.63 T
(The class of) 90 625.95 T
1 F
(de\336ne) 150.98 625.95 T
(class) 184.66 625.95 T
0 F
( forms.) 208.66 625.95 T
1 F
(class-de\336nition-slot-de\336nitions) 72 593.26 T
2 F
(class-de\336nition) 231.02 593.26 T
3 F
(\336) 307.36 593.26 T
2 F
(slot-de\336nitions) 322.2 593.26 T
0 F
([Function]) 489.34 593.26 T
(Returns the sequence of all direct slot de\336nitions embedded in the class de\336nition. Does not) 90 566.58 T
(include inherited slot or init k) 90 552.58 T
(e) 232.21 552.58 T
(yw) 237.36 552.58 T
(ord descriptions, just direct slot de\336nitions.) 251.9 552.58 T
1 F
(class-de\336nition-super) 72 519.9 T
(class-types) 181.13 519.9 T
2 F
(class-de\336nition) 238.79 519.9 T
3 F
(\336) 315.12 519.9 T
2 F
(super) 329.96 519.9 T
(s) 356.51 519.9 T
0 F
([Function]) 489.34 519.9 T
(Returns a sequence of type e) 90 493.21 T
(xpressions representing the superclasses speci\336ed in the class) 227.45 493.21 T
(de\336nition.) 90 479.21 T
1 F
(class-de\336nition-init-k) 72 446.53 T
(eyw) 180.56 446.53 T
(ords) 200.44 446.53 T
2 F
(class-de\336nition) 226.1 446.53 T
3 F
(\336) 302.44 446.53 T
2 F
(k) 317.28 446.53 T
(e) 322.49 446.53 T
(ywor) 327.46 446.53 T
(ds) 351.01 446.53 T
0 F
([Function]) 489.34 446.53 T
(Returns a collection of the init k) 90 419.84 T
(e) 244.54 419.84 T
(yw) 249.68 419.84 T
(ords speci\336ed in the) 264.23 419.84 T
4 F
(keyword) 363.55 419.84 T
0 F
( and) 413.95 419.84 T
4 F
(required-) 437.28 419.84 T
(key-) 502.08 419.84 T
-0.8 (word) 90 405.84 P
0 F
-0.33 ( clauses of the c) 118.8 405.84 P
-0.33 (lass de\336nition.) 194.11 405.84 P
-0.33 ( Note that this does not include slot k) 263.78 405.84 P
-0.33 (e) 439.65 405.84 P
-0.33 (yw) 444.8 405.84 P
-0.33 (ords speci\336ed in) 459.34 405.84 P
(the class\325) 90 391.84 T
(s slot de\336nitions.) 134.33 391.84 T
1 F
(class-de\336nition-init-k) 72 359.16 T
(eyw) 180.56 359.16 T
(ord-r) 200.44 359.16 T
(equir) 227.54 359.16 T
(ed?) 254.66 359.16 T
2 F
(class-de\336nition k) 275.66 359.16 T
(e) 357.2 359.16 T
(ywor) 362.17 359.16 T
(d) 385.73 359.16 T
3 F
(\336) 394.73 359.16 T
2 F
(r) 409.57 359.16 T
(equir) 413.8 359.16 T
(ed?) 438.68 359.16 T
0 F
([Function]) 489.34 359.16 T
(T) 90 332.47 T
(rue if k) 96.91 332.47 T
(e) 131.45 332.47 T
(yw) 136.6 332.47 T
(ord is a required init k) 151.14 332.47 T
(e) 257.34 332.47 T
(yw) 262.49 332.47 T
(ord.) 277.03 332.47 T
1 F
(class-de\336nition-init-k) 72 299.79 T
(eyw) 180.56 299.79 T
(ord-init-kind) 200.44 299.79 T
2 F
(class-de\336nition) 270.12 299.79 T
(k) 346.45 299.79 T
(e) 351.66 299.79 T
(ywor) 356.63 299.79 T
(d) 380.18 299.79 T
3 F
(\336) 389.18 299.79 T
2 F
(kind) 404.03 299.79 T
0 F
([Function]) 489.34 299.79 T
(One of) 90 273.1 T
1 F
(#"init-expr) 125.99 273.1 T
(ession") 183.1 273.1 T
0 F
(,) 220.43 273.1 T
1 F
(#"init-v) 226.43 273.1 T
(alue") 266.3 273.1 T
0 F
(,) 294.3 273.1 T
1 F
(#"init-function") 300.3 273.1 T
0 F
(, or) 383.63 273.1 T
1 F
(#f) 402.62 273.1 T
0 F
( if no initialization w) 412.62 273.1 T
(as) 513.17 273.1 T
(speci\336ed.) 90 259.1 T
1 F
(class-de\336nition-init-k) 72 226.42 T
(eyw) 180.56 226.42 T
(ord-type) 200.44 226.42 T
2 F
(class-de\336nition) 247.43 226.42 T
(k) 323.76 226.42 T
(e) 328.97 226.42 T
(ywor) 333.94 226.42 T
(d) 357.49 226.42 T
3 F
(\336) 366.49 226.42 T
2 F
(type) 381.34 226.42 T
0 F
([Function]) 489.34 226.42 T
(Returns the type of the k) 90 199.74 T
(e) 208.2 199.74 T
(yw) 213.35 199.74 T
(ord, as a type e) 227.89 199.74 T
(xpression.) 300.02 199.74 T
1 F
(<macr) 72 167.05 T
(o-de\336nition>) 105.28 167.05 T
0 F
( \050) 170.8 167.05 T
1 F
(<sour) 177.79 167.05 T
(ce-f) 207.08 167.05 T
(orm>) 225.43 167.05 T
0 F
(\051) 253.6 167.05 T
([Class]) 506 167.05 T
(The class of) 90 140.37 T
1 F
(de\336ne) 150.98 140.37 T
(macr) 184.66 140.37 T
(o) 211.09 140.37 T
0 F
( forms.) 217.09 140.37 T
1 F
(macr) 72 107.68 T
(o-de\336nition-w) 98.44 107.68 T
(ord) 169.66 107.68 T
2 F
(macr) 190.66 107.68 T
(o-de\336nition) 214.78 107.68 T
3 F
(\336) 273.11 107.68 T
2 F
(wor) 287.95 107.68 T
(d) 306.18 107.68 T
(kind) 315.18 107.68 T
0 F
([Function]) 489.34 107.68 T
(Returns the reserv) 90 81 T
(ed w) 177.13 81 T
(ord introduced by the macro de\336nition, as a k) 200 81 T
(e) 418.19 81 T
(yw) 423.34 81 T
(ord.  The second) 437.88 81 T
(v) 90 67 T
(alue is type of macro de\336ned, one of) 95.7 67 T
1 F
(#"statement") 274 67 T
0 F
(,) 343.3 67 T
1 F
(#"function") 349.3 67 T
0 F
( or) 411.29 67 T
1 F
(#"de\336ne") 427.28 67 T
0 F
(.) 477.28 67 T
52 387.84 54 427.84 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 11
%%Page: "14" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(14) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(macr) 72 712 T
(o-f) 98.44 712 T
(orm-expanded-f) 112.13 712 T
(orms) 194.48 712 T
2 F
(macr) 223.48 712 T
(o-form) 247.6 712 T
3 F
(\336) 283.26 712 T
2 F
(sour) 298.1 712 T
(ce-form-sequence) 319 712 T
0 F
([Function]) 489.34 712 T
(Returns the sequence of top le) 90 685.83 T
(v) 234.67 685.83 T
(el forms in the \050fully recursi) 240.49 685.83 T
(v) 375.17 685.83 T
(e\051 macroe) 380.99 685.83 T
(xpansion of) 428.45 685.83 T
2 F
(macr) 487.78 685.83 T
(o-) 511.9 685.83 T
(form) 90 671.83 T
0 F
(.  None of the returned forms is a macro call.) 112.67 671.83 T
1 F
(Note) 90 645.67 T
0 F
(: This should be suf) 113.99 645.67 T
(\336cient for Kansas.  If macroe) 208.36 645.67 T
(xpand-1 functionality turns out to be) 348.13 645.67 T
(needed, it can be added.) 90 631.67 T
1 F
(<init-f) 72 599.5 T
(orm>) 103.87 599.5 T
0 F
( \050) 132.04 599.5 T
1 F
(<sour) 139.03 599.5 T
(ce-f) 168.32 599.5 T
(orm>) 186.67 599.5 T
0 F
(\051) 214.84 599.5 T
([Class]) 506 599.5 T
(The class of source forms which are \322random e) 90 573.33 T
(xpressions\323, i.e. not de\336nitions or a macro) 316.42 573.33 T
(in) 90 559.33 T
(v) 98.86 559.33 T
(ocations.) 104.62 559.33 T
1 F
(<slot-de\336nition>) 72 527.17 T
0 F
( \050) 156.36 527.17 T
1 F
(<sour) 163.36 527.17 T
(ce-f) 192.65 527.17 T
(orm>) 211 527.17 T
0 F
(\051) 239.16 527.17 T
([Class]) 506 527.17 T
-0.26 (Subclass of source form representing a direct slot de\336nition within a class de\336nition.  Slot def-) 90 501 P
(initions are ne) 90 487 T
(v) 157.69 487 T
(er returned from) 163.51 487 T
1 F
(sour) 245.15 487 T
(ce-r) 267.6 487 T
(ecord-top-le) 287.36 487 T
(v) 349.16 487 T
(el-f) 355.04 487 T
(orms) 371.4 487 T
0 F
( or) 397.39 487 T
1 F
(macr) 413.39 487 T
(o-f) 439.82 487 T
(orm-expanded-) 453.52 487 T
(f) 90 473 T
(orms) 93.7 473 T
0 F
(, since the) 119.69 473 T
(y are al) 167.83 473 T
(w) 203.03 473 T
(ays embedded in a class de\336nition.  Note that an inherited slot) 211.57 473 T
(description is not considered to be a slot de\336nition.) 90 459 T
1 F
(slot-de\336nition-allocation) 72 426.83 T
2 F
(slot-de\336nition) 199.68 426.83 T
3 F
(\336) 269.35 426.83 T
2 F
(allocation) 284.2 426.83 T
0 F
([Function]) 489.34 426.83 T
-0.22 (One of) 90 400.67 P
1 F
-0.22 (#"virtual") 125.56 400.67 P
0 F
-0.22 (,) 179.55 400.67 P
1 F
-0.22 (#"class") 185.33 400.67 P
0 F
-0.22 (,) 228.65 400.67 P
1 F
-0.22 (#"instance") 234.44 400.67 P
0 F
-0.22 (,) 295.76 400.67 P
1 F
-0.22 (#"each-subclass") 301.54 400.67 P
0 F
-0.22 (. May return) 390.2 400.67 P
1 F
-0.22 (#f) 452.2 400.67 P
0 F
-0.22 ( if no allocation) 462.2 400.67 P
(w) 90 386.67 T
(as speci\336ed \050or it may return the def) 98.54 386.67 T
(aulted v) 272.05 386.67 T
(alue\051) 310.08 386.67 T
1 F
(slot-de\336nition-init-kind) 72 354.5 T
2 F
(slot-de\336nition) 194.36 354.5 T
3 F
(\336) 264.04 354.5 T
2 F
(kind) 278.88 354.5 T
0 F
([Function]) 489.34 354.5 T
-0.44 (One of) 90 328.33 P
1 F
-0.44 (#"init-expr) 125.12 328.33 P
-0.44 (ession") 182.22 328.33 P
0 F
-0.44 (,) 219.56 328.33 P
1 F
-0.44 (#"init-v) 225.12 328.33 P
-0.44 (alue") 265 328.33 P
0 F
-0.44 (,) 292.99 328.33 P
1 F
-0.44 (#"init-function") 298.56 328.33 P
0 F
-0.44 (,) 381.88 328.33 P
1 F
-0.44 (#"r) 387.45 328.33 P
-0.44 (equir) 405.22 328.33 P
-0.44 (ed-k) 432.34 328.33 P
-0.44 (eyw) 454.89 328.33 P
-0.44 (ord") 474.76 328.33 P
0 F
-0.44 (, or) 499.42 328.33 P
1 F
-0.44 (#f) 517.54 328.33 P
0 F
-0.44 ( if) 527.54 328.33 P
(no initialization w) 90 314.33 T
(as speci\336ed.) 177.22 314.33 T
1 F
(slot-de\336nition-k) 72 282.17 T
(eyw) 153.23 282.17 T
(ord) 173.1 282.17 T
2 F
(slot-de\336nition) 194.1 282.17 T
3 F
(\336) 263.77 282.17 T
2 F
(k) 278.62 282.17 T
(e) 283.82 282.17 T
(ywor) 288.79 282.17 T
(d r) 312.35 282.17 T
(equir) 325.57 282.17 T
(ed?) 350.46 282.17 T
0 F
([Function]) 489.34 282.17 T
(Returns the slot's k) 90 256 T
(e) 181.04 256 T
(yw) 186.19 256 T
(ord, or) 200.74 256 T
1 F
(#f) 235.73 256 T
0 F
( if the slot is not k) 245.72 256 T
(e) 332.28 256 T
(yw) 337.43 256 T
(ord initializable.  The second v) 351.97 256 T
(alue is) 500.32 256 T
(true if the k) 90 242 T
(e) 145.54 242 T
(yw) 150.68 242 T
(ord is required.) 165.23 242 T
1 F
(slot-de\336nition-class-de\336nition) 72 209.83 T
2 F
(slot-de\336nition) 226.36 209.83 T
3 F
(\336) 296.03 209.83 T
2 F
(class-de\336nition) 310.87 209.83 T
0 F
([Function]) 489.34 209.83 T
(Returns the class de\336nition in which the slot de\336nition w) 90 183.67 T
(as embedded.) 363.55 183.67 T
1 F
(slot-de\336nition-getter) 72 151.5 T
2 F
(slot-de\336nition) 179.65 151.5 T
3 F
(\336) 249.32 151.5 T
2 F
(g) 264.17 151.5 T
(etter) 270.05 151.5 T
(-method) 291.8 151.5 T
0 F
([Function]) 489.34 151.5 T
(Returns a method de\336nition for the slot getter) 90 125.33 T
1 F
(slot-de\336nition-setter) 72 93.17 T
2 F
(slot-de\336nition) 178.32 93.17 T
3 F
(\336) 247.99 93.17 T
2 F
(setter) 262.84 93.17 T
(-method) 289.26 93.17 T
0 F
([Function]) 489.34 93.17 T
(Returns a method de\336nition for the slot setter) 90 67 T
52 396.67 54 408.67 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(13) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(sour) 72 712 T
(ce-f) 94.45 712 T
(orm-de\336ned-v) 112.8 712 T
(ariables) 185.34 712 T
2 F
(sour) 229.01 712 T
(ce-form) 249.9 712 T
3 F
(\336) 290.22 712 T
2 F
(variables) 305.06 712 T
0 F
([Function]) 489.34 712 T
(Returns the sequence of module v) 90 686 T
(ariables de\336ned by the source form.  Returns the empty) 252.67 686 T
-0.16 (sequence for random initialization e) 90 672 P
-0.16 (xpressions, and module and library de\336nitions.  Returns a) 261.81 672 P
(one-element sequence for macro, domain, method, generic and class de\336nitions. F) 90 658 T
(or macro) 484.42 658 T
(de\336nitions in particular) 90 644 T
(, this one element is the v) 201.52 644 T
(ariable bound to the macro, not the reserv) 323.54 644 T
(ed) 523.32 644 T
(w) 90 630 T
(ord introduced by the macro. F) 98.54 630 T
(or class de\336nitions, this one element is the class name - you) 247.01 630 T
(need to e) 90 616 T
(xamine the slot de\336nitions to \336nd accessor names.  F) 133.14 616 T
(or macro calls, returns the con-) 386.95 616 T
(catenation of all the v) 90 602 T
(ariables de\336ned by the forms in the macroe) 193.68 602 T
(xpansion.  F) 401.12 602 T
(or slot de\336ni-) 459.95 602 T
(tions, returns the getter name and then the setter name if an) 90 588 T
(y) 373.76 588 T
(.) 378.98 588 T
1 F
(sour) 72 556 T
(ce-f) 94.45 556 T
(orm-v) 112.8 556 T
(ariable-type) 144 556 T
2 F
(sour) 208.99 556 T
(ce-form var) 229.88 556 T
3 F
(\336) 289.2 556 T
2 F
(type) 304.04 556 T
0 F
([Function]) 489.34 556 T
-0.1 (Returns the speci\336ed type of) 90 530 P
2 F
-0.1 (var) 229.8 530 P
0 F
-0.1 ( as a type e) 245.79 530 P
-0.1 (xpression, or) 298.52 530 P
1 F
-0.1 (#f) 363.3 530 P
0 F
-0.1 ( if no type w) 373.3 530 P
-0.1 (as speci\336ed.) 433.42 530 P
2 F
-0.1 (var) 494.87 530 P
0 F
-0.1 ( must) 510.87 530 P
(be one of the v) 90 516 T
(ariables returned by) 161.02 516 T
1 F
(sour) 259.32 516 T
(ce-f) 281.77 516 T
(orm-de\336ned-v) 300.12 516 T
(ariables) 372.66 516 T
0 F
(.) 413.33 516 T
1 F
(sour) 72 484 T
(ce-f) 94.45 484 T
(orm-adjecti) 112.8 484 T
(v) 172.66 484 T
(es) 178.54 484 T
2 F
(sour) 191.53 484 T
(ce-form) 212.42 484 T
3 F
(\336) 252.74 484 T
2 F
(adjectives) 267.59 484 T
0 F
([Function]) 489.34 484 T
(Returns a sequence of k) 90 458 T
(e) 204.52 458 T
(yw) 209.66 458 T
(ords naming the adjecti) 224.21 458 T
(v) 336.23 458 T
(es in the form, or) 342.05 458 T
1 F
(#f) 427.37 458 T
0 F
( if the form doesn\325) 437.36 458 T
(t) 526.46 458 T
-0.02 (support adjecti) 90 444 P
-0.02 (v) 160.67 444 P
-0.02 (es. \050E.g. in) 166.49 444 P
1 F
-0.02 (de\336ne) 221.08 444 P
-0.02 (open) 254.72 444 P
-0.02 (primary) 282.37 444 P
-0.02 (class) 328.01 444 P
0 F
-0.02 ( the adjecti) 352.01 444 P
-0.02 (v) 404.32 444 P
-0.02 (es are) 410.14 444 P
1 F
-0.02 (#"open") 440.74 444 P
0 F
-0.02 ( and) 484.73 444 P
1 F
-0.02 (#"pri-) 508.01 444 P
(mary") 90 430 T
0 F
(\051. F) 123.98 430 T
(orms which support adjecti) 140.47 430 T
(v) 270.49 430 T
(es are slot de\336nitions and all forms starting with) 276.31 430 T
1 F
(de\336ne) 90 416 T
0 F
(, including de\336ne macro calls.) 120.67 416 T
1 F
(sour) 72 384 T
(ce-f) 94.45 384 T
(orm-de\336ne-w) 112.8 384 T
(ord) 181.33 384 T
2 F
(sour) 202.33 384 T
(ce-form) 223.22 384 T
3 F
(\336) 263.54 384 T
2 F
(k) 278.39 384 T
(e) 283.6 384 T
(ywor) 288.56 384 T
(d-or) 312.12 384 T
(-false) 332.54 384 T
0 F
([Function]) 489.34 384 T
-0.32 (Returns) 90 358 P
1 F
-0.32 (#f) 130.01 358 P
0 F
-0.32 ( if the form doesn\325) 140.01 358 P
-0.32 (t start with) 227.84 358 P
1 F
-0.32 (de\336ne) 281.23 358 P
0 F
-0.32 (, otherwise returns the name of the de\336ne form,) 311.9 358 P
-0.2 (as a k) 90 344 P
-0.2 (e) 116.8 344 P
-0.2 (yw) 121.95 344 P
-0.2 (ord.  F) 136.5 344 P
-0.2 (or e) 167.58 344 P
-0.2 (xample the name of) 185.53 344 P
1 F
-0.2 (de\336ne) 282.71 344 P
-0.2 (class) 316.18 344 P
0 F
-0.2 ( is) 340.18 344 P
1 F
-0.2 (#"class") 353.78 344 P
0 F
-0.2 (.  The name of) 397.1 344 P
1 F
-0.2 (de\336ne) 468.75 344 P
-0.2 (pr) 502.22 344 P
-0.2 (esen-) 514.01 344 P
(tation-type) 90 330 T
0 F
( \050a h) 145.99 330 T
(ypothetical macro in) 167.26 330 T
(v) 265.43 330 T
(ocation\051 is) 271.19 330 T
1 F
(#"pr) 324.52 330 T
(esentation-type") 348.96 330 T
0 F
(.) 433.61 330 T
1 F
(<sour) 72 298 T
(ce-f) 101.29 298 T
(orm-sequence>) 119.64 298 T
0 F
([Type]) 507.35 298 T
(The type of sequence returned by) 90 272 T
1 F
(sour) 253.28 272 T
(ce-r) 275.74 272 T
(ecord-top-le) 295.5 272 T
(v) 357.3 272 T
(el-f) 363.18 272 T
(orms) 379.54 272 T
0 F
( and) 405.53 272 T
1 F
(macr) 428.86 272 T
(o-f) 455.29 272 T
(orm-) 468.98 272 T
(expanded-f) 90 258 T
(orms) 147.04 258 T
0 F
(.) 173.03 258 T
1 F
(sour) 72 226 T
(ce-r) 94.45 226 T
(ecord-top-le) 114.22 226 T
(v) 176.02 226 T
(el-f) 181.9 226 T
(orms) 198.25 226 T
2 F
(conte) 227.24 226 T
(xt) 253 226 T
(sour) 264.66 226 T
(ce-r) 285.55 226 T
(ecor) 304.43 226 T
(d) 325.31 226 T
3 F
(\336) 334.31 226 T
2 F
(sour) 349.15 226 T
(ce-form-sequence) 370.04 226 T
0 F
([Function]) 489.34 226 T
-0.1 (Returns a sequence of source forms appearing at the top le) 90 200 P
-0.1 (v) 369.28 200 P
-0.1 (el of the source record in the spec-) 375.1 200 P
(i\336ed compilation or e) 90 186 T
(x) 192.82 186 T
(ecution conte) 198.64 186 T
(xt.) 262.78 186 T
1 F
(<macr) 72 154 T
(o-f) 105.28 154 T
(orm>) 118.97 154 T
0 F
( \050) 147.13 154 T
1 F
(<sour) 154.13 154 T
(ce-f) 183.42 154 T
(orm>) 201.77 154 T
0 F
(\051) 229.93 154 T
([Class]) 506 154 T
(A source form which is an in) 90 128 T
(v) 228.83 128 T
(ocation of a macro.) 234.59 128 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "12" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(12) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(sour) 72 350.9 T
(ce-f) 94.45 350.9 T
(orm-par) 112.8 350.9 T
(ent-f) 155.9 350.9 T
(orm) 179.59 350.9 T
2 F
(sour) 203.92 350.9 T
(ce-form) 224.81 350.9 T
3 F
(\336) 265.13 350.9 T
2 F
(sour) 279.97 350.9 T
(ce-form-or) 300.86 350.9 T
(-false) 352.61 350.9 T
0 F
([) 489.34 350.9 T
(Function]) 493.33 350.9 T
(Returns the \322parent\323 of the source form if an) 90 324.9 T
(y) 304.43 324.9 T
(.  Returns the macro call form for forms which) 309.65 324.9 T
-0.19 (came out of macroe) 90 310.9 P
-0.19 (xpansions.  Returns the slot de\336nition for slot setter and getter de\336nitions.) 184.23 310.9 P
(Returns the class de\336nition for slot de\336nitions.  Returns) 90 296.9 T
1 F
(#f) 360.67 296.9 T
0 F
( in all other cases.) 370.67 296.9 T
1 F
(sour) 72 264.9 T
(ce-f) 94.45 264.9 T
(orm-location) 112.8 264.9 T
2 F
(sour) 181.79 264.9 T
(ce-form) 202.68 264.9 T
3 F
(\336) 243 264.9 T
2 F
(sour) 257.84 264.9 T
(ce-locator) 278.74 264.9 T
(-or) 327.82 264.9 T
(-false) 342.24 264.9 T
0 F
([Function]) 489.34 264.9 T
(Returns) 90 238.9 T
1 F
(#f) 130.33 238.9 T
0 F
( if the) 140.33 238.9 T
2 F
(sour) 171.32 238.9 T
(ce-form) 192.22 238.9 T
0 F
( did not appear at the top le) 229.54 238.9 T
(v) 360.22 238.9 T
(el of a source record \050in which case) 366.04 238.9 T
1 F
(sour) 90 224.9 T
(ce-f) 112.45 224.9 T
(orm-par) 130.8 224.9 T
(ent-f) 173.9 224.9 T
(orm) 197.59 224.9 T
0 F
( is guaranteed to) 218.92 224.9 T
316.24 223.7 300.9 223.7 2 L
V
0.6 H
0 Z
N
(not) 300.9 224.9 T
( return) 316.24 224.9 T
1 F
(#f) 350.89 224.9 T
0 F
(\051.  Otherwise returns the source loca-) 360.89 224.9 T
(tor for the location of the source form.) 90 210.9 T
1 F
-0.24 (Issue) 90 184.9 P
0 F
-0.24 (: should slot de\336nitions return) 116 184.9 P
1 F
-0.24 (#f) 261.8 184.9 P
0 F
-0.24 ( or not?  I.e. should slot de\336nitions remember their loca-) 271.8 184.9 P
(tion in the source record, or do the) 90 170.9 T
(y just need to remember the class the) 255.12 170.9 T
(y came from?) 432.58 170.9 T
1 F
(sour) 72 138.9 T
(ce-f) 94.45 138.9 T
(orm-context) 112.8 138.9 T
2 F
(sour) 178.44 138.9 T
(ce-form) 199.33 138.9 T
3 F
(\336) 239.65 138.9 T
2 F
(compilation-conte) 254.5 138.9 T
(xt) 341.58 138.9 T
0 F
([Function]) 489.34 138.9 T
(Returns the compilation conte) 90 112.9 T
(xt which contains the source form.) 234.14 112.9 T
72 63 540 720 C
72 378.9 540 708 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0 X
0 0 0 1 0 0 0 K
(<method-de\336nition>) 387.99 650.29 T
(<generic-de\336nition>) 387.99 632.17 T
(<function-de\336nition>) 387.28 592.39 T
(<constant-method-de\336nition>) 387.28 574.17 T
357.79 604.14 239.42 604.14 2 L
V
0.6 H
0 Z
N
(<functional-de\336nition>) 239.42 605.34 T
375.38 625.07 373.55 627.42 383.57 631.44 377.21 622.72 4 Y
0.5 H
N
375.38 625.07 373.55 627.42 383.57 631.44 377.21 622.72 4 Y
V
358.57 612 375.18 624.92 2 L
2 Z
N
377.97 643.03 375.79 645.06 385.04 650.63 380.15 641 4 Y
0 Z
N
377.97 643.03 375.79 645.06 385.04 650.63 380.15 641 4 Y
V
350.32 613.29 377.8 642.85 2 L
2 Z
N
373.74 598.46 373.93 601.43 384.1 597.8 373.55 595.49 4 Y
0 Z
N
373.74 598.46 373.93 601.43 384.1 597.8 373.55 595.49 4 Y
V
354.03 599.71 373.49 598.48 2 L
2 Z
N
373.64 584.26 375.36 586.69 382.12 578.27 371.93 581.83 4 Y
0 Z
N
373.64 584.26 375.36 586.69 382.12 578.27 371.93 581.83 4 Y
V
350.91 600.33 373.44 584.41 2 L
2 Z
N
(<library-de\336nition>) 252.99 693.96 T
(<module-de\336nition>) 252.99 665.96 T
(<macr) 252.99 637.96 T
(o-de\336nition>) 286.27 637.96 T
(<constant-de\336nition>) 252.99 555.96 T
(<v) 252.99 528.96 T
(ariable-de\336nition>) 265.71 528.96 T
(<domain-de\336nition>) 252.99 502.02 T
(<class-de\336nition>) 252.99 475.65 T
(<macr) 253.31 449.2 T
(o-f) 286.59 449.2 T
(orm>) 300.28 449.2 T
(<init-f) 252.64 421.76 T
(orm>) 284.51 421.76 T
(<slot-de\336nition>) 253.4 393.13 T
239.25 554.01 237.89 556.66 248.48 558.76 240.61 551.37 4 Y
0 Z
N
239.25 554.01 237.89 556.66 248.48 558.76 240.61 551.37 4 Y
V
150.71 508.46 239.03 553.9 2 L
2 Z
N
239.02 530.14 238.33 533.04 249.12 532.54 239.71 527.24 4 Y
0 Z
N
239.02 530.14 238.33 533.04 249.12 532.54 239.71 527.24 4 Y
V
150.71 509.17 238.78 530.08 2 L
2 Z
N
373.08 566.58 370.89 568.6 380.1 574.22 375.27 564.57 4 Y
0 Z
N
373.08 566.58 370.89 568.6 380.1 574.22 375.27 564.57 4 Y
V
364.29 557.03 372.91 566.4 2 L
2 Z
N
101.17 505.14 71.66 505.14 2 L
V
0.6 H
0 Z
N
(<sour) 71.66 506.34 T
119.6 505.14 100.95 505.14 2 L
V
N
(ce-f) 100.95 506.34 T
147.46 505.14 119.3 505.14 2 L
V
N
(orm>) 119.3 506.34 T
244.68 628.42 242.34 630.27 251.1 636.58 247.02 626.59 4 Y
0.5 H
N
244.68 628.42 242.34 630.27 251.1 636.58 247.02 626.59 4 Y
V
151.43 509.89 244.52 628.23 2 L
2 Z
N
245.6 656.44 243.09 658.04 251.17 665.2 248.11 654.84 4 Y
0 Z
N
245.6 656.44 243.09 658.04 251.17 665.2 248.11 654.84 4 Y
V
151.43 508.46 245.46 656.23 2 L
2 Z
N
246.25 683.39 243.64 684.82 251.22 692.5 248.86 681.96 4 Y
0 Z
N
246.25 683.39 243.64 684.82 251.22 692.5 248.86 681.96 4 Y
V
150.71 508.46 246.13 683.17 2 L
2 Z
N
231.69 597.26 229.49 599.27 238.68 604.93 233.89 595.26 4 Y
0 Z
N
231.69 597.26 229.49 599.27 238.68 604.93 233.89 595.26 4 Y
V
151.43 509.17 231.52 597.08 2 L
2 Z
N
239.18 482.39 240.03 485.24 249.13 479.43 238.34 479.54 4 Y
0 Z
N
239.18 482.39 240.03 485.24 249.13 479.43 238.34 479.54 4 Y
V
151.43 508.46 238.94 482.46 2 L
2 Z
N
236.58 505.31 236.69 508.28 246.95 504.92 236.47 502.33 4 Y
0 Z
N
236.58 505.31 236.69 508.28 246.95 504.92 236.47 502.33 4 Y
V
151.43 508.46 236.33 505.32 2 L
2 Z
N
238.78 459.07 240.26 461.65 247.79 453.91 237.3 456.49 4 Y
0 Z
N
238.78 459.07 240.26 461.65 247.79 453.91 237.3 456.49 4 Y
V
150.91 509.44 238.57 459.2 2 L
2 Z
N
239.24 433.6 241.16 435.87 247.16 426.9 237.32 431.32 4 Y
0 Z
N
239.24 433.6 241.16 435.87 247.16 426.9 237.32 431.32 4 Y
V
150.91 508.19 239.04 433.76 2 L
2 Z
N
238.97 408.36 241.21 410.32 245.83 400.57 236.74 406.39 4 Y
0 Z
N
238.97 408.36 241.21 410.32 245.83 400.57 236.74 406.39 4 Y
V
150.37 508.99 238.81 408.55 2 L
2 Z
N
374.73 610.97 373.7 613.76 384.47 614.54 375.76 608.17 4 Y
0 Z
N
374.73 610.97 373.7 613.76 384.47 614.54 375.76 608.17 4 Y
V
352.66 602.86 374.5 610.88 2 L
2 Z
N
(<primiti) 386.08 611.46 T
(v) 428.8 611.46 T
(e-de\336nition>) 434.68 611.46 T
72 63 540 720 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 14
%%Page: "11" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(11) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(5.2  Pr) 72 710.67 T
(ogram surface inf) 111.02 710.67 T
(ormation) 216.42 710.67 T
1 12 Q
(<type-expr) 72 678 T
(ession>) 127.94 678 T
0 F
([Type]) 507.35 678 T
(Represents type e) 90 652 T
(xpressions used in de\336nitions. In Kansas, this is de\336ned as) 174.47 652 T
1 F
(type-) 458.46 652 T
(union) 90 638 T
0 F
(\050) 119.35 638 T
1 F
(<v) 123.35 638 T
(ariable>) 136.07 638 T
0 F
(,) 178.91 638 T
1 F
(singleton) 184.91 638 T
0 F
(\050) 230.92 638 T
1 F
(#t) 234.91 638 T
0 F
(\051\051, where) 244.91 638 T
1 F
(#t) 291.22 638 T
0 F
( is used to represent an) 301.21 638 T
(y e) 410.68 638 T
(xpression more compli-) 424.82 638 T
(cated than a v) 90 624 T
(ariable reference. In the future, we may pro) 156.01 624 T
(vide a protocol for describing and) 364.08 624 T
(e) 90 610 T
(xamining more comple) 95.15 610 T
(x type e) 206.29 610 T
(xpressions; in an) 244.1 610 T
(y case,) 324.59 610 T
1 F
(#t) 360.24 610 T
0 F
( will continue to be used to repre-) 370.24 610 T
(sent an) 90 596 T
(y unsupported e) 123.48 596 T
(xpression.) 199.96 596 T
1 F
(<sour) 72 564 T
(ce-locator>) 101.29 564 T
0 F
([Class]) 506 564 T
(Represents the location of some source code.) 90 538 T
1 F
(sour) 72 506 T
(ce-locator) 94.45 506 T
(-sour) 144.65 506 T
(ce-r) 171.1 506 T
(ecord) 190.86 506 T
2 F
(sour) 222.52 506 T
(ce-locator) 243.41 506 T
3 F
(\336) 295.73 506 T
2 F
(sour) 310.57 506 T
(ce-r) 331.46 506 T
(ecor) 350.34 506 T
(d) 371.22 506 T
0 F
([Function]) 489.34 506 T
(Returns the source record containing the source code.) 90 480 T
1 F
(sour) 72 448 T
(ce-locator) 94.45 448 T
(-positions) 144.65 448 T
2 F
(sour) 196.99 448 T
(ce-locator) 217.88 448 T
3 F
(\336) 270.2 448 T
2 F
(start-position) 285.05 448 T
(end-position) 352.73 448 T
0 F
([Function]) 489.34 448 T
-0.29 (Returns the start and end positions of the source code, as character of) 90 422 P
-0.29 (fsets from the start of the) 418.44 422 P
(source record.) 90 408 T
1 F
(sour) 72 376 T
(ce-locator) 94.45 376 T
(-lines) 144.65 376 T
2 F
(sour) 174.98 376 T
(ce-locator) 195.88 376 T
3 F
(\336) 248.2 376 T
2 F
(start-line) 263.04 376 T
(end-line) 310.04 376 T
0 F
([Function]) 489.34 376 T
(Returns the start and end line numbers of the source code within the source record.) 90 350 T
2 F
(start-line) 490.58 350 T
0 F
(is the line containing) 90 336 T
2 F
(start-position) 193.33 336 T
0 F
(, and) 258.01 336 T
2 F
(end-line) 284.34 336 T
0 F
( is the line containing) 323.66 336 T
2 F
(end-position) 430 336 T
0 F
(.) 490 336 T
1 F
(<sour) 72 304 T
(ce-f) 101.29 304 T
(orm>) 119.64 304 T
0 F
([Abstract Class]) 462.35 304 T
(The class of objects representing constituents of a Dylan program.) 90 278 T
-0.15 (The follo) 72 252 P
-0.15 (wing is the class hierarch) 115.88 252 P
-0.15 (y of objects representable as source forms. Abstract classes are) 236.55 252 P
(underlined.) 72 238 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 15
%%Page: "10" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(10) 532 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(pr) 72 712 T
(oject-library-de\336nition) 83.78 712 T
2 F
(conte) 204.11 712 T
(xt) 229.86 712 T
3 F
(\336) 241.52 712 T
2 F
(libr) 256.37 712 T
(ary-de\336nition) 273.53 712 T
0 F
([Function]) 489.34 712 T
(Returns the library de\336nition corresponding to the project\325) 90 686 T
(s library) 370.31 686 T
(, or) 409.19 686 T
1 F
(#f) 428.18 686 T
0 F
( if there is no v) 438.18 686 T
(alid) 510.2 686 T
(library de\336nition.) 90 672 T
1 F
(do-library-modules) 72 640 T
2 F
(conte) 174.34 640 T
(xt function) 200.09 640 T
0 F
( #key) 251.09 640 T
2 F
(inherited? internal?) 280.42 640 T
0 F
([Function]) 489.34 640 T
(Maps) 90 614 T
2 F
( function) 116.66 614 T
0 F
( o) 159 614 T
(v) 167.82 614 T
(er accessible modules in) 173.64 614 T
2 F
(conte) 293.62 614 T
(xt) 319.37 614 T
0 F
(\325) 328.03 614 T
(s library) 331.37 614 T
(. If) 370.25 614 T
2 F
(inherited?) 387.24 614 T
0 F
( is true then modules) 436.57 614 T
-0.25 (imported from used libraries will be included, otherwise \050the def) 90 600 P
-0.25 (ault\051 only modules de\336ned in) 397.58 600 P
-0.01 (the library will be mapped. If) 90 586 P
2 F
-0.01 (internal?) 233.6 586 P
0 F
-0.01 ( is true then une) 277.6 586 P
-0.01 (xported modules will be included, oth-) 354.05 586 P
(erwise \050the def) 90 572 T
(ault\051 only e) 161.18 572 T
(xported \050or re-e) 215.66 572 T
(xported\051 modules will be mapped.) 290.78 572 T
2 F
-0.2 (function) 90 546 P
0 F
-0.2 ( should be a function of tw) 129.34 546 P
-0.2 (o ar) 256.67 546 P
-0.2 (guments. The \336rst ar) 274.58 546 P
-0.2 (gument will be the name of a mod-) 373.09 546 P
(ule, as a symbol. The second ar) 90 532 T
(gument will be one of) 240.42 532 T
1 F
(#"inter) 348.74 532 T
(nal") 385.88 532 T
0 F
( or) 408.55 532 T
1 F
(#"exported") 424.55 532 T
0 F
(.) 489.19 532 T
1 F
(\336nd-module-de\336nition) 72 500 T
2 F
(conte) 189.7 500 T
(xt name) 215.45 500 T
3 F
(\336) 256.1 500 T
2 F
(module-de\336nition) 270.95 500 T
(kind) 358.61 500 T
0 F
([Function]) 489.34 500 T
-0.18 (Returns the module de\336nition for the module named) 90 474 P
2 F
-0.18 (name) 343.18 474 P
0 F
-0.18 (, or) 369.17 474 P
1 F
-0.18 (#f) 387.8 474 P
0 F
-0.18 ( if there is no accessible mod-) 397.8 474 P
-0.15 (ule by that name. The second v) 90 460 P
-0.15 (alue is) 238.42 460 P
1 F
-0.15 (#"de\336ned") 272.11 460 P
0 F
-0.15 ( or) 328.78 460 P
1 F
-0.15 (#"inherited") 344.47 460 P
0 F
-0.15 ( depending on whether the) 410.46 460 P
(module w) 90 446 T
(as de\336ned in) 137.54 446 T
2 F
(conte) 201.2 446 T
(xt) 226.96 446 T
0 F
(\325) 235.62 446 T
(s library) 238.96 446 T
(, or imported from a used library) 277.84 446 T
(.) 434.03 446 T
(Note that if the module is inherited, then the name of the returned) 90 420 T
2 F
(module-de\336nition) 407.95 420 T
0 F
( may be) 492.61 420 T
(dif) 90 406 T
(ferent than) 103.03 406 T
2 F
(name) 157.68 406 T
0 F
( due to renaming on import.) 183.67 406 T
1 F
(module-exported?) 72 374 T
2 F
(conte) 168.32 374 T
(xt) 194.08 374 T
(name) 205.74 374 T
3 F
(\336) 234.73 374 T
2 F
(e) 249.58 374 T
(xported?) 254.66 374 T
0 F
([Function]) 489.34 374 T
(Returns true if the module named) 90 348 T
2 F
(name) 253.98 348 T
0 F
( is e) 279.97 348 T
(xported from) 299.12 348 T
2 F
(conte) 365.11 348 T
(xt) 390.86 348 T
0 F
(\325) 399.53 348 T
(s library) 402.86 348 T
(. It returns) 441.74 348 T
1 F
(#f) 494.4 348 T
0 F
( if the) 504.4 348 T
(module is not e) 90 334 T
(xported or if there is no accessible module by that name.) 163.49 334 T
1 F
(do-module-v) 72 302 T
(ariables) 136.55 302 T
2 F
(conte) 180.22 302 T
(xt module-de\336nition function) 205.97 302 T
0 F
( #key) 344.63 302 T
2 F
(inherited? internal?) 373.96 302 T
0 F
([Function]) 489.34 302 T
(Maps) 90 276 T
2 F
( function) 116.66 276 T
0 F
( o) 159 276 T
(v) 167.82 276 T
(er accessible v) 173.64 276 T
(ariables in the module. If) 243.31 276 T
2 F
(inherited?) 366.62 276 T
0 F
( is true then v) 415.96 276 T
(ariables) 480.98 276 T
-0.44 (imported from used modules will be included, otherwise \050the def) 90 262 P
-0.44 (ault\051 only v) 397.18 262 P
-0.44 (ariables o) 451.32 262 P
-0.44 (wned by) 496.9 262 P
(the module will be mapped. If) 90 248 T
2 F
(internal?) 237.65 248 T
0 F
( is true then une) 281.65 248 T
(xported v) 358.13 248 T
(ariables will be included,) 403.49 248 T
(otherwise \050the def) 90 234 T
(ault\051 only e) 176.52 234 T
(xported \050or re-e) 231 234 T
(xported\051 v) 306.12 234 T
(ariables will be mapped.) 355.48 234 T
2 F
(function) 90 208 T
0 F
( should be a function of tw) 129.34 208 T
(o ar) 257.87 208 T
(guments. The \336rst ar) 275.98 208 T
(gument will be a v) 375.08 208 T
(ariable, the sec-) 464.11 208 T
(ond a k) 90 194 T
(e) 125.21 194 T
(yw) 130.36 194 T
(ord, one of) 144.9 194 T
1 F
(#"inter) 200.22 194 T
(nal") 237.36 194 T
0 F
( or) 260.03 194 T
1 F
(#"exported") 276.02 194 T
0 F
(.) 340.67 194 T
(This function does nothing if) 90 168 T
2 F
(module-de\336nition) 232.33 168 T
0 F
( is not a v) 316.99 168 T
(alid de\336nition. The de\336nition) 363.36 168 T
(returned by) 90 154 T
1 F
(\336nd-module-de\336nition) 147.98 154 T
0 F
( is guaranteed to be v) 262.68 154 T
(alid.) 364.69 154 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 16
%%Page: "9" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(9) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 14 Q
(5.1  Namespace interface) 72 710.67 T
1 12 Q
(<v) 72 675.29 T
(ariable>) 84.72 675.29 T
0 F
([Type]) 507.35 675.29 T
(Represents a reference to a v) 90 646.57 T
(ariable in a Dylan source form.) 227.98 646.57 T
1 F
(mak) 72 611.86 T
(e-v) 94.55 611.86 T
(ariable) 109.75 611.86 T
2 F
(variable-name) 148.75 611.86 T
(module-name) 221.74 611.86 T
3 F
(\336) 290.05 611.86 T
2 F
(variable) 304.9 611.86 T
0 F
([Function]) 489.34 611.86 T
(Creates a reference to a v) 90 583.14 T
(ariable named) 211.31 583.14 T
2 F
(variable-name) 281.95 583.14 T
0 F
( in module named) 351.94 583.14 T
2 F
(module-name) 441.26 583.14 T
0 F
(.) 506.58 583.14 T
2 F
(variable-name) 90 554.43 T
0 F
( and) 159.98 554.43 T
2 F
(module-name) 183.31 554.43 T
0 F
( should be objects coercible to a symbol.) 248.63 554.43 T
1 F
(v) 72 519.71 T
(ariable-name) 77.88 519.71 T
2 F
(variable) 148.87 519.71 T
3 F
(\336) 191.87 519.71 T
2 F
(variable-name) 206.71 519.71 T
(module-name) 279.7 519.71 T
0 F
([Function]) 489.34 519.71 T
(Returns the name by which the v) 90 491 T
(ariable w) 247.68 491 T
(as referenced and the module in which it w) 291.88 491 T
(as refer-) 498.37 491 T
(enced.) 90 477 T
2 F
(variable-name) 123.98 477 T
0 F
( and) 193.97 477 T
2 F
(module-name) 217.3 477 T
0 F
( are symbols. E.g. for v) 282.61 477 T
(ariables created during pars-) 394.3 477 T
(ing,) 90 463 T
2 F
(module-name) 111.34 463 T
0 F
( is the name of the module associated with the source record from which) 176.65 463 T
(this v) 90 449 T
(ariable w) 116.04 449 T
(as read.) 160.24 449 T
1 F
(v) 72 414.29 T
(ariable-exported?) 77.88 414.29 T
2 F
(conte) 172.2 414.29 T
(xt) 197.95 414.29 T
(variable) 209.62 414.29 T
3 F
(\336) 252.61 414.29 T
2 F
(e) 267.46 414.29 T
(xported?) 272.54 414.29 T
0 F
([Function]) 489.34 414.29 T
(Returns true if the v) 90 385.57 T
(ariable\325) 185.69 385.57 T
(s name is e) 221.68 385.57 T
(xported from its module.) 274.49 385.57 T
1 F
(same-v) 72 350.86 T
(ariable-name?) 107.87 350.86 T
2 F
(variable1) 184.86 350.86 T
(variable2) 233.86 350.86 T
3 F
(\336) 282.85 350.86 T
2 F
(boolean) 297.7 350.86 T
0 F
([Function]) 489.34 350.86 T
(Returns true if the v) 90 322.14 T
(ariables represent the same v) 185.69 322.14 T
(ariable name. Functionally equi) 324.01 322.14 T
(v) 475.69 322.14 T
(alent to:) 481.39 322.14 T
4 10 Q
(let \050n1, m1\051 = variable-name\050variable1\051;) 144 300.76 T
(let \050n2, m2\051 = variable-name\050variable2\051;) 144 286.05 T
(n1 == n2 & m1 == m2;) 144 271.33 T
1 12 Q
(v) 72 237.29 T
(ariable-home) 77.88 237.29 T
2 F
(conte) 148.87 237.29 T
(xt) 174.62 237.29 T
(variable) 186.29 237.29 T
3 F
(\336) 229.28 237.29 T
2 F
(home-variable) 244.13 237.29 T
0 F
([Function]) 489.34 237.29 T
(Returns the \322home\323 v) 90 208.57 T
(ariable of) 194.02 208.57 T
2 F
(variable) 242.66 208.57 T
0 F
(, after applying all namespace import and renaming) 282.66 208.57 T
(information in the speci\336ed compilation or e) 90 194.57 T
(x) 303.8 194.57 T
(ecution conte) 309.62 194.57 T
(xt.) 373.76 194.57 T
1 F
(same-v) 72 159.86 T
(ariable?) 107.87 159.86 T
2 F
(conte) 152.87 159.86 T
(xt) 178.62 159.86 T
(variable1) 190.28 159.86 T
(variable2) 239.28 159.86 T
3 F
(\336) 288.28 159.86 T
2 F
(boolean) 303.12 159.86 T
0 F
([Function]) 489.34 159.86 T
-0.21 (Returns true if the v) 90 131.14 P
-0.21 (ariables resolv) 184.86 131.14 P
-0.21 (e to the same v) 254.12 131.14 P
-0.21 (ariable in the speci\336ed compilation or e) 324.98 131.14 P
-0.21 (x) 513.53 131.14 P
-0.21 (ecu-) 519.35 131.14 P
(tion conte) 90 117.14 T
(xt. Functionally equi) 137.48 117.14 T
(v) 236.86 117.14 T
(alent to:) 242.56 117.14 T
4 10 Q
(same-variable-name?\050variable-home\050context, variable1\051,) 144 95.76 T
(variable-home\050context, variable2\051\051) 261 81.05 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 17
%%Page: "8" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(8) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(component-context-mismatch-err) 72 712 T
(or) 243.73 712 T
(-component) 254.62 712 T
2 F
(component-conte) 318.28 712 T
(xt-mismatc) 400.68 712 T
(h-err) 453.16 712 T
(or) 477.28 712 T
3 F
(\336) 171 697.42 T
2 F
(component) 185.84 697.42 T
0 F
([Function]) 489.34 697.42 T
(Returns the mismatched component.) 90 670.83 T
1 F
(execute-sour) 72 638.25 T
(ce) 136.43 638.25 T
2 F
(e) 150.08 638.25 T
(xecution-conte) 155.17 638.25 T
(xt) 225.58 638.25 T
(dynamic-conte) 237.24 638.25 T
(xt pr) 307.64 638.25 T
(oject) 329.44 638.25 T
(sour) 355.76 638.25 T
(ce-r) 376.66 638.25 T
(ecor) 395.53 638.25 T
(d-sequence) 416.41 638.25 T
3 F
(\336) 171 623.67 T
2 F
(tr) 185.84 623.67 T
(ansaction-id) 193.67 623.67 T
0 F
([Function]) 489.34 623.67 T
(Queues up the e) 90 597.08 T
(x) 166.8 597.08 T
(ecution of the speci\336ed sequence of source records in) 172.62 597.08 T
2 F
(e) 432.22 597.08 T
(xecution-conte) 437.3 597.08 T
(xt) 507.71 597.08 T
0 F
(\325) 516.37 597.08 T
(s) 519.71 597.08 T
(process, in the dynamic conte) 90 583.08 T
(xt) 232.13 583.08 T
2 F
(dynamic-conte) 244.46 583.08 T
(xt) 314.87 583.08 T
0 F
(, using) 323.53 583.08 T
2 F
(pr) 358.54 583.08 T
(oject) 368.66 583.08 T
0 F
(\325) 391.99 583.08 T
(s namespace. The source) 395.33 583.08 T
(records speci\336ed need not be part of the project, in f) 90 569.08 T
(act the) 340.15 569.08 T
(y don't e) 371.63 569.08 T
(v) 412.15 569.08 T
(en need to be part of an) 417.97 569.08 T
(y) 530.42 569.08 T
-0.3 (project \050e.g. the) 90 555.08 P
-0.3 (y could come from an interactor\051.  This function updates the e) 164.53 555.08 P
-0.3 (x) 458.31 555.08 P
-0.3 (ecution conte) 464.13 555.08 P
-0.3 (xt) 527.97 555.08 P
-0.37 (with information obtained from compiling the sources, b) 90 541.08 P
-0.37 (ut it does not modify an) 359.12 541.08 P
-0.37 (y compilation) 471.41 541.08 P
(conte) 90 527.08 T
(xts \050e.g. it does not add the sources to the canonical sources of an) 115.81 527.08 T
(y project\051.) 429.24 527.08 T
2 F
(dynamic-conte) 90 500.5 T
(xt) 160.4 500.5 T
0 F
( is a runtime manager object indicating the dynamic conte) 169.07 500.5 T
(xt in which e) 447.18 500.5 T
(x) 509.33 500.5 T
(ecu-) 515.15 500.5 T
(tion should tak) 90 486.5 T
(e place. It also contains information about the le) 161.22 486.5 T
(xical conte) 392 486.5 T
(xt in which the) 444.14 486.5 T
(sources are to be compiled. Note that an) 90 472.5 T
(y le) 282.44 472.5 T
(xically acti) 299.93 472.5 T
(v) 352.62 472.5 T
(e v) 358.44 472.5 T
(ariables will be treated as con-) 372.47 472.5 T
(stants, i.e. we do not support) 90 458.5 T
1 F
(set!) 230.33 458.5 T
0 F
( of) 248.32 458.5 T
2 F
(dynamic-conte) 264.31 458.5 T
(xt) 334.72 458.5 T
0 F
(\325) 343.38 458.5 T
(s v) 346.72 458.5 T
(ariables.) 360.08 458.5 T
(Returns a transaction id which can be used to obtain the sequence of v) 90 431.92 T
(alues returned by the) 426.64 431.92 T
(last form in the last source record in) 90 417.92 T
2 F
(sour) 265.97 417.92 T
(ce-r) 286.86 417.92 T
(ecor) 305.74 417.92 T
(d-sequence) 326.62 417.92 T
0 F
(. The protocol for obtaining the) 380.59 417.92 T
(v) 90 403.92 T
(alues is part of a Runtime Manager API and is not described here.) 95.7 403.92 T
(If e) 90 377.33 T
(x) 106.14 377.33 T
(ecuting the sources w) 111.96 377.33 T
(ould in) 215.48 377.33 T
(v) 248.68 377.33 T
(alidate assumptions made in the compilation of pre) 254.38 377.33 T
(viously) 499.06 377.33 T
(do) 90 363.33 T
(wnloaded methods, those methods are \322patched\323 to either be v) 101.7 363.33 T
(alid ag) 401.34 363.33 T
(ain or to signal a) 433.61 363.33 T
(Dylan error) 90 349.33 T
(.  Similarly if e) 144.98 349.33 T
(x) 217.14 349.33 T
(ecution w) 222.96 349.33 T
(ould in) 269.83 349.33 T
(v) 303.02 349.33 T
(alidate the layout of pre) 308.72 349.33 T
(viously-created objects) 422.4 349.33 T
(in the runtime, appropriate actions are tak) 90 335.33 T
(en to mak) 290.17 335.33 T
(e sure that such objects will not cause) 337.38 335.33 T
(crashes.  May signal) 90 321.33 T
1 F
(<unsupported-r) 190.98 321.33 T
(ede\336nition-err) 272.28 321.33 T
(or>) 346.06 321.33 T
0 F
( if for an) 364.22 321.33 T
(y reason the in) 405.7 321.33 T
(v) 475.54 321.33 T
(ariants) 481.24 321.33 T
-0.21 (described abo) 90 307.33 P
-0.21 (v) 155.92 307.33 P
-0.21 (e cannot be maintained.  This error is continuable, and if continued the sources) 161.74 307.33 P
-0.24 (are e) 90 293.33 P
-0.24 (x) 112.56 293.33 P
-0.24 (ecuted despite our inability to \336x-up pre) 118.38 293.33 P
-0.24 (viously do) 309.26 293.33 P
-0.24 (wnloaded objects.  This may result in) 359.06 293.33 P
(subsequent runtime crashes or other une) 90 279.33 T
(xpected beha) 282.78 279.33 T
(vior) 345.52 279.33 T
(, so continuing should only be done) 364.37 279.33 T
(with user consent.) 90 265.33 T
1 F
(<unsupported-r) 72 232.75 T
(ede\336nition-err) 153.3 232.75 T
(or>) 227.08 232.75 T
0 F
([Class]) 506 232.75 T
(Error signalled when the compilation system cannot guarantee that a requested rede\336nition) 90 206.17 T
(will not cause subsequent \322out of language\323 f) 90 192.17 T
(ailures in the runtime. Subclass of) 308.17 192.17 T
1 F
(<err) 474.49 192.17 T
(or>) 497.1 192.17 T
0 F
(.) 515.27 192.17 T
1 16 Q
(5.  Deri) 72 150.92 T
(v) 122.05 150.92 T
(ed Inf) 129.89 150.92 T
(ormation Interface) 169.94 150.92 T
0 12 Q
(The compilation system pro) 72 123 T
(vides tw) 206.15 123 T
(o le) 246.36 123 T
(v) 263.72 123 T
(els of deri) 269.54 123 T
(v) 317.23 123 T
(ed information about sources. One le) 323.05 123 T
(v) 500.05 123 T
(el can) 505.87 123 T
-0.06 (be thought of as an interf) 72 109 P
-0.06 (ace to the parser) 191.91 109 P
-0.06 (. It pro) 269.39 109 P
-0.06 (vides information about the syntactic structure of) 301.42 109 P
(a program and its namespace and is al) 72 95 T
(w) 254.17 95 T
(ays a) 262.72 95 T
(v) 286.8 95 T
(ailable for canonical sources. The second le) 292.5 95 T
(v) 501.8 95 T
(el pro-) 507.62 95 T
(vides information about the deeper semantic structure of the program, computed by complete) 72 81 T
(compilation.) 72 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 18
%%Page: "7" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(7) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(r) 72 712 T
(egister) 77.11 712 T
(-dylan-component) 110.65 712 T
2 F
(e) 206.99 712 T
(xecution-conte) 212.08 712 T
(xt) 282.48 712 T
(component) 294.14 712 T
(compilation-conte) 349.8 712 T
(xt) 436.88 712 T
3 F
(\336) 448.55 712 T
0 F
( \050\051) 460.39 712 T
([Function]) 489.34 712 T
(Declares that) 90 685 T
2 F
(compilation-conte) 155.98 685 T
(xt) 243.06 685 T
0 F
( describes the runtime component) 251.72 685 T
2 F
(component) 416.7 685 T
0 F
(, and re) 469.36 685 T
(gisters) 504.83 685 T
(the rele) 90 671 T
(v) 125.35 671 T
(ant deri) 131.05 671 T
(v) 167.08 671 T
(ed information in the) 172.9 671 T
2 F
(e) 276.89 671 T
(xecution-conte) 281.98 671 T
(xt) 352.38 671 T
0 F
(.) 361.04 671 T
1 F
-0.31 (Usage note:) 126 649 P
0 F
-0.31 (The project manager is e) 188.02 649 P
-0.31 (xpected to call this function when the) 305.22 649 P
(user e) 126 635 T
(xplicitly requests that some some pre) 154.14 635 T
(viously opened project be "con-) 332.16 635 T
(nected" to the runtime.  The project manager w) 126 621 T
(ould interact with the runt-) 352.39 621 T
(ime manager to create a tethered process containing the project\325) 126 607 T
(s) 432.25 607 T
-0.24 (component, and then call this function to declare the correspondence to the) 126 593 P
(compiler in order to enable interacti) 126 579 T
(v) 298 579 T
(e e) 303.82 579 T
(x) 317.29 579 T
(ecution.) 323.11 579 T
(Signals) 90 552 T
1 F
(<component-context-mismatch-err) 128.34 552 T
(or>) 306.91 552 T
0 F
( if the compilation conte) 325.08 552 T
(xt doesn\325) 442.22 552 T
(t corre-) 486.34 552 T
(spond to the component \050e.g. if the component w) 90 538 T
(as not b) 325.19 538 T
(uilt from this v) 362.28 538 T
(ersion of the compila-) 433.78 538 T
(tion conte) 90 524 T
(xt\051. This error is continuable, and if continued the compiler may assume that the) 137.48 524 T
(runtime component is accurately described by) 90 510 T
2 F
(compilation-conte) 313.96 510 T
(xt) 401.04 510 T
0 F
(.  This assumption \050if) 409.7 510 T
-0.13 (wrong\051 may result in subsequent runtime crashes or other une) 90 496 P
-0.13 (xpected beha) 384.93 496 P
-0.13 (vior) 447.53 496 P
-0.13 (, so continuing) 466.39 496 P
(should only be done with user consent.) 90 482 T
1 F
(open-component-compilation-context) 72 449 T
2 F
(pr) 266.32 449 T
(oject) 276.44 449 T
(e) 302.77 449 T
(xecution-conte) 307.86 449 T
(xt) 378.26 449 T
(component) 389.93 449 T
0 F
(#key) 171 434 T
2 F
(database-location) 197.33 434 T
(interface-location) 286.99 434 T
0 F
([Function]) 489.34 434 T
3 F
(\336) 171 419 T
2 F
(compilation-conte) 185.84 419 T
(xt) 272.93 419 T
0 F
( or) 281.59 419 T
1 F
(#f) 297.59 419 T
0 F
([Function]) 489.34 419 T
(This function is equi) 90 392 T
(v) 188.7 392 T
(alent to calling) 194.4 392 T
1 F
(open-compilation-context) 268.73 392 T
0 F
( follo) 399.38 392 T
(wed by) 424.75 392 T
1 F
(r) 462.74 392 T
(egister) 467.86 392 T
(-dylan-) 501.4 392 T
(component) 90 378 T
0 F
(, e) 146.66 378 T
(xcept it returns) 157.81 378 T
1 F
(#f) 232.8 378 T
0 F
( rather than signalling) 242.8 378 T
1 F
(<component-context-mismatch-) 350.78 378 T
-0.08 (err) 90 364 P
-0.08 (or>) 105.77 364 P
0 F
-0.08 (. It can be signi\336cantly more ef) 123.94 364 P
-0.08 (\336cient in case of a mismatch, because it doesn't need to) 272.78 364 P
(fully load and initialize a compilation conte) 90 350 T
(xt that's going to be incompatible an) 299.14 350 T
(yw) 473.11 350 T
(ay) 487.66 350 T
(.) 498.2 350 T
1 F
-0.06 (Usage note:) 126 328 P
0 F
-0.06 ( The intent is that this function is used when a user requests to) 185.59 328 P
-0.35 (\322deb) 126 314 P
-0.35 (ug a process\323 without a priori declaring what's in it.  I.e. it will be used) 148.42 314 P
-0.44 (in the case of \322retethering\323 to an e) 126 300 P
-0.44 (xisting process. The project manager will) 287.01 300 P
-0.41 (presumably ask the runtime manager for the list of loaded components, and) 126 286 P
-0.37 (then use some re) 126 272 P
-0.37 (gistry) 205.04 272 P
-0.37 (, or interact with the user) 231.6 272 P
-0.37 (, to try to \336nd the project for) 349.27 272 P
(each such component. If a project is found, the project manager w) 126 258 T
(ould) 442.8 258 T
-0.46 (c) 126 244 P
-0.46 (ycle through all the compiler databases associated with the project, calling) 131.15 244 P
(this function until it \336nds a database that matches the runtime component.) 126 230 T
1 F
(<component-context-mismatch-err) 72 197 T
(or>) 250.57 197 T
0 F
([Class]) 506 197 T
(Error signalled when a compilation conte) 90 170 T
(xt for a component doesn\325) 288.12 170 T
(t match the actual compo-) 413.88 170 T
(nent, e.g. the component w) 90 156 T
(as created from a dif) 219.53 156 T
(ferent set of sources or incompatible v) 317.86 156 T
(ersions) 501.64 156 T
(of used libraries or incompatible compiler settings. Subclass of) 90 142 T
1 F
(<err) 395.3 142 T
(or>) 417.91 142 T
0 F
(.) 436.08 142 T
1 F
(component-context-mismatch-err) 72 109 T
(or) 243.73 109 T
(-context) 254.62 109 T
2 F
(component-conte) 298.93 109 T
(xt-mismatc) 381.34 109 T
(h-err) 433.81 109 T
(or) 457.93 109 T
3 F
(\336) 171 94 T
2 F
(compilation-conte) 185.84 94 T
(xt) 272.93 94 T
0 F
([Function]) 489.34 94 T
(Returns the mismatched compilation conte) 90 67 T
(xt.) 295.14 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 19
%%Page: "6" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(6) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(sa) 72 712 T
(v) 82.37 712 T
(e-compilation-context) 88.25 712 T
2 F
(compilation-conte) 202.56 712 T
(xt) 289.64 712 T
3 F
(\336) 301.31 712 T
0 F
( \050\051) 313.15 712 T
([Function]) 489.34 712 T
(Updates the disk database associated with the compilation conte) 90 686 T
(xt. In a DOSS implementa-) 397.78 686 T
(tion, this will actually write a ne) 90 672 T
(w \336le. W) 244.69 672 T
(ith a persistent database, it might \337ush some caches) 288.54 672 T
(b) 90 658 T
(ut w) 95.76 658 T
(ould otherwise be a noop.) 116.64 658 T
1 F
(STATUS NOTE) 72 632 T
0 F
(: This function is currently not implemented.) 155.69 632 T
1 F
(close-compilation-context) 72 600 T
2 F
(compilation-conte) 205.64 600 T
(xt) 292.73 600 T
3 F
(\336) 304.39 600 T
0 F
( \050\051) 316.24 600 T
([Function]) 489.34 600 T
-0.11 (This function remo) 90 574 P
-0.11 (v) 181.6 574 P
-0.11 (es the connection between the compilation conte) 187.42 574 P
-0.11 (xt and the disk database.) 419.89 574 P
(The) 90 560 T
2 F
(compilation-conte) 111.66 560 T
(xt) 198.74 560 T
0 F
( should not be used once it\325) 207.41 560 T
(s closed \050it will be reinitialized to be an) 338.74 560 T
-0.31 (empty memory-only conte) 90 546 P
-0.31 (xt\051. The database will be left in a consistent state, b) 216.53 546 P
-0.31 (ut it may or may) 459.2 546 P
(not be up-to-date \050in a DOSS implementation it probably w) 90 532 T
(on\325) 375.53 532 T
(t, in a persistent database, it) 391.31 532 T
-0.07 (probably will\051. It is the caller\325) 90 518 P
-0.07 (s responsibility to call) 232.98 518 P
1 F
-0.07 (sa) 341.38 518 P
-0.07 (v) 351.75 518 P
-0.07 (e-compilation-context) 357.63 518 P
0 F
-0.07 ( \336rst to ensure) 468.94 518 P
(predictable beha) 90 504 T
(vior) 168.73 504 T
(.) 187.4 504 T
1 16 Q
(4.  Interacti) 72 463.33 T
(v) 151.38 463.33 T
(e Execution Interface) 159.22 463.33 T
1 12 Q
(STATUS NOTE) 72 436 T
0 F
(: Nothing in this section is implemented.) 155.69 436 T
1 F
(establish-interacti) 72 404 T
(v) 163.87 404 T
(e-execution-context) 169.75 404 T
2 F
(tether) 272.05 404 T
3 F
(\336) 303.05 404 T
2 F
(e) 317.89 404 T
(xecution-conte) 322.98 404 T
(xt) 393.38 404 T
0 F
([Function]) 489.34 404 T
(This function establishes a conte) 90 378 T
(xt for storing deri) 246.47 378 T
(v) 330.49 378 T
(ed information about a tethered process.) 336.31 378 T
(The initial state of the) 90 364 T
2 F
(e) 198.32 364 T
(xecution-conte) 203.41 364 T
(xt) 273.82 364 T
0 F
( is that it represents a process which contains no) 282.48 364 T
(kno) 90 350 T
(wn Dylan libraries - an) 107.7 350 T
(y components in the process will be treated as foreign DLL's.) 218.16 350 T
-0.19 (Signals) 90 324 P
1 F
-0.19 (<pr) 128.15 324 P
-0.19 (ocess-modi\336ed-err) 146.77 324 P
-0.19 (or>) 241.2 324 P
0 F
-0.19 ( if the process has had an) 259.37 324 P
-0.19 (y interacti) 378.68 324 P
-0.19 (v) 426.51 324 P
-0.19 (e e) 432.33 324 P
-0.19 (x) 445.62 324 P
-0.19 (ecution done on it) 451.44 324 P
(already) 90 310 T
(.  This error is continuable, and if continued the compiler will assume that no \322out of) 124.54 310 T
(language\323 changes were made to the runtime.  This assumption \050if wrong\051 may result in sub-) 90 296 T
-0.43 (sequent runtime crashes or other une) 90 282 P
-0.43 (xpected beha) 263.96 282 P
-0.43 (vior) 326.26 282 P
-0.43 (, so continuing should only be done with) 345.11 282 P
(user consent.) 90 268 T
1 F
(<pr) 72 236 T
(ocess-modi\336ed-err) 90.62 236 T
(or>) 185.05 236 T
0 F
([Class]) 506 236 T
(Error signalled when a runtime process is found to ha) 90 210 T
(v) 346.72 210 T
(e been modi\336ed by interacti) 352.54 210 T
(v) 486.22 210 T
(e e) 492.04 210 T
(x) 505.51 210 T
(ecu-) 511.33 210 T
(tion \050including possible \322out of language\323 changes\051 in w) 90 196 T
(ays unkno) 361.18 196 T
(wn in the current conte) 409.87 196 T
(xt.) 520.33 196 T
(Subclass of) 90 182 T
1 F
(<err) 148 182 T
(or>) 170.6 182 T
0 F
(.) 188.77 182 T
1 F
(pr) 72 150 T
(ocess-modi\336ed-err) 83.78 150 T
(or) 178.21 150 T
(-tether) 189.1 150 T
2 F
(pr) 226.74 150 T
(ocess-modi\336ed-err) 236.87 150 T
(or) 326.3 150 T
3 F
(\336) 339.97 150 T
2 F
(tether) 354.82 150 T
0 F
([Function]) 489.34 150 T
(Returns the tether to the process in which the condition w) 90 124 T
(as detected.) 366.52 124 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 20
%%Page: "5" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(5) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(<compiler) 72 712 T
(-sour) 123.72 712 T
(ce-r) 150.17 712 T
(ecord-sequence>) 169.93 712 T
0 F
([Type]) 507.35 712 T
(An immutable sequence of source records. This is the type of the sequence returned by) 90 684.44 T
1 F
(com-) 509.9 684.44 T
-0.18 (pilation-context-sour) 90 670.44 P
-0.18 (ces) 197.11 670.44 P
0 F
-0.18 (. It is e) 212.44 670.44 P
-0.18 (xported so that clients of that function can use declarations to) 244.38 670.44 P
(optimize sequence operations on its return v) 90 656.44 T
(alue.) 301.67 656.44 T
1 F
(compilation-context-sour) 72 622.88 T
(ces) 200.44 622.88 T
2 F
( compilation-conte) 215.76 622.88 T
(xt) 305.84 622.88 T
3 F
(\336) 317.51 622.88 T
2 F
(sour) 332.35 622.88 T
(ces) 353.24 622.88 T
0 F
([Function]) 489.34 622.88 T
(Returns the sources re\337ected in) 90 595.31 T
2 F
(compilation-conte) 243.64 595.31 T
(xt) 330.72 595.31 T
0 F
(, as a) 339.38 595.31 T
1 F
(<compiler) 366.71 595.31 T
(-sour) 418.43 595.31 T
(ce-r) 444.88 595.31 T
(ecord-) 464.64 595.31 T
(sequence>) 90 581.31 T
0 F
(.) 142.84 581.31 T
1 F
(b) 72 547.75 T
(uild-component) 78.43 547.75 T
2 F
( compilation-conte) 159.11 547.75 T
(xt ima) 249.19 547.75 T
(g) 278.74 547.75 T
(e-location) 284.62 547.75 T
0 F
(#k) 171 532.19 T
(e) 182.88 532.19 T
(y) 188.03 532.19 T
2 F
(component-type startup-function) 197.03 532.19 T
(dylan-interface-location) 198 516.62 T
(native-interface-location) 317.65 516.62 T
3 F
(\336) 439.97 516.62 T
0 F
( \050\051) 451.81 516.62 T
([Function]) 489.34 516.62 T
(Creates an image \336le re\337ecting the sequence of sources in) 90 489.06 T
2 F
(compilation-conte) 371.27 489.06 T
(xt) 458.35 489.06 T
0 F
(.) 467.02 489.06 T
2 F
(Component-) 473.02 489.06 T
-0.13 (type) 90 475.06 P
0 F
-0.13 ( should be one of) 109.99 475.06 P
1 F
-0.13 (#"executable") 194.98 475.06 P
0 F
-0.13 (, requesting an e) 268.29 475.06 P
-0.13 (x) 346.35 475.06 P
-0.13 (ecutable \336le, or) 352.17 475.06 P
1 F
-0.13 (#"DLL") 429.09 475.06 P
0 F
-0.13 (, requesting a) 473.08 475.06 P
(nati) 90 461.06 T
(v) 107.7 461.06 T
(e dynamic link library) 113.52 461.06 T
(. If) 219.06 461.06 T
2 F
(startup-function) 236.05 461.06 T
0 F
( is supplied, it must be a v) 313.39 461.06 T
(ariable naming a) 438.43 461.06 T
-0.09 (function of no ar) 90 447.06 P
-0.09 (guments, which will be e) 169.83 447.06 P
-0.09 (x) 289.62 447.06 P
-0.09 (ecuted after all the Dylan library initializations are) 295.44 447.06 P
(done.) 90 433.06 T
(If) 90 405.5 T
2 F
(dylan-interface-location) 100.99 405.5 T
0 F
( is supplied and is not) 217.64 405.5 T
1 F
(#f) 324.98 405.5 T
0 F
(, then a Dylan interf) 334.98 405.5 T
(ace description \336le is) 431.17 405.5 T
(created for use in compiling other Dylan clients of this DLL.) 90 391.5 T
(If) 90 363.94 T
2 F
(native-interface-location) 100.99 363.94 T
0 F
( is supplied and is not) 220.31 363.94 T
1 F
(#f) 327.65 363.94 T
0 F
(, then a nati) 337.64 363.94 T
(v) 393.34 363.94 T
(e interf) 399.16 363.94 T
(ace description \336le is) 433.36 363.94 T
(created for use in compiling non-Dylan clients of this DLL.) 90 349.94 T
1 F
(Issue:) 90 322.38 T
0 F
( Need API from the FFI to tell us what to put in the nati) 120 322.38 T
(v) 387.02 322.38 T
(e interf) 392.84 322.38 T
(ace \336le \050i.e. what to) 427.04 322.38 T
(e) 90 308.38 T
(xport and ho) 95.15 308.38 T
(w\051.) 155.51 308.38 T
(If) 90 280.81 T
2 F
(dylan-interface-location) 100.99 280.81 T
0 F
(,) 217.64 280.81 T
2 F
(native-interface-location) 223.64 280.81 T
0 F
( or) 342.96 280.81 T
2 F
(ima) 358.96 280.81 T
(g) 376.84 280.81 T
(e-location) 382.72 280.81 T
0 F
( indicate an e) 431.38 280.81 T
(xisting) 494.84 280.81 T
(\336le, that \336le will be replaced with the ne) 90 266.81 T
(w \336le.) 283.34 266.81 T
1 F
(Issue:) 72 239.25 T
0 F
( W) 102 239.25 T
(e need to pro) 115.37 239.25 T
(vide an interf) 177.5 239.25 T
(ace to \322batch compilation\323, i.e. the compilation mode which) 241.37 239.25 T
(doesn\325) 72 225.25 T
(t use the database and produces components directly from sources. Or maybe for Kansas,) 103.78 225.25 T
(incremental tight compilation will be good enough?) 72 211.25 T
1 F
-0.18 (STATUS NOTE) 72 183.69 P
0 F
-0.18 (: This function is currently not implemented. T) 155.51 183.69 P
-0.18 (o b) 378.61 183.69 P
-0.18 (uild a component, you ha) 393.18 183.69 P
-0.18 (v) 513.88 183.69 P
-0.18 (e to) 519.7 183.69 P
(manually in) 72 169.69 T
(v) 128.52 169.69 T
(ok) 134.28 169.69 T
(e the) 146.16 169.69 T
4 F
(Makefile) 172.15 169.69 T
0 F
( \050or) 229.75 169.69 T
4 F
(Makescript) 249.74 169.69 T
0 F
(\051 produced by compilation.) 321.74 169.69 T
1 F
(component-interface-v) 72 136.12 T
(ersion) 187.85 136.12 T
2 F
( interface-location) 219.18 136.12 T
3 F
(\336) 311.17 136.12 T
2 F
(ver) 326.02 136.12 T
(sion) 341.22 136.12 T
(min-compatible-ver) 364.22 136.12 T
(sion) 458.75 136.12 T
0 F
([Function]) 489.34 136.12 T
(Returns the v) 90 108.56 T
(ersion information for the component described in the interf) 153.82 108.56 T
(ace description \336le) 441.65 108.56 T
2 F
(interface-location) 90 94.56 T
0 F
(.) 175.99 94.56 T
1 F
(STATUS NOTE) 72 67 T
0 F
(: This function is currently not implemented.) 155.69 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 21
%%Page: "4" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(4) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
(compilation-context-database-location) 72 712 T
2 F
(compilation-conte) 270.98 712 T
(xt) 358.07 712 T
3 F
(\336) 369.73 712 T
2 F
(database-location) 384.58 712 T
0 F
([Function]) 489.34 712 T
(Returns the locator for the directory of the compiler database \336les, or) 90 684.5 T
1 F
(#f) 424.93 684.5 T
0 F
( if the compilation) 434.93 684.5 T
(conte) 90 670.5 T
(xt isn\325) 115.81 670.5 T
(t associated with a disk database.) 145.93 670.5 T
1 F
(establish-compilation-context-database) 72 637 T
2 F
( compilation-conte) 271.99 637 T
(xt database-location) 362.08 637 T
3 F
(\336) 463.4 637 T
0 F
( \050\051) 475.25 637 T
([Function]) 489.34 637 T
-0.12 (Establishes the location for the compiler database \336les.) 90 609.5 P
2 F
-0.12 (Compilation-conte) 356.04 609.5 P
-0.12 (xt) 445.8 609.5 P
0 F
-0.12 ( must not already) 454.47 609.5 P
(be associated with a disk database. An) 90 595.5 T
(y compiler database \336les already in) 274.12 595.5 T
2 F
(database-location) 446.75 595.5 T
0 F
(will be deleted, and their contents ignored.) 90 581.5 T
1 F
(Usage note:) 126 559 T
0 F
( This function w) 185.65 559 T
(ould be used the \336rst time a user \322sa) 264.53 559 T
(v) 438.26 559 T
(es\323 a) 444.08 559 T
(ne) 126 545 T
(wly created project.) 137.03 545 T
1 F
(STATUS NOTE) 72 517.5 T
0 F
(: Not implemented.) 155.69 517.5 T
1 F
(parse-pr) 72 484 T
(oject-sour) 115.78 484 T
(ces) 166.87 484 T
2 F
( compilation-conte) 182.2 484 T
(xt sour) 272.28 484 T
(ces) 304.84 484 T
3 F
(\336) 323.16 484 T
0 F
( \050\051) 335 484 T
([Function]) 489.34 484 T
(Establishes a sequence of source records as the current sources re\337ected in the compilation) 90 456.5 T
(conte) 90 442.5 T
(xt \050making them the compiler\325) 115.81 442.5 T
(s \322canonical sources\323 for the conte) 261.8 442.5 T
(xt\051, performing an) 428.57 442.5 T
(y) 516.04 442.5 T
(parsing indicated by the dif) 90 428.5 T
(ferences between these sources and the sources pre) 221.02 428.5 T
(viously) 465.62 428.5 T
(re\337ected in the compilation conte) 90 414.5 T
(xt.) 250.46 414.5 T
2 F
(Sour) 90 387 T
(ces) 112.22 387 T
0 F
( is a sequence of source records constituting the source of the project\325) 127.55 387 T
(s library) 461.47 387 T
(.) 500.35 387 T
1 F
(Usage note:) 126 364.5 T
0 F
( T) 185.65 364.5 T
(o ef) 195.02 364.5 T
(fect a \322complete\323 recompilation, you can call) 213.05 364.5 T
1 F
(parse-) 433.66 364.5 T
-0.37 (pr) 126 350.5 P
-0.37 (oject-sour) 137.78 350.5 P
-0.37 (ces) 188.88 350.5 P
0 F
-0.37 ( with an empty source sequence, and then call it ag) 204.2 350.5 P
-0.37 (ain with) 444.74 350.5 P
(the full sources. The \336rst call will clear out the database, making the sec-) 126 336.5 T
(ond call do a complete recompile.) 126 322.5 T
1 F
(compile-pr) 72 289 T
(oject-de\336nitions) 127.78 289 T
2 F
( compilation-conte) 209.77 289 T
(xt) 299.86 289 T
0 F
(#k) 311.52 289 T
(e) 323.4 289 T
(y) 328.55 289 T
2 F
(for) 337.55 289 T
(ce?) 351.11 289 T
3 F
(\336) 370.76 289 T
0 F
( \050\051) 382.61 289 T
([Function]) 489.34 289 T
-0.19 (Mak) 90 261.5 P
-0.19 (es sure the project compilation products are fully up-to-date, i.e. mak) 111.88 261.5 P
-0.19 (e the compiled code) 441.45 261.5 P
(database correspond to the de\336nitions database, performing an) 90 247.5 T
(y compilations indicated by) 389.76 247.5 T
(changes in the parsed de\336nitions.) 90 233.5 T
(If) 90 206 T
2 F
(for) 100.99 206 T
(ce?) 114.55 206 T
0 F
( is true, then does a full recompilation as if e) 131.21 206 T
(v) 344.54 206 T
(erything had changed.) 350.36 206 T
1 F
(STATUS NOTE 1) 72 178.5 T
0 F
(: Currently this is not incremental. That is it does nothing if there were no) 164.69 178.5 T
(changes since the last compilation, otherwise it does a full recompile from de\336nitions.) 72 164.5 T
1 F
(STATUS NOTE 2) 72 137 T
0 F
(: This function currently does some \322b) 164.69 137 T
(uild\323-lik) 349.09 137 T
(e actions, speci\336cally it writes) 389.64 137 T
(out a) 72 123 T
4 F
(Makefile) 98.66 123 T
0 F
(. T) 156.26 123 T
(o support this, it accept a) 168.64 123 T
2 F
(b) 291.62 123 T
(uild-settings) 297.38 123 T
0 F
( k) 356.72 123 T
(e) 365.6 123 T
(yw) 370.75 123 T
(ord ar) 385.3 123 T
(gument. This ar) 413.4 123 T
(gument) 488.84 123 T
(should be an alternating sequence of k) 72 109 T
(e) 255.84 109 T
(yw) 260.99 109 T
(ords and v) 275.53 109 T
(alues. The accepted k) 325.22 109 T
(e) 428.4 109 T
(yw) 433.55 109 T
(ords are:) 448.09 109 T
1 F
(c-sour) 492.74 109 T
(ce-) 524.52 109 T
-0.46 (\336les:) 72 95 P
0 F
-0.46 (, whose v) 96 95 P
-0.46 (alue should be a sequence of C \336le locations;) 140.45 95 P
1 F
-0.46 (c-object-\336les:) 355.96 95 P
0 F
-0.46 (, whose v) 424.6 95 P
-0.46 (alue should be) 469.05 95 P
(a sequence of object \336le locations; and) 72 81 T
1 F
(c-libraries:) 260.96 81 T
0 F
( whose v) 317.62 81 T
(alue should be a sequence of nati) 359.98 81 T
(v) 518.3 81 T
(e) 524.12 81 T
(library names. All these objects will be included in b) 72 67 T
(uilding the application.) 325.07 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 22
%%Page: "3" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(3) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(database-location) 90 712 T
0 F
( is the locator for the directory where the compiler can store its database) 176.66 712 T
-0.41 (\336les. If the database \336les already e) 90 698 P
-0.41 (xist, the) 253.01 698 P
-0.41 (y are loaded in, otherwise a ne) 290.43 698 P
-0.41 (w database is created.) 433.99 698 P
(If) 90 684 T
2 F
(database-location) 100.99 684 T
0 F
( is) 187.66 684 T
1 F
(#f) 201.66 684 T
0 F
( or unsupplied, an empty memory-only compilation conte) 211.66 684 T
(xt is cre-) 488.12 684 T
(ated.) 90 670 T
2 F
(interface-location) 90 644 T
0 F
( should only be speci\336ed if) 175.99 644 T
2 F
(database-location) 308.65 644 T
0 F
( is) 395.32 644 T
1 F
(#f) 409.32 644 T
0 F
( or unsupplied. If sup-) 419.32 644 T
(plied and not) 90 630 T
1 F
(#f) 155.66 630 T
0 F
(, it should be the locator for the \336le containing the interf) 165.66 630 T
(ace description for a) 434.84 630 T
(project, as created by) 90 616 T
1 F
(b) 194.96 616 T
(uild-component) 201.4 616 T
0 F
(. The \336le is used to initialize the compilation conte) 282.07 616 T
(xt.) 525.22 616 T
-0.3 (There can be at most one compilation conte) 90 590 P
-0.3 (xt based on a gi) 297.33 590 P
-0.3 (v) 371.14 590 P
-0.3 (en database at an) 376.96 590 P
-0.3 (y one time, i.e. it) 457.51 590 P
(is an error to call this function twice on the same database without calling) 90 576 T
1 F
(close-compilation-) 446.62 576 T
(context) 90 562 T
0 F
( in between.) 127.32 562 T
(In a DOSS-based implementation, this function will probably read one or more DOSS \336les) 90 536 T
(into memory) 90 522 T
(. Otherwise, this function may simply initialize a connection to a random-access) 150.89 522 T
(database.) 90 508 T
1 F
(STATUS NOTE) 72 482 T
0 F
(: Currently) 155.69 482 T
2 F
(database-location) 211.02 482 T
0 F
( is not used and) 297.68 482 T
2 F
(interface-location) 375.35 482 T
0 F
( is not sup-) 461.34 482 T
(ported.) 72 468 T
1 F
(compilation-context-pr) 72 436 T
(oject) 189.77 436 T
2 F
(compilation-conte) 217.42 436 T
(xt) 304.5 436 T
3 F
(\336) 316.16 436 T
2 F
(pr) 331.01 436 T
(oject) 341.14 436 T
0 F
([Function]) 489.34 436 T
(Returns the project associated with the compilation conte) 90 410 T
(xt.) 364.79 410 T
1 F
(compilation-context-compiler) 72 378 T
(-settings-setter) 222.86 378 T
2 F
( compiler) 298.16 378 T
(-settings) 343.58 378 T
(compilation-conte) 387.25 378 T
(xt) 474.34 378 T
0 F
([Function]) 489.34 378 T
-0.01 (Sets the compiler settings for the compilation conte) 90 352 P
-0.01 (xt. This may result in some recompilation) 336.74 352 P
(if the ne) 90 338 T
(w settings are incompatible with the pre) 129.02 338 T
(vious settings \050it is not speci\336ed whether the) 320.7 338 T
(compilation happens immediately or at some later time\051.) 90 324 T
2 F
(compiler) 90 298 T
(-settings) 132.42 298 T
0 F
( is a sequence of alternating k) 173.09 298 T
(e) 315.6 298 T
(yw) 320.75 298 T
(ords and v) 335.29 298 T
(alues indicating the settings of) 384.98 298 T
(compiler parameters. Initially the only supported parameters are) 90 284 T
1 F
(pr) 400.93 284 T
(ocessor:) 412.72 284 T
0 F
( whose v) 454.03 284 T
(alue) 496.39 284 T
-0.39 (should be a symbol indicating the tar) 90 270 P
-0.39 (get processor \050e.g.) 264.75 270 P
1 F
-0.39 (#"alpha") 354.54 270 P
0 F
-0.39 (\051,) 402.54 270 P
1 F
-0.39 (operating-system:) 412.15 270 P
0 F
-0.39 ( whose) 504.13 270 P
-0.08 (v) 90 256 P
-0.08 (alue should be a symbol indicating the tar) 95.7 256 P
-0.08 (get operating system \050e.g.) 295.26 256 P
1 F
-0.08 (#"osf3") 421.6 256 P
0 F
-0.08 (\051,) 461.58 256 P
1 F
-0.08 (mode:) 471.5 256 P
0 F
-0.08 ( whose) 503.49 256 P
-0.26 (v) 90 242 P
-0.26 (alue should be one of) 95.7 242 P
1 F
-0.26 (#"loose") 200.04 242 P
0 F
-0.26 ( or) 244.69 242 P
1 F
-0.26 (#"tight") 260.17 242 P
0 F
-0.26 ( or) 303.49 242 P
1 F
-0.26 (#"default-open") 318.96 242 P
0 F
-0.26 (, and) 402.95 242 P
1 F
-0.26 (b) 428.75 242 P
-0.26 (uild-location:) 435.19 242 P
0 F
-0.26 ( whose) 503.86 242 P
-0.17 (v) 90 228 P
-0.17 (alue should be the locator of a directory where the compiler may put its output \336les \050i.e. \336les) 95.7 228 P
(to input to the link) 90 214 T
(er) 178.56 214 T
(, etc.\051.) 187.4 214 T
1 F
(STATUS NOTE:) 72 188 T
(mode:) 162.68 188 T
(#"loose") 197.68 188 T
0 F
( is currently treated the same as) 242.33 188 T
1 F
(mode:) 396.62 188 T
(#"tight") 431.62 188 T
0 F
(.) 474.94 188 T
1 F
(compilation-context-compiler) 72 156 T
(-settings) 222.86 156 T
2 F
(compilation-conte) 268.52 156 T
(xt) 355.61 156 T
3 F
(\336) 367.27 156 T
2 F
(compiler) 382.12 156 T
(-settings) 424.54 156 T
0 F
([Function]) 489.34 156 T
(Returns the compiler settings of the compilation conte) 90 130 T
(xt, with all def) 350.14 130 T
(aults \336lled in.) 420.01 130 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 23
%%Page: "2" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(2) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
-0.17 (pr) 72 712 P
-0.17 (oject mana) 82.13 712 P
-0.17 (g) 134.82 712 P
-0.17 (er) 140.71 712 P
0 F
-0.17 ( - the part of the de) 150.7 712 P
-0.17 (v) 240.66 712 P
-0.17 (elopment en) 246.48 712 P
-0.17 (vironment char) 304.81 712 P
-0.17 (ged with managing projects.  The) 377.41 712 P
(project manager is a client of the compilation system, i.e. it is the project manager which is) 72 698 T
(e) 72 684 T
(xpected to in) 77.15 684 T
(v) 138.66 684 T
(ok) 144.42 684 T
(e man) 156.3 684 T
(y of the functions in this API.) 185.11 684 T
2 F
-0.2 (compiler database) 72 657.77 P
0 F
-0.2 ( - a \336le or set of \336les containing information deri) 160.79 657.77 P
-0.2 (v) 392.42 657.77 P
-0.2 (ed from compiling a project.) 398.24 657.77 P
(A project can ha) 72 643.77 T
(v) 150.73 643.77 T
(e multiple compiler databases, corresponding to dif) 156.55 643.77 T
(ferent tar) 402.55 643.77 T
(get machines, com-) 445.98 643.77 T
(piler settings, or e) 72 629.77 T
(v) 157.69 629.77 T
(en dif) 163.51 629.77 T
(ferent v) 190.87 629.77 T
(ersions of the project sources.  The project manager is responsi-) 227.68 629.77 T
(ble for managing the collection of project databases and telling the compilation system which) 72 615.77 T
(database to use.) 72 601.77 T
2 F
(compilation conte) 72 575.54 T
(xt) 158.09 575.54 T
0 F
( - the in-memory representation of an open compiler database.  Consists of a) 166.75 575.54 T
(connection to a disk database, a reference to the o) 72 561.54 T
(wning project, and a collection of caches for) 310.3 561.54 T
(pre-loaded/pre-computed information.) 72 547.54 T
2 F
-0.25 (canonical sour) 72 521.31 P
-0.25 (ces) 142.97 521.31 P
0 F
-0.25 ( - only meaningful in reference to a particular compiler database or compilation) 158.3 521.31 P
(conte) 72 507.31 T
(xt.  The set of sources from which the information in the database w) 97.81 507.31 T
(as deri) 424.97 507.31 T
(v) 456.32 507.31 T
(ed.) 462.14 507.31 T
2 F
-0.48 (runtime mana) 72 481.08 P
-0.48 (g) 138.4 481.08 P
-0.48 (er) 144.28 481.08 P
0 F
-0.48 ( - the part of the de) 154.27 481.08 P
-0.48 (v) 242.41 481.08 P
-0.48 (elopment en) 248.23 481.08 P
-0.48 (vironment char) 306.26 481.08 P
-0.48 (ged with controlling the runtime.) 378.55 481.08 P
-0.35 (The compilation system is a client of the runtime manager) 72 467.08 P
-0.35 (, i.e. the compilation system will in) 347.98 467.08 P
-0.35 (v) 514.39 467.08 P
-0.35 (ok) 520.15 467.08 P
-0.35 (e) 532.03 467.08 P
(runtime manager functions as needed to ef) 72 453.08 T
(fect interacti) 275.65 453.08 T
(v) 335.66 453.08 T
(e e) 341.48 453.08 T
(x) 354.96 453.08 T
(ecution.) 360.78 453.08 T
2 F
(tether) 72 426.85 T
0 F
( - a runtime manager object representing a deb) 100 426.85 T
(ugg) 323.03 426.85 T
(able process on the runtime. Sometimes) 340.97 426.85 T
(referred to as an \322access-path\323, b) 72 412.85 T
(ut I\325m staying a) 230.35 412.85 T
(w) 305.83 412.85 T
(ay from that term because it seems to be used) 314.38 412.85 T
(dif) 72 398.85 T
(ferently in dif) 85.03 398.85 T
(ferent documents.) 150.72 398.85 T
2 F
(runtime component) 72 372.62 T
0 F
( - a runtime manager object representing a component loaded into a tethered) 164.99 372.62 T
(process.) 72 358.62 T
2 F
(inter) 72 332.39 T
(actor) 94.49 332.39 T
0 F
( - a mechanism by which a user can type in source records for interacti) 119.82 332.39 T
(v) 458.76 332.39 T
(e e) 464.58 332.39 T
(x) 478.06 332.39 T
(ecution) 483.88 332.39 T
(without modifying project sources.) 72 318.39 T
2 F
(inter) 72 292.15 T
(active e) 94.49 292.15 T
(xecution) 131.23 292.15 T
0 F
( - a mechanism for e) 171.89 292.15 T
(xploratory programming by which the user can e) 270.01 292.15 T
(x) 504.12 292.15 T
(ecute) 509.94 292.15 T
(Dylan forms in an e) 72 278.15 T
(xisting process. May allo) 167.14 278.15 T
(w \322out of language\323 operations such as addition of) 287.5 278.15 T
(ne) 72 264.15 T
(w v) 83.03 264.15 T
(ariables to e) 100.39 264.15 T
(xisting modules, rede\336nition of classes, constants, o) 158.2 264.15 T
(v) 407.68 264.15 T
(erriding sealing restric-) 413.5 264.15 T
(tions, etc.  F) 72 250.15 T
(orms to be e) 130.82 250.15 T
(x) 189.64 250.15 T
(ecuted can come from a project or from an interactor) 195.46 250.15 T
(.) 448.38 250.15 T
2 F
(e) 72 223.92 T
(xecution conte) 77.09 223.92 T
(xt) 146.5 223.92 T
0 F
( - the compiler) 155.16 223.92 T
(-deri) 225.24 223.92 T
(v) 247.6 223.92 T
(ed information about a process, such as the namespaces of) 253.42 223.92 T
(kno) 72 209.92 T
(wn runtime components,  installed de\336nitions, etc.  Initialized from the compilation conte) 89.7 209.92 T
(xts) 519.83 209.92 T
(of the preloaded runtime components and subsequently updated by interacti) 72 195.92 T
(v) 435.31 195.92 T
(e e) 441.13 195.92 T
(x) 454.61 195.92 T
(ecution.) 460.43 195.92 T
1 16 Q
(3.  Pr) 72 155.03 T
(oject Compilation Interface) 108.59 155.03 T
1 12 Q
(open-compilation-context) 72 121.46 T
2 F
(pr) 205.66 121.46 T
(oject) 215.78 121.46 T
0 F
(#k) 242.11 121.46 T
(e) 253.99 121.46 T
(y) 259.14 121.46 T
2 F
( database-location interface-location) 265.14 121.46 T
3 F
(\336) 198 107.23 T
2 F
(compilation-conte) 212.84 107.23 T
(xt) 299.93 107.23 T
0 F
([Function]) 489.34 107.23 T
(Establishes the connection between a project and its compiler database, and initializes a) 90 81 T
(project compilation conte) 90 67 T
(xt data structure used for compilation.) 212.47 67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 24
%%Page: "1" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 8 Q
0 X
0 0 0 1 0 0 0 K
(Compilation System Interf) 72 42.62 T
(ace) 157.26 42.62 T
(May 31, 1997) 283.67 42.62 T
(1) 536 42.62 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 24 Q
(Compilation System Interf) 162.13 704 T
(ace) 417.9 704 T
1 12 Q
(Gail Zacharias) 267.83 663.31 T
(V) 241.94 646.62 T
(ersion 12) 249.4 646.62 T
(,) 295.73 646.62 T
( May 31, 1997) 298.73 646.62 T
1 16 Q
(1.  Intr) 72 603.27 T
(oduction) 119.26 603.27 T
0 12 Q
-0.13 (The purpose of this document is to de\336ne the API to the compilation system for use by the rest of) 72 575.25 P
-0.11 (the de) 72 561.25 P
-0.11 (v) 100.58 561.25 P
-0.11 (elopment en) 106.4 561.25 P
-0.11 (vironment. The compilation system consists of subcomponents such as a com-) 164.8 561.25 P
(pilation dri) 72 547.25 T
(v) 124.7 547.25 T
(er) 130.52 547.25 T
(, parser) 139.37 547.25 T
(, compiler front and back ends, link) 174.2 547.25 T
(er) 344.72 547.25 T
(, and database management of incre-) 353.57 547.25 T
(mental compilation products, cross-library information and compiler) 72 533.25 T
(-deri) 401.39 533.25 T
(v) 423.74 533.25 T
(ed bro) 429.56 533.25 T
(wsing) 459.59 533.25 T
(information. The design and implementation of these subcomponents is internal to the compila-) 72 519.25 T
(tion system, with the interf) 72 505.25 T
(ace described here pro) 200.88 505.25 T
(viding the only access to them.) 308.32 505.25 T
(The compilation system pro) 72 478.56 T
(vides the follo) 206.15 478.56 T
(wing interf) 274.51 478.56 T
(ace modules, e) 327.38 478.56 T
(xported from the) 398.18 478.56 T
1 F
(dfmc-) 481.84 478.56 T
(br) 72 464.56 T
(o) 83.78 464.56 T
(wser) 89.66 464.56 T
(-support) 113.21 464.56 T
0 F
( library) 157.21 464.56 T
(, for use by other de) 191.42 464.56 T
(v) 287.1 464.56 T
(elopment en) 292.92 464.56 T
(vironment components:) 351.43 464.56 T
1 F
(dfmc-pr) 72 431.88 T
(oject-compilation) 113.77 431.88 T
0 F
([Module]) 494.68 431.88 T
(This module pro) 90 405.19 T
(vides the interf) 169.15 405.19 T
(ace to incremental and batch compilation of project sources.) 241.02 405.19 T
1 F
(dfmc-interacti) 72 372.5 T
(v) 145.19 372.5 T
(e-execution) 151.07 372.5 T
0 F
([Module]) 494.68 372.5 T
(This module pro) 90 345.81 T
(vides the interf) 169.15 345.81 T
(ace to interacti) 241.02 345.81 T
(v) 311.36 345.81 T
(e compilation and e) 317.18 345.81 T
(x) 411.32 345.81 T
(ecution.) 417.14 345.81 T
1 F
(dfmc-deri) 72 313.12 T
(v) 122.53 313.12 T
(ed-inf) 128.41 313.12 T
(ormation) 158.11 313.12 T
0 F
([Module]) 494.68 313.12 T
(This module pro) 90 286.44 T
(vides the interf) 169.15 286.44 T
(ace to compile-time information g) 241.02 286.44 T
(athered by the compiler for) 404.94 286.44 T
(the bene\336t of bro) 90 272.44 T
(wsers and deb) 172.02 272.44 T
(uggers.) 239.76 272.44 T
1 F
(STATUS NOTE) 72 245.75 T
0 F
(: The module) 155.69 245.75 T
1 F
(dfmc-interacti) 222.68 245.75 T
(v) 295.87 245.75 T
(e-execution) 301.75 245.75 T
0 F
( doesn\325) 359.74 245.75 T
(t e) 394.51 245.75 T
(xist yet.) 406 245.75 T
1 16 Q
(2.  T) 72 204.4 T
(erminology) 101.2 204.4 T
2 12 Q
-0.27 (sour) 72 176.38 P
-0.27 (ce r) 92.89 176.38 P
-0.27 (ecor) 110.51 176.38 P
-0.27 (d) 131.39 176.38 P
0 F
-0.27 ( - smallest unit of source suitable for compilation. Consists of a stream of characters) 137.39 176.38 P
(and a module name. Contains complete top-le) 72 162.38 T
(v) 292.01 162.38 T
(el forms \050i.e. top-le) 297.83 162.38 T
(v) 389.84 162.38 T
(el forms may not be split) 395.66 162.38 T
(across source records\051.) 72 148.38 T
2 F
(component) 72 121.69 T
0 F
( - a nati) 124.66 121.69 T
(v) 160.68 121.69 T
(e DLL or EXE \336le.) 166.5 121.69 T
2 F
(pr) 72 95 T
(oject) 82.13 95 T
0 F
( - a de) 105.46 95 T
(v) 134.81 95 T
(elopment en) 140.63 95 T
(vironment object representing a Dylan program under de) 199.14 95 T
(v) 471.78 95 T
(elopment. It) 477.6 95 T
(corresponds to a Dylan library) 72 81 T
(, b) 217.19 81 T
(ut it e) 228.95 81 T
(xists before the compiler is e) 256.1 81 T
(v) 394.12 81 T
(er in) 399.94 81 T
(v) 421.12 81 T
(ok) 426.88 81 T
(ed. It is used by the) 438.76 81 T
(compiler only to identify a library in interactions with the project manager) 72 67 T
(.) 428.29 67 T
52 642.62 54 654.62 R
V
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 25
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Descend
%%Pages: 25
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Times-Italic
%%+ Symbol
%%+ Courier
%%EOF
