Generic: add
==============================

Adds an element to a sequence.

Returns a sequence that contains _new-element_ and all the elements of
_source-sequence_. The _result-sequence_ may or may not be freshly allocated.
It may share structure with a preexisting sequence.

_source-sequence_ is not modified by this operation.

The _result-sequence_'s size is one greater than the size of
_source-sequence_. The generic function #add# doesn't specify where the new
element will be added, although individual methods may do so.

> define variable *numbers* = #(3, 4, 5)
> add (*numbers*, 1)
>   ⇒  #(1, 3, 4, 5) 
> *numbers*
>   ⇒  #(3, 4, 5)


Exported from:
------------------------------
- #Module common-dylan#
- #Module Dylan#


Modifiers:
------------------------------
open


Arguments:
------------------------------
source-sequence - An instance of #<sequence>#. 
new-element     - An instance of #<object>#. 


Values:
------------------------------
result-sequence - An instance of #<sequence>#. 



