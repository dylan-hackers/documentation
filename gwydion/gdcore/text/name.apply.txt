Function: apply
==============================

Calls _function_ and returns the values that _function_ returns. The
_arguments_ supply the arguments to _function_. All but the last of
_arguments_ are passed to _function_ individually. The last of _arguments_
must be a sequence. This sequence is not passed as a single argument to
_function_. Instead, its elements are taken individually as arguments to
_function_.

> apply(max, list(3, 1, 4, 1, 5, 9))
>   ⇒  9
> apply(min, 5, 7, list(3, 1, 4))
>   ⇒  1
> define constant make-string =
>        method (#rest init-args) => string :: <string>;
>          apply(make, <string>, init-args)
>        end;
> make-string(fill: 'a', size: 10)
>   ⇒  "aaaaaaaaaa"


Exported from:
------------------------------
- #Module common-dylan#
- #Module Dylan#


Arguments:
------------------------------
function        - An instance of #<function>#. 
#rest arguments - One or more instances of #<object>#. The last of these must
                  be an instance of #<sequence>#.


Values:
------------------------------
#rest more - Instances of #<object>#. 



