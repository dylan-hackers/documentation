Generic: add-new
==============================

Adds a new element to a sequence.

Adds _new-element_ to _source-sequence_ if it is not already an element of
_source-sequence_, as determined by the _test_ function. If _new-element_ is
already a member of _source-sequence_, then _source-sequence_ is returned
unmodified.

If an element is added, #add-new# operates just as #add# would.

The _test_ function may be non-commutative: it is always called with an
element from _source-sequence_ as its first argument and _new-element_ as its
second argument.

> add-new (#(3, 4, 5), 1)
>   ⇒  #(1, 3, 4, 5)
> add-new (#(3, 4, 5), 4)
>   ⇒  #(3, 4, 5)


Exported from:
------------------------------
- #Module common-dylan#
- #Module Dylan#


Modifiers:
------------------------------
open


Arguments:
------------------------------
source-sequence - An instance of #<sequence>#. 
new-element     - An instance of #<object>#. 
test:           - An instance of #<function>#. The default is #==#.


Values:
------------------------------
result-sequence - An instance of #<sequence>#. 



