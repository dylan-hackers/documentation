Generic: every?
==============================

Returns true if a predicate returns true when applied to all corresponding
elements of a set of collections.

Applies _function_ to groups of corresponding elements of _collection_ and
_more-collections_. If an application of _function_ returns false, then
#every?# returns #f. Otherwise _function_ returns a true value when applied to
every such group, and #every?# returns #t.

If all the collections are sequences, #every?# operates in natural order. In
all cases, #every?# stops on the first false value returned by _function_.

> every? (\>, #(1, 2, 3, 4), #(5, 4, 3, 2))
>  ⇒  #f
> every? (odd?, #(1, 3, 5, 7))
>  ⇒  #t


Exported from:
------------------------------
- #Module common-dylan#
- #Module Dylan#


Modifiers:
------------------------------
sealed


Arguments:
------------------------------
function - An instance of #<function>#. 
collection - An instance of #<collection>#. 
#rest more-collections - Instances of #<object>#. 


Values:
------------------------------
value - An instance of #<boolean>#. 



