Generic: copy-sequence
==============================

Creates a freshly allocated sequence containing the elements of _source_ between _start_ and _end_.

> define constant hamlet = #("to", "be", "or", "not", "to", "be")
> hamlet == copy-sequence (hamlet)
>  ⇒  #f
> copy-sequence (hamlet, start: 2, end: 4)
>  ⇒  #("or", "not")


Exported from:
------------------------------
- #Module common-dylan#
- #Module Dylan#


Modifiers:
------------------------------
open


Arguments:
------------------------------
source - An instance of #<sequence>#. 
start: - An instance of #<integer>#. The default is 0.
end:   - An instance of #<integer>#. The default is the size of _source_.


Values:
------------------------------
val - A freshly allocated instance of #<sequence>#. 



Methods: copy-sequence
==============================
copy-sequence - When applied to a #<range>#, #copy-sequence# returns another
                range, even though the #type-for-copy# of a range is the
                #<list># class.
