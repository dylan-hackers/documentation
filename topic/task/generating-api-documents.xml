<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//IBM//DTD DITA Task//EN" "../dtd/task.dtd">
<task id="task-generating-api-documents" xml:lang="en-us">
  <title>Automatically Generating Dylan API Document Templates</title>

  <taskbody>
    <context>
      <p>Topic-oriented API documentation can be generated automatically
      from reports produced by the compiler.</p>
    </context>

    <steps>
      <step>
	<cmd>Start the Open Dylan environment command line:</cmd>
	<choices>
	  <choice>From the operating system command prompt, run
	  <cmdname>console-environment</cmdname>,
	  <cmdname>console-compiler</cmdname>, or
	  <cmdname>minimal-console-compiler</cmdname>.</choice>

	  <choice>Or, start the Open Dylan IDE and choose
	  <menucascade> <uicontrol>Tools</uicontrol>
	  <uicontrol>Command Line...</uicontrol>
	  </menucascade>.</choice>
	</choices>
      </step>

      <step>
	<cmd>Open the library to be exported using the
        <synph><kwd>open</kwd> <var>library-name</var></synph>
        command.</cmd>

	<stepxmp>For example, <userinput><cmdname>open</cmdname>
	dood</userinput>.</stepxmp>
      </step>

      <step>
	<cmd>Export the interface-reference using the
	<synph><kwd>export</kwd> <kwd>interface-reference</kwd>
	<option>-format</option> <kwd>xml</kwd> <option>-file</option>
	/<var>path</var>/<var>library-name</var>.xml</synph>
	command.</cmd>
      </step>

      <step>
	<cmd>From the operating system command prompt, change to the
	directory containing the working copy for
	<filepath>documentation/topic/reference/lib</filepath> and
	execute <synph><kwd>perl</kwd> <kwd>refman.pl</kwd>
	/<var>path</var>/<var>library-name</var>.xml</synph>.</cmd>
      </step>
    </steps>

    <result>
      <p>This will produce:</p>

      <ol>
	<li>A library description template
	<filepath><varname>library-name</varname>.xml</filepath></li>

	<li>A <filepath><varname>library-name</varname></filepath>
	directory</li>

	<li>A
	<filepath><varname>library-name</varname>/<varname>module-name</varname>.xml</filepath>
	module description template for each exported module</li>

	<li>A <filepath><varname>library-name</varname>/<varname>module-name</varname></filepath> directory for each exported module</li>

	<li>A template file for each exported binding, with the
	filename determined using a name mangling scheme based on the
	one used internally by DFMC.</li>
      </ol>
    </result>
  </taskbody>
</task>
