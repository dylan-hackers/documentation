<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanGenericFunction PUBLIC "-//Gwydion//DTD DITA Dylan API Generic Function//EN" "../../../../dtd/dylanGenericFunction.dtd" []>
<dylanGenericFunction id="lib-io-format-format">
  <apiName>format</apiName>
  <shortdesc>Formats output according to a control string.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanGenericFunctionDetail>
    <dylanGenericFunctionDef>
      <dylanFunctionParam>
	<apiItemName>stream</apiItemName>
        <apiOperationClassifier href="../../common-dylan/streams-protocol/LstreamG.xml">&lt;stream&gt;</apiOperationClassifier>
	<apiDefNote>The stream to which formatted output should be
        sent.</apiDefNote>
      </dylanFunctionParam>
      
      <dylanFunctionParam>
	<apiItemName>control-string</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LstringG.xml">&lt;string&gt;</apiOperationClassifier>
	<apiDefNote>A string containing format directives.</apiDefNote>
      </dylanFunctionParam>
      
      <dylanFunctionRestParam>
	<apiItemName>args</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionRestParam>
    </dylanGenericFunctionDef>

    <apiDesc>
      <p>Sends output to <parmname>stream</parmname> according to the
      format directives in <parmname>control-string</parmname>. Each
      directive consumes one argument from
      <parmname>arguments</parmname>. See <xref
      href="../../../format-strings.xml"/> for a description of the
      control string directives that can be used.</p>

      <p>The <parmname>control-string</parmname> contents that are not
      part of any directive are output directly to
      <parmname>stream</parmname>, in the manner of the
      <apipackage href="../streams.xml">streams</apipackage> moduleâ€™s
      <apioperation>write</apioperation> function.</p>
    </apiDesc>
  </dylanGenericFunctionDetail>
</dylanGenericFunction>
