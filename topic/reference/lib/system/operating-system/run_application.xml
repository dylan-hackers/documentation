<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanFunction PUBLIC "-//Gwydion//DTD DITA Dylan API Function//EN" "../../../../dtd/dylanFunction.dtd" []>
<dylanFunction id="lib-system-operating-system-run_application">
  <apiName>run-application</apiName>
  <shortdesc>Launches an application using the specified name and
  arguments</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2009"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanFunctionDetail>
    <dylanFunctionDef>
      <dylanFunctionParam>
	<apiItemName>command</apiItemName>
        <apiOperationClassifier href="../, <string>))/type_union(LstringG, limited(LsequenceG, of.xml">type-union(&lt;string&gt;, limited(&lt;sequence&gt;, of</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>under-shell?</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>inherit-console?</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>activate?</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>minimize?</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>hide?</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>outputter</apiItemName>
        <apiOperationClassifier href="false_or(LfunctionG).xml">false-or(&lt;function&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>asynchronous?</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>environment</apiItemName>
        <apiOperationClassifier href="false_or(Lexplicit_key_collectionG).xml">false-or(&lt;explicit-key-collection&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>working-directory</apiItemName>
        <apiOperationClassifier href="false_or(LpathnameG).xml">false-or(&lt;pathname&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>input</apiItemName>
        <apiOperationClassifier href="type_union(one_of(#"inherit", #"null", #"stream"), LpathnameG).xml">type-union(one-of(#"inherit", #"null", #"stream"), &lt;pathname&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>if-input-does-not-exist</apiItemName>
        <apiOperationClassifier href="one_of(#"signal", #"create").xml">one-of(#"signal", #"create")</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>output</apiItemName>
        <apiOperationClassifier href="type_union(one_of(#"inherit", #"null", #"stream"), LpathnameG).xml">type-union(one-of(#"inherit", #"null", #"stream"), &lt;pathname&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>if-output-exists</apiItemName>
        <apiOperationClassifier href='one_of(#"signal", #"new_version", #"replace", #"overwrite", #"append", #"truncate").xml'>one-of(#"signal", #"new-version", #"replace", #"overwrite", #"append", #"truncate")</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>error</apiItemName>
        <apiOperationClassifier href="type_union(one_of(#"inherit", #"null", #"stream", #"output"), LpathnameG).xml">type-union(one-of(#"inherit", #"null", #"stream", #"output"), &lt;pathname&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionKeywordParam>
	<apiItemName>if-error-exists</apiItemName>
        <apiOperationClassifier href="one_of(#"signal", #"new_version", #"replace", #"overwrite", #"append", #"truncate").xml">one-of(#"signal", #"new-version", #"replace", #"overwrite", #"append", #"truncate")</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionKeywordParam>
      
      <dylanFunctionReturn>
	<apiItemName>exit-code</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LintegerG.xml">&lt;integer&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
      
      <dylanFunctionReturn>
	<apiItemName>signal</apiItemName>
        <apiOperationClassifier href="false_or(LintegerG).xml">false-or(&lt;integer&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
      
      <dylanFunctionReturn>
	<apiItemName>child</apiItemName>
        <apiOperationClassifier href="false_or(Lapplication_processG).xml">false-or(&lt;application-process&gt;)</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
      
      <dylanFunctionRestReturn>
	<apiItemName>streams</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionRestReturn>
    </dylanFunctionDef>

    <apiDesc>
      <p>Launches an application using the name and arguments
      specified in command. Using this function is equivalent to
      typing the command in a MS-DOS window. The return value is the
      exit status returned by the application. </p>

      <p>If the <codeph>minimize?</codeph> keyword is
      <codeph>#t</codeph>, the commandâ€™s shell will appear
      minimized. It is <codeph>#f</codeph> by default.</p>

      <p>If the <codeph>activate?</codeph> keyword is
      <codeph>#t</codeph>, the shell window becomes the active
      window. It is <codeph>#t</codeph> by default.</p>

      <p>If the <codeph>under-shell?</codeph> keyword is
      <codeph>#t</codeph>, an command shell is created to run the
      application; otherwise, the application is run directly. It is
      <codeph>#f</codeph> by default.</p>

      <p>If the <codeph>inherit-console?</codeph> keyword is
      <codeph>#t</codeph> , the new application uses the same console
      window as the current application; otherwise, the new
      application is created with a separate console window. It is
      <codeph>#t</codeph> by default.</p>
    </apiDesc>
  </dylanFunctionDetail>
</dylanFunction>
