<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanFunction PUBLIC "-//Gwydion//DTD DITA Dylan API Function//EN" "../../../../dtd/dylanFunction.dtd" []>
<dylanFunction id="lib-collections-table-extensions-case_insensitive_string_hash">
  <apiName>case-insensitive-string-hash</apiName>

  <shortdesc>Returns the hash value of a string, without considering
  case information.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanFunctionDetail>
    <dylanFunctionDef>
      <dylanFunctionParam>
	<apiItemName>str</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/Lbyte_stringG.xml">&lt;byte-string&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionParam>
      <dylanFunctionParam>
	<apiItemName>hash-state</apiItemName>
        <apiOperationClassifier href="Lhash_stateG.xml">&lt;hash-state&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionParam>
      <dylanFunctionReturn>
	<apiItemName>hash</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LintegerG.xml">&lt;integer&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
      <dylanFunctionReturn>
	<apiItemName>hash-state</apiItemName>
        <apiOperationClassifier href="Lhash_stateG.xml">&lt;hash-state&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
    </dylanFunctionDef>

    <apiDesc>
      <p>Produces a hash code for a string using the equivalence
      predicate <apioperation
      href="case_insensitive_equal.xml">case-insensitive-equal</apioperation>,
      which does not consider the case of the characters in the
      strings it compares.</p>
    </apiDesc>
  </dylanFunctionDetail>
</dylanFunction>
