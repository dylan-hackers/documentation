<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanGenericFunction PUBLIC "-//Gwydion//DTD DITA Dylan API Generic Function//EN" "../../../../dtd/dylanGenericFunction.dtd" []>
<dylanGenericFunction id="lib-common-dylan-simple-random-random">
  <apiName>random</apiName>
  <shortdesc>Returns a pseudorandomly generated number greater than or equal
  to zero and less than a specified value.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanGenericFunctionDetail>
    <dylanGenericFunctionDef>
      <dylanFunctionParam>
	<apiItemName>range</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LintegerG.xml">&lt;integer&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionParam>
      <dylanFunctionKeywordParam>
	<apiItemName>random</apiItemName>
	<apiOperationClassifier href="LrandomG.xml">&lt;random&gt;</apiOperationClassifier>
      </dylanFunctionKeywordParam>
      <dylanFunctionReturn>
	<apiItemName>random-integer</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LintegerG.xml">&lt;integer&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
    </dylanGenericFunctionDef>

    <apiDesc>
      <p>Returns a pseudo-randomly generated number greater than or
      equal to zero and less than <parmname>range</parmname>.</p>

      <p>The <parmname>random</parmname> object contains the state of
      the sequence, and can be used to continue a particular
      sequence.</p>
    </apiDesc>
  </dylanGenericFunctionDetail>
</dylanGenericFunction>
