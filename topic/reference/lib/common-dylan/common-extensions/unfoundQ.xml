<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanFunction PUBLIC "-//Gwydion//DTD DITA Dylan API Function//EN" "../../../../dtd/dylanFunction.dtd" []>
<dylanFunction id="lib-common-dylan-common-extensions-unfoundQ">
  <apiName>unfound?</apiName>

  <shortdesc>Returns true if its argument is equal to the unique
  “unfound” value, <apiname>$unfound</apiname>, and false if it is
  not.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanFunctionDetail>
    <dylanFunctionDef>
      <dylanFunctionParam>
	<apiItemName>object</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionParam>
      <dylanFunctionReturn>
	<apiItemName>results</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LobjectG.xml">&lt;boolean&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
    </dylanFunctionDef>

    <apiDesc>
      <p>Returns true if <parmname>object</parmname> is equal to the
      unique “unfound” value, <apivalue
      href="Dunfound.xml">$unfound</apivalue> , and false if it is
      not. It uses <apioperation
      href="../../dylan/dylan/EE.xml">\==</apioperation> as the
      equivalence predicate. </p>
    </apiDesc>
  </dylanFunctionDetail>
</dylanFunction>
