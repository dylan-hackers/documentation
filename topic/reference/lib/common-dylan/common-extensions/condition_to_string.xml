<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanGenericFunction PUBLIC "-//Gwydion//DTD DITA Dylan API Generic Function//EN" "../../../../dtd/dylanGenericFunction.dtd" []>
<dylanGenericFunction id="lib-common-dylan-common-extensions-condition_to_string">
  <apiName>condition-to-string</apiName>
  <shortdesc>Returns a string representation of a condition object.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanGenericFunctionDetail>
    <dylanGenericFunctionDef>
      <dylanGenericFunctionSealing value='open'/>
      <dylanFunctionParam>
	<apiItemName>condition</apiItemName>
        <apiOperationClassifier href="../../dylan/dylan/LconditionG.xml">&lt;condition&gt;</apiOperationClassifier>
	<apiDefNote></apiDefNote>
      </dylanFunctionParam>
      <dylanFunctionReturn>
	<apiItemName>string</apiItemName>
        <apiType value="false-or(&lt;string&gt;)"/>
	<apiDefNote></apiDefNote>
      </dylanFunctionReturn>
    </dylanGenericFunctionDef>

    <apiDesc>
      <p>Returns a string representation of a general instance of
      <apiclassifier
      href="../../dylan/dylan/LconditionG.xml">&lt;condition&gt;</apiclassifier>
      . There is a method on <apiclassifier
      href="Lformat_string_conditionG.xml">&lt;format-string-condition&gt;</apiclassifier>
      and method on <apiclassifier
      href="../../dylan/dylan/Ltype_errorG.xml">&lt;type-error&gt;</apiclassifier>.</p>
    </apiDesc>
  </dylanGenericFunctionDetail>
</dylanGenericFunction>
