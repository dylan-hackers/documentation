<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE dylanClass PUBLIC "-//Gwydion//DTD DITA Dylan API Class//EN" "../../../../dtd/dylanClass.dtd" []>
<dylanClass id="lib-common-dylan-threads-LsynchronizationG">
  <apiName>&lt;synchronization&gt;</apiName>

  <shortdesc>The class of objects that are used for inter-thread
  synchronization.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanClassDetail>
    <dylanClassDef>
      <dylanOpenClass/>
      <dylanAbstractClass value="abstract-uninstantiable"/>
      <dylanSuperClass href="../../dylan/dylan/LobjectG.xml">&lt;object&gt;</dylanSuperClass>
      <dylanInitKeyword>
	<apiItemName>name:</apiItemName>
        <apiType value="false-or(&lt;string&gt;)"/>
	<apiDefNote></apiDefNote>
      </dylanInitKeyword>
    </dylanClassDef>

    <apiDesc>
      <p>The <apiname>&lt;synchronization&gt;</apiname> class
      represents objects that are used for inter-thread
      synchronization.</p>

      <p>There is no explicit mechanism in the library to block on a number
      of synchronization objects simultaneously, until synchronization can
      be achieved with one of them. This mechanism can be implemented by
      creating a new thread to wait for each synchronization object, and
      arranging for each thread to release a notification once synchronization
      has been achieved.</p>

      <p>The <parmname>name</parmname> keyword is a string that is
      used as the synchronization objectâ€™s name for convenience
      purposes, such as debugging.</p>
    </apiDesc>
  </dylanClassDetail>
</dylanClass>
