<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanClass PUBLIC "-//Gwydion//DTD DITA Dylan API Class//EN" "../../../../dtd/dylanClass.dtd" []>
<dylanClass id="lib-common-dylan-threads-Lsimple_lockG">
  <apiName>&lt;simple-lock&gt;</apiName>
  <shortdesc>A class of simple and efficient locks.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanClassDetail>
    <dylanClassDef>
      <dylanOpenClass/>
      <dylanPrimaryClass/>
      <dylanAbstractClass value="abstract-uninstantiable"/>
      <dylanSuperClass href="Lexclusive_lockG.xml">&lt;exclusive-lock&gt;</dylanSuperClass>
    </dylanClassDef>

    <apiDesc>
      <p>The <apiname>&lt;simple-lock&gt;</apiname> class represents
      the most simple and efficient mutual exclusion synchronization
      primitive.  It is an error to lock a
      <apiname>&lt;simple-lock&gt;</apiname> recursively.  An attempt to
      do so might result in an error being signalled, or deadlock
      occurring. </p>
    </apiDesc>
  </dylanClassDetail>
</dylanClass>
