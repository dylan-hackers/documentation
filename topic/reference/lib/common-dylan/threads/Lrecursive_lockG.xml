<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE dylanClass PUBLIC "-//Gwydion//DTD DITA Dylan API Class//EN" "../../../../dtd/dylanClass.dtd" []>
<dylanClass id="lib-common-dylan-threads-Lrecursive_lockG">
  <apiName>&lt;recursive-lock&gt;</apiName>
  <shortdesc>The class of locks that can be locked recursively.</shortdesc>

  <prolog>
    <author></author>
    <copyright>
      <copyryear year="2005"/>
      <copyrholder>Gwydion Dylan Maintainers</copyrholder>
    </copyright>
  </prolog>

  <dylanClassDetail>
    <dylanClassDef>
      <dylanOpenClass/>
      <dylanPrimaryClass/>
      <dylanAbstractClass value="abstract-uninstantiable"/>
      <dylanSuperClass href="Lexclusive_lockG.xml">&lt;exclusive-lock&gt;</dylanSuperClass>
    </dylanClassDef>

    <apiDesc>
      <p>A thread can lock a <apiname>&lt;recursive-lock&gt;</apiname>
      multiple times, recursively, but the lock must later be released
      the same number of times. The lock will be freed on the last of
      these releases. </p>
    </apiDesc>
  </dylanClassDetail>
</dylanClass>
